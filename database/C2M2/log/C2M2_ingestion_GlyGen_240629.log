------------ dcc_short_labels:['4DN', 'ERCC', 'GTEx', 'GlyGen', 'HMP', 'HuBMAP', 'IDG', 'KidsFirst', 'LINCS', 'Metabolomics', 'MoTrPAC', 'SPARC']
********** DCC name (dcc_short_label) specified as an argument: GlyGen; will use schema_name: glygen, so, will ingest only from that DCC.
DROP SCHEMA IF EXISTS glygen CASCADE;
Creating glygen
=================== table_name: file ===========================
---- Column name: id_namespace: information read ----
---- Column name: local_id: information read ----
---- Column name: project_id_namespace: information read ----
---- Column name: project_local_id: information read ----
---- Column name: persistent_id: information read ----
---- Column name: creation_time: information read ----
---- Column name: size_in_bytes: information read ----
---- Column name: uncompressed_size_in_bytes: information read ----
---- Column name: sha256: information read ----
---- Column name: md5: information read ----
---- Column name: filename: information read ----
---- Column name: file_format: information read ----
---- Column name: compression_format: information read ----
---- Column name: data_type: information read ----
---- Column name: assay_type: information read ----
---- Column name: analysis_type: information read ----
---- Column name: mime_type: information read ----
---- Column name: bundle_collection_id_namespace: information read ----
---- Column name: bundle_collection_local_id: information read ----
---- Column name: dbgap_study_id: information read ----
create_table_query:
CREATE TABLE glygen.file (
id_namespace VARCHAR NOT NULL, 
local_id VARCHAR NOT NULL, 
project_id_namespace VARCHAR NOT NULL, 
project_local_id VARCHAR NOT NULL, 
persistent_id VARCHAR DEFAULT '', 
creation_time VARCHAR DEFAULT '', 
size_in_bytes VARCHAR DEFAULT '', 
uncompressed_size_in_bytes VARCHAR DEFAULT '', 
sha256 VARCHAR DEFAULT '', 
md5 VARCHAR DEFAULT '', 
filename VARCHAR NOT NULL, 
file_format VARCHAR DEFAULT '', 
compression_format VARCHAR DEFAULT '', 
data_type VARCHAR DEFAULT '', 
assay_type VARCHAR DEFAULT '', 
analysis_type VARCHAR DEFAULT '', 
mime_type VARCHAR DEFAULT '', 
bundle_collection_id_namespace VARCHAR DEFAULT '', 
bundle_collection_local_id VARCHAR DEFAULT '', 
dbgap_study_id VARCHAR DEFAULT '',
PRIMARY KEY(id_namespace, local_id)
);
=================== table_name: biosample ===========================
---- Column name: id_namespace: information read ----
---- Column name: local_id: information read ----
---- Column name: project_id_namespace: information read ----
---- Column name: project_local_id: information read ----
---- Column name: persistent_id: information read ----
---- Column name: creation_time: information read ----
---- Column name: sample_prep_method: information read ----
---- Column name: anatomy: information read ----
create_table_query:
CREATE TABLE glygen.biosample (
id_namespace VARCHAR NOT NULL, 
local_id VARCHAR NOT NULL, 
project_id_namespace VARCHAR NOT NULL, 
project_local_id VARCHAR NOT NULL, 
persistent_id VARCHAR DEFAULT '', 
creation_time VARCHAR DEFAULT '', 
sample_prep_method VARCHAR DEFAULT '', 
anatomy VARCHAR DEFAULT '',
PRIMARY KEY(id_namespace, local_id)
);
=================== table_name: subject ===========================
---- Column name: id_namespace: information read ----
---- Column name: local_id: information read ----
---- Column name: project_id_namespace: information read ----
---- Column name: project_local_id: information read ----
---- Column name: persistent_id: information read ----
---- Column name: creation_time: information read ----
---- Column name: granularity: information read ----
---- Column name: sex: information read ----
---- Column name: ethnicity: information read ----
---- Column name: age_at_enrollment: information read ----
create_table_query:
CREATE TABLE glygen.subject (
id_namespace VARCHAR NOT NULL, 
local_id VARCHAR NOT NULL, 
project_id_namespace VARCHAR NOT NULL, 
project_local_id VARCHAR NOT NULL, 
persistent_id VARCHAR DEFAULT '', 
creation_time VARCHAR DEFAULT '', 
granularity VARCHAR NOT NULL, 
sex VARCHAR DEFAULT '', 
ethnicity VARCHAR DEFAULT '', 
age_at_enrollment VARCHAR DEFAULT '',
PRIMARY KEY(id_namespace, local_id)
);
=================== table_name: dcc ===========================
---- Column name: id: information read ----
---- Column name: dcc_name: information read ----
---- Column name: dcc_abbreviation: information read ----
---- Column name: dcc_description: information read ----
---- Column name: contact_email: information read ----
---- Column name: contact_name: information read ----
---- Column name: dcc_url: information read ----
---- Column name: project_id_namespace: information read ----
---- Column name: project_local_id: information read ----
create_table_query:
CREATE TABLE glygen.dcc (
id VARCHAR NOT NULL, 
dcc_name VARCHAR NOT NULL, 
dcc_abbreviation VARCHAR NOT NULL, 
dcc_description VARCHAR DEFAULT '', 
contact_email VARCHAR NOT NULL, 
contact_name VARCHAR NOT NULL, 
dcc_url VARCHAR NOT NULL, 
project_id_namespace VARCHAR NOT NULL, 
project_local_id VARCHAR NOT NULL,
PRIMARY KEY(id)
);
=================== table_name: project ===========================
---- Column name: id_namespace: information read ----
---- Column name: local_id: information read ----
---- Column name: persistent_id: information read ----
---- Column name: creation_time: information read ----
---- Column name: abbreviation: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
create_table_query:
CREATE TABLE glygen.project (
id_namespace VARCHAR NOT NULL, 
local_id VARCHAR NOT NULL, 
persistent_id VARCHAR DEFAULT '', 
creation_time VARCHAR DEFAULT '', 
abbreviation VARCHAR DEFAULT '', 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '',
PRIMARY KEY(id_namespace, local_id)
);
=================== table_name: project_in_project ===========================
---- Column name: parent_project_id_namespace: information read ----
---- Column name: parent_project_local_id: information read ----
---- Column name: child_project_id_namespace: information read ----
---- Column name: child_project_local_id: information read ----
create_table_query:
CREATE TABLE glygen.project_in_project (
parent_project_id_namespace VARCHAR NOT NULL, 
parent_project_local_id VARCHAR NOT NULL, 
child_project_id_namespace VARCHAR NOT NULL, 
child_project_local_id VARCHAR NOT NULL,
PRIMARY KEY(parent_project_id_namespace, parent_project_local_id, child_project_id_namespace, child_project_local_id)
);
=================== table_name: collection ===========================
---- Column name: id_namespace: information read ----
---- Column name: local_id: information read ----
---- Column name: persistent_id: information read ----
---- Column name: creation_time: information read ----
---- Column name: abbreviation: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
---- Column name: has_time_series_data: information read ----
create_table_query:
CREATE TABLE glygen.collection (
id_namespace VARCHAR NOT NULL, 
local_id VARCHAR NOT NULL, 
persistent_id VARCHAR DEFAULT '', 
creation_time VARCHAR DEFAULT '', 
abbreviation VARCHAR DEFAULT '', 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '', 
has_time_series_data VARCHAR DEFAULT '',
PRIMARY KEY(id_namespace, local_id)
);
=================== table_name: collection_in_collection ===========================
---- Column name: superset_collection_id_namespace: information read ----
---- Column name: superset_collection_local_id: information read ----
---- Column name: subset_collection_id_namespace: information read ----
---- Column name: subset_collection_local_id: information read ----
create_table_query:
CREATE TABLE glygen.collection_in_collection (
superset_collection_id_namespace VARCHAR NOT NULL, 
superset_collection_local_id VARCHAR NOT NULL, 
subset_collection_id_namespace VARCHAR NOT NULL, 
subset_collection_local_id VARCHAR NOT NULL,
PRIMARY KEY(superset_collection_id_namespace, superset_collection_local_id, subset_collection_id_namespace, subset_collection_local_id)
);
=================== table_name: file_describes_collection ===========================
---- Column name: file_id_namespace: information read ----
---- Column name: file_local_id: information read ----
---- Column name: collection_id_namespace: information read ----
---- Column name: collection_local_id: information read ----
create_table_query:
CREATE TABLE glygen.file_describes_collection (
file_id_namespace VARCHAR NOT NULL, 
file_local_id VARCHAR NOT NULL, 
collection_id_namespace VARCHAR NOT NULL, 
collection_local_id VARCHAR NOT NULL,
PRIMARY KEY(file_id_namespace, file_local_id, collection_id_namespace, collection_local_id)
);
=================== table_name: collection_defined_by_project ===========================
---- Column name: collection_id_namespace: information read ----
---- Column name: collection_local_id: information read ----
---- Column name: project_id_namespace: information read ----
---- Column name: project_local_id: information read ----
create_table_query:
CREATE TABLE glygen.collection_defined_by_project (
collection_id_namespace VARCHAR NOT NULL, 
collection_local_id VARCHAR NOT NULL, 
project_id_namespace VARCHAR NOT NULL, 
project_local_id VARCHAR NOT NULL,
PRIMARY KEY(collection_id_namespace, collection_local_id, project_id_namespace, project_local_id)
);
=================== table_name: file_in_collection ===========================
---- Column name: file_id_namespace: information read ----
---- Column name: file_local_id: information read ----
---- Column name: collection_id_namespace: information read ----
---- Column name: collection_local_id: information read ----
create_table_query:
CREATE TABLE glygen.file_in_collection (
file_id_namespace VARCHAR NOT NULL, 
file_local_id VARCHAR NOT NULL, 
collection_id_namespace VARCHAR NOT NULL, 
collection_local_id VARCHAR NOT NULL,
PRIMARY KEY(file_id_namespace, file_local_id, collection_id_namespace, collection_local_id)
);
=================== table_name: biosample_in_collection ===========================
---- Column name: biosample_id_namespace: information read ----
---- Column name: biosample_local_id: information read ----
---- Column name: collection_id_namespace: information read ----
---- Column name: collection_local_id: information read ----
create_table_query:
CREATE TABLE glygen.biosample_in_collection (
biosample_id_namespace VARCHAR NOT NULL, 
biosample_local_id VARCHAR NOT NULL, 
collection_id_namespace VARCHAR NOT NULL, 
collection_local_id VARCHAR NOT NULL,
PRIMARY KEY(biosample_id_namespace, biosample_local_id, collection_id_namespace, collection_local_id)
);
=================== table_name: subject_in_collection ===========================
---- Column name: subject_id_namespace: information read ----
---- Column name: subject_local_id: information read ----
---- Column name: collection_id_namespace: information read ----
---- Column name: collection_local_id: information read ----
create_table_query:
CREATE TABLE glygen.subject_in_collection (
subject_id_namespace VARCHAR NOT NULL, 
subject_local_id VARCHAR NOT NULL, 
collection_id_namespace VARCHAR NOT NULL, 
collection_local_id VARCHAR NOT NULL,
PRIMARY KEY(subject_id_namespace, subject_local_id, collection_id_namespace, collection_local_id)
);
=================== table_name: file_describes_biosample ===========================
---- Column name: file_id_namespace: information read ----
---- Column name: file_local_id: information read ----
---- Column name: biosample_id_namespace: information read ----
---- Column name: biosample_local_id: information read ----
create_table_query:
CREATE TABLE glygen.file_describes_biosample (
file_id_namespace VARCHAR NOT NULL, 
file_local_id VARCHAR NOT NULL, 
biosample_id_namespace VARCHAR NOT NULL, 
biosample_local_id VARCHAR NOT NULL,
PRIMARY KEY(file_id_namespace, file_local_id, biosample_id_namespace, biosample_local_id)
);
=================== table_name: file_describes_subject ===========================
---- Column name: file_id_namespace: information read ----
---- Column name: file_local_id: information read ----
---- Column name: subject_id_namespace: information read ----
---- Column name: subject_local_id: information read ----
create_table_query:
CREATE TABLE glygen.file_describes_subject (
file_id_namespace VARCHAR NOT NULL, 
file_local_id VARCHAR NOT NULL, 
subject_id_namespace VARCHAR NOT NULL, 
subject_local_id VARCHAR NOT NULL,
PRIMARY KEY(file_id_namespace, file_local_id, subject_id_namespace, subject_local_id)
);
=================== table_name: biosample_from_subject ===========================
---- Column name: biosample_id_namespace: information read ----
---- Column name: biosample_local_id: information read ----
---- Column name: subject_id_namespace: information read ----
---- Column name: subject_local_id: information read ----
---- Column name: age_at_sampling: information read ----
create_table_query:
CREATE TABLE glygen.biosample_from_subject (
biosample_id_namespace VARCHAR NOT NULL, 
biosample_local_id VARCHAR NOT NULL, 
subject_id_namespace VARCHAR NOT NULL, 
subject_local_id VARCHAR NOT NULL, 
age_at_sampling VARCHAR DEFAULT '',
PRIMARY KEY(biosample_id_namespace, biosample_local_id, subject_id_namespace, subject_local_id)
);
=================== table_name: biosample_disease ===========================
---- Column name: biosample_id_namespace: information read ----
---- Column name: biosample_local_id: information read ----
---- Column name: association_type: information read ----
---- Column name: disease: information read ----
create_table_query:
CREATE TABLE glygen.biosample_disease (
biosample_id_namespace VARCHAR NOT NULL, 
biosample_local_id VARCHAR NOT NULL, 
association_type VARCHAR NOT NULL, 
disease VARCHAR NOT NULL,
PRIMARY KEY(biosample_id_namespace, biosample_local_id, association_type, disease)
);
=================== table_name: subject_disease ===========================
---- Column name: subject_id_namespace: information read ----
---- Column name: subject_local_id: information read ----
---- Column name: association_type: information read ----
---- Column name: disease: information read ----
create_table_query:
CREATE TABLE glygen.subject_disease (
subject_id_namespace VARCHAR NOT NULL, 
subject_local_id VARCHAR NOT NULL, 
association_type VARCHAR NOT NULL, 
disease VARCHAR NOT NULL,
PRIMARY KEY(subject_id_namespace, subject_local_id, association_type, disease)
);
=================== table_name: collection_disease ===========================
---- Column name: collection_id_namespace: information read ----
---- Column name: collection_local_id: information read ----
---- Column name: disease: information read ----
create_table_query:
CREATE TABLE glygen.collection_disease (
collection_id_namespace VARCHAR NOT NULL, 
collection_local_id VARCHAR NOT NULL, 
disease VARCHAR NOT NULL,
PRIMARY KEY(collection_id_namespace, collection_local_id, disease)
);
=================== table_name: collection_phenotype ===========================
---- Column name: collection_id_namespace: information read ----
---- Column name: collection_local_id: information read ----
---- Column name: phenotype: information read ----
create_table_query:
CREATE TABLE glygen.collection_phenotype (
collection_id_namespace VARCHAR NOT NULL, 
collection_local_id VARCHAR NOT NULL, 
phenotype VARCHAR NOT NULL,
PRIMARY KEY(collection_id_namespace, collection_local_id, phenotype)
);
=================== table_name: collection_gene ===========================
---- Column name: collection_id_namespace: information read ----
---- Column name: collection_local_id: information read ----
---- Column name: gene: information read ----
create_table_query:
CREATE TABLE glygen.collection_gene (
collection_id_namespace VARCHAR NOT NULL, 
collection_local_id VARCHAR NOT NULL, 
gene VARCHAR NOT NULL,
PRIMARY KEY(collection_id_namespace, collection_local_id, gene)
);
=================== table_name: collection_compound ===========================
---- Column name: collection_id_namespace: information read ----
---- Column name: collection_local_id: information read ----
---- Column name: compound: information read ----
create_table_query:
CREATE TABLE glygen.collection_compound (
collection_id_namespace VARCHAR NOT NULL, 
collection_local_id VARCHAR NOT NULL, 
compound VARCHAR NOT NULL,
PRIMARY KEY(collection_id_namespace, collection_local_id, compound)
);
=================== table_name: collection_substance ===========================
---- Column name: collection_id_namespace: information read ----
---- Column name: collection_local_id: information read ----
---- Column name: substance: information read ----
create_table_query:
CREATE TABLE glygen.collection_substance (
collection_id_namespace VARCHAR NOT NULL, 
collection_local_id VARCHAR NOT NULL, 
substance VARCHAR NOT NULL,
PRIMARY KEY(collection_id_namespace, collection_local_id, substance)
);
=================== table_name: collection_taxonomy ===========================
---- Column name: collection_id_namespace: information read ----
---- Column name: collection_local_id: information read ----
---- Column name: taxon: information read ----
create_table_query:
CREATE TABLE glygen.collection_taxonomy (
collection_id_namespace VARCHAR NOT NULL, 
collection_local_id VARCHAR NOT NULL, 
taxon VARCHAR NOT NULL,
PRIMARY KEY(collection_id_namespace, collection_local_id, taxon)
);
=================== table_name: collection_anatomy ===========================
---- Column name: collection_id_namespace: information read ----
---- Column name: collection_local_id: information read ----
---- Column name: anatomy: information read ----
create_table_query:
CREATE TABLE glygen.collection_anatomy (
collection_id_namespace VARCHAR NOT NULL, 
collection_local_id VARCHAR NOT NULL, 
anatomy VARCHAR NOT NULL,
PRIMARY KEY(collection_id_namespace, collection_local_id, anatomy)
);
=================== table_name: collection_protein ===========================
---- Column name: collection_id_namespace: information read ----
---- Column name: collection_local_id: information read ----
---- Column name: protein: information read ----
create_table_query:
CREATE TABLE glygen.collection_protein (
collection_id_namespace VARCHAR NOT NULL, 
collection_local_id VARCHAR NOT NULL, 
protein VARCHAR NOT NULL,
PRIMARY KEY(collection_id_namespace, collection_local_id, protein)
);
=================== table_name: subject_phenotype ===========================
---- Column name: subject_id_namespace: information read ----
---- Column name: subject_local_id: information read ----
---- Column name: association_type: information read ----
---- Column name: phenotype: information read ----
create_table_query:
CREATE TABLE glygen.subject_phenotype (
subject_id_namespace VARCHAR NOT NULL, 
subject_local_id VARCHAR NOT NULL, 
association_type VARCHAR NOT NULL, 
phenotype VARCHAR NOT NULL,
PRIMARY KEY(subject_id_namespace, subject_local_id, association_type, phenotype)
);
=================== table_name: biosample_substance ===========================
---- Column name: biosample_id_namespace: information read ----
---- Column name: biosample_local_id: information read ----
---- Column name: substance: information read ----
create_table_query:
CREATE TABLE glygen.biosample_substance (
biosample_id_namespace VARCHAR NOT NULL, 
biosample_local_id VARCHAR NOT NULL, 
substance VARCHAR NOT NULL,
PRIMARY KEY(biosample_id_namespace, biosample_local_id, substance)
);
=================== table_name: subject_substance ===========================
---- Column name: subject_id_namespace: information read ----
---- Column name: subject_local_id: information read ----
---- Column name: substance: information read ----
create_table_query:
CREATE TABLE glygen.subject_substance (
subject_id_namespace VARCHAR NOT NULL, 
subject_local_id VARCHAR NOT NULL, 
substance VARCHAR NOT NULL,
PRIMARY KEY(subject_id_namespace, subject_local_id, substance)
);
=================== table_name: biosample_gene ===========================
---- Column name: biosample_id_namespace: information read ----
---- Column name: biosample_local_id: information read ----
---- Column name: gene: information read ----
create_table_query:
CREATE TABLE glygen.biosample_gene (
biosample_id_namespace VARCHAR NOT NULL, 
biosample_local_id VARCHAR NOT NULL, 
gene VARCHAR NOT NULL,
PRIMARY KEY(biosample_id_namespace, biosample_local_id, gene)
);
=================== table_name: phenotype_gene ===========================
---- Column name: phenotype: information read ----
---- Column name: gene: information read ----
create_table_query:
CREATE TABLE glygen.phenotype_gene (
phenotype VARCHAR NOT NULL, 
gene VARCHAR NOT NULL,
PRIMARY KEY(phenotype, gene)
);
=================== table_name: phenotype_disease ===========================
---- Column name: phenotype: information read ----
---- Column name: disease: information read ----
create_table_query:
CREATE TABLE glygen.phenotype_disease (
phenotype VARCHAR NOT NULL, 
disease VARCHAR NOT NULL,
PRIMARY KEY(phenotype, disease)
);
=================== table_name: subject_race ===========================
---- Column name: subject_id_namespace: information read ----
---- Column name: subject_local_id: information read ----
---- Column name: race: information read ----
create_table_query:
CREATE TABLE glygen.subject_race (
subject_id_namespace VARCHAR NOT NULL, 
subject_local_id VARCHAR NOT NULL, 
race VARCHAR DEFAULT '',
PRIMARY KEY(subject_id_namespace, subject_local_id, race)
);
=================== table_name: subject_role_taxonomy ===========================
---- Column name: subject_id_namespace: information read ----
---- Column name: subject_local_id: information read ----
---- Column name: role_id: information read ----
---- Column name: taxonomy_id: information read ----
create_table_query:
CREATE TABLE glygen.subject_role_taxonomy (
subject_id_namespace VARCHAR NOT NULL, 
subject_local_id VARCHAR NOT NULL, 
role_id VARCHAR NOT NULL, 
taxonomy_id VARCHAR NOT NULL,
PRIMARY KEY(subject_id_namespace, subject_local_id, role_id, taxonomy_id)
);
=================== table_name: assay_type ===========================
---- Column name: id: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
---- Column name: synonyms: information read ----
create_table_query:
CREATE TABLE glygen.assay_type (
id VARCHAR NOT NULL, 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '', 
synonyms VARCHAR DEFAULT '',
PRIMARY KEY(id)
);
=================== table_name: analysis_type ===========================
---- Column name: id: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
---- Column name: synonyms: information read ----
create_table_query:
CREATE TABLE glygen.analysis_type (
id VARCHAR NOT NULL, 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '', 
synonyms VARCHAR DEFAULT '',
PRIMARY KEY(id)
);
=================== table_name: ncbi_taxonomy ===========================
---- Column name: id: information read ----
---- Column name: clade: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
---- Column name: synonyms: information read ----
create_table_query:
CREATE TABLE glygen.ncbi_taxonomy (
id VARCHAR NOT NULL, 
clade VARCHAR NOT NULL, 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '', 
synonyms VARCHAR DEFAULT '',
PRIMARY KEY(id)
);
=================== table_name: anatomy ===========================
---- Column name: id: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
---- Column name: synonyms: information read ----
create_table_query:
CREATE TABLE glygen.anatomy (
id VARCHAR NOT NULL, 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '', 
synonyms VARCHAR DEFAULT '',
PRIMARY KEY(id)
);
=================== table_name: file_format ===========================
---- Column name: id: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
---- Column name: synonyms: information read ----
create_table_query:
CREATE TABLE glygen.file_format (
id VARCHAR NOT NULL, 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '', 
synonyms VARCHAR DEFAULT '',
PRIMARY KEY(id)
);
=================== table_name: data_type ===========================
---- Column name: id: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
---- Column name: synonyms: information read ----
create_table_query:
CREATE TABLE glygen.data_type (
id VARCHAR NOT NULL, 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '', 
synonyms VARCHAR DEFAULT '',
PRIMARY KEY(id)
);
=================== table_name: disease ===========================
---- Column name: id: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
---- Column name: synonyms: information read ----
create_table_query:
CREATE TABLE glygen.disease (
id VARCHAR NOT NULL, 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '', 
synonyms VARCHAR DEFAULT '',
PRIMARY KEY(id)
);
=================== table_name: phenotype ===========================
---- Column name: id: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
---- Column name: synonyms: information read ----
create_table_query:
CREATE TABLE glygen.phenotype (
id VARCHAR NOT NULL, 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '', 
synonyms VARCHAR DEFAULT '',
PRIMARY KEY(id)
);
=================== table_name: compound ===========================
---- Column name: id: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
---- Column name: synonyms: information read ----
create_table_query:
CREATE TABLE glygen.compound (
id VARCHAR NOT NULL, 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '', 
synonyms VARCHAR DEFAULT '',
PRIMARY KEY(id)
);
=================== table_name: substance ===========================
---- Column name: id: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
---- Column name: synonyms: information read ----
---- Column name: compound: information read ----
create_table_query:
CREATE TABLE glygen.substance (
id VARCHAR NOT NULL, 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '', 
synonyms VARCHAR DEFAULT '', 
compound VARCHAR NOT NULL,
PRIMARY KEY(id)
);
=================== table_name: gene ===========================
---- Column name: id: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
---- Column name: synonyms: information read ----
---- Column name: organism: information read ----
create_table_query:
CREATE TABLE glygen.gene (
id VARCHAR NOT NULL, 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '', 
synonyms VARCHAR DEFAULT '', 
organism VARCHAR NOT NULL,
PRIMARY KEY(id)
);
=================== table_name: protein ===========================
---- Column name: id: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
---- Column name: synonyms: information read ----
---- Column name: organism: information read ----
create_table_query:
CREATE TABLE glygen.protein (
id VARCHAR NOT NULL, 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '', 
synonyms VARCHAR DEFAULT '', 
organism VARCHAR DEFAULT '',
PRIMARY KEY(id)
);
=================== table_name: protein_gene ===========================
---- Column name: protein: information read ----
---- Column name: gene: information read ----
create_table_query:
CREATE TABLE glygen.protein_gene (
protein VARCHAR NOT NULL, 
gene VARCHAR NOT NULL,
PRIMARY KEY(protein, gene)
);
=================== table_name: sample_prep_method ===========================
---- Column name: id: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
---- Column name: synonyms: information read ----
create_table_query:
CREATE TABLE glygen.sample_prep_method (
id VARCHAR NOT NULL, 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '', 
synonyms VARCHAR DEFAULT '',
PRIMARY KEY(id)
);
=================== table_name: id_namespace ===========================
---- Column name: id: information read ----
---- Column name: abbreviation: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
create_table_query:
CREATE TABLE glygen.id_namespace (
id VARCHAR NOT NULL, 
abbreviation VARCHAR DEFAULT '', 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '',
PRIMARY KEY(id)
);
================== Defined all tables ======================
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Time taken to define table: 0.14125919342041016 seconds.

Names of all tables:
['file', 'biosample', 'subject', 'dcc', 'project', 'project_in_project', 'collection', 'collection_in_collection', 'file_describes_collection', 'collection_defined_by_project', 'file_in_collection', 'biosample_in_collection', 'subject_in_collection', 'file_describes_biosample', 'file_describes_subject', 'biosample_from_subject', 'biosample_disease', 'subject_disease', 'collection_disease', 'collection_phenotype', 'collection_gene', 'collection_compound', 'collection_substance', 'collection_taxonomy', 'collection_anatomy', 'collection_protein', 'subject_phenotype', 'biosample_substance', 'subject_substance', 'biosample_gene', 'phenotype_gene', 'phenotype_disease', 'subject_race', 'subject_role_taxonomy', 'assay_type', 'analysis_type', 'ncbi_taxonomy', 'anatomy', 'file_format', 'data_type', 'disease', 'phenotype', 'compound', 'substance', 'gene', 'protein', 'protein_gene', 'sample_prep_method', 'id_namespace']

Going to ingest metadata from files


********* c2m2s dataframe, before checking if a single DCC is to be processed, is: **********
    filetype  ... dcc_short_label
30      C2M2  ...             4DN
31      C2M2  ...    Metabolomics
32      C2M2  ...          GlyGen
33      C2M2  ...          HuBMAP
34      C2M2  ...       KidsFirst
35      C2M2  ...           SPARC
74      C2M2  ...            ERCC
81      C2M2  ...         MoTrPAC
93      C2M2  ...            GTEx
107     C2M2  ...             HMP
123     C2M2  ...             IDG
146     C2M2  ...           LINCS

[12 rows x 14 columns]

********* c2m2s dataframe is: **********
   filetype  ... dcc_short_label
32     C2M2  ...          GlyGen

[1 rows x 14 columns]
Processing C2M2 Files...:   0%|          | 0/1 [00:00<?, ?it/s]
================================== DCC short label: GlyGen =============================================
Unpack zip file: c2m2_extract_path: ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables
--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/collection_compound.tsv ---------
table_name:collection_compound
GlyGen: collection_compound: Read from file: df: #rows = 517848, #cols: 3

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/collection_compound.tsv: 517849
df: #rows = 517848, #cols: 3
pKeys: ['collection_id_namespace', 'collection_local_id', 'compound']
Going to write the count query
Wrote the count query
*** Entering collection_compound to database ***
df: #rows = 517848, #cols: 3

A slice of df:
        collection_id_namespace      collection_local_id  compound
0  https://www.data.glygen.org/  COL_G78482IS_GLY_000281  G78482IS
1  https://www.data.glygen.org/  COL_G56432LZ_GLY_000281  G56432LZ
2  https://www.data.glygen.org/  COL_G97770GP_GLY_000281  G97770GP
3  https://www.data.glygen.org/  COL_G60673DJ_GLY_000281  G60673DJ
4  https://www.data.glygen.org/  COL_G82363EY_GLY_000281  G82363EY
5  https://www.data.glygen.org/  COL_G19914RN_GLY_000281  G19914RN
6  https://www.data.glygen.org/  COL_G68853YV_GLY_000281  G68853YV
7  https://www.data.glygen.org/  COL_G15214PF_GLY_000281  91845490
8  https://www.data.glygen.org/  COL_G57630ZT_GLY_000281  G57630ZT
9  https://www.data.glygen.org/  COL_G97280NO_GLY_000281  G97280NO
Data inserted successfully!
sql_count_df:     count
0  517848
count:517848
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 7.535741567611694 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/collection_gene.tsv ---------
table_name:collection_gene
GlyGen: collection_gene: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/collection_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03725075721740723 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/collection_phenotype.tsv ---------
table_name:collection_phenotype
GlyGen: collection_phenotype: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/collection_phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.032949209213256836 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/collection_substance.tsv ---------
table_name:collection_substance
GlyGen: collection_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/collection_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.037764787673950195 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/collection_in_collection.tsv ---------
table_name:collection_in_collection
GlyGen: collection_in_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/collection_in_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.038825273513793945 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/subject_disease.tsv ---------
table_name:subject_disease
GlyGen: subject_disease: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/subject_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.0351862907409668 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/protein.tsv ---------
table_name:protein
GlyGen: protein: Read from file: df: #rows = 79221, #cols: 5

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/protein.tsv: 79222
df: #rows = 79221, #cols: 5
pKeys: ['id']
*** Entering protein to database ***
df: #rows = 79221, #cols: 5

A slice of df:
           id  ...        organism
0  A0A021WW64  ...   NCBI:txid7227
1  A0A023GPK8  ...   NCBI:txid7227
2  A0A023GRW3  ...   NCBI:txid7227
3  A0A023IKK2  ...  NCBI:txid10116
4  A0A024R1R8  ...   NCBI:txid9606
5  A0A024RBG1  ...   NCBI:txid9606
6  A0A024RCN7  ...   NCBI:txid9606
7  A0A075B5I0  ...  NCBI:txid10090
8  A0A075B5I2  ...  NCBI:txid10090
9  A0A075B5I3  ...  NCBI:txid10090

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.5028643608093262 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/assay_type.tsv ---------
table_name:assay_type
GlyGen: assay_type: Read from file: df: #rows = 1, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/assay_type.tsv: 2
df: #rows = 1, #cols: 4
pKeys: ['id']
*** Entering assay_type to database ***
df: #rows = 1, #cols: 4

A slice of df:
            id  ... synonyms
0  OBI:0001985  ...       []

[1 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.07866120338439941 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/file_describes_collection.tsv ---------
table_name:file_describes_collection
GlyGen: file_describes_collection: Read from file: df: #rows = 159455, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/file_describes_collection.tsv: 159456
df: #rows = 159455, #cols: 4
pKeys: ['file_id_namespace', 'file_local_id', 'collection_id_namespace', 'collection_local_id']
Going to write the count query
Wrote the count query
*** Entering file_describes_collection to database ***
df: #rows = 159455, #cols: 4

A slice of df:
              file_id_namespace  ...          collection_local_id
0  https://www.data.glygen.org/  ...      COL_Q9ULV8-1_GLY_000001
1  https://www.data.glygen.org/  ...      COL_Q53R12-1_GLY_000001
2  https://www.data.glygen.org/  ...  COL_A0A075B6P5-1_GLY_000001
3  https://www.data.glygen.org/  ...      COL_O75153-1_GLY_000001
4  https://www.data.glygen.org/  ...      COL_Q17RY6-1_GLY_000001
5  https://www.data.glygen.org/  ...      COL_P62333-1_GLY_000001
6  https://www.data.glygen.org/  ...      COL_Q8IVF5-1_GLY_000001
7  https://www.data.glygen.org/  ...      COL_Q6PII5-1_GLY_000001
8  https://www.data.glygen.org/  ...      COL_Q2QL34-1_GLY_000001
9  https://www.data.glygen.org/  ...      COL_P28827-1_GLY_000001

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:     count
0  159455
count:159455
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 2.98953914642334 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/subject_role_taxonomy.tsv ---------
table_name:subject_role_taxonomy
GlyGen: subject_role_taxonomy: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/subject_role_taxonomy.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03225350379943848 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/subject_substance.tsv ---------
table_name:subject_substance
GlyGen: subject_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/subject_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.02678227424621582 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/file_format.tsv ---------
table_name:file_format
GlyGen: file_format: Read from file: df: #rows = 5, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/file_format.tsv: 6
df: #rows = 5, #cols: 4
pKeys: ['id']
*** Entering file_format to database ***
df: #rows = 5, #cols: 4

A slice of df:
            id  ...                     synonyms
0  format:2330  ...  ["Plain text format","txt"]
1  format:3468  ...   ["Microsoft Excel format"]
2  format:3579  ...              ["JPEG","jpeg"]
3  format:3603  ...                           []
4  format:3752  ...   ["Comma-separated values"]

[5 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.06353950500488281 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/subject_phenotype.tsv ---------
table_name:subject_phenotype
GlyGen: subject_phenotype: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/subject_phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.02743077278137207 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/collection_defined_by_project.tsv ---------
table_name:collection_defined_by_project
GlyGen: collection_defined_by_project: Read from file: df: #rows = 158551, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/collection_defined_by_project.tsv: 158552
df: #rows = 158551, #cols: 4
pKeys: ['collection_id_namespace', 'collection_local_id', 'project_id_namespace', 'project_local_id']
Going to write the count query
Wrote the count query
*** Entering collection_defined_by_project to database ***
df: #rows = 158551, #cols: 4

A slice of df:
        collection_id_namespace  ... project_local_id
0  https://www.data.glygen.org/  ...           Portal
1  https://www.data.glygen.org/  ...           Portal
2  https://www.data.glygen.org/  ...           Portal
3  https://www.data.glygen.org/  ...           Portal
4  https://www.data.glygen.org/  ...           Portal
5  https://www.data.glygen.org/  ...           Portal
6  https://www.data.glygen.org/  ...           Portal
7  https://www.data.glygen.org/  ...           Portal
8  https://www.data.glygen.org/  ...           Portal
9  https://www.data.glygen.org/  ...           Portal

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:     count
0  158551
count:158551
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 2.791658878326416 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/file_describes_biosample.tsv ---------
table_name:file_describes_biosample
GlyGen: file_describes_biosample: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/file_describes_biosample.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.035753488540649414 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/file_describes_subject.tsv ---------
table_name:file_describes_subject
GlyGen: file_describes_subject: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/file_describes_subject.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.029582500457763672 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/gene.tsv ---------
table_name:gene
GlyGen: gene: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.028472900390625 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/compound.tsv ---------
table_name:compound
GlyGen: compound: Read from file: df: #rows = 45191, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/compound.tsv: 45192
df: #rows = 45191, #cols: 4
pKeys: ['id']
*** Entering compound to database ***
df: #rows = 45191, #cols: 4

A slice of df:
         id  ...                                           synonyms
0  10000009  ...  ["WURCS=2.0/2,2,1/[a2122h-1x_1-5][a2112h-1b_1-...
1  10008718  ...  ["(GlcA)1 (GlcNAc)2", "beta-D-GlcpNAc-(1->4)-b...
2  10011812  ...  ["WURCS=2.0/5,5,4/[a2122h-1x_1-5_2*NSO/3=O/3=O...
3  10022829  ...  ["WURCS=2.0/2,2,1/[a2122h-1x_1-5_2*NCC/3=O][a2...
4  10023700  ...  ["WURCS=2.0/2,2,1/[a2122A-1x_1-5][a2122h-1b_1-...
5  10053824  ...  ["WURCS=2.0/3,3,2/[a2122A-1x_1-5][a2122h-1b_1-...
6  10062728  ...  ["Panosylpanose", "WURCS=2.0/1,6,5/[a2122h-1a_...
7  10062742  ...  ["WURCS=2.0/5,7,6/[a2122h-1a_1-5_2*NCC/3=O][a1...
8  10062744  ...  ["WURCS=2.0/2,5,4/[a2122h-1b_1-5_2*NCC/3=O][a2...
9  10074840  ...  ["beta-isomaltotriose", "Glcalpha1-6Glcalpha1-...

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.7530648708343506 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/file.tsv ---------
table_name:file
GlyGen: file: Read from file: df: #rows = 1941, #cols: 20

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/file.tsv: 1942
df: #rows = 1941, #cols: 20
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering file to database ***
df: #rows = 1941, #cols: 20

A slice of df:
                   id_namespace  ...                        persistent_id
0  https://www.data.glygen.org/  ...   https://data.glygen.org/GLY_000001
1  https://www.data.glygen.org/  ...   https://data.glygen.org/GLY_000281
2  https://www.data.glygen.org/  ...   https://data.glygen.org/GLY_000329
3  https://www.data.glygen.org/  ...  https://data.glygen.org/GLY_000038/
4  https://www.data.glygen.org/  ...   https://data.glygen.org/GLY_000040
5  https://www.data.glygen.org/  ...   https://data.glygen.org/GLY_000480
6  https://www.data.glygen.org/  ...   https://data.glygen.org/GLY_000517
7  https://www.data.glygen.org/  ...   https://data.glygen.org/GLY_000708
8  https://www.data.glygen.org/  ...   https://data.glygen.org/GLY_000004
9  https://www.data.glygen.org/  ...   https://data.glygen.org/GLY_000481

[10 rows x 5 columns]
Data inserted successfully!
sql_count_df:    count
0   1941
count:1941
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.18042540550231934 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/collection.tsv ---------
table_name:collection
GlyGen: collection: Read from file: df: #rows = 158551, #cols: 8

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/collection.tsv: 158552
df: #rows = 158551, #cols: 8
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering collection to database ***
df: #rows = 158551, #cols: 8

A slice of df:
                   id_namespace  ... abbreviation
0  https://www.data.glygen.org/  ...          NaN
1  https://www.data.glygen.org/  ...          NaN
2  https://www.data.glygen.org/  ...          NaN
3  https://www.data.glygen.org/  ...          NaN
4  https://www.data.glygen.org/  ...          NaN
5  https://www.data.glygen.org/  ...          NaN
6  https://www.data.glygen.org/  ...          NaN
7  https://www.data.glygen.org/  ...          NaN
8  https://www.data.glygen.org/  ...          NaN
9  https://www.data.glygen.org/  ...          NaN

[10 rows x 5 columns]
Data inserted successfully!
sql_count_df:     count
0  158551
count:158551
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 4.405197858810425 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/subject_in_collection.tsv ---------
table_name:subject_in_collection
GlyGen: subject_in_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/subject_in_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.05180478096008301 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/biosample_in_collection.tsv ---------
table_name:biosample_in_collection
GlyGen: biosample_in_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/biosample_in_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.035900115966796875 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/subject_race.tsv ---------
table_name:subject_race
GlyGen: subject_race: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/subject_race.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.042095184326171875 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/biosample_substance.tsv ---------
table_name:biosample_substance
GlyGen: biosample_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/biosample_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03297019004821777 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/phenotype_gene.tsv ---------
table_name:phenotype_gene
GlyGen: phenotype_gene: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/phenotype_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.030019760131835938 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/analysis_type.tsv ---------
table_name:analysis_type
GlyGen: analysis_type: Read from file: df: #rows = 1, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/analysis_type.tsv: 2
df: #rows = 1, #cols: 4
pKeys: ['id']
*** Entering analysis_type to database ***
df: #rows = 1, #cols: 4

A slice of df:
            id  ... synonyms
0  OBI:0001985  ...       []

[1 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.07124948501586914 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/collection_protein.tsv ---------
table_name:collection_protein
GlyGen: collection_protein: Read from file: df: #rows = 111181, #cols: 3

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/collection_protein.tsv: 111182
df: #rows = 111181, #cols: 3
pKeys: ['collection_id_namespace', 'collection_local_id', 'protein']
Going to write the count query
Wrote the count query
*** Entering collection_protein to database ***
df: #rows = 111181, #cols: 3

A slice of df:
        collection_id_namespace          collection_local_id     protein
0  https://www.data.glygen.org/      COL_Q9ULV8-1_GLY_000001      Q9ULV8
1  https://www.data.glygen.org/      COL_Q53R12-1_GLY_000001      Q53R12
2  https://www.data.glygen.org/  COL_A0A075B6P5-1_GLY_000001  A0A075B6P5
3  https://www.data.glygen.org/      COL_O75153-1_GLY_000001      O75153
4  https://www.data.glygen.org/      COL_Q17RY6-1_GLY_000001      Q17RY6
5  https://www.data.glygen.org/      COL_P62333-1_GLY_000001      P62333
6  https://www.data.glygen.org/      COL_Q8IVF5-1_GLY_000001      Q8IVF5
7  https://www.data.glygen.org/      COL_Q6PII5-1_GLY_000001      Q6PII5
8  https://www.data.glygen.org/      COL_Q2QL34-1_GLY_000001      Q2QL34
9  https://www.data.glygen.org/      COL_P28827-1_GLY_000001      P28827
Data inserted successfully!
sql_count_df:     count
0  111181
count:111181
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.8997161388397217 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/biosample_disease.tsv ---------
table_name:biosample_disease
GlyGen: biosample_disease: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/biosample_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.046869754791259766 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/protein_gene.tsv ---------
table_name:protein_gene
GlyGen: protein_gene: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/protein_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.04165363311767578 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/subject.tsv ---------
table_name:subject
GlyGen: subject: Read from file: df: #rows = 0, #cols: 10

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/subject.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03245091438293457 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/project_in_project.tsv ---------
table_name:project_in_project
GlyGen: project_in_project: Read from file: df: #rows = 991, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/project_in_project.tsv: 992
df: #rows = 991, #cols: 4
pKeys: ['parent_project_id_namespace', 'parent_project_local_id', 'child_project_id_namespace', 'child_project_local_id']
Going to write the count query
Wrote the count query
*** Entering project_in_project to database ***
df: #rows = 991, #cols: 4

A slice of df:
    parent_project_id_namespace  ... child_project_local_id
0  https://www.data.glygen.org/  ...                 Portal
1  https://www.data.glygen.org/  ...                  Array
2  https://www.data.glygen.org/  ...             AD10662905
3  https://www.data.glygen.org/  ...             AD10712497
4  https://www.data.glygen.org/  ...              AD4163938
5  https://www.data.glygen.org/  ...              AD3056904
6  https://www.data.glygen.org/  ...              AD1835716
7  https://www.data.glygen.org/  ...              AD1972992
8  https://www.data.glygen.org/  ...              AD8968332
9  https://www.data.glygen.org/  ...              AD8914705

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:    count
0    991
count:991
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.08339667320251465 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/biosample_from_subject.tsv ---------
table_name:biosample_from_subject
GlyGen: biosample_from_subject: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/biosample_from_subject.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.029095888137817383 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/biosample_gene.tsv ---------
table_name:biosample_gene
GlyGen: biosample_gene: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/biosample_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.02927088737487793 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/biosample.tsv ---------
table_name:biosample
GlyGen: biosample: Read from file: df: #rows = 0, #cols: 8

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/biosample.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.027825117111206055 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/data_type.tsv ---------
table_name:data_type
GlyGen: data_type: Read from file: df: #rows = 6, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/data_type.tsv: 7
df: #rows = 6, #cols: 4
pKeys: ['id']
*** Entering data_type to database ***
df: #rows = 6, #cols: 4

A slice of df:
            id  ...                                           synonyms
0  ILX:0793824  ...                                                 []
1  ILX:0793825  ...                                                 []
2    data:1714  ...                                                 []
3    data:2764  ...                                                 []
4    data:3110  ...                                                 []
5    data:3111  ...  ["Gene annotation (expression)","Gene expressi...

[6 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0647118091583252 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/dcc.tsv ---------
table_name:dcc
GlyGen: dcc: Read from file: df: #rows = 1, #cols: 9

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/dcc.tsv: 2
df: #rows = 1, #cols: 9
pKeys: ['id']
*** Entering dcc to database ***
df: #rows = 1, #cols: 9

A slice of df:
                         id  ...       contact_email
0  cfde_registry_dcc:glygen  ...  myglygen@gmail.com

[1 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.06512999534606934 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/id_namespace.tsv ---------
table_name:id_namespace
GlyGen: id_namespace: Read from file: df: #rows = 1, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/id_namespace.tsv: 2
df: #rows = 1, #cols: 4
pKeys: ['id']
*** Entering id_namespace to database ***
df: #rows = 1, #cols: 4

A slice of df:
                             id  ...         description
0  https://www.data.glygen.org/  ...  The GlyGen project

[1 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.06379842758178711 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/anatomy.tsv ---------
table_name:anatomy
GlyGen: anatomy: Read from file: df: #rows = 66, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/anatomy.tsv: 67
df: #rows = 66, #cols: 4
pKeys: ['id']
*** Entering anatomy to database ***
df: #rows = 66, #cols: 4

A slice of df:
               id  ...                                           synonyms
0  UBERON:0000002  ...  ["canalis cervicis uteri","caudal segment of u...
1  UBERON:0000007  ...  ["glandula pituitaria","Hp","pituitary","pitui...
2  UBERON:0000029  ...                                                 []
3  UBERON:0000059  ...                                                 []
4  UBERON:0000086  ...            ["zona pellucida - vitelline membrane"]
5  UBERON:0000173  ...                                                 []
6  UBERON:0000178  ...            ["portion of blood","vertebrate blood"]
7  UBERON:0000305  ...                                         ["amnios"]
8  UBERON:0000317  ...  ["UBERON:0003347","UBERON:0004981","colon muco...
9  UBERON:0000344  ...  ["mucosa of organ","mucosa of organ part","muc...

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.06652569770812988 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/collection_disease.tsv ---------
table_name:collection_disease
GlyGen: collection_disease: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/collection_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.030143260955810547 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/collection_taxonomy.tsv ---------
table_name:collection_taxonomy
GlyGen: collection_taxonomy: Read from file: df: #rows = 112366, #cols: 3

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/collection_taxonomy.tsv: 112367
df: #rows = 112366, #cols: 3
pKeys: ['collection_id_namespace', 'collection_local_id', 'taxon']
Going to write the count query
Wrote the count query
*** Entering collection_taxonomy to database ***
df: #rows = 112366, #cols: 3

A slice of df:
        collection_id_namespace          collection_local_id          taxon
0  https://www.data.glygen.org/      COL_Q9ULV8-1_GLY_000001  NCBI:txid9606
1  https://www.data.glygen.org/      COL_Q53R12-1_GLY_000001  NCBI:txid9606
2  https://www.data.glygen.org/  COL_A0A075B6P5-1_GLY_000001  NCBI:txid9606
3  https://www.data.glygen.org/      COL_O75153-1_GLY_000001  NCBI:txid9606
4  https://www.data.glygen.org/      COL_Q17RY6-1_GLY_000001  NCBI:txid9606
5  https://www.data.glygen.org/      COL_P62333-1_GLY_000001  NCBI:txid9606
6  https://www.data.glygen.org/      COL_Q8IVF5-1_GLY_000001  NCBI:txid9606
7  https://www.data.glygen.org/      COL_Q6PII5-1_GLY_000001  NCBI:txid9606
8  https://www.data.glygen.org/      COL_Q2QL34-1_GLY_000001  NCBI:txid9606
9  https://www.data.glygen.org/      COL_P28827-1_GLY_000001  NCBI:txid9606
Data inserted successfully!
sql_count_df:     count
0  112366
count:112366
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.7739863395690918 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/sample_prep_method.tsv ---------
table_name:sample_prep_method
GlyGen: sample_prep_method: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/sample_prep_method.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03280067443847656 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/phenotype.tsv ---------
table_name:phenotype
Processing C2M2 Files...: 100%|██████████| 1/1 [00:28<00:00, 28.37s/it]Processing C2M2 Files...: 100%|██████████| 1/1 [00:28<00:00, 28.37s/it]
GlyGen: phenotype: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.027264833450317383 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/substance.tsv ---------
table_name:substance
GlyGen: substance: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.02871394157409668 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/ncbi_taxonomy.tsv ---------
table_name:ncbi_taxonomy
GlyGen: ncbi_taxonomy: Read from file: df: #rows = 9, #cols: 5

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/ncbi_taxonomy.tsv: 10
df: #rows = 9, #cols: 5
pKeys: ['id']
*** Entering ncbi_taxonomy to database ***
df: #rows = 9, #cols: 5

A slice of df:
                 id  ...                                           synonyms
0    NCBI:txid10090  ...                                          ["mouse"]
1    NCBI:txid10116  ...                         ["rats", "Mus norvegicus"]
2    NCBI:txid11108  ...           ["HCV-H", "Hepatitis C virus isolate H"]
3    NCBI:txid11116  ...                                                 []
4  NCBI:txid2697049  ...  ["2019-nCoV", "COVID-19 virus", "HCoV-19", "Hu...
5    NCBI:txid63746  ...                   ["Hepatitis C virus strain H77"]
6   NCBI:txid694009  ...  ["HCoV-SARS", "Human coronavirus (strain SARS)...
7     NCBI:txid7227  ...                        ["Sophophora melanogaster"]
8     NCBI:txid9606  ...                                                 []

[9 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.06868410110473633 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/project.tsv ---------
table_name:project
GlyGen: project: Read from file: df: #rows = 992, #cols: 7

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/project.tsv: 993
df: #rows = 992, #cols: 7
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering project to database ***
df: #rows = 992, #cols: 7

A slice of df:
                   id_namespace  ... abbreviation
0  https://www.data.glygen.org/  ...       GlyGen
1  https://www.data.glygen.org/  ...       GlyGen
2  https://www.data.glygen.org/  ...      GGArray
3  https://www.data.glygen.org/  ...   AD10662905
4  https://www.data.glygen.org/  ...   AD10712497
5  https://www.data.glygen.org/  ...    AD4163938
6  https://www.data.glygen.org/  ...    AD3056904
7  https://www.data.glygen.org/  ...    AD1835716
8  https://www.data.glygen.org/  ...    AD1972992
9  https://www.data.glygen.org/  ...    AD8968332

[10 rows x 5 columns]
Data inserted successfully!
sql_count_df:    count
0    992
count:992
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0927426815032959 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/disease.tsv ---------
table_name:disease
GlyGen: disease: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.02813100814819336 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/phenotype_disease.tsv ---------
table_name:phenotype_disease
GlyGen: phenotype_disease: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/phenotype_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.028402090072631836 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/file_in_collection.tsv ---------
table_name:file_in_collection
GlyGen: file_in_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/file_in_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.031991004943847656 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/collection_anatomy.tsv ---------
table_name:collection_anatomy
GlyGen: collection_anatomy: Read from file: df: #rows = 3520, #cols: 3

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/collection_anatomy.tsv: 3521
df: #rows = 3520, #cols: 3
pKeys: ['collection_id_namespace', 'collection_local_id', 'anatomy']
Going to write the count query
Wrote the count query
*** Entering collection_anatomy to database ***
df: #rows = 3520, #cols: 3

A slice of df:
        collection_id_namespace      collection_local_id         anatomy
0  https://www.data.glygen.org/  COL_Q5UIP0-1_GLY_000329  UBERON:0001911
1  https://www.data.glygen.org/  COL_P04004-1_GLY_000329  UBERON:0001977
2  https://www.data.glygen.org/  COL_P04004-1_GLY_000329  UBERON:0001911
3  https://www.data.glygen.org/  COL_P04004-1_GLY_000329  UBERON:0001913
4  https://www.data.glygen.org/  COL_P04004-1_GLY_000329  UBERON:0001969
5  https://www.data.glygen.org/  COL_P05155-1_GLY_000329  UBERON:0001977
6  https://www.data.glygen.org/  COL_P05155-1_GLY_000329  UBERON:0001911
7  https://www.data.glygen.org/  COL_P05155-1_GLY_000329  UBERON:0001088
8  https://www.data.glygen.org/  COL_P05155-1_GLY_000329  UBERON:0001913
9  https://www.data.glygen.org/  COL_Q7Z7D3-1_GLY_000329  UBERON:0001911
Data inserted successfully!
sql_count_df:    count
0   3520
count:3520
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.1161489486694336 seconds.

>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Time taken to ingest the metadata from the files: 28.388898372650146 seconds.

 ----------- Adding foreign key constraint for table file ----------
ALTER TABLE glygen.file DROP CONSTRAINT IF EXISTS fk_file_id_namespace_1;
ALTER TABLE glygen.file ADD CONSTRAINT  fk_file_id_namespace_1 FOREIGN KEY (id_namespace) REFERENCES glygen.id_namespace (id);
ALTER TABLE glygen.file DROP CONSTRAINT IF EXISTS fk_file_project_2;
ALTER TABLE glygen.file ADD CONSTRAINT  fk_file_project_2 FOREIGN KEY (project_id_namespace, project_local_id) REFERENCES glygen.project (id_namespace, local_id);
ALTER TABLE glygen.file DROP CONSTRAINT IF EXISTS fk_file_file_format_3;
ALTER TABLE glygen.file ADD CONSTRAINT  fk_file_file_format_3 FOREIGN KEY (file_format) REFERENCES glygen.file_format (id);
ALTER TABLE glygen.file DROP CONSTRAINT IF EXISTS fk_file_file_format_4;
ALTER TABLE glygen.file ADD CONSTRAINT  fk_file_file_format_4 FOREIGN KEY (compression_format) REFERENCES glygen.file_format (id);
ALTER TABLE glygen.file DROP CONSTRAINT IF EXISTS fk_file_data_type_5;
ALTER TABLE glygen.file ADD CONSTRAINT  fk_file_data_type_5 FOREIGN KEY (data_type) REFERENCES glygen.data_type (id);
ALTER TABLE glygen.file DROP CONSTRAINT IF EXISTS fk_file_assay_type_6;
ALTER TABLE glygen.file ADD CONSTRAINT  fk_file_assay_type_6 FOREIGN KEY (assay_type) REFERENCES glygen.assay_type (id);
ALTER TABLE glygen.file DROP CONSTRAINT IF EXISTS fk_file_analysis_type_7;
ALTER TABLE glygen.file ADD CONSTRAINT  fk_file_analysis_type_7 FOREIGN KEY (analysis_type) REFERENCES glygen.analysis_type (id);
ALTER TABLE glygen.file DROP CONSTRAINT IF EXISTS fk_file_collection_8;
ALTER TABLE glygen.file ADD CONSTRAINT  fk_file_collection_8 FOREIGN KEY (bundle_collection_id_namespace, bundle_collection_local_id) REFERENCES glygen.collection (id_namespace, local_id);
 ----------- Adding foreign key constraint for table biosample ----------
ALTER TABLE glygen.biosample DROP CONSTRAINT IF EXISTS fk_biosample_id_namespace_1;
ALTER TABLE glygen.biosample ADD CONSTRAINT  fk_biosample_id_namespace_1 FOREIGN KEY (id_namespace) REFERENCES glygen.id_namespace (id);
ALTER TABLE glygen.biosample DROP CONSTRAINT IF EXISTS fk_biosample_project_2;
ALTER TABLE glygen.biosample ADD CONSTRAINT  fk_biosample_project_2 FOREIGN KEY (project_id_namespace, project_local_id) REFERENCES glygen.project (id_namespace, local_id);
ALTER TABLE glygen.biosample DROP CONSTRAINT IF EXISTS fk_biosample_sample_prep_method_3;
ALTER TABLE glygen.biosample ADD CONSTRAINT  fk_biosample_sample_prep_method_3 FOREIGN KEY (sample_prep_method) REFERENCES glygen.sample_prep_method (id);
ALTER TABLE glygen.biosample DROP CONSTRAINT IF EXISTS fk_biosample_anatomy_4;
ALTER TABLE glygen.biosample ADD CONSTRAINT  fk_biosample_anatomy_4 FOREIGN KEY (anatomy) REFERENCES glygen.anatomy (id);
 ----------- Adding foreign key constraint for table subject ----------
ALTER TABLE glygen.subject DROP CONSTRAINT IF EXISTS fk_subject_id_namespace_1;
ALTER TABLE glygen.subject ADD CONSTRAINT  fk_subject_id_namespace_1 FOREIGN KEY (id_namespace) REFERENCES glygen.id_namespace (id);
ALTER TABLE glygen.subject DROP CONSTRAINT IF EXISTS fk_subject_project_2;
ALTER TABLE glygen.subject ADD CONSTRAINT  fk_subject_project_2 FOREIGN KEY (project_id_namespace, project_local_id) REFERENCES glygen.project (id_namespace, local_id);
 ----------- Adding foreign key constraint for table dcc ----------
ALTER TABLE glygen.dcc DROP CONSTRAINT IF EXISTS fk_dcc_project_1;
ALTER TABLE glygen.dcc ADD CONSTRAINT  fk_dcc_project_1 FOREIGN KEY (project_id_namespace, project_local_id) REFERENCES glygen.project (id_namespace, local_id);
 ----------- Adding foreign key constraint for table project ----------
ALTER TABLE glygen.project DROP CONSTRAINT IF EXISTS fk_project_id_namespace_1;
ALTER TABLE glygen.project ADD CONSTRAINT  fk_project_id_namespace_1 FOREIGN KEY (id_namespace) REFERENCES glygen.id_namespace (id);
 ----------- Adding foreign key constraint for table project_in_project ----------
ALTER TABLE glygen.project_in_project DROP CONSTRAINT IF EXISTS fk_project_in_project_project_1;
ALTER TABLE glygen.project_in_project ADD CONSTRAINT  fk_project_in_project_project_1 FOREIGN KEY (parent_project_id_namespace, parent_project_local_id) REFERENCES glygen.project (id_namespace, local_id);
ALTER TABLE glygen.project_in_project DROP CONSTRAINT IF EXISTS fk_project_in_project_project_2;
ALTER TABLE glygen.project_in_project ADD CONSTRAINT  fk_project_in_project_project_2 FOREIGN KEY (child_project_id_namespace, child_project_local_id) REFERENCES glygen.project (id_namespace, local_id);
 ----------- Adding foreign key constraint for table collection ----------
ALTER TABLE glygen.collection DROP CONSTRAINT IF EXISTS fk_collection_id_namespace_1;
ALTER TABLE glygen.collection ADD CONSTRAINT  fk_collection_id_namespace_1 FOREIGN KEY (id_namespace) REFERENCES glygen.id_namespace (id);
 ----------- Adding foreign key constraint for table collection_in_collection ----------
ALTER TABLE glygen.collection_in_collection DROP CONSTRAINT IF EXISTS fk_collection_in_collection_collection_1;
ALTER TABLE glygen.collection_in_collection ADD CONSTRAINT  fk_collection_in_collection_collection_1 FOREIGN KEY (superset_collection_id_namespace, superset_collection_local_id) REFERENCES glygen.collection (id_namespace, local_id);
ALTER TABLE glygen.collection_in_collection DROP CONSTRAINT IF EXISTS fk_collection_in_collection_collection_2;
ALTER TABLE glygen.collection_in_collection ADD CONSTRAINT  fk_collection_in_collection_collection_2 FOREIGN KEY (subset_collection_id_namespace, subset_collection_local_id) REFERENCES glygen.collection (id_namespace, local_id);
 ----------- Adding foreign key constraint for table file_describes_collection ----------
ALTER TABLE glygen.file_describes_collection DROP CONSTRAINT IF EXISTS fk_file_describes_collection_file_1;
ALTER TABLE glygen.file_describes_collection ADD CONSTRAINT  fk_file_describes_collection_file_1 FOREIGN KEY (file_id_namespace, file_local_id) REFERENCES glygen.file (id_namespace, local_id);
ALTER TABLE glygen.file_describes_collection DROP CONSTRAINT IF EXISTS fk_file_describes_collection_collection_2;
ALTER TABLE glygen.file_describes_collection ADD CONSTRAINT  fk_file_describes_collection_collection_2 FOREIGN KEY (collection_id_namespace, collection_local_id) REFERENCES glygen.collection (id_namespace, local_id);
 ----------- Adding foreign key constraint for table collection_defined_by_project ----------
ALTER TABLE glygen.collection_defined_by_project DROP CONSTRAINT IF EXISTS fk_collection_defined_by_project_collection_1;
ALTER TABLE glygen.collection_defined_by_project ADD CONSTRAINT  fk_collection_defined_by_project_collection_1 FOREIGN KEY (collection_id_namespace, collection_local_id) REFERENCES glygen.collection (id_namespace, local_id);
ALTER TABLE glygen.collection_defined_by_project DROP CONSTRAINT IF EXISTS fk_collection_defined_by_project_project_2;
ALTER TABLE glygen.collection_defined_by_project ADD CONSTRAINT  fk_collection_defined_by_project_project_2 FOREIGN KEY (project_id_namespace, project_local_id) REFERENCES glygen.project (id_namespace, local_id);
 ----------- Adding foreign key constraint for table file_in_collection ----------
ALTER TABLE glygen.file_in_collection DROP CONSTRAINT IF EXISTS fk_file_in_collection_file_1;
ALTER TABLE glygen.file_in_collection ADD CONSTRAINT  fk_file_in_collection_file_1 FOREIGN KEY (file_id_namespace, file_local_id) REFERENCES glygen.file (id_namespace, local_id);
ALTER TABLE glygen.file_in_collection DROP CONSTRAINT IF EXISTS fk_file_in_collection_collection_2;
ALTER TABLE glygen.file_in_collection ADD CONSTRAINT  fk_file_in_collection_collection_2 FOREIGN KEY (collection_id_namespace, collection_local_id) REFERENCES glygen.collection (id_namespace, local_id);
 ----------- Adding foreign key constraint for table biosample_in_collection ----------
ALTER TABLE glygen.biosample_in_collection DROP CONSTRAINT IF EXISTS fk_biosample_in_collection_biosample_1;
ALTER TABLE glygen.biosample_in_collection ADD CONSTRAINT  fk_biosample_in_collection_biosample_1 FOREIGN KEY (biosample_id_namespace, biosample_local_id) REFERENCES glygen.biosample (id_namespace, local_id);
ALTER TABLE glygen.biosample_in_collection DROP CONSTRAINT IF EXISTS fk_biosample_in_collection_collection_2;
ALTER TABLE glygen.biosample_in_collection ADD CONSTRAINT  fk_biosample_in_collection_collection_2 FOREIGN KEY (collection_id_namespace, collection_local_id) REFERENCES glygen.collection (id_namespace, local_id);
 ----------- Adding foreign key constraint for table subject_in_collection ----------
ALTER TABLE glygen.subject_in_collection DROP CONSTRAINT IF EXISTS fk_subject_in_collection_subject_1;
ALTER TABLE glygen.subject_in_collection ADD CONSTRAINT  fk_subject_in_collection_subject_1 FOREIGN KEY (subject_id_namespace, subject_local_id) REFERENCES glygen.subject (id_namespace, local_id);
ALTER TABLE glygen.subject_in_collection DROP CONSTRAINT IF EXISTS fk_subject_in_collection_collection_2;
ALTER TABLE glygen.subject_in_collection ADD CONSTRAINT  fk_subject_in_collection_collection_2 FOREIGN KEY (collection_id_namespace, collection_local_id) REFERENCES glygen.collection (id_namespace, local_id);
 ----------- Adding foreign key constraint for table file_describes_biosample ----------
ALTER TABLE glygen.file_describes_biosample DROP CONSTRAINT IF EXISTS fk_file_describes_biosample_file_1;
ALTER TABLE glygen.file_describes_biosample ADD CONSTRAINT  fk_file_describes_biosample_file_1 FOREIGN KEY (file_id_namespace, file_local_id) REFERENCES glygen.file (id_namespace, local_id);
ALTER TABLE glygen.file_describes_biosample DROP CONSTRAINT IF EXISTS fk_file_describes_biosample_biosample_2;
ALTER TABLE glygen.file_describes_biosample ADD CONSTRAINT  fk_file_describes_biosample_biosample_2 FOREIGN KEY (biosample_id_namespace, biosample_local_id) REFERENCES glygen.biosample (id_namespace, local_id);
 ----------- Adding foreign key constraint for table file_describes_subject ----------
ALTER TABLE glygen.file_describes_subject DROP CONSTRAINT IF EXISTS fk_file_describes_subject_file_1;
ALTER TABLE glygen.file_describes_subject ADD CONSTRAINT  fk_file_describes_subject_file_1 FOREIGN KEY (file_id_namespace, file_local_id) REFERENCES glygen.file (id_namespace, local_id);
ALTER TABLE glygen.file_describes_subject DROP CONSTRAINT IF EXISTS fk_file_describes_subject_subject_2;
ALTER TABLE glygen.file_describes_subject ADD CONSTRAINT  fk_file_describes_subject_subject_2 FOREIGN KEY (subject_id_namespace, subject_local_id) REFERENCES glygen.subject (id_namespace, local_id);
 ----------- Adding foreign key constraint for table biosample_from_subject ----------
ALTER TABLE glygen.biosample_from_subject DROP CONSTRAINT IF EXISTS fk_biosample_from_subject_biosample_1;
ALTER TABLE glygen.biosample_from_subject ADD CONSTRAINT  fk_biosample_from_subject_biosample_1 FOREIGN KEY (biosample_id_namespace, biosample_local_id) REFERENCES glygen.biosample (id_namespace, local_id);
ALTER TABLE glygen.biosample_from_subject DROP CONSTRAINT IF EXISTS fk_biosample_from_subject_subject_2;
ALTER TABLE glygen.biosample_from_subject ADD CONSTRAINT  fk_biosample_from_subject_subject_2 FOREIGN KEY (subject_id_namespace, subject_local_id) REFERENCES glygen.subject (id_namespace, local_id);
 ----------- Adding foreign key constraint for table biosample_disease ----------
ALTER TABLE glygen.biosample_disease DROP CONSTRAINT IF EXISTS fk_biosample_disease_biosample_1;
ALTER TABLE glygen.biosample_disease ADD CONSTRAINT  fk_biosample_disease_biosample_1 FOREIGN KEY (biosample_id_namespace, biosample_local_id) REFERENCES glygen.biosample (id_namespace, local_id);
ALTER TABLE glygen.biosample_disease DROP CONSTRAINT IF EXISTS fk_biosample_disease_disease_2;
ALTER TABLE glygen.biosample_disease ADD CONSTRAINT  fk_biosample_disease_disease_2 FOREIGN KEY (disease) REFERENCES glygen.disease (id);
 ----------- Adding foreign key constraint for table subject_disease ----------
ALTER TABLE glygen.subject_disease DROP CONSTRAINT IF EXISTS fk_subject_disease_subject_1;
ALTER TABLE glygen.subject_disease ADD CONSTRAINT  fk_subject_disease_subject_1 FOREIGN KEY (subject_id_namespace, subject_local_id) REFERENCES glygen.subject (id_namespace, local_id);
ALTER TABLE glygen.subject_disease DROP CONSTRAINT IF EXISTS fk_subject_disease_disease_2;
ALTER TABLE glygen.subject_disease ADD CONSTRAINT  fk_subject_disease_disease_2 FOREIGN KEY (disease) REFERENCES glygen.disease (id);
 ----------- Adding foreign key constraint for table collection_disease ----------
ALTER TABLE glygen.collection_disease DROP CONSTRAINT IF EXISTS fk_collection_disease_collection_1;
ALTER TABLE glygen.collection_disease ADD CONSTRAINT  fk_collection_disease_collection_1 FOREIGN KEY (collection_id_namespace, collection_local_id) REFERENCES glygen.collection (id_namespace, local_id);
ALTER TABLE glygen.collection_disease DROP CONSTRAINT IF EXISTS fk_collection_disease_disease_2;
ALTER TABLE glygen.collection_disease ADD CONSTRAINT  fk_collection_disease_disease_2 FOREIGN KEY (disease) REFERENCES glygen.disease (id);
 ----------- Adding foreign key constraint for table collection_phenotype ----------
ALTER TABLE glygen.collection_phenotype DROP CONSTRAINT IF EXISTS fk_collection_phenotype_collection_1;
ALTER TABLE glygen.collection_phenotype ADD CONSTRAINT  fk_collection_phenotype_collection_1 FOREIGN KEY (collection_id_namespace, collection_local_id) REFERENCES glygen.collection (id_namespace, local_id);
ALTER TABLE glygen.collection_phenotype DROP CONSTRAINT IF EXISTS fk_collection_phenotype_phenotype_2;
ALTER TABLE glygen.collection_phenotype ADD CONSTRAINT  fk_collection_phenotype_phenotype_2 FOREIGN KEY (phenotype) REFERENCES glygen.phenotype (id);
 ----------- Adding foreign key constraint for table collection_gene ----------
ALTER TABLE glygen.collection_gene DROP CONSTRAINT IF EXISTS fk_collection_gene_collection_1;
ALTER TABLE glygen.collection_gene ADD CONSTRAINT  fk_collection_gene_collection_1 FOREIGN KEY (collection_id_namespace, collection_local_id) REFERENCES glygen.collection (id_namespace, local_id);
ALTER TABLE glygen.collection_gene DROP CONSTRAINT IF EXISTS fk_collection_gene_gene_2;
ALTER TABLE glygen.collection_gene ADD CONSTRAINT  fk_collection_gene_gene_2 FOREIGN KEY (gene) REFERENCES glygen.gene (id);
 ----------- Adding foreign key constraint for table collection_compound ----------
ALTER TABLE glygen.collection_compound DROP CONSTRAINT IF EXISTS fk_collection_compound_collection_1;
ALTER TABLE glygen.collection_compound ADD CONSTRAINT  fk_collection_compound_collection_1 FOREIGN KEY (collection_id_namespace, collection_local_id) REFERENCES glygen.collection (id_namespace, local_id);
ALTER TABLE glygen.collection_compound DROP CONSTRAINT IF EXISTS fk_collection_compound_compound_2;
ALTER TABLE glygen.collection_compound ADD CONSTRAINT  fk_collection_compound_compound_2 FOREIGN KEY (compound) REFERENCES glygen.compound (id);
 ----------- Adding foreign key constraint for table collection_substance ----------
ALTER TABLE glygen.collection_substance DROP CONSTRAINT IF EXISTS fk_collection_substance_collection_1;
ALTER TABLE glygen.collection_substance ADD CONSTRAINT  fk_collection_substance_collection_1 FOREIGN KEY (collection_id_namespace, collection_local_id) REFERENCES glygen.collection (id_namespace, local_id);
ALTER TABLE glygen.collection_substance DROP CONSTRAINT IF EXISTS fk_collection_substance_substance_2;
ALTER TABLE glygen.collection_substance ADD CONSTRAINT  fk_collection_substance_substance_2 FOREIGN KEY (substance) REFERENCES glygen.substance (id);
 ----------- Adding foreign key constraint for table collection_taxonomy ----------
ALTER TABLE glygen.collection_taxonomy DROP CONSTRAINT IF EXISTS fk_collection_taxonomy_collection_1;
ALTER TABLE glygen.collection_taxonomy ADD CONSTRAINT  fk_collection_taxonomy_collection_1 FOREIGN KEY (collection_id_namespace, collection_local_id) REFERENCES glygen.collection (id_namespace, local_id);
ALTER TABLE glygen.collection_taxonomy DROP CONSTRAINT IF EXISTS fk_collection_taxonomy_ncbi_taxonomy_2;
ALTER TABLE glygen.collection_taxonomy ADD CONSTRAINT  fk_collection_taxonomy_ncbi_taxonomy_2 FOREIGN KEY (taxon) REFERENCES glygen.ncbi_taxonomy (id);
 ----------- Adding foreign key constraint for table collection_anatomy ----------
ALTER TABLE glygen.collection_anatomy DROP CONSTRAINT IF EXISTS fk_collection_anatomy_collection_1;
ALTER TABLE glygen.collection_anatomy ADD CONSTRAINT  fk_collection_anatomy_collection_1 FOREIGN KEY (collection_id_namespace, collection_local_id) REFERENCES glygen.collection (id_namespace, local_id);
ALTER TABLE glygen.collection_anatomy DROP CONSTRAINT IF EXISTS fk_collection_anatomy_anatomy_2;
ALTER TABLE glygen.collection_anatomy ADD CONSTRAINT  fk_collection_anatomy_anatomy_2 FOREIGN KEY (anatomy) REFERENCES glygen.anatomy (id);
 ----------- Adding foreign key constraint for table collection_protein ----------
ALTER TABLE glygen.collection_protein DROP CONSTRAINT IF EXISTS fk_collection_protein_collection_1;
ALTER TABLE glygen.collection_protein ADD CONSTRAINT  fk_collection_protein_collection_1 FOREIGN KEY (collection_id_namespace, collection_local_id) REFERENCES glygen.collection (id_namespace, local_id);
ALTER TABLE glygen.collection_protein DROP CONSTRAINT IF EXISTS fk_collection_protein_protein_2;
ALTER TABLE glygen.collection_protein ADD CONSTRAINT  fk_collection_protein_protein_2 FOREIGN KEY (protein) REFERENCES glygen.protein (id);
 ----------- Adding foreign key constraint for table subject_phenotype ----------
ALTER TABLE glygen.subject_phenotype DROP CONSTRAINT IF EXISTS fk_subject_phenotype_subject_1;
ALTER TABLE glygen.subject_phenotype ADD CONSTRAINT  fk_subject_phenotype_subject_1 FOREIGN KEY (subject_id_namespace, subject_local_id) REFERENCES glygen.subject (id_namespace, local_id);
ALTER TABLE glygen.subject_phenotype DROP CONSTRAINT IF EXISTS fk_subject_phenotype_phenotype_2;
ALTER TABLE glygen.subject_phenotype ADD CONSTRAINT  fk_subject_phenotype_phenotype_2 FOREIGN KEY (phenotype) REFERENCES glygen.phenotype (id);
 ----------- Adding foreign key constraint for table biosample_substance ----------
ALTER TABLE glygen.biosample_substance DROP CONSTRAINT IF EXISTS fk_biosample_substance_biosample_1;
ALTER TABLE glygen.biosample_substance ADD CONSTRAINT  fk_biosample_substance_biosample_1 FOREIGN KEY (biosample_id_namespace, biosample_local_id) REFERENCES glygen.biosample (id_namespace, local_id);
ALTER TABLE glygen.biosample_substance DROP CONSTRAINT IF EXISTS fk_biosample_substance_substance_2;
ALTER TABLE glygen.biosample_substance ADD CONSTRAINT  fk_biosample_substance_substance_2 FOREIGN KEY (substance) REFERENCES glygen.substance (id);
 ----------- Adding foreign key constraint for table subject_substance ----------
ALTER TABLE glygen.subject_substance DROP CONSTRAINT IF EXISTS fk_subject_substance_subject_1;
ALTER TABLE glygen.subject_substance ADD CONSTRAINT  fk_subject_substance_subject_1 FOREIGN KEY (subject_id_namespace, subject_local_id) REFERENCES glygen.subject (id_namespace, local_id);
ALTER TABLE glygen.subject_substance DROP CONSTRAINT IF EXISTS fk_subject_substance_substance_2;
ALTER TABLE glygen.subject_substance ADD CONSTRAINT  fk_subject_substance_substance_2 FOREIGN KEY (substance) REFERENCES glygen.substance (id);
 ----------- Adding foreign key constraint for table biosample_gene ----------
ALTER TABLE glygen.biosample_gene DROP CONSTRAINT IF EXISTS fk_biosample_gene_biosample_1;
ALTER TABLE glygen.biosample_gene ADD CONSTRAINT  fk_biosample_gene_biosample_1 FOREIGN KEY (biosample_id_namespace, biosample_local_id) REFERENCES glygen.biosample (id_namespace, local_id);
ALTER TABLE glygen.biosample_gene DROP CONSTRAINT IF EXISTS fk_biosample_gene_gene_2;
ALTER TABLE glygen.biosample_gene ADD CONSTRAINT  fk_biosample_gene_gene_2 FOREIGN KEY (gene) REFERENCES glygen.gene (id);
 ----------- Adding foreign key constraint for table phenotype_gene ----------
ALTER TABLE glygen.phenotype_gene DROP CONSTRAINT IF EXISTS fk_phenotype_gene_phenotype_1;
ALTER TABLE glygen.phenotype_gene ADD CONSTRAINT  fk_phenotype_gene_phenotype_1 FOREIGN KEY (phenotype) REFERENCES glygen.phenotype (id);
ALTER TABLE glygen.phenotype_gene DROP CONSTRAINT IF EXISTS fk_phenotype_gene_gene_2;
ALTER TABLE glygen.phenotype_gene ADD CONSTRAINT  fk_phenotype_gene_gene_2 FOREIGN KEY (gene) REFERENCES glygen.gene (id);
 ----------- Adding foreign key constraint for table phenotype_disease ----------
ALTER TABLE glygen.phenotype_disease DROP CONSTRAINT IF EXISTS fk_phenotype_disease_phenotype_1;
ALTER TABLE glygen.phenotype_disease ADD CONSTRAINT  fk_phenotype_disease_phenotype_1 FOREIGN KEY (phenotype) REFERENCES glygen.phenotype (id);
ALTER TABLE glygen.phenotype_disease DROP CONSTRAINT IF EXISTS fk_phenotype_disease_disease_2;
ALTER TABLE glygen.phenotype_disease ADD CONSTRAINT  fk_phenotype_disease_disease_2 FOREIGN KEY (disease) REFERENCES glygen.disease (id);
 ----------- Adding foreign key constraint for table subject_race ----------
ALTER TABLE glygen.subject_race DROP CONSTRAINT IF EXISTS fk_subject_race_subject_1;
ALTER TABLE glygen.subject_race ADD CONSTRAINT  fk_subject_race_subject_1 FOREIGN KEY (subject_id_namespace, subject_local_id) REFERENCES glygen.subject (id_namespace, local_id);
 ----------- Adding foreign key constraint for table subject_role_taxonomy ----------
ALTER TABLE glygen.subject_role_taxonomy DROP CONSTRAINT IF EXISTS fk_subject_role_taxonomy_subject_1;
ALTER TABLE glygen.subject_role_taxonomy ADD CONSTRAINT  fk_subject_role_taxonomy_subject_1 FOREIGN KEY (subject_id_namespace, subject_local_id) REFERENCES glygen.subject (id_namespace, local_id);
ALTER TABLE glygen.subject_role_taxonomy DROP CONSTRAINT IF EXISTS fk_subject_role_taxonomy_ncbi_taxonomy_2;
ALTER TABLE glygen.subject_role_taxonomy ADD CONSTRAINT  fk_subject_role_taxonomy_ncbi_taxonomy_2 FOREIGN KEY (taxonomy_id) REFERENCES glygen.ncbi_taxonomy (id);
 ----------- Adding foreign key constraint for table assay_type ----------
 ----------- Adding foreign key constraint for table analysis_type ----------
 ----------- Adding foreign key constraint for table ncbi_taxonomy ----------
 ----------- Adding foreign key constraint for table anatomy ----------
 ----------- Adding foreign key constraint for table file_format ----------
 ----------- Adding foreign key constraint for table data_type ----------
 ----------- Adding foreign key constraint for table disease ----------
 ----------- Adding foreign key constraint for table phenotype ----------
 ----------- Adding foreign key constraint for table compound ----------
 ----------- Adding foreign key constraint for table substance ----------
ALTER TABLE glygen.substance DROP CONSTRAINT IF EXISTS fk_substance_compound_1;
ALTER TABLE glygen.substance ADD CONSTRAINT  fk_substance_compound_1 FOREIGN KEY (compound) REFERENCES glygen.compound (id);
 ----------- Adding foreign key constraint for table gene ----------
ALTER TABLE glygen.gene DROP CONSTRAINT IF EXISTS fk_gene_ncbi_taxonomy_1;
ALTER TABLE glygen.gene ADD CONSTRAINT  fk_gene_ncbi_taxonomy_1 FOREIGN KEY (organism) REFERENCES glygen.ncbi_taxonomy (id);
 ----------- Adding foreign key constraint for table protein ----------
ALTER TABLE glygen.protein DROP CONSTRAINT IF EXISTS fk_protein_ncbi_taxonomy_1;
ALTER TABLE glygen.protein ADD CONSTRAINT  fk_protein_ncbi_taxonomy_1 FOREIGN KEY (organism) REFERENCES glygen.ncbi_taxonomy (id);
 ----------- Adding foreign key constraint for table protein_gene ----------
ALTER TABLE glygen.protein_gene DROP CONSTRAINT IF EXISTS fk_protein_gene_protein_1;
ALTER TABLE glygen.protein_gene ADD CONSTRAINT  fk_protein_gene_protein_1 FOREIGN KEY (protein) REFERENCES glygen.protein (id);
ALTER TABLE glygen.protein_gene DROP CONSTRAINT IF EXISTS fk_protein_gene_gene_2;
ALTER TABLE glygen.protein_gene ADD CONSTRAINT  fk_protein_gene_gene_2 FOREIGN KEY (gene) REFERENCES glygen.gene (id);
 ----------- Adding foreign key constraint for table sample_prep_method ----------
 ----------- Adding foreign key constraint for table id_namespace ----------
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Time taken to add foreign constraints: 5.379350423812866 seconds.


>>>>>>>> Attempting removal of .0 from columns size_in_bytes and uncompressed_size_in_bytes of table glygen.file successful.

Update successful.

>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Total time taken: 34.00015044212341 seconds.

********** C2M2 metadata ingestion completed: schema_name: glygen.
