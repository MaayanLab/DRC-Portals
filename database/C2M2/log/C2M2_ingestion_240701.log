------------ dcc_short_labels:['4DN', 'ERCC', 'GTEx', 'GlyGen', 'HMP', 'HuBMAP', 'IDG', 'KidsFirst', 'LINCS', 'Metabolomics', 'MoTrPAC', 'SPARC']
********** No arguments specified: will use schema_name: c2m2, and ingest from all DCCs.
DROP SCHEMA IF EXISTS c2m2 CASCADE;
Creating c2m2
=================== table_name: file ===========================
---- Column name: id_namespace: information read ----
---- Column name: local_id: information read ----
---- Column name: project_id_namespace: information read ----
---- Column name: project_local_id: information read ----
---- Column name: persistent_id: information read ----
---- Column name: creation_time: information read ----
---- Column name: size_in_bytes: information read ----
---- Column name: uncompressed_size_in_bytes: information read ----
---- Column name: sha256: information read ----
---- Column name: md5: information read ----
---- Column name: filename: information read ----
---- Column name: file_format: information read ----
---- Column name: compression_format: information read ----
---- Column name: data_type: information read ----
---- Column name: assay_type: information read ----
---- Column name: analysis_type: information read ----
---- Column name: mime_type: information read ----
---- Column name: bundle_collection_id_namespace: information read ----
---- Column name: bundle_collection_local_id: information read ----
---- Column name: dbgap_study_id: information read ----
create_table_query:
CREATE TABLE c2m2.file (
id_namespace VARCHAR NOT NULL, 
local_id VARCHAR NOT NULL, 
project_id_namespace VARCHAR NOT NULL, 
project_local_id VARCHAR NOT NULL, 
persistent_id VARCHAR DEFAULT '', 
creation_time VARCHAR DEFAULT '', 
size_in_bytes VARCHAR DEFAULT '', 
uncompressed_size_in_bytes VARCHAR DEFAULT '', 
sha256 VARCHAR DEFAULT '', 
md5 VARCHAR DEFAULT '', 
filename VARCHAR NOT NULL, 
file_format VARCHAR DEFAULT '', 
compression_format VARCHAR DEFAULT '', 
data_type VARCHAR DEFAULT '', 
assay_type VARCHAR DEFAULT '', 
analysis_type VARCHAR DEFAULT '', 
mime_type VARCHAR DEFAULT '', 
bundle_collection_id_namespace VARCHAR DEFAULT '', 
bundle_collection_local_id VARCHAR DEFAULT '', 
dbgap_study_id VARCHAR DEFAULT '',
PRIMARY KEY(id_namespace, local_id)
);
=================== table_name: biosample ===========================
---- Column name: id_namespace: information read ----
---- Column name: local_id: information read ----
---- Column name: project_id_namespace: information read ----
---- Column name: project_local_id: information read ----
---- Column name: persistent_id: information read ----
---- Column name: creation_time: information read ----
---- Column name: sample_prep_method: information read ----
---- Column name: anatomy: information read ----
create_table_query:
CREATE TABLE c2m2.biosample (
id_namespace VARCHAR NOT NULL, 
local_id VARCHAR NOT NULL, 
project_id_namespace VARCHAR NOT NULL, 
project_local_id VARCHAR NOT NULL, 
persistent_id VARCHAR DEFAULT '', 
creation_time VARCHAR DEFAULT '', 
sample_prep_method VARCHAR DEFAULT '', 
anatomy VARCHAR DEFAULT '',
PRIMARY KEY(id_namespace, local_id)
);
=================== table_name: subject ===========================
---- Column name: id_namespace: information read ----
---- Column name: local_id: information read ----
---- Column name: project_id_namespace: information read ----
---- Column name: project_local_id: information read ----
---- Column name: persistent_id: information read ----
---- Column name: creation_time: information read ----
---- Column name: granularity: information read ----
---- Column name: sex: information read ----
---- Column name: ethnicity: information read ----
---- Column name: age_at_enrollment: information read ----
create_table_query:
CREATE TABLE c2m2.subject (
id_namespace VARCHAR NOT NULL, 
local_id VARCHAR NOT NULL, 
project_id_namespace VARCHAR NOT NULL, 
project_local_id VARCHAR NOT NULL, 
persistent_id VARCHAR DEFAULT '', 
creation_time VARCHAR DEFAULT '', 
granularity VARCHAR NOT NULL, 
sex VARCHAR DEFAULT '', 
ethnicity VARCHAR DEFAULT '', 
age_at_enrollment VARCHAR DEFAULT '',
PRIMARY KEY(id_namespace, local_id)
);
=================== table_name: dcc ===========================
---- Column name: id: information read ----
---- Column name: dcc_name: information read ----
---- Column name: dcc_abbreviation: information read ----
---- Column name: dcc_description: information read ----
---- Column name: contact_email: information read ----
---- Column name: contact_name: information read ----
---- Column name: dcc_url: information read ----
---- Column name: project_id_namespace: information read ----
---- Column name: project_local_id: information read ----
create_table_query:
CREATE TABLE c2m2.dcc (
id VARCHAR NOT NULL, 
dcc_name VARCHAR NOT NULL, 
dcc_abbreviation VARCHAR NOT NULL, 
dcc_description VARCHAR DEFAULT '', 
contact_email VARCHAR NOT NULL, 
contact_name VARCHAR NOT NULL, 
dcc_url VARCHAR NOT NULL, 
project_id_namespace VARCHAR NOT NULL, 
project_local_id VARCHAR NOT NULL,
PRIMARY KEY(id)
);
=================== table_name: project ===========================
---- Column name: id_namespace: information read ----
---- Column name: local_id: information read ----
---- Column name: persistent_id: information read ----
---- Column name: creation_time: information read ----
---- Column name: abbreviation: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
create_table_query:
CREATE TABLE c2m2.project (
id_namespace VARCHAR NOT NULL, 
local_id VARCHAR NOT NULL, 
persistent_id VARCHAR DEFAULT '', 
creation_time VARCHAR DEFAULT '', 
abbreviation VARCHAR DEFAULT '', 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '',
PRIMARY KEY(id_namespace, local_id)
);
=================== table_name: project_in_project ===========================
---- Column name: parent_project_id_namespace: information read ----
---- Column name: parent_project_local_id: information read ----
---- Column name: child_project_id_namespace: information read ----
---- Column name: child_project_local_id: information read ----
create_table_query:
CREATE TABLE c2m2.project_in_project (
parent_project_id_namespace VARCHAR NOT NULL, 
parent_project_local_id VARCHAR NOT NULL, 
child_project_id_namespace VARCHAR NOT NULL, 
child_project_local_id VARCHAR NOT NULL,
PRIMARY KEY(parent_project_id_namespace, parent_project_local_id, child_project_id_namespace, child_project_local_id)
);
=================== table_name: collection ===========================
---- Column name: id_namespace: information read ----
---- Column name: local_id: information read ----
---- Column name: persistent_id: information read ----
---- Column name: creation_time: information read ----
---- Column name: abbreviation: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
---- Column name: has_time_series_data: information read ----
create_table_query:
CREATE TABLE c2m2.collection (
id_namespace VARCHAR NOT NULL, 
local_id VARCHAR NOT NULL, 
persistent_id VARCHAR DEFAULT '', 
creation_time VARCHAR DEFAULT '', 
abbreviation VARCHAR DEFAULT '', 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '', 
has_time_series_data VARCHAR DEFAULT '',
PRIMARY KEY(id_namespace, local_id)
);
=================== table_name: collection_in_collection ===========================
---- Column name: superset_collection_id_namespace: information read ----
---- Column name: superset_collection_local_id: information read ----
---- Column name: subset_collection_id_namespace: information read ----
---- Column name: subset_collection_local_id: information read ----
create_table_query:
CREATE TABLE c2m2.collection_in_collection (
superset_collection_id_namespace VARCHAR NOT NULL, 
superset_collection_local_id VARCHAR NOT NULL, 
subset_collection_id_namespace VARCHAR NOT NULL, 
subset_collection_local_id VARCHAR NOT NULL,
PRIMARY KEY(superset_collection_id_namespace, superset_collection_local_id, subset_collection_id_namespace, subset_collection_local_id)
);
=================== table_name: file_describes_collection ===========================
---- Column name: file_id_namespace: information read ----
---- Column name: file_local_id: information read ----
---- Column name: collection_id_namespace: information read ----
---- Column name: collection_local_id: information read ----
create_table_query:
CREATE TABLE c2m2.file_describes_collection (
file_id_namespace VARCHAR NOT NULL, 
file_local_id VARCHAR NOT NULL, 
collection_id_namespace VARCHAR NOT NULL, 
collection_local_id VARCHAR NOT NULL,
PRIMARY KEY(file_id_namespace, file_local_id, collection_id_namespace, collection_local_id)
);
=================== table_name: collection_defined_by_project ===========================
---- Column name: collection_id_namespace: information read ----
---- Column name: collection_local_id: information read ----
---- Column name: project_id_namespace: information read ----
---- Column name: project_local_id: information read ----
create_table_query:
CREATE TABLE c2m2.collection_defined_by_project (
collection_id_namespace VARCHAR NOT NULL, 
collection_local_id VARCHAR NOT NULL, 
project_id_namespace VARCHAR NOT NULL, 
project_local_id VARCHAR NOT NULL,
PRIMARY KEY(collection_id_namespace, collection_local_id, project_id_namespace, project_local_id)
);
=================== table_name: file_in_collection ===========================
---- Column name: file_id_namespace: information read ----
---- Column name: file_local_id: information read ----
---- Column name: collection_id_namespace: information read ----
---- Column name: collection_local_id: information read ----
create_table_query:
CREATE TABLE c2m2.file_in_collection (
file_id_namespace VARCHAR NOT NULL, 
file_local_id VARCHAR NOT NULL, 
collection_id_namespace VARCHAR NOT NULL, 
collection_local_id VARCHAR NOT NULL,
PRIMARY KEY(file_id_namespace, file_local_id, collection_id_namespace, collection_local_id)
);
=================== table_name: biosample_in_collection ===========================
---- Column name: biosample_id_namespace: information read ----
---- Column name: biosample_local_id: information read ----
---- Column name: collection_id_namespace: information read ----
---- Column name: collection_local_id: information read ----
create_table_query:
CREATE TABLE c2m2.biosample_in_collection (
biosample_id_namespace VARCHAR NOT NULL, 
biosample_local_id VARCHAR NOT NULL, 
collection_id_namespace VARCHAR NOT NULL, 
collection_local_id VARCHAR NOT NULL,
PRIMARY KEY(biosample_id_namespace, biosample_local_id, collection_id_namespace, collection_local_id)
);
=================== table_name: subject_in_collection ===========================
---- Column name: subject_id_namespace: information read ----
---- Column name: subject_local_id: information read ----
---- Column name: collection_id_namespace: information read ----
---- Column name: collection_local_id: information read ----
create_table_query:
CREATE TABLE c2m2.subject_in_collection (
subject_id_namespace VARCHAR NOT NULL, 
subject_local_id VARCHAR NOT NULL, 
collection_id_namespace VARCHAR NOT NULL, 
collection_local_id VARCHAR NOT NULL,
PRIMARY KEY(subject_id_namespace, subject_local_id, collection_id_namespace, collection_local_id)
);
=================== table_name: file_describes_biosample ===========================
---- Column name: file_id_namespace: information read ----
---- Column name: file_local_id: information read ----
---- Column name: biosample_id_namespace: information read ----
---- Column name: biosample_local_id: information read ----
create_table_query:
CREATE TABLE c2m2.file_describes_biosample (
file_id_namespace VARCHAR NOT NULL, 
file_local_id VARCHAR NOT NULL, 
biosample_id_namespace VARCHAR NOT NULL, 
biosample_local_id VARCHAR NOT NULL,
PRIMARY KEY(file_id_namespace, file_local_id, biosample_id_namespace, biosample_local_id)
);
=================== table_name: file_describes_subject ===========================
---- Column name: file_id_namespace: information read ----
---- Column name: file_local_id: information read ----
---- Column name: subject_id_namespace: information read ----
---- Column name: subject_local_id: information read ----
create_table_query:
CREATE TABLE c2m2.file_describes_subject (
file_id_namespace VARCHAR NOT NULL, 
file_local_id VARCHAR NOT NULL, 
subject_id_namespace VARCHAR NOT NULL, 
subject_local_id VARCHAR NOT NULL,
PRIMARY KEY(file_id_namespace, file_local_id, subject_id_namespace, subject_local_id)
);
=================== table_name: biosample_from_subject ===========================
---- Column name: biosample_id_namespace: information read ----
---- Column name: biosample_local_id: information read ----
---- Column name: subject_id_namespace: information read ----
---- Column name: subject_local_id: information read ----
---- Column name: age_at_sampling: information read ----
create_table_query:
CREATE TABLE c2m2.biosample_from_subject (
biosample_id_namespace VARCHAR NOT NULL, 
biosample_local_id VARCHAR NOT NULL, 
subject_id_namespace VARCHAR NOT NULL, 
subject_local_id VARCHAR NOT NULL, 
age_at_sampling VARCHAR DEFAULT '',
PRIMARY KEY(biosample_id_namespace, biosample_local_id, subject_id_namespace, subject_local_id)
);
=================== table_name: biosample_disease ===========================
---- Column name: biosample_id_namespace: information read ----
---- Column name: biosample_local_id: information read ----
---- Column name: association_type: information read ----
---- Column name: disease: information read ----
create_table_query:
CREATE TABLE c2m2.biosample_disease (
biosample_id_namespace VARCHAR NOT NULL, 
biosample_local_id VARCHAR NOT NULL, 
association_type VARCHAR NOT NULL, 
disease VARCHAR NOT NULL,
PRIMARY KEY(biosample_id_namespace, biosample_local_id, association_type, disease)
);
=================== table_name: subject_disease ===========================
---- Column name: subject_id_namespace: information read ----
---- Column name: subject_local_id: information read ----
---- Column name: association_type: information read ----
---- Column name: disease: information read ----
create_table_query:
CREATE TABLE c2m2.subject_disease (
subject_id_namespace VARCHAR NOT NULL, 
subject_local_id VARCHAR NOT NULL, 
association_type VARCHAR NOT NULL, 
disease VARCHAR NOT NULL,
PRIMARY KEY(subject_id_namespace, subject_local_id, association_type, disease)
);
=================== table_name: collection_disease ===========================
---- Column name: collection_id_namespace: information read ----
---- Column name: collection_local_id: information read ----
---- Column name: disease: information read ----
create_table_query:
CREATE TABLE c2m2.collection_disease (
collection_id_namespace VARCHAR NOT NULL, 
collection_local_id VARCHAR NOT NULL, 
disease VARCHAR NOT NULL,
PRIMARY KEY(collection_id_namespace, collection_local_id, disease)
);
=================== table_name: collection_phenotype ===========================
---- Column name: collection_id_namespace: information read ----
---- Column name: collection_local_id: information read ----
---- Column name: phenotype: information read ----
create_table_query:
CREATE TABLE c2m2.collection_phenotype (
collection_id_namespace VARCHAR NOT NULL, 
collection_local_id VARCHAR NOT NULL, 
phenotype VARCHAR NOT NULL,
PRIMARY KEY(collection_id_namespace, collection_local_id, phenotype)
);
=================== table_name: collection_gene ===========================
---- Column name: collection_id_namespace: information read ----
---- Column name: collection_local_id: information read ----
---- Column name: gene: information read ----
create_table_query:
CREATE TABLE c2m2.collection_gene (
collection_id_namespace VARCHAR NOT NULL, 
collection_local_id VARCHAR NOT NULL, 
gene VARCHAR NOT NULL,
PRIMARY KEY(collection_id_namespace, collection_local_id, gene)
);
=================== table_name: collection_compound ===========================
---- Column name: collection_id_namespace: information read ----
---- Column name: collection_local_id: information read ----
---- Column name: compound: information read ----
create_table_query:
CREATE TABLE c2m2.collection_compound (
collection_id_namespace VARCHAR NOT NULL, 
collection_local_id VARCHAR NOT NULL, 
compound VARCHAR NOT NULL,
PRIMARY KEY(collection_id_namespace, collection_local_id, compound)
);
=================== table_name: collection_substance ===========================
---- Column name: collection_id_namespace: information read ----
---- Column name: collection_local_id: information read ----
---- Column name: substance: information read ----
create_table_query:
CREATE TABLE c2m2.collection_substance (
collection_id_namespace VARCHAR NOT NULL, 
collection_local_id VARCHAR NOT NULL, 
substance VARCHAR NOT NULL,
PRIMARY KEY(collection_id_namespace, collection_local_id, substance)
);
=================== table_name: collection_taxonomy ===========================
---- Column name: collection_id_namespace: information read ----
---- Column name: collection_local_id: information read ----
---- Column name: taxon: information read ----
create_table_query:
CREATE TABLE c2m2.collection_taxonomy (
collection_id_namespace VARCHAR NOT NULL, 
collection_local_id VARCHAR NOT NULL, 
taxon VARCHAR NOT NULL,
PRIMARY KEY(collection_id_namespace, collection_local_id, taxon)
);
=================== table_name: collection_anatomy ===========================
---- Column name: collection_id_namespace: information read ----
---- Column name: collection_local_id: information read ----
---- Column name: anatomy: information read ----
create_table_query:
CREATE TABLE c2m2.collection_anatomy (
collection_id_namespace VARCHAR NOT NULL, 
collection_local_id VARCHAR NOT NULL, 
anatomy VARCHAR NOT NULL,
PRIMARY KEY(collection_id_namespace, collection_local_id, anatomy)
);
=================== table_name: collection_protein ===========================
---- Column name: collection_id_namespace: information read ----
---- Column name: collection_local_id: information read ----
---- Column name: protein: information read ----
create_table_query:
CREATE TABLE c2m2.collection_protein (
collection_id_namespace VARCHAR NOT NULL, 
collection_local_id VARCHAR NOT NULL, 
protein VARCHAR NOT NULL,
PRIMARY KEY(collection_id_namespace, collection_local_id, protein)
);
=================== table_name: subject_phenotype ===========================
---- Column name: subject_id_namespace: information read ----
---- Column name: subject_local_id: information read ----
---- Column name: association_type: information read ----
---- Column name: phenotype: information read ----
create_table_query:
CREATE TABLE c2m2.subject_phenotype (
subject_id_namespace VARCHAR NOT NULL, 
subject_local_id VARCHAR NOT NULL, 
association_type VARCHAR NOT NULL, 
phenotype VARCHAR NOT NULL,
PRIMARY KEY(subject_id_namespace, subject_local_id, association_type, phenotype)
);
=================== table_name: biosample_substance ===========================
---- Column name: biosample_id_namespace: information read ----
---- Column name: biosample_local_id: information read ----
---- Column name: substance: information read ----
create_table_query:
CREATE TABLE c2m2.biosample_substance (
biosample_id_namespace VARCHAR NOT NULL, 
biosample_local_id VARCHAR NOT NULL, 
substance VARCHAR NOT NULL,
PRIMARY KEY(biosample_id_namespace, biosample_local_id, substance)
);
=================== table_name: subject_substance ===========================
---- Column name: subject_id_namespace: information read ----
---- Column name: subject_local_id: information read ----
---- Column name: substance: information read ----
create_table_query:
CREATE TABLE c2m2.subject_substance (
subject_id_namespace VARCHAR NOT NULL, 
subject_local_id VARCHAR NOT NULL, 
substance VARCHAR NOT NULL,
PRIMARY KEY(subject_id_namespace, subject_local_id, substance)
);
=================== table_name: biosample_gene ===========================
---- Column name: biosample_id_namespace: information read ----
---- Column name: biosample_local_id: information read ----
---- Column name: gene: information read ----
create_table_query:
CREATE TABLE c2m2.biosample_gene (
biosample_id_namespace VARCHAR NOT NULL, 
biosample_local_id VARCHAR NOT NULL, 
gene VARCHAR NOT NULL,
PRIMARY KEY(biosample_id_namespace, biosample_local_id, gene)
);
=================== table_name: phenotype_gene ===========================
---- Column name: phenotype: information read ----
---- Column name: gene: information read ----
create_table_query:
CREATE TABLE c2m2.phenotype_gene (
phenotype VARCHAR NOT NULL, 
gene VARCHAR NOT NULL,
PRIMARY KEY(phenotype, gene)
);
=================== table_name: phenotype_disease ===========================
---- Column name: phenotype: information read ----
---- Column name: disease: information read ----
create_table_query:
CREATE TABLE c2m2.phenotype_disease (
phenotype VARCHAR NOT NULL, 
disease VARCHAR NOT NULL,
PRIMARY KEY(phenotype, disease)
);
=================== table_name: subject_race ===========================
---- Column name: subject_id_namespace: information read ----
---- Column name: subject_local_id: information read ----
---- Column name: race: information read ----
create_table_query:
CREATE TABLE c2m2.subject_race (
subject_id_namespace VARCHAR NOT NULL, 
subject_local_id VARCHAR NOT NULL, 
race VARCHAR DEFAULT '',
PRIMARY KEY(subject_id_namespace, subject_local_id, race)
);
=================== table_name: subject_role_taxonomy ===========================
---- Column name: subject_id_namespace: information read ----
---- Column name: subject_local_id: information read ----
---- Column name: role_id: information read ----
---- Column name: taxonomy_id: information read ----
create_table_query:
CREATE TABLE c2m2.subject_role_taxonomy (
subject_id_namespace VARCHAR NOT NULL, 
subject_local_id VARCHAR NOT NULL, 
role_id VARCHAR NOT NULL, 
taxonomy_id VARCHAR NOT NULL,
PRIMARY KEY(subject_id_namespace, subject_local_id, role_id, taxonomy_id)
);
=================== table_name: assay_type ===========================
---- Column name: id: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
---- Column name: synonyms: information read ----
create_table_query:
CREATE TABLE c2m2.assay_type (
id VARCHAR NOT NULL, 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '', 
synonyms VARCHAR DEFAULT '',
PRIMARY KEY(id)
);
=================== table_name: analysis_type ===========================
---- Column name: id: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
---- Column name: synonyms: information read ----
create_table_query:
CREATE TABLE c2m2.analysis_type (
id VARCHAR NOT NULL, 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '', 
synonyms VARCHAR DEFAULT '',
PRIMARY KEY(id)
);
=================== table_name: ncbi_taxonomy ===========================
---- Column name: id: information read ----
---- Column name: clade: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
---- Column name: synonyms: information read ----
create_table_query:
CREATE TABLE c2m2.ncbi_taxonomy (
id VARCHAR NOT NULL, 
clade VARCHAR NOT NULL, 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '', 
synonyms VARCHAR DEFAULT '',
PRIMARY KEY(id)
);
=================== table_name: anatomy ===========================
---- Column name: id: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
---- Column name: synonyms: information read ----
create_table_query:
CREATE TABLE c2m2.anatomy (
id VARCHAR NOT NULL, 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '', 
synonyms VARCHAR DEFAULT '',
PRIMARY KEY(id)
);
=================== table_name: file_format ===========================
---- Column name: id: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
---- Column name: synonyms: information read ----
create_table_query:
CREATE TABLE c2m2.file_format (
id VARCHAR NOT NULL, 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '', 
synonyms VARCHAR DEFAULT '',
PRIMARY KEY(id)
);
=================== table_name: data_type ===========================
---- Column name: id: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
---- Column name: synonyms: information read ----
create_table_query:
CREATE TABLE c2m2.data_type (
id VARCHAR NOT NULL, 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '', 
synonyms VARCHAR DEFAULT '',
PRIMARY KEY(id)
);
=================== table_name: disease ===========================
---- Column name: id: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
---- Column name: synonyms: information read ----
create_table_query:
CREATE TABLE c2m2.disease (
id VARCHAR NOT NULL, 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '', 
synonyms VARCHAR DEFAULT '',
PRIMARY KEY(id)
);
=================== table_name: phenotype ===========================
---- Column name: id: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
---- Column name: synonyms: information read ----
create_table_query:
CREATE TABLE c2m2.phenotype (
id VARCHAR NOT NULL, 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '', 
synonyms VARCHAR DEFAULT '',
PRIMARY KEY(id)
);
=================== table_name: compound ===========================
---- Column name: id: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
---- Column name: synonyms: information read ----
create_table_query:
CREATE TABLE c2m2.compound (
id VARCHAR NOT NULL, 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '', 
synonyms VARCHAR DEFAULT '',
PRIMARY KEY(id)
);
=================== table_name: substance ===========================
---- Column name: id: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
---- Column name: synonyms: information read ----
---- Column name: compound: information read ----
create_table_query:
CREATE TABLE c2m2.substance (
id VARCHAR NOT NULL, 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '', 
synonyms VARCHAR DEFAULT '', 
compound VARCHAR NOT NULL,
PRIMARY KEY(id)
);
=================== table_name: gene ===========================
---- Column name: id: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
---- Column name: synonyms: information read ----
---- Column name: organism: information read ----
create_table_query:
CREATE TABLE c2m2.gene (
id VARCHAR NOT NULL, 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '', 
synonyms VARCHAR DEFAULT '', 
organism VARCHAR NOT NULL,
PRIMARY KEY(id)
);
=================== table_name: protein ===========================
---- Column name: id: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
---- Column name: synonyms: information read ----
---- Column name: organism: information read ----
create_table_query:
CREATE TABLE c2m2.protein (
id VARCHAR NOT NULL, 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '', 
synonyms VARCHAR DEFAULT '', 
organism VARCHAR DEFAULT '',
PRIMARY KEY(id)
);
=================== table_name: protein_gene ===========================
---- Column name: protein: information read ----
---- Column name: gene: information read ----
create_table_query:
CREATE TABLE c2m2.protein_gene (
protein VARCHAR NOT NULL, 
gene VARCHAR NOT NULL,
PRIMARY KEY(protein, gene)
);
=================== table_name: sample_prep_method ===========================
---- Column name: id: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
---- Column name: synonyms: information read ----
create_table_query:
CREATE TABLE c2m2.sample_prep_method (
id VARCHAR NOT NULL, 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '', 
synonyms VARCHAR DEFAULT '',
PRIMARY KEY(id)
);
=================== table_name: id_namespace ===========================
---- Column name: id: information read ----
---- Column name: abbreviation: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
create_table_query:
CREATE TABLE c2m2.id_namespace (
id VARCHAR NOT NULL, 
abbreviation VARCHAR DEFAULT '', 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '',
PRIMARY KEY(id)
);
================== Defined all tables ======================
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Time taken to define table: 2.662332534790039 seconds.

Names of all tables:
['file', 'biosample', 'subject', 'dcc', 'project', 'project_in_project', 'collection', 'collection_in_collection', 'file_describes_collection', 'collection_defined_by_project', 'file_in_collection', 'biosample_in_collection', 'subject_in_collection', 'file_describes_biosample', 'file_describes_subject', 'biosample_from_subject', 'biosample_disease', 'subject_disease', 'collection_disease', 'collection_phenotype', 'collection_gene', 'collection_compound', 'collection_substance', 'collection_taxonomy', 'collection_anatomy', 'collection_protein', 'subject_phenotype', 'biosample_substance', 'subject_substance', 'biosample_gene', 'phenotype_gene', 'phenotype_disease', 'subject_race', 'subject_role_taxonomy', 'assay_type', 'analysis_type', 'ncbi_taxonomy', 'anatomy', 'file_format', 'data_type', 'disease', 'phenotype', 'compound', 'substance', 'gene', 'protein', 'protein_gene', 'sample_prep_method', 'id_namespace']

Going to ingest metadata from files


********* c2m2s dataframe, before checking if a single DCC is to be processed, is: **********
    filetype  ... dcc_short_label
30      C2M2  ...             4DN
31      C2M2  ...    Metabolomics
32      C2M2  ...          GlyGen
33      C2M2  ...          HuBMAP
34      C2M2  ...       KidsFirst
35      C2M2  ...           SPARC
74      C2M2  ...            ERCC
81      C2M2  ...         MoTrPAC
93      C2M2  ...            GTEx
107     C2M2  ...             HMP
123     C2M2  ...             IDG
146     C2M2  ...           LINCS

[12 rows x 14 columns]

********* c2m2s dataframe is: **********
    filetype  ... dcc_short_label
30      C2M2  ...             4DN
31      C2M2  ...    Metabolomics
32      C2M2  ...          GlyGen
33      C2M2  ...          HuBMAP
34      C2M2  ...       KidsFirst
35      C2M2  ...           SPARC
74      C2M2  ...            ERCC
81      C2M2  ...         MoTrPAC
93      C2M2  ...            GTEx
107     C2M2  ...             HMP
123     C2M2  ...             IDG
146     C2M2  ...           LINCS

[12 rows x 14 columns]
Processing C2M2 Files...:   0%|          | 0/12 [00:00<?, ?it/s]
================================== DCC short label: 4DN =============================================
--------- ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/dcc.tsv ---------
table_name:dcc
4DN: dcc: Read from file: df: #rows = 1, #cols: 9

#Lines in file ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/dcc.tsv: 2
df: #rows = 1, #cols: 9
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.dcc;
qt_df: Empty DataFrame
Columns: [pk]
Index: []
---- Executed query, got data.frame: qt_df: #rows = 0, #cols: 1

df_pk (at most first 10 elements): ['cfde_registry_dcc:4dn']
qt_pk (at most first 10 elements): []
---- Removed rows from df with matching pk
*** Entering dcc to database ***
df: #rows = 1, #cols: 9

A slice of df:
                      id  ...           contact_email
0  cfde_registry_dcc:4dn  ...  support@4dnucleome.org

[1 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.126631498336792 seconds.

--------- ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/id_namespace.tsv ---------
table_name:id_namespace
4DN: id_namespace: Read from file: df: #rows = 1, #cols: 4

#Lines in file ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/id_namespace.tsv: 2
df: #rows = 1, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.id_namespace;
qt_df: Empty DataFrame
Columns: [pk]
Index: []
---- Executed query, got data.frame: qt_df: #rows = 0, #cols: 1

df_pk (at most first 10 elements): ['https://data.4dnucleome.org']
qt_pk (at most first 10 elements): []
---- Removed rows from df with matching pk
*** Entering id_namespace to database ***
df: #rows = 1, #cols: 4

A slice of df:
                            id  ...                                        description
0  https://data.4dnucleome.org  ...  Study of the three-dimensional organization of...

[1 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.09376907348632812 seconds.

--------- ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/disease.tsv ---------
table_name:disease
4DN: disease: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.039884090423583984 seconds.

--------- ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/data_type.tsv ---------
table_name:data_type
4DN: data_type: Read from file: df: #rows = 5, #cols: 4

#Lines in file ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/data_type.tsv: 6
df: #rows = 5, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.data_type;
qt_df: Empty DataFrame
Columns: [pk]
Index: []
---- Executed query, got data.frame: qt_df: #rows = 0, #cols: 1

df_pk (at most first 10 elements): ['data:1383', 'data:2082', 'data:2887', 'data:2968', 'data:3002']
qt_pk (at most first 10 elements): []
---- Removed rows from df with matching pk
*** Entering data_type to database ***
df: #rows = 5, #cols: 4

A slice of df:
          id  ...                                           synonyms
0  data:1383  ...  ["Sequence alignment (nucleic acid)","RNA sequ...
1  data:2082  ...                                          ["Array"]
2  data:2887  ...  ["Sequence record (nucleic acid)","Nucleotide ...
3  data:2968  ...                                     ["Image data"]
4  data:3002  ...  ["Genome-browser track","Genome annotation tra...

[5 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0871739387512207 seconds.

--------- ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/collection_disease.tsv ---------
table_name:collection_disease
4DN: collection_disease: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/collection_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03727912902832031 seconds.

--------- ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/file_in_collection.tsv ---------
table_name:file_in_collection
4DN: file_in_collection: Read from file: df: #rows = 46073, #cols: 4

#Lines in file ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/file_in_collection.tsv: 46074
df: #rows = 46073, #cols: 4
pKeys: ['file_id_namespace', 'file_local_id', 'collection_id_namespace', 'collection_local_id']
Going to write the count query
Wrote the count query
*** Entering file_in_collection to database ***
df: #rows = 46073, #cols: 4

A slice of df:
             file_id_namespace  ...                   collection_local_id
0  https://data.4dnucleome.org  ...  4f110096-4598-4a54-b203-4eea4421df9b
1  https://data.4dnucleome.org  ...  4f110096-4598-4a54-b203-4eea4421df9b
2  https://data.4dnucleome.org  ...  4f110096-4598-4a54-b203-4eea4421df9b
3  https://data.4dnucleome.org  ...  d5ac3a96-f77e-4b5b-8c9c-12b5c51ec606
4  https://data.4dnucleome.org  ...  d5ac3a96-f77e-4b5b-8c9c-12b5c51ec606
5  https://data.4dnucleome.org  ...  5cec579b-7daa-4eb1-8e96-a58ee62ca4e3
6  https://data.4dnucleome.org  ...  5cec579b-7daa-4eb1-8e96-a58ee62ca4e3
7  https://data.4dnucleome.org  ...  5cec579b-7daa-4eb1-8e96-a58ee62ca4e3
8  https://data.4dnucleome.org  ...  5cec579b-7daa-4eb1-8e96-a58ee62ca4e3
9  https://data.4dnucleome.org  ...  5cec579b-7daa-4eb1-8e96-a58ee62ca4e3

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:    count
0  46073
count:46073
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.0074326992034912 seconds.

--------- ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/subject_role_taxonomy.tsv ---------
table_name:subject_role_taxonomy
4DN: subject_role_taxonomy: Read from file: df: #rows = 303, #cols: 4

#Lines in file ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/subject_role_taxonomy.tsv: 304
df: #rows = 303, #cols: 4
pKeys: ['subject_id_namespace', 'subject_local_id', 'role_id', 'taxonomy_id']
Going to write the count query
Wrote the count query
*** Entering subject_role_taxonomy to database ***
df: #rows = 303, #cols: 4

A slice of df:
          subject_id_namespace  ...     taxonomy_id
0  https://data.4dnucleome.org  ...  NCBI:txid10090
1  https://data.4dnucleome.org  ...  NCBI:txid10090
2  https://data.4dnucleome.org  ...  NCBI:txid10090
3  https://data.4dnucleome.org  ...   NCBI:txid9606
4  https://data.4dnucleome.org  ...  NCBI:txid10090
5  https://data.4dnucleome.org  ...  NCBI:txid10090
6  https://data.4dnucleome.org  ...  NCBI:txid10090
7  https://data.4dnucleome.org  ...  NCBI:txid10090
8  https://data.4dnucleome.org  ...  NCBI:txid10090
9  https://data.4dnucleome.org  ...  NCBI:txid10090

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:    count
0    303
count:303
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.09616470336914062 seconds.

--------- ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/biosample_in_collection.tsv ---------
table_name:biosample_in_collection
4DN: biosample_in_collection: Read from file: df: #rows = 5285, #cols: 4

#Lines in file ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/biosample_in_collection.tsv: 5286
df: #rows = 5285, #cols: 4
pKeys: ['biosample_id_namespace', 'biosample_local_id', 'collection_id_namespace', 'collection_local_id']
Going to write the count query
Wrote the count query
*** Entering biosample_in_collection to database ***
df: #rows = 5285, #cols: 4

A slice of df:
        biosample_id_namespace  ...                   collection_local_id
0  https://data.4dnucleome.org  ...  4f110096-4598-4a54-b203-4eea4421df9b
1  https://data.4dnucleome.org  ...  d5ac3a96-f77e-4b5b-8c9c-12b5c51ec606
2  https://data.4dnucleome.org  ...  5cec579b-7daa-4eb1-8e96-a58ee62ca4e3
3  https://data.4dnucleome.org  ...  89811098-5ba4-4146-91b3-33526edb5873
4  https://data.4dnucleome.org  ...  11b4e07a-c31a-445e-8fa4-0b600d4efed1
5  https://data.4dnucleome.org  ...  f4953b8f-d6b6-408e-ae13-0cf02d4ffee0
6  https://data.4dnucleome.org  ...  269c3590-d55f-432e-a713-cf54e2562c86
7  https://data.4dnucleome.org  ...  b913c25d-5fff-47a3-87a0-fb97c35214e4
8  https://data.4dnucleome.org  ...  8a857809-e97c-450e-8d0b-dd3e07a98455
9  https://data.4dnucleome.org  ...  ee159f43-5a13-4211-bf6f-4b426da32395

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:    count
0   5285
count:5285
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.19224929809570312 seconds.

--------- ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/subject_phenotype.tsv ---------
table_name:subject_phenotype
4DN: subject_phenotype: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/subject_phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.04344534873962402 seconds.

--------- ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/phenotype_disease.tsv ---------
table_name:phenotype_disease
4DN: phenotype_disease: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/phenotype_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.038793087005615234 seconds.

--------- ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/collection_compound.tsv ---------
table_name:collection_compound
4DN: collection_compound: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/collection_compound.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.0388491153717041 seconds.

--------- ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/protein_gene.tsv ---------
table_name:protein_gene
4DN: protein_gene: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/protein_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03944754600524902 seconds.

--------- ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/phenotype_gene.tsv ---------
table_name:phenotype_gene
4DN: phenotype_gene: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/phenotype_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03721141815185547 seconds.

--------- ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/phenotype.tsv ---------
table_name:phenotype
4DN: phenotype: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03821706771850586 seconds.

--------- ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/subject_disease.tsv ---------
table_name:subject_disease
4DN: subject_disease: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/subject_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03866910934448242 seconds.

--------- ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/collection_phenotype.tsv ---------
table_name:collection_phenotype
4DN: collection_phenotype: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/collection_phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03807353973388672 seconds.

--------- ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/protein.tsv ---------
table_name:protein
4DN: protein: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/protein.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03770947456359863 seconds.

--------- ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/ncbi_taxonomy.tsv ---------
table_name:ncbi_taxonomy
4DN: ncbi_taxonomy: Read from file: df: #rows = 7, #cols: 5

#Lines in file ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/ncbi_taxonomy.tsv: 8
df: #rows = 7, #cols: 5
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.ncbi_taxonomy;
qt_df: Empty DataFrame
Columns: [pk]
Index: []
---- Executed query, got data.frame: qt_df: #rows = 0, #cols: 1

df_pk (at most first 10 elements): ['NCBI:txid10036', 'NCBI:txid10090', 'NCBI:txid60711', 'NCBI:txid7227', 'NCBI:txid7955', 'NCBI:txid9031', 'NCBI:txid9606']
qt_pk (at most first 10 elements): []
---- Removed rows from df with matching pk
*** Entering ncbi_taxonomy to database ***
df: #rows = 7, #cols: 5

A slice of df:
               id  ...                                           synonyms
0  NCBI:txid10036  ...  ["Syrian hamster", "Cricetus auratus", "Golden...
1  NCBI:txid10090  ...                                          ["mouse"]
2  NCBI:txid60711  ...  ["Cercopithecus aethiops sabaeus", "Cercopithe...
3   NCBI:txid7227  ...                        ["Sophophora melanogaster"]
4   NCBI:txid7955  ...  ["zebra fish", "Brachydanio rerio", "Brachydan...
5   NCBI:txid9031  ...  ["chickens", "Gallus domesticus", "Gallus gall...
6   NCBI:txid9606  ...                                                 []

[7 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.08985352516174316 seconds.

--------- ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/collection_protein.tsv ---------
table_name:collection_protein
4DN: collection_protein: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/collection_protein.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.038295745849609375 seconds.

--------- ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/analysis_type.tsv ---------
table_name:analysis_type
4DN: analysis_type: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/analysis_type.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.037941932678222656 seconds.

--------- ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/file_describes_biosample.tsv ---------
table_name:file_describes_biosample
4DN: file_describes_biosample: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/file_describes_biosample.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.0342555046081543 seconds.

--------- ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/file.tsv ---------
table_name:file
4DN: file: Read from file: df: #rows = 45649, #cols: 20

#Lines in file ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/file.tsv: 45650
df: #rows = 45649, #cols: 20
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering file to database ***
df: #rows = 45649, #cols: 20

A slice of df:
                  id_namespace  ...                                      persistent_id
0  https://data.4dnucleome.org  ...  drs://data.4dnucleome.org/ga4gh/drs/v1/objects...
1  https://data.4dnucleome.org  ...  drs://data.4dnucleome.org/ga4gh/drs/v1/objects...
2  https://data.4dnucleome.org  ...  drs://data.4dnucleome.org/ga4gh/drs/v1/objects...
3  https://data.4dnucleome.org  ...  drs://data.4dnucleome.org/ga4gh/drs/v1/objects...
4  https://data.4dnucleome.org  ...  drs://data.4dnucleome.org/ga4gh/drs/v1/objects...
5  https://data.4dnucleome.org  ...  drs://data.4dnucleome.org/ga4gh/drs/v1/objects...
6  https://data.4dnucleome.org  ...  drs://data.4dnucleome.org/ga4gh/drs/v1/objects...
7  https://data.4dnucleome.org  ...  drs://data.4dnucleome.org/ga4gh/drs/v1/objects...
8  https://data.4dnucleome.org  ...  drs://data.4dnucleome.org/ga4gh/drs/v1/objects...
9  https://data.4dnucleome.org  ...  drs://data.4dnucleome.org/ga4gh/drs/v1/objects...

[10 rows x 5 columns]
Data inserted successfully!
sql_count_df:    count
0  45649
count:45649
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 2.6026761531829834 seconds.

--------- ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/collection_gene.tsv ---------
table_name:collection_gene
4DN: collection_gene: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/collection_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.05017566680908203 seconds.

--------- ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/biosample_from_subject.tsv ---------
table_name:biosample_from_subject
4DN: biosample_from_subject: Read from file: df: #rows = 3096, #cols: 5

#Lines in file ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/biosample_from_subject.tsv: 3097
df: #rows = 3096, #cols: 5
pKeys: ['biosample_id_namespace', 'biosample_local_id', 'subject_id_namespace', 'subject_local_id']
Going to write the count query
Wrote the count query
*** Entering biosample_from_subject to database ***
df: #rows = 3096, #cols: 5

A slice of df:
        biosample_id_namespace  ... age_at_sampling
0  https://data.4dnucleome.org  ...             NaN
1  https://data.4dnucleome.org  ...             NaN
2  https://data.4dnucleome.org  ...             NaN
3  https://data.4dnucleome.org  ...             NaN
4  https://data.4dnucleome.org  ...             NaN
5  https://data.4dnucleome.org  ...             NaN
6  https://data.4dnucleome.org  ...             NaN
7  https://data.4dnucleome.org  ...             NaN
8  https://data.4dnucleome.org  ...             NaN
9  https://data.4dnucleome.org  ...             NaN

[10 rows x 5 columns]
Data inserted successfully!
sql_count_df:    count
0   3096
count:3096
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.16849279403686523 seconds.

--------- ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/file_describes_collection.tsv ---------
table_name:file_describes_collection
4DN: file_describes_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/file_describes_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.04528236389160156 seconds.

--------- ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/subject_race.tsv ---------
table_name:subject_race
4DN: subject_race: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/subject_race.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.04158639907836914 seconds.

--------- ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/collection_in_collection.tsv ---------
table_name:collection_in_collection
4DN: collection_in_collection: Read from file: df: #rows = 5285, #cols: 4

#Lines in file ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/collection_in_collection.tsv: 5286
df: #rows = 5285, #cols: 4
pKeys: ['superset_collection_id_namespace', 'superset_collection_local_id', 'subset_collection_id_namespace', 'subset_collection_local_id']
Going to write the count query
Wrote the count query
*** Entering collection_in_collection to database ***
df: #rows = 5285, #cols: 4

A slice of df:
  superset_collection_id_namespace  ...            subset_collection_local_id
0      https://data.4dnucleome.org  ...  4f110096-4598-4a54-b203-4eea4421df9b
1      https://data.4dnucleome.org  ...  d5ac3a96-f77e-4b5b-8c9c-12b5c51ec606
2      https://data.4dnucleome.org  ...  5cec579b-7daa-4eb1-8e96-a58ee62ca4e3
3      https://data.4dnucleome.org  ...  89811098-5ba4-4146-91b3-33526edb5873
4      https://data.4dnucleome.org  ...  11b4e07a-c31a-445e-8fa4-0b600d4efed1
5      https://data.4dnucleome.org  ...  f4953b8f-d6b6-408e-ae13-0cf02d4ffee0
6      https://data.4dnucleome.org  ...  269c3590-d55f-432e-a713-cf54e2562c86
7      https://data.4dnucleome.org  ...  b913c25d-5fff-47a3-87a0-fb97c35214e4
8      https://data.4dnucleome.org  ...  8a857809-e97c-450e-8d0b-dd3e07a98455
9      https://data.4dnucleome.org  ...  ee159f43-5a13-4211-bf6f-4b426da32395

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:    count
0   5285
count:5285
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.19698286056518555 seconds.

--------- ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/collection_defined_by_project.tsv ---------
table_name:collection_defined_by_project
4DN: collection_defined_by_project: Read from file: df: #rows = 7558, #cols: 4

#Lines in file ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/collection_defined_by_project.tsv: 7559
df: #rows = 7558, #cols: 4
pKeys: ['collection_id_namespace', 'collection_local_id', 'project_id_namespace', 'project_local_id']
Going to write the count query
Wrote the count query
*** Entering collection_defined_by_project to database ***
df: #rows = 7558, #cols: 4

A slice of df:
       collection_id_namespace  ...                      project_local_id
0  https://data.4dnucleome.org  ...  b7c5d0c8-053e-4da3-b446-b68787a5a738
1  https://data.4dnucleome.org  ...  b7c5d0c8-053e-4da3-b446-b68787a5a738
2  https://data.4dnucleome.org  ...  b7c5d0c8-053e-4da3-b446-b68787a5a738
3  https://data.4dnucleome.org  ...  b7c5d0c8-053e-4da3-b446-b68787a5a738
4  https://data.4dnucleome.org  ...  ee89349a-1d43-4048-9142-bc750f0f3b32
5  https://data.4dnucleome.org  ...  ee89349a-1d43-4048-9142-bc750f0f3b32
6  https://data.4dnucleome.org  ...  ee89349a-1d43-4048-9142-bc750f0f3b32
7  https://data.4dnucleome.org  ...  ee89349a-1d43-4048-9142-bc750f0f3b32
8  https://data.4dnucleome.org  ...  ee89349a-1d43-4048-9142-bc750f0f3b32
9  https://data.4dnucleome.org  ...  ee89349a-1d43-4048-9142-bc750f0f3b32

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:    count
0   7558
count:7558
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.2296597957611084 seconds.

--------- ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/collection_substance.tsv ---------
table_name:collection_substance
4DN: collection_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/collection_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.04917192459106445 seconds.

--------- ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/biosample_substance.tsv ---------
table_name:biosample_substance
4DN: biosample_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/biosample_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.05038642883300781 seconds.

--------- ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/project.tsv ---------
table_name:project
4DN: project: Read from file: df: #rows = 43, #cols: 7

#Lines in file ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/project.tsv: 44
df: #rows = 43, #cols: 7
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering project to database ***
df: #rows = 43, #cols: 7

A slice of df:
                  id_namespace  ... abbreviation
0  https://data.4dnucleome.org  ...          4DN
1  https://data.4dnucleome.org  ...          NaN
2  https://data.4dnucleome.org  ...          NaN
3  https://data.4dnucleome.org  ...          NaN
4  https://data.4dnucleome.org  ...          NaN
5  https://data.4dnucleome.org  ...          NaN
6  https://data.4dnucleome.org  ...          NaN
7  https://data.4dnucleome.org  ...          NaN
8  https://data.4dnucleome.org  ...          NaN
9  https://data.4dnucleome.org  ...          NaN

[10 rows x 5 columns]
Data inserted successfully!
sql_count_df:    count
0     43
count:43
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.10458874702453613 seconds.

--------- ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/anatomy.tsv ---------
table_name:anatomy
4DN: anatomy: Read from file: df: #rows = 61, #cols: 4

#Lines in file ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/anatomy.tsv: 62
df: #rows = 61, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.anatomy;
qt_df: Empty DataFrame
Columns: [pk]
Index: []
---- Executed query, got data.frame: qt_df: #rows = 0, #cols: 1

df_pk (at most first 10 elements): ['CL:0000034', 'CL:0000081', 'CL:0000082', 'CL:0000216', 'CL:0000501', 'CL:0000604', 'CL:0000893', 'CL:0000945', 'CL:0002553', 'CL:0002586']
qt_pk (at most first 10 elements): []
---- Removed rows from df with matching pk
*** Entering anatomy to database ***
df: #rows = 61, #cols: 4

A slice of df:
           id  ...                                           synonyms
0  CL:0000034  ...                               ["animal stem cell"]
1  CL:0000081  ...                                                 []
2  CL:0000082  ...                           ["lung epithelial cell"]
3  CL:0000216  ...                                                 []
4  CL:0000501  ...                        ["granulosa cell of ovary"]
5  CL:0000604  ...                                                 []
6  CL:0000893  ...  ["immature T cell","immature T lymphocyte","im...
7  CL:0000945  ...                                                 []
8  CL:0002553  ...                                                 []
9  CL:0002586  ...                                                 []

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.10589909553527832 seconds.

--------- ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/sample_prep_method.tsv ---------
table_name:sample_prep_method
4DN: sample_prep_method: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/sample_prep_method.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.047553300857543945 seconds.

--------- ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/assay_type.tsv ---------
table_name:assay_type
4DN: assay_type: Read from file: df: #rows = 31, #cols: 4

#Lines in file ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/assay_type.tsv: 32
df: #rows = 31, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.assay_type;
qt_df: Empty DataFrame
Columns: [pk]
Index: []
---- Executed query, got data.frame: qt_df: #rows = 0, #cols: 1

df_pk (at most first 10 elements): ['CHMO:0000087', 'OBI:0000185', 'OBI:0000626', 'OBI:0000716', 'OBI:0001177', 'OBI:0001271', 'OBI:0001631', 'OBI:0001848', 'OBI:0001920', 'OBI:0002631']
qt_pk (at most first 10 elements): []
---- Removed rows from df with matching pk
*** Entering assay_type to database ***
df: #rows = 31, #cols: 4

A slice of df:
             id  ...                                           synonyms
0  CHMO:0000087  ...  ["fluorescence imaging","fluorescence microsco...
1   OBI:0000185  ...                                                 []
2   OBI:0000626  ...                          ["nucleotide sequencing"]
3   OBI:0000716  ...  ["chromatin immunoprecipitation sequencing ass...
4   OBI:0001177  ...                                                 []
5   OBI:0001271  ...  ["transcription profiling by high throughput s...
6   OBI:0001631  ...                                                 []
7   OBI:0001848  ...                      ["ChIA-PET","ChIA-PET assay"]
8   OBI:0001920  ...                    ["Repli-seq","Repli-seq assay"]
9   OBI:0002631  ...                                      ["scRNA-seq"]

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.10982537269592285 seconds.

--------- ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/biosample_disease.tsv ---------
table_name:biosample_disease
4DN: biosample_disease: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/biosample_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.04829216003417969 seconds.

--------- ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/collection_anatomy.tsv ---------
table_name:collection_anatomy
4DN: collection_anatomy: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/collection_anatomy.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.050200700759887695 seconds.

--------- ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/gene.tsv ---------
table_name:gene
4DN: gene: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.0500483512878418 seconds.

--------- ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/biosample.tsv ---------
table_name:biosample
4DN: biosample: Read from file: df: #rows = 3096, #cols: 8

#Lines in file ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/biosample.tsv: 3097
df: #rows = 3096, #cols: 8
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering biosample to database ***
df: #rows = 3096, #cols: 8

A slice of df:
                  id_namespace  ...                             persistent_id
0  https://data.4dnucleome.org  ...  https://data.4dnucleome.org/4DNBS9ER6TE2
1  https://data.4dnucleome.org  ...  https://data.4dnucleome.org/4DNBSJCWGXW1
2  https://data.4dnucleome.org  ...  https://data.4dnucleome.org/4DNBSSJIRYM8
3  https://data.4dnucleome.org  ...  https://data.4dnucleome.org/4DNBSVU821O5
4  https://data.4dnucleome.org  ...  https://data.4dnucleome.org/4DNBS4FEICQC
5  https://data.4dnucleome.org  ...  https://data.4dnucleome.org/4DNBSOFKQWWJ
6  https://data.4dnucleome.org  ...  https://data.4dnucleome.org/4DNBSD87XWGC
7  https://data.4dnucleome.org  ...  https://data.4dnucleome.org/4DNBSLR1881C
8  https://data.4dnucleome.org  ...  https://data.4dnucleome.org/4DNBS1Q27TQE
9  https://data.4dnucleome.org  ...  https://data.4dnucleome.org/4DNBSUFB5238

[10 rows x 5 columns]
Data inserted successfully!
sql_count_df:    count
0   3096
count:3096
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.18842315673828125 seconds.

--------- ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/file_describes_subject.tsv ---------
table_name:file_describes_subject
4DN: file_describes_subject: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/file_describes_subject.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.054297685623168945 seconds.

--------- ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/subject.tsv ---------
table_name:subject
4DN: subject: Read from file: df: #rows = 303, #cols: 10

#Lines in file ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/subject.tsv: 304
df: #rows = 303, #cols: 10
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering subject to database ***
df: #rows = 303, #cols: 10

A slice of df:
                  id_namespace  ...                             persistent_id
0  https://data.4dnucleome.org  ...  https://data.4dnucleome.org/4DNSRQDR15QF
1  https://data.4dnucleome.org  ...  https://data.4dnucleome.org/4DNSRCXI55XN
2  https://data.4dnucleome.org  ...  https://data.4dnucleome.org/4DNSRRFK44DB
3  https://data.4dnucleome.org  ...  https://data.4dnucleome.org/4DNSRXN5YHHZ
4  https://data.4dnucleome.org  ...  https://data.4dnucleome.org/4DNSRFMDOVZA
5  https://data.4dnucleome.org  ...  https://data.4dnucleome.org/4DNSRJ9J5AZZ
6  https://data.4dnucleome.org  ...  https://data.4dnucleome.org/4DNSRU4K9KGR
7  https://data.4dnucleome.org  ...  https://data.4dnucleome.org/4DNSRIIHJL3J
8  https://data.4dnucleome.org  ...  https://data.4dnucleome.org/4DNSR9HAHDCF
9  https://data.4dnucleome.org  ...  https://data.4dnucleome.org/4DNSRDOQY6NA

[10 rows x 5 columns]
Data inserted successfully!
sql_count_df:    count
0    303
count:303
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.11494588851928711 seconds.

--------- ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/file_format.tsv ---------
table_name:file_format
4DN: file_format: Read from file: df: #rows = 15, #cols: 4

#Lines in file ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/file_format.tsv: 16
df: #rows = 15, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.file_format;
qt_df: Empty DataFrame
Columns: [pk]
Index: []
---- Executed query, got data.frame: qt_df: #rows = 0, #cols: 1

df_pk (at most first 10 elements): ['format:1930', 'format:2330', 'format:2331', 'format:2572', 'format:3003', 'format:3004', 'format:3006', 'format:3475', 'format:3583', 'format:3590']
qt_pk (at most first 10 elements): []
---- Removed rows from df with matching pk
*** Entering file_format to database ***
df: #rows = 15, #cols: 4

A slice of df:
            id  ...                                  synonyms
0  format:1930  ...                           ["FASTAQ","fq"]
1  format:2330  ...               ["Plain text format","txt"]
2  format:2331  ...             ["Hypertext Markup Language"]
3  format:2572  ...                                        []
4  format:3003  ...                                        []
5  format:3004  ...                                        []
6  format:3006  ...                                        []
7  format:3475  ...  ["Tab-delimited","Tab-separated values"]
8  format:3583  ...                                        []
9  format:3590  ...                                    ["h5"]

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.10068988800048828 seconds.

--------- ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/biosample_gene.tsv ---------
table_name:biosample_gene
4DN: biosample_gene: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/biosample_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.047745704650878906 seconds.

--------- ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/subject_substance.tsv ---------
table_name:subject_substance
4DN: subject_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/subject_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.05100417137145996 seconds.

--------- ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/collection.tsv ---------
table_name:collection
4DN: collection: Read from file: df: #rows = 7558, #cols: 8

#Lines in file ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/collection.tsv: 7559
df: #rows = 7558, #cols: 8
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering collection to database ***
df: #rows = 7558, #cols: 8

A slice of df:
                  id_namespace  ...  abbreviation
0  https://data.4dnucleome.org  ...  4DNES44GBU46
1  https://data.4dnucleome.org  ...  4DNEXFU8K95M
2  https://data.4dnucleome.org  ...  4DNESABI2R6T
3  https://data.4dnucleome.org  ...  4DNEXIQ3X6VY
4  https://data.4dnucleome.org  ...  4DNESVF6WL86
5  https://data.4dnucleome.org  ...  4DNEXW57SFU1
6  https://data.4dnucleome.org  ...  4DNEXMFQ1XJV
7  https://data.4dnucleome.org  ...  4DNESYLI75YL
8  https://data.4dnucleome.org  ...  4DNEXP233DK1
9  https://data.4dnucleome.org  ...  4DNESMAQEPWU

[10 rows x 5 columns]
Data inserted successfully!
sql_count_df:    count
0   7558
count:7558
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.3374204635620117 seconds.

--------- ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/compound.tsv ---------
table_name:compound
4DN: compound: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/compound.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.05155777931213379 seconds.

--------- ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/subject_in_collection.tsv ---------
table_name:subject_in_collection
4DN: subject_in_collection: Read from file: df: #rows = 2273, #cols: 4

#Lines in file ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/subject_in_collection.tsv: 2274
df: #rows = 2273, #cols: 4
pKeys: ['subject_id_namespace', 'subject_local_id', 'collection_id_namespace', 'collection_local_id']
Going to write the count query
Wrote the count query
*** Entering subject_in_collection to database ***
df: #rows = 2273, #cols: 4

A slice of df:
          subject_id_namespace  ...                   collection_local_id
0  https://data.4dnucleome.org  ...  611ef267-06f4-4a39-ae25-17bdf4b61fa0
1  https://data.4dnucleome.org  ...  445aa467-8f90-41be-a5e0-ef3e96141305
2  https://data.4dnucleome.org  ...  d5984ca2-40b2-4db6-b708-79b04bf4de88
3  https://data.4dnucleome.org  ...  b2dde19d-8ae2-4d62-91c9-e09f4069b5a1
4  https://data.4dnucleome.org  ...  70acc460-44c5-4407-b92f-3385cf87c39a
5  https://data.4dnucleome.org  ...  e64a67bf-7d44-41c7-b83c-2db9d6d548ca
6  https://data.4dnucleome.org  ...  2f376ab2-0510-4021-ba3f-cc438c3b98cb
7  https://data.4dnucleome.org  ...  c9544abd-f068-4154-9d53-0fc689d634f4
8  https://data.4dnucleome.org  ...  2d14888c-4cfe-45cc-ab59-00ae73afe001
9  https://data.4dnucleome.org  ...  8bf04260-0c46-4ef5-9629-0d1be5ed8fb4

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:    count
0   2273
count:2273
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.1492457389831543 seconds.

--------- ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/project_in_project.tsv ---------
table_name:project_in_project
4DN: project_in_project: Read from file: df: #rows = 42, #cols: 4

#Lines in file ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/project_in_project.tsv: 43
df: #rows = 42, #cols: 4
pKeys: ['parent_project_id_namespace', 'parent_project_local_id', 'child_project_id_namespace', 'child_project_local_id']
Processing C2M2 Files...:   8%|▊         | 1/12 [00:09<01:40,  9.13s/it]Going to write the count query
Wrote the count query
*** Entering project_in_project to database ***
df: #rows = 42, #cols: 4

A slice of df:
   parent_project_id_namespace  ...                child_project_local_id
0  https://data.4dnucleome.org  ...  b7c5d0c8-053e-4da3-b446-b68787a5a738
1  https://data.4dnucleome.org  ...  ee89349a-1d43-4048-9142-bc750f0f3b32
2  https://data.4dnucleome.org  ...  a49f939d-b24c-44e0-9fd5-0d72898beed6
3  https://data.4dnucleome.org  ...  8432a44c-4da7-446b-9080-f4fae299ebd6
4  https://data.4dnucleome.org  ...  71171a4e-dca1-44cb-8375-fafd896c6923
5  https://data.4dnucleome.org  ...  72c61c12-2750-4b27-a3d6-07bf5c8d5e80
6  https://data.4dnucleome.org  ...  91b694c3-f4d7-4ddd-8278-16f94e15c1c5
7  https://data.4dnucleome.org  ...  f959fce7-bd94-4a8d-961d-8c72a4eaa1ad
8  https://data.4dnucleome.org  ...  0247d660-dc33-4a2e-84a7-eb1ac2cbbaca
9  https://data.4dnucleome.org  ...  12a92962-8265-4fc0-b2f8-cf14f05db58b

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:    count
0     42
count:42
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0910189151763916 seconds.

--------- ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/collection_taxonomy.tsv ---------
table_name:collection_taxonomy
4DN: collection_taxonomy: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/collection_taxonomy.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.048796653747558594 seconds.

--------- ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/substance.tsv ---------
table_name:substance
4DN: substance: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/4DN/240605_c2m2_4dn_submission/240605_c2m2_4dn_submission/substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.05072784423828125 seconds.


================================== DCC short label: Metabolomics =============================================
--------- ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/analysis_type.tsv ---------
table_name:analysis_type
Metabolomics: analysis_type: Read from file: df: #rows = 3, #cols: 4

#Lines in file ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/analysis_type.tsv: 4
df: #rows = 3, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.analysis_type;
qt_df: Empty DataFrame
Columns: [pk]
Index: []
---- Executed query, got data.frame: qt_df: #rows = 0, #cols: 1

df_pk (at most first 10 elements): ['OBI:0000726', 'OBI:0200085', 'OBI:0200199']
qt_pk (at most first 10 elements): []
---- Removed rows from df with matching pk
*** Entering analysis_type to database ***
df: #rows = 3, #cols: 4

A slice of df:
            id  ... synonyms
0  OBI:0000726  ...       []
1  OBI:0200085  ...       []
2  OBI:0200199  ...       []

[3 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.10422301292419434 seconds.

--------- ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/anatomy.tsv ---------
table_name:anatomy
Metabolomics: anatomy: Read from file: df: #rows = 110, #cols: 4

#Lines in file ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/anatomy.tsv: 111
df: #rows = 110, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.anatomy;
qt_df:                 pk
0   UBERON:0002037
1       CL:0002586
2       CL:0000082
3   UBERON:0007777
4   UBERON:0002079
..             ...
56  UBERON:0002370
57  UBERON:0002107
58  UBERON:0000995
59  UBERON:0002028
60  UBERON:0002084

[61 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 61, #cols: 1

df_pk (at most first 10 elements): ['UBERON:0000006', 'UBERON:0000033', 'UBERON:0000038', 'UBERON:0000044', 'UBERON:0000160', 'UBERON:0000173', 'UBERON:0000178', 'UBERON:0000310', 'UBERON:0000358', 'UBERON:0000403']
qt_pk (at most first 10 elements): ['UBERON:0002037', 'CL:0002586', 'CL:0000082', 'UBERON:0007777', 'UBERON:0002079', 'UBERON:0002240', 'UBERON:0001384', 'CL:2000042', 'CL:0000081', 'UBERON:0000956']
---- Removed rows from df with matching pk
*** Entering anatomy to database ***
df: #rows = 95, #cols: 4

A slice of df:
               id  ...                                           synonyms
0  UBERON:0000006  ...           ["pancreatic insula","pancreatic islet"]
1  UBERON:0000033  ...                                  ["head (volume)"]
2  UBERON:0000038  ...  ["liquor follicularis","liquor folliculi","ova...
3  UBERON:0000044  ...  ["UBERON:0026602","dorsal root ganglion","gang...
4  UBERON:0000160  ...                                          ["bowel"]
5  UBERON:0000173  ...                                                 []
6  UBERON:0000178  ...            ["portion of blood","vertebrate blood"]
7  UBERON:0000310  ...         ["mammary part of chest","mammary region"]
8  UBERON:0000358  ...                                                 []
9  UBERON:0000403  ...                                                 []

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.1089329719543457 seconds.

--------- ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/assay_type.tsv ---------
table_name:assay_type
Metabolomics: assay_type: Read from file: df: #rows = 4, #cols: 4

#Lines in file ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/assay_type.tsv: 5
df: #rows = 4, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.assay_type;
qt_df:               pk
0    OBI:0003306
1    OBI:0003104
2    OBI:0002984
3    OBI:0000185
4    OBI:0003300
5    OBI:0003312
6    OBI:0001631
7    OBI:0003301
8    OBI:0003033
9    OBI:0003094
10   OBI:0003311
11   OBI:0002631
12   OBI:0003297
13   OBI:0001920
14   OBI:0000716
15   OBI:0001177
16   OBI:0003314
17   OBI:0001848
18   OBI:0003313
19   OBI:0003299
20   OBI:0003089
21   OBI:0003105
22   OBI:0000626
23   OBI:0003305
24   OBI:0003304
25   OBI:0003303
26   OBI:0003034
27   OBI:0600047
28  CHMO:0000087
29   OBI:0003302
30   OBI:0001271
---- Executed query, got data.frame: qt_df: #rows = 31, #cols: 1

df_pk (at most first 10 elements): ['OBI:0000470', 'OBI:0000623', 'OBI:0003097', 'OBI:0003110']
qt_pk (at most first 10 elements): ['OBI:0003306', 'OBI:0003104', 'OBI:0002984', 'OBI:0000185', 'OBI:0003300', 'OBI:0003312', 'OBI:0001631', 'OBI:0003301', 'OBI:0003033', 'OBI:0003094']
---- Removed rows from df with matching pk
*** Entering assay_type to database ***
df: #rows = 4, #cols: 4

A slice of df:
            id  ...                                     synonyms
0  OBI:0000470  ...                                           []
1  OBI:0000623  ...  ["Nuclear magnetic resonance spectroscopy"]
2  OBI:0003097  ...                                    ["LC-MS"]
3  OBI:0003110  ...                                    ["GC-MS"]

[4 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.10238981246948242 seconds.

--------- ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/biosample_disease.tsv ---------
table_name:biosample_disease
Metabolomics: biosample_disease: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/biosample_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.04671525955200195 seconds.

--------- ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/biosample_from_subject.tsv ---------
table_name:biosample_from_subject
Metabolomics: biosample_from_subject: Read from file: df: #rows = 287165, #cols: 5

#Lines in file ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/biosample_from_subject.tsv: 287166
df: #rows = 287165, #cols: 5
pKeys: ['biosample_id_namespace', 'biosample_local_id', 'subject_id_namespace', 'subject_local_id']
Going to write the count query
Wrote the count query
*** Entering biosample_from_subject to database ***
df: #rows = 287165, #cols: 5

A slice of df:
                   biosample_id_namespace  ... age_at_sampling
0  https://www.metabolomicsworkbench.org/  ...             NaN
1  https://www.metabolomicsworkbench.org/  ...             NaN
2  https://www.metabolomicsworkbench.org/  ...             NaN
3  https://www.metabolomicsworkbench.org/  ...             NaN
4  https://www.metabolomicsworkbench.org/  ...             NaN
5  https://www.metabolomicsworkbench.org/  ...             NaN
6  https://www.metabolomicsworkbench.org/  ...             NaN
7  https://www.metabolomicsworkbench.org/  ...             NaN
8  https://www.metabolomicsworkbench.org/  ...             NaN
9  https://www.metabolomicsworkbench.org/  ...             NaN

[10 rows x 5 columns]
Data inserted successfully!
sql_count_df:     count
0  287165
count:287165
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 5.216337203979492 seconds.

--------- ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/biosample_gene.tsv ---------
table_name:biosample_gene
Metabolomics: biosample_gene: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/biosample_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.06350421905517578 seconds.

--------- ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/biosample_in_collection.tsv ---------
table_name:biosample_in_collection
Metabolomics: biosample_in_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/biosample_in_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.05158567428588867 seconds.

--------- ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/biosample_substance.tsv ---------
table_name:biosample_substance
Metabolomics: biosample_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/biosample_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.05149388313293457 seconds.

--------- ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/biosample.tsv ---------
table_name:biosample
Metabolomics: biosample: Read from file: df: #rows = 287165, #cols: 8

#Lines in file ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/biosample.tsv: 287166
df: #rows = 287165, #cols: 8
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering biosample to database ***
df: #rows = 287165, #cols: 8

A slice of df:
                             id_namespace  ...                                      persistent_id
0  https://www.metabolomicsworkbench.org/  ...  https://www.metabolomicsworkbench.org/data/DRC...
1  https://www.metabolomicsworkbench.org/  ...  https://www.metabolomicsworkbench.org/data/DRC...
2  https://www.metabolomicsworkbench.org/  ...  https://www.metabolomicsworkbench.org/data/DRC...
3  https://www.metabolomicsworkbench.org/  ...  https://www.metabolomicsworkbench.org/data/DRC...
4  https://www.metabolomicsworkbench.org/  ...  https://www.metabolomicsworkbench.org/data/DRC...
5  https://www.metabolomicsworkbench.org/  ...  https://www.metabolomicsworkbench.org/data/DRC...
6  https://www.metabolomicsworkbench.org/  ...  https://www.metabolomicsworkbench.org/data/DRC...
7  https://www.metabolomicsworkbench.org/  ...  https://www.metabolomicsworkbench.org/data/DRC...
8  https://www.metabolomicsworkbench.org/  ...  https://www.metabolomicsworkbench.org/data/DRC...
9  https://www.metabolomicsworkbench.org/  ...  https://www.metabolomicsworkbench.org/data/DRC...

[10 rows x 5 columns]
Data inserted successfully!
sql_count_df:     count
0  287165
count:287165
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 8.152499675750732 seconds.

--------- ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/collection_anatomy.tsv ---------
table_name:collection_anatomy
Metabolomics: collection_anatomy: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/collection_anatomy.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.09044957160949707 seconds.

--------- ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/collection_compound.tsv ---------
table_name:collection_compound
Metabolomics: collection_compound: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/collection_compound.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.051824331283569336 seconds.

--------- ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/collection_defined_by_project.tsv ---------
table_name:collection_defined_by_project
Metabolomics: collection_defined_by_project: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/collection_defined_by_project.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.05161118507385254 seconds.

--------- ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/collection_disease.tsv ---------
table_name:collection_disease
Metabolomics: collection_disease: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/collection_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.05326581001281738 seconds.

--------- ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/collection_gene.tsv ---------
table_name:collection_gene
Metabolomics: collection_gene: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/collection_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.05061173439025879 seconds.

--------- ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/collection_in_collection.tsv ---------
table_name:collection_in_collection
Metabolomics: collection_in_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/collection_in_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.0437924861907959 seconds.

--------- ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/collection_phenotype.tsv ---------
table_name:collection_phenotype
Metabolomics: collection_phenotype: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/collection_phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.0464320182800293 seconds.

--------- ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/collection_protein.tsv ---------
table_name:collection_protein
Metabolomics: collection_protein: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/collection_protein.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.05216503143310547 seconds.

--------- ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/collection_substance.tsv ---------
table_name:collection_substance
Metabolomics: collection_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/collection_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.05144691467285156 seconds.

--------- ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/collection_taxonomy.tsv ---------
table_name:collection_taxonomy
Metabolomics: collection_taxonomy: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/collection_taxonomy.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.05544590950012207 seconds.

--------- ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/collection.tsv ---------
table_name:collection
Metabolomics: collection: Read from file: df: #rows = 0, #cols: 8

#Lines in file ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.052684783935546875 seconds.

--------- ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/compound.tsv ---------
table_name:compound
Metabolomics: compound: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/compound.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.05072021484375 seconds.

--------- ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/data_type.tsv ---------
table_name:data_type
Metabolomics: data_type: Read from file: df: #rows = 2, #cols: 4

#Lines in file ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/data_type.tsv: 3
df: #rows = 2, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.data_type;
qt_df:           pk
0  data:1383
1  data:2082
2  data:3002
3  data:2887
4  data:2968
---- Executed query, got data.frame: qt_df: #rows = 5, #cols: 1

df_pk (at most first 10 elements): ['data:2536', 'data:3488']
qt_pk (at most first 10 elements): ['data:1383', 'data:2082', 'data:3002', 'data:2887', 'data:2968']
---- Removed rows from df with matching pk
*** Entering data_type to database ***
df: #rows = 2, #cols: 4

A slice of df:
          id  ...         synonyms
0  data:2536  ...               []
1  data:3488  ...  ["NMR spectra"]

[2 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.10920190811157227 seconds.

--------- ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/dcc.tsv ---------
table_name:dcc
Metabolomics: dcc: Read from file: df: #rows = 1, #cols: 9

#Lines in file ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/dcc.tsv: 2
df: #rows = 1, #cols: 9
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.dcc;
qt_df:                       pk
0  cfde_registry_dcc:4dn
---- Executed query, got data.frame: qt_df: #rows = 1, #cols: 1

df_pk (at most first 10 elements): ['cfde_registry_dcc:metabolomics']
qt_pk (at most first 10 elements): ['cfde_registry_dcc:4dn']
---- Removed rows from df with matching pk
*** Entering dcc to database ***
df: #rows = 1, #cols: 9

A slice of df:
                               id  ...     contact_email
0  cfde_registry_dcc:metabolomics  ...  mmaurya@ucsd.edu

[1 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.10804891586303711 seconds.

--------- ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/disease.tsv ---------
table_name:disease
Metabolomics: disease: Read from file: df: #rows = 128, #cols: 4

#Lines in file ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/disease.tsv: 129
df: #rows = 128, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.disease;
qt_df: Empty DataFrame
Columns: [pk]
Index: []
---- Executed query, got data.frame: qt_df: #rows = 0, #cols: 1

df_pk (at most first 10 elements): ['DOID:0014667', 'DOID:0040085', 'DOID:0050117', 'DOID:0050476', 'DOID:0050589', 'DOID:0050700', 'DOID:0050741', 'DOID:0050753', 'DOID:0050830', 'DOID:0050847']
qt_pk (at most first 10 elements): []
---- Removed rows from df with matching pk
*** Entering disease to database ***
df: #rows = 128, #cols: 4

A slice of df:
             id  ...                                           synonyms
0  DOID:0014667  ...                              ["metabolic disease"]
1  DOID:0040085  ...                                                 []
2  DOID:0050117  ...  ["DOID:10115","DOID:11078","DOID:1304","DOID:1...
3  DOID:0050476  ...  ["3-methylglutaconicaciduria type 2","3-methyl...
4  DOID:0050589  ...                                                 []
5  DOID:0050700  ...                               ["Cardiomyopathies"]
6  DOID:0050741  ...                                     ["alcoholism"]
7  DOID:0050753  ...                                                 []
8  DOID:0050830  ...                                                 []
9  DOID:0050847  ...                                                 []

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.11361002922058105 seconds.

--------- ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/file_describes_biosample.tsv ---------
table_name:file_describes_biosample
Metabolomics: file_describes_biosample: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/file_describes_biosample.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.05076169967651367 seconds.

--------- ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/file_describes_collection.tsv ---------
table_name:file_describes_collection
Metabolomics: file_describes_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/file_describes_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.051763296127319336 seconds.

--------- ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/file_describes_subject.tsv ---------
table_name:file_describes_subject
Metabolomics: file_describes_subject: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/file_describes_subject.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.05200552940368652 seconds.

--------- ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/file_format.tsv ---------
table_name:file_format
Metabolomics: file_format: Read from file: df: #rows = 9, #cols: 4

#Lines in file ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/file_format.tsv: 10
df: #rows = 9, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.file_format;
qt_df:              pk
0   format:3004
1   format:3987
2   format:2572
3   format:3591
4   format:3590
5   format:3006
6   format:1930
7   format:3727
8   format:3752
9   format:3583
10  format:3981
11  format:2330
12  format:2331
13  format:3003
14  format:3475
---- Executed query, got data.frame: qt_df: #rows = 15, #cols: 1

df_pk (at most first 10 elements): ['format:2330', 'format:2333', 'format:3506', 'format:3508', 'format:3620', 'format:3752', 'format:3981', 'format:3987', 'format:3989']
qt_pk (at most first 10 elements): ['format:3004', 'format:3987', 'format:2572', 'format:3591', 'format:3590', 'format:3006', 'format:1930', 'format:3727', 'format:3752', 'format:3583']
---- Removed rows from df with matching pk
*** Entering file_format to database ***
df: #rows = 5, #cols: 4

A slice of df:
            id  ...                         synonyms
1  format:2333  ...                               []
2  format:3506  ...  ["Microsoft Word format","doc"]
3  format:3508  ...                               []
4  format:3620  ...                               []
8  format:3989  ...                      ["GNU Zip"]

[5 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.10732412338256836 seconds.

--------- ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/file_in_collection.tsv ---------
table_name:file_in_collection
Metabolomics: file_in_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/file_in_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.0511622428894043 seconds.

--------- ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/file.tsv ---------
table_name:file
Metabolomics: file: Read from file: df: #rows = 4354, #cols: 20

#Lines in file ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/file.tsv: 4355
df: #rows = 4354, #cols: 20
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering file to database ***
df: #rows = 4354, #cols: 20

A slice of df:
                             id_namespace  ...                                      persistent_id
0  https://www.metabolomicsworkbench.org/  ...  https://www.metabolomicsworkbench.org/studydow...
1  https://www.metabolomicsworkbench.org/  ...  https://www.metabolomicsworkbench.org/studydow...
2  https://www.metabolomicsworkbench.org/  ...  https://www.metabolomicsworkbench.org/studydow...
3  https://www.metabolomicsworkbench.org/  ...  https://www.metabolomicsworkbench.org/studydow...
4  https://www.metabolomicsworkbench.org/  ...  https://www.metabolomicsworkbench.org/studydow...
5  https://www.metabolomicsworkbench.org/  ...  https://www.metabolomicsworkbench.org/studydow...
6  https://www.metabolomicsworkbench.org/  ...  https://www.metabolomicsworkbench.org/studydow...
7  https://www.metabolomicsworkbench.org/  ...  https://www.metabolomicsworkbench.org/studydow...
8  https://www.metabolomicsworkbench.org/  ...  https://www.metabolomicsworkbench.org/studydow...
9  https://www.metabolomicsworkbench.org/  ...  https://www.metabolomicsworkbench.org/studydow...

[10 rows x 5 columns]
Data inserted successfully!
sql_count_df:    count
0   4354
count:4354
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.3462059497833252 seconds.

--------- ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/gene.tsv ---------
table_name:gene
Metabolomics: gene: Read from file: df: #rows = 5631, #cols: 5

#Lines in file ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/gene.tsv: 5632
df: #rows = 5631, #cols: 5
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.gene;
qt_df: Empty DataFrame
Columns: [pk]
Index: []
---- Executed query, got data.frame: qt_df: #rows = 0, #cols: 1

df_pk (at most first 10 elements): ['ENSG00000000419', 'ENSG00000000971', 'ENSG00000001084', 'ENSG00000001497', 'ENSG00000001626', 'ENSG00000001631', 'ENSG00000002016', 'ENSG00000002330', 'ENSG00000002586', 'ENSG00000002587']
qt_pk (at most first 10 elements): []
---- Removed rows from df with matching pk
*** Entering gene to database ***
df: #rows = 5631, #cols: 5

A slice of df:
                id  ...       organism
0  ENSG00000000419  ...  NCBI:txid9606
1  ENSG00000000971  ...  NCBI:txid9606
2  ENSG00000001084  ...  NCBI:txid9606
3  ENSG00000001497  ...  NCBI:txid9606
4  ENSG00000001626  ...  NCBI:txid9606
5  ENSG00000001631  ...  NCBI:txid9606
6  ENSG00000002016  ...  NCBI:txid9606
7  ENSG00000002330  ...  NCBI:txid9606
8  ENSG00000002586  ...  NCBI:txid9606
9  ENSG00000002587  ...  NCBI:txid9606

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.41588926315307617 seconds.

--------- ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/id_namespace.tsv ---------
table_name:id_namespace
Metabolomics: id_namespace: Read from file: df: #rows = 1, #cols: 4

#Lines in file ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/id_namespace.tsv: 2
df: #rows = 1, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.id_namespace;
qt_df:                             pk
0  https://data.4dnucleome.org
---- Executed query, got data.frame: qt_df: #rows = 1, #cols: 1

df_pk (at most first 10 elements): ['https://www.metabolomicsworkbench.org/']
qt_pk (at most first 10 elements): ['https://data.4dnucleome.org']
---- Removed rows from df with matching pk
*** Entering id_namespace to database ***
df: #rows = 1, #cols: 4

A slice of df:
                                       id  ...                                        description
0  https://www.metabolomicsworkbench.org/  ...  The Metabolomics Workbench is the NIH Common F...

[1 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.11405825614929199 seconds.

--------- ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/ncbi_taxonomy.tsv ---------
table_name:ncbi_taxonomy
Metabolomics: ncbi_taxonomy: Read from file: df: #rows = 154, #cols: 5

#Lines in file ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/ncbi_taxonomy.tsv: 155
df: #rows = 154, #cols: 5
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.ncbi_taxonomy;
qt_df:                pk
0  NCBI:txid60711
1  NCBI:txid10090
2  NCBI:txid10036
3   NCBI:txid7955
4   NCBI:txid9031
5   NCBI:txid7227
6   NCBI:txid9606
---- Executed query, got data.frame: qt_df: #rows = 7, #cols: 1

df_pk (at most first 10 elements): ['NCBI:txid10009', 'NCBI:txid10029', 'NCBI:txid10036', 'NCBI:txid1006131', 'NCBI:txid10090', 'NCBI:txid10116', 'NCBI:txid10149', 'NCBI:txid1093657', 'NCBI:txid110662', 'NCBI:txid1129']
qt_pk (at most first 10 elements): ['NCBI:txid60711', 'NCBI:txid10090', 'NCBI:txid10036', 'NCBI:txid7955', 'NCBI:txid9031', 'NCBI:txid7227', 'NCBI:txid9606']
---- Removed rows from df with matching pk
*** Entering ncbi_taxonomy to database ***
df: #rows = 148, #cols: 5

A slice of df:
                  id  ...                                           synonyms
0     NCBI:txid10009  ...                                   ["red squirrel"]
1     NCBI:txid10029  ...  ["Chinese hamsters", "Cricetulus aureus", "Cri...
3   NCBI:txid1006131  ...                                                 []
5     NCBI:txid10116  ...                         ["rats", "Mus norvegicus"]
6     NCBI:txid10149  ...  ["carpincho", "Hydrochaeris hydrochaeris", "Hy...
7   NCBI:txid1093657  ...                                                 []
8    NCBI:txid110662  ...             ["Parasynechococcus africanus CC9605"]
9      NCBI:txid1129  ...                                      ["Anacystis"]
10     NCBI:txid1140  ...  ["Anacystis nidulans R2", "Synechococcus leopo...
11     NCBI:txid1148  ...  ["Aphanocapsa sp. (strain N-1)", "Aphanocapsa ...

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.11199378967285156 seconds.

--------- ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/phenotype_disease.tsv ---------
table_name:phenotype_disease
Metabolomics: phenotype_disease: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/phenotype_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.049462318420410156 seconds.

--------- ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/phenotype_gene.tsv ---------
table_name:phenotype_gene
Metabolomics: phenotype_gene: Read from file: df: #rows = 18850, #cols: 2

#Lines in file ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/phenotype_gene.tsv: 18851
df: #rows = 18850, #cols: 2
pKeys: ['phenotype', 'gene']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', phenotype, gene) as pk FROM c2m2.phenotype_gene;
qt_df: Empty DataFrame
Columns: [pk]
Index: []
---- Executed query, got data.frame: qt_df: #rows = 0, #cols: 1

df_pk (at most first 10 elements): ['HP:0000047___ENSG00000002587', 'HP:0000047___ENSG00000004487', 'HP:0000047___ENSG00000004848', 'HP:0000047___ENSG00000004961', 'HP:0000047___ENSG00000005073', 'HP:0000047___ENSG00000005339', 'HP:0000047___ENSG00000005961', 'HP:0000047___ENSG00000006451', 'HP:0000047___ENSG00000006695', 'HP:0000047___ENSG00000007372']
qt_pk (at most first 10 elements): []
---- Removed rows from df with matching pk
*** Entering phenotype_gene to database ***
df: #rows = 18850, #cols: 2

A slice of df:
      phenotype             gene
527  HP:0000047  ENSG00000002587
597  HP:0000047  ENSG00000004487
385  HP:0000047  ENSG00000004848
107  HP:0000047  ENSG00000004961
368  HP:0000047  ENSG00000005073
244  HP:0000047  ENSG00000005339
169  HP:0000047  ENSG00000005961
374  HP:0000047  ENSG00000006451
155  HP:0000047  ENSG00000006695
470  HP:0000047  ENSG00000007372
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 2.3628885746002197 seconds.

--------- ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/phenotype.tsv ---------
table_name:phenotype
Metabolomics: phenotype: Read from file: df: #rows = 67, #cols: 4

#Lines in file ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/phenotype.tsv: 68
df: #rows = 67, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.phenotype;
qt_df: Empty DataFrame
Columns: [pk]
Index: []
---- Executed query, got data.frame: qt_df: #rows = 0, #cols: 1

df_pk (at most first 10 elements): ['HP:0000047', 'HP:0000670', 'HP:0000716', 'HP:0000717', 'HP:0000726', 'HP:0000739', 'HP:0000822', 'HP:0000939', 'HP:0000964', 'HP:0001047']
qt_pk (at most first 10 elements): []
---- Removed rows from df with matching pk
*** Entering phenotype to database ***
df: #rows = 67, #cols: 4

A slice of df:
           id  ...                                           synonyms
0  HP:0000047  ...                                     ["Hypospadia"]
1  HP:0000670  ...  ["HP:0006295","HP:0006306","Caries","Cariosity...
2  HP:0000716  ...                      ["Depression","Depressivity"]
3  HP:0000717  ...                                         ["Autism"]
4  HP:0000726  ...  ["HP:0002274","HP:0007122","HP:0007150","HP:00...
5  HP:0000739  ...  ["Anxiety","Anxiousness","Excessive, persisten...
6  HP:0000822  ...  ["HP:0004949","HP:0005126","Arterial hypertens...
7  HP:0000939  ...                                     ["HP:0002774"]
8  HP:0000964  ...                            ["HP:0001481","Eczema"]
9  HP:0001047  ...  ["HP:0007533","HP:0007564","Atopic dermatitis,...

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.11760425567626953 seconds.

--------- ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/project_in_project.tsv ---------
table_name:project_in_project
Metabolomics: project_in_project: Read from file: df: #rows = 1742, #cols: 4

#Lines in file ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/project_in_project.tsv: 1743
df: #rows = 1742, #cols: 4
pKeys: ['parent_project_id_namespace', 'parent_project_local_id', 'child_project_id_namespace', 'child_project_local_id']
Going to write the count query
Wrote the count query
*** Entering project_in_project to database ***
df: #rows = 1742, #cols: 4

A slice of df:
              parent_project_id_namespace  ... child_project_local_id
0  https://www.metabolomicsworkbench.org/  ...               PR000001
1  https://www.metabolomicsworkbench.org/  ...               PR000002
2  https://www.metabolomicsworkbench.org/  ...               PR000003
3  https://www.metabolomicsworkbench.org/  ...               PR000004
4  https://www.metabolomicsworkbench.org/  ...               PR000005
5  https://www.metabolomicsworkbench.org/  ...               PR000006
6  https://www.metabolomicsworkbench.org/  ...               PR000008
7  https://www.metabolomicsworkbench.org/  ...               PR000009
8  https://www.metabolomicsworkbench.org/  ...               PR000010
9  https://www.metabolomicsworkbench.org/  ...               PR000011

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:    count
0   1742
count:1742
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.13649272918701172 seconds.

--------- ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/project.tsv ---------
table_name:project
Metabolomics: project: Read from file: df: #rows = 1743, #cols: 7

#Lines in file ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/project.tsv: 1744
df: #rows = 1743, #cols: 7
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering project to database ***
df: #rows = 1743, #cols: 7

A slice of df:
                             id_namespace  local_id  ... creation_time  abbreviation
0  https://www.metabolomicsworkbench.org/  PPR00001  ...           NaN   AllProjects
1  https://www.metabolomicsworkbench.org/  PR000001  ...           NaN           NaN
2  https://www.metabolomicsworkbench.org/  PR000002  ...           NaN           NaN
3  https://www.metabolomicsworkbench.org/  PR000003  ...           NaN           NaN
4  https://www.metabolomicsworkbench.org/  PR000004  ...           NaN           NaN
5  https://www.metabolomicsworkbench.org/  PR000005  ...           NaN           NaN
6  https://www.metabolomicsworkbench.org/  PR000006  ...           NaN           NaN
7  https://www.metabolomicsworkbench.org/  PR000008  ...           NaN           NaN
8  https://www.metabolomicsworkbench.org/  PR000009  ...           NaN           NaN
9  https://www.metabolomicsworkbench.org/  PR000010  ...           NaN           NaN

[10 rows x 5 columns]
Data inserted successfully!
sql_count_df:    count
0   1743
count:1743
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.19928431510925293 seconds.

--------- ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/protein_gene.tsv ---------
table_name:protein_gene
Metabolomics: protein_gene: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/protein_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.051978111267089844 seconds.

--------- ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/protein.tsv ---------
table_name:protein
Metabolomics: protein: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/protein.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.05181741714477539 seconds.

--------- ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/sample_prep_method.tsv ---------
table_name:sample_prep_method
Metabolomics: sample_prep_method: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/sample_prep_method.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.05347394943237305 seconds.

--------- ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/subject_disease.tsv ---------
table_name:subject_disease
Metabolomics: subject_disease: Read from file: df: #rows = 1292, #cols: 4

#Lines in file ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/subject_disease.tsv: 1293
df: #rows = 1292, #cols: 4
pKeys: ['subject_id_namespace', 'subject_local_id', 'association_type', 'disease']
Going to write the count query
Wrote the count query
*** Entering subject_disease to database ***
df: #rows = 1292, #cols: 4

A slice of df:
                     subject_id_namespace  ...     disease
0  https://www.metabolomicsworkbench.org/  ...    DOID:104
1  https://www.metabolomicsworkbench.org/  ...    DOID:162
2  https://www.metabolomicsworkbench.org/  ...   DOID:8398
3  https://www.metabolomicsworkbench.org/  ...   DOID:8398
4  https://www.metabolomicsworkbench.org/  ...    DOID:162
5  https://www.metabolomicsworkbench.org/  ...  DOID:10652
6  https://www.metabolomicsworkbench.org/  ...  DOID:10652
7  https://www.metabolomicsworkbench.org/  ...   DOID:9351
8  https://www.metabolomicsworkbench.org/  ...    DOID:557
9  https://www.metabolomicsworkbench.org/  ...    DOID:162

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:    count
0   1292
count:1292
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.11556792259216309 seconds.

--------- ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/subject_in_collection.tsv ---------
table_name:subject_in_collection
Metabolomics: subject_in_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/subject_in_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.05150413513183594 seconds.

--------- ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/subject_phenotype.tsv ---------
table_name:subject_phenotype
Metabolomics: subject_phenotype: Read from file: df: #rows = 322, #cols: 4

#Lines in file ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/subject_phenotype.tsv: 323
df: #rows = 322, #cols: 4
pKeys: ['subject_id_namespace', 'subject_local_id', 'association_type', 'phenotype']
Going to write the count query
Wrote the count query
*** Entering subject_phenotype to database ***
df: #rows = 322, #cols: 4

A slice of df:
                     subject_id_namespace  ...   phenotype
0  https://www.metabolomicsworkbench.org/  ...  HP:0002758
1  https://www.metabolomicsworkbench.org/  ...  HP:0002758
2  https://www.metabolomicsworkbench.org/  ...  HP:0001596
3  https://www.metabolomicsworkbench.org/  ...  HP:0001513
4  https://www.metabolomicsworkbench.org/  ...  HP:0004387
5  https://www.metabolomicsworkbench.org/  ...  HP:0004387
6  https://www.metabolomicsworkbench.org/  ...  HP:0000822
7  https://www.metabolomicsworkbench.org/  ...  HP:0001943
8  https://www.metabolomicsworkbench.org/  ...  HP:0003560
9  https://www.metabolomicsworkbench.org/  ...  HP:0003765

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:    count
0    322
count:322
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.11666393280029297 seconds.

--------- ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/subject_race.tsv ---------
table_name:subject_race
Metabolomics: subject_race: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/subject_race.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.04972243309020996 seconds.

--------- ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/subject_role_taxonomy.tsv ---------
table_name:subject_role_taxonomy
Metabolomics: subject_role_taxonomy: Read from file: df: #rows = 2691, #cols: 4

#Lines in file ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/subject_role_taxonomy.tsv: 2692
df: #rows = 2691, #cols: 4
pKeys: ['subject_id_namespace', 'subject_local_id', 'role_id', 'taxonomy_id']
Going to write the count query
Wrote the count query
*** Entering subject_role_taxonomy to database ***
df: #rows = 2691, #cols: 4

A slice of df:
                     subject_id_namespace  ...     taxonomy_id
0  https://www.metabolomicsworkbench.org/  ...   NCBI:txid3702
1  https://www.metabolomicsworkbench.org/  ...   NCBI:txid9606
2  https://www.metabolomicsworkbench.org/  ...  NCBI:txid10090
3  https://www.metabolomicsworkbench.org/  ...   NCBI:txid9606
4  https://www.metabolomicsworkbench.org/  ...  NCBI:txid10090
5  https://www.metabolomicsworkbench.org/  ...  NCBI:txid29760
6  https://www.metabolomicsworkbench.org/  ...  NCBI:txid39947
7  https://www.metabolomicsworkbench.org/  ...   NCBI:txid9606
8  https://www.metabolomicsworkbench.org/  ...   NCBI:txid9606
9  https://www.metabolomicsworkbench.org/  ...   NCBI:txid9606

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:    count
0   2691
count:2691
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.1531226634979248 seconds.

--------- ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/subject_substance.tsv ---------
table_name:subject_substance
Metabolomics: subject_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/subject_substance.tsv: 1
Processing C2M2 Files...:  17%|█▋        | 2/12 [00:30<02:45, 16.57s/it]>>>>>>>> Time taken to ingest the metadata from this file: 0.05292153358459473 seconds.

--------- ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/subject.tsv ---------
table_name:subject
Metabolomics: subject: Read from file: df: #rows = 2810, #cols: 10

#Lines in file ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/subject.tsv: 2811
df: #rows = 2810, #cols: 10
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering subject to database ***
df: #rows = 2810, #cols: 10

A slice of df:
                             id_namespace  ... persistent_id
0  https://www.metabolomicsworkbench.org/  ...           NaN
1  https://www.metabolomicsworkbench.org/  ...           NaN
2  https://www.metabolomicsworkbench.org/  ...           NaN
3  https://www.metabolomicsworkbench.org/  ...           NaN
4  https://www.metabolomicsworkbench.org/  ...           NaN
5  https://www.metabolomicsworkbench.org/  ...           NaN
6  https://www.metabolomicsworkbench.org/  ...           NaN
7  https://www.metabolomicsworkbench.org/  ...           NaN
8  https://www.metabolomicsworkbench.org/  ...           NaN
9  https://www.metabolomicsworkbench.org/  ...           NaN

[10 rows x 5 columns]
Data inserted successfully!
sql_count_df:    count
0   2810
count:2810
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.18434739112854004 seconds.

--------- ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/substance.tsv ---------
table_name:substance
Metabolomics: substance: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/Metabolomics/MW_submission_packet_20240605/MW_submission_packet_20240605/substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.0496981143951416 seconds.


================================== DCC short label: GlyGen =============================================
--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/collection_compound.tsv ---------
table_name:collection_compound
GlyGen: collection_compound: Read from file: df: #rows = 517848, #cols: 3

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/collection_compound.tsv: 517849
df: #rows = 517848, #cols: 3
pKeys: ['collection_id_namespace', 'collection_local_id', 'compound']
Going to write the count query
Wrote the count query
*** Entering collection_compound to database ***
df: #rows = 517848, #cols: 3

A slice of df:
        collection_id_namespace      collection_local_id  compound
0  https://www.data.glygen.org/  COL_G78482IS_GLY_000281  G78482IS
1  https://www.data.glygen.org/  COL_G56432LZ_GLY_000281  G56432LZ
2  https://www.data.glygen.org/  COL_G97770GP_GLY_000281  G97770GP
3  https://www.data.glygen.org/  COL_G60673DJ_GLY_000281  G60673DJ
4  https://www.data.glygen.org/  COL_G82363EY_GLY_000281  G82363EY
5  https://www.data.glygen.org/  COL_G19914RN_GLY_000281  G19914RN
6  https://www.data.glygen.org/  COL_G68853YV_GLY_000281  G68853YV
7  https://www.data.glygen.org/  COL_G15214PF_GLY_000281  91845490
8  https://www.data.glygen.org/  COL_G57630ZT_GLY_000281  G57630ZT
9  https://www.data.glygen.org/  COL_G97280NO_GLY_000281  G97280NO
Data inserted successfully!
sql_count_df:     count
0  517848
count:517848
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 8.11741828918457 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/collection_gene.tsv ---------
table_name:collection_gene
GlyGen: collection_gene: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/collection_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.07253742218017578 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/collection_phenotype.tsv ---------
table_name:collection_phenotype
GlyGen: collection_phenotype: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/collection_phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.06028342247009277 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/collection_substance.tsv ---------
table_name:collection_substance
GlyGen: collection_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/collection_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.06748318672180176 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/collection_in_collection.tsv ---------
table_name:collection_in_collection
GlyGen: collection_in_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/collection_in_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.0689549446105957 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/subject_disease.tsv ---------
table_name:subject_disease
GlyGen: subject_disease: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/subject_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.07418060302734375 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/protein.tsv ---------
table_name:protein
GlyGen: protein: Read from file: df: #rows = 79221, #cols: 5

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/protein.tsv: 79222
df: #rows = 79221, #cols: 5
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.protein;
qt_df: Empty DataFrame
Columns: [pk]
Index: []
---- Executed query, got data.frame: qt_df: #rows = 0, #cols: 1

df_pk (at most first 10 elements): ['A0A021WW64', 'A0A023GPK8', 'A0A023GRW3', 'A0A023IKK2', 'A0A024R1R8', 'A0A024RBG1', 'A0A024RCN7', 'A0A075B5I0', 'A0A075B5I2', 'A0A075B5I3']
qt_pk (at most first 10 elements): []
---- Removed rows from df with matching pk
*** Entering protein to database ***
df: #rows = 79221, #cols: 5

A slice of df:
           id  ...        organism
0  A0A021WW64  ...   NCBI:txid7227
1  A0A023GPK8  ...   NCBI:txid7227
2  A0A023GRW3  ...   NCBI:txid7227
3  A0A023IKK2  ...  NCBI:txid10116
4  A0A024R1R8  ...   NCBI:txid9606
5  A0A024RBG1  ...   NCBI:txid9606
6  A0A024RCN7  ...   NCBI:txid9606
7  A0A075B5I0  ...  NCBI:txid10090
8  A0A075B5I2  ...  NCBI:txid10090
9  A0A075B5I3  ...  NCBI:txid10090

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 30.518084287643433 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/assay_type.tsv ---------
table_name:assay_type
GlyGen: assay_type: Read from file: df: #rows = 1, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/assay_type.tsv: 2
df: #rows = 1, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.assay_type;
qt_df:               pk
0    OBI:0003306
1    OBI:0003104
2    OBI:0002984
3    OBI:0000185
4    OBI:0003300
5    OBI:0003312
6    OBI:0001631
7    OBI:0003301
8    OBI:0003033
9    OBI:0003094
10   OBI:0003097
11   OBI:0003110
12   OBI:0003311
13   OBI:0002631
14   OBI:0003297
15   OBI:0001920
16   OBI:0000716
17   OBI:0001177
18   OBI:0003314
19   OBI:0001848
20   OBI:0003313
21   OBI:0003299
22   OBI:0003089
23   OBI:0000623
24   OBI:0003105
25   OBI:0000470
26   OBI:0000626
27   OBI:0003305
28   OBI:0003304
29   OBI:0003303
30   OBI:0003034
31   OBI:0600047
32  CHMO:0000087
33   OBI:0003302
34   OBI:0001271
---- Executed query, got data.frame: qt_df: #rows = 35, #cols: 1

df_pk (at most first 10 elements): ['OBI:0001985']
qt_pk (at most first 10 elements): ['OBI:0003306', 'OBI:0003104', 'OBI:0002984', 'OBI:0000185', 'OBI:0003300', 'OBI:0003312', 'OBI:0001631', 'OBI:0003301', 'OBI:0003033', 'OBI:0003094']
---- Removed rows from df with matching pk
*** Entering assay_type to database ***
df: #rows = 1, #cols: 4

A slice of df:
            id  ... synonyms
0  OBI:0001985  ...       []

[1 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.1626143455505371 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/file_describes_collection.tsv ---------
table_name:file_describes_collection
GlyGen: file_describes_collection: Read from file: df: #rows = 159455, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/file_describes_collection.tsv: 159456
df: #rows = 159455, #cols: 4
pKeys: ['file_id_namespace', 'file_local_id', 'collection_id_namespace', 'collection_local_id']
Going to write the count query
Wrote the count query
*** Entering file_describes_collection to database ***
df: #rows = 159455, #cols: 4

A slice of df:
              file_id_namespace  ...          collection_local_id
0  https://www.data.glygen.org/  ...      COL_Q9ULV8-1_GLY_000001
1  https://www.data.glygen.org/  ...      COL_Q53R12-1_GLY_000001
2  https://www.data.glygen.org/  ...  COL_A0A075B6P5-1_GLY_000001
3  https://www.data.glygen.org/  ...      COL_O75153-1_GLY_000001
4  https://www.data.glygen.org/  ...      COL_Q17RY6-1_GLY_000001
5  https://www.data.glygen.org/  ...      COL_P62333-1_GLY_000001
6  https://www.data.glygen.org/  ...      COL_Q8IVF5-1_GLY_000001
7  https://www.data.glygen.org/  ...      COL_Q6PII5-1_GLY_000001
8  https://www.data.glygen.org/  ...      COL_Q2QL34-1_GLY_000001
9  https://www.data.glygen.org/  ...      COL_P28827-1_GLY_000001

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:     count
0  159455
count:159455
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 3.300797462463379 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/subject_role_taxonomy.tsv ---------
table_name:subject_role_taxonomy
GlyGen: subject_role_taxonomy: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/subject_role_taxonomy.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.06887507438659668 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/subject_substance.tsv ---------
table_name:subject_substance
GlyGen: subject_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/subject_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.058075904846191406 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/file_format.tsv ---------
table_name:file_format
GlyGen: file_format: Read from file: df: #rows = 5, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/file_format.tsv: 6
df: #rows = 5, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.file_format;
qt_df:              pk
0   format:3004
1   format:3506
2   format:3987
3   format:2572
4   format:3591
5   format:3590
6   format:3006
7   format:1930
8   format:3727
9   format:3752
10  format:3583
11  format:3981
12  format:3989
13  format:2330
14  format:3508
15  format:2331
16  format:3003
17  format:3620
18  format:2333
19  format:3475
---- Executed query, got data.frame: qt_df: #rows = 20, #cols: 1

df_pk (at most first 10 elements): ['format:2330', 'format:3468', 'format:3579', 'format:3603', 'format:3752']
qt_pk (at most first 10 elements): ['format:3004', 'format:3506', 'format:3987', 'format:2572', 'format:3591', 'format:3590', 'format:3006', 'format:1930', 'format:3727', 'format:3752']
---- Removed rows from df with matching pk
*** Entering file_format to database ***
df: #rows = 3, #cols: 4

A slice of df:
            id  ...                    synonyms
1  format:3468  ...  ["Microsoft Excel format"]
2  format:3579  ...             ["JPEG","jpeg"]
3  format:3603  ...                          []

[3 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.13167810440063477 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/subject_phenotype.tsv ---------
table_name:subject_phenotype
GlyGen: subject_phenotype: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/subject_phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.07273507118225098 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/collection_defined_by_project.tsv ---------
table_name:collection_defined_by_project
GlyGen: collection_defined_by_project: Read from file: df: #rows = 158551, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/collection_defined_by_project.tsv: 158552
df: #rows = 158551, #cols: 4
pKeys: ['collection_id_namespace', 'collection_local_id', 'project_id_namespace', 'project_local_id']
Going to write the count query
Wrote the count query
*** Entering collection_defined_by_project to database ***
df: #rows = 158551, #cols: 4

A slice of df:
        collection_id_namespace  ... project_local_id
0  https://www.data.glygen.org/  ...           Portal
1  https://www.data.glygen.org/  ...           Portal
2  https://www.data.glygen.org/  ...           Portal
3  https://www.data.glygen.org/  ...           Portal
4  https://www.data.glygen.org/  ...           Portal
5  https://www.data.glygen.org/  ...           Portal
6  https://www.data.glygen.org/  ...           Portal
7  https://www.data.glygen.org/  ...           Portal
8  https://www.data.glygen.org/  ...           Portal
9  https://www.data.glygen.org/  ...           Portal

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:     count
0  158551
count:158551
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 3.2182538509368896 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/file_describes_biosample.tsv ---------
table_name:file_describes_biosample
GlyGen: file_describes_biosample: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/file_describes_biosample.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.06359219551086426 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/file_describes_subject.tsv ---------
table_name:file_describes_subject
GlyGen: file_describes_subject: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/file_describes_subject.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.051268815994262695 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/gene.tsv ---------
table_name:gene
GlyGen: gene: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.04688739776611328 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/compound.tsv ---------
table_name:compound
GlyGen: compound: Read from file: df: #rows = 45191, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/compound.tsv: 45192
df: #rows = 45191, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.compound;
qt_df: Empty DataFrame
Columns: [pk]
Index: []
---- Executed query, got data.frame: qt_df: #rows = 0, #cols: 1

df_pk (at most first 10 elements): ['10000009', '10008718', '10011812', '10022829', '10023700', '10053824', '10062728', '10062742', '10062744', '10074840']
qt_pk (at most first 10 elements): []
---- Removed rows from df with matching pk
*** Entering compound to database ***
df: #rows = 45191, #cols: 4

A slice of df:
         id  ...                                           synonyms
0  10000009  ...  ["WURCS=2.0/2,2,1/[a2122h-1x_1-5][a2112h-1b_1-...
1  10008718  ...  ["(GlcA)1 (GlcNAc)2", "beta-D-GlcpNAc-(1->4)-b...
2  10011812  ...  ["WURCS=2.0/5,5,4/[a2122h-1x_1-5_2*NSO/3=O/3=O...
3  10022829  ...  ["WURCS=2.0/2,2,1/[a2122h-1x_1-5_2*NCC/3=O][a2...
4  10023700  ...  ["WURCS=2.0/2,2,1/[a2122A-1x_1-5][a2122h-1b_1-...
5  10053824  ...  ["WURCS=2.0/3,3,2/[a2122A-1x_1-5][a2122h-1b_1-...
6  10062728  ...  ["Panosylpanose", "WURCS=2.0/1,6,5/[a2122h-1a_...
7  10062742  ...  ["WURCS=2.0/5,7,6/[a2122h-1a_1-5_2*NCC/3=O][a1...
8  10062744  ...  ["WURCS=2.0/2,5,4/[a2122h-1b_1-5_2*NCC/3=O][a2...
9  10074840  ...  ["beta-isomaltotriose", "Glcalpha1-6Glcalpha1-...

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 10.623642444610596 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/file.tsv ---------
table_name:file
GlyGen: file: Read from file: df: #rows = 1941, #cols: 20

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/file.tsv: 1942
df: #rows = 1941, #cols: 20
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering file to database ***
df: #rows = 1941, #cols: 20

A slice of df:
                   id_namespace  ...                        persistent_id
0  https://www.data.glygen.org/  ...   https://data.glygen.org/GLY_000001
1  https://www.data.glygen.org/  ...   https://data.glygen.org/GLY_000281
2  https://www.data.glygen.org/  ...   https://data.glygen.org/GLY_000329
3  https://www.data.glygen.org/  ...  https://data.glygen.org/GLY_000038/
4  https://www.data.glygen.org/  ...   https://data.glygen.org/GLY_000040
5  https://www.data.glygen.org/  ...   https://data.glygen.org/GLY_000480
6  https://www.data.glygen.org/  ...   https://data.glygen.org/GLY_000517
7  https://www.data.glygen.org/  ...   https://data.glygen.org/GLY_000708
8  https://www.data.glygen.org/  ...   https://data.glygen.org/GLY_000004
9  https://www.data.glygen.org/  ...   https://data.glygen.org/GLY_000481

[10 rows x 5 columns]
Data inserted successfully!
sql_count_df:    count
0   1941
count:1941
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.23846435546875 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/collection.tsv ---------
table_name:collection
GlyGen: collection: Read from file: df: #rows = 158551, #cols: 8

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/collection.tsv: 158552
df: #rows = 158551, #cols: 8
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering collection to database ***
df: #rows = 158551, #cols: 8

A slice of df:
                   id_namespace  ... abbreviation
0  https://www.data.glygen.org/  ...          NaN
1  https://www.data.glygen.org/  ...          NaN
2  https://www.data.glygen.org/  ...          NaN
3  https://www.data.glygen.org/  ...          NaN
4  https://www.data.glygen.org/  ...          NaN
5  https://www.data.glygen.org/  ...          NaN
6  https://www.data.glygen.org/  ...          NaN
7  https://www.data.glygen.org/  ...          NaN
8  https://www.data.glygen.org/  ...          NaN
9  https://www.data.glygen.org/  ...          NaN

[10 rows x 5 columns]
Data inserted successfully!
sql_count_df:     count
0  158551
count:158551
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 4.586398363113403 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/subject_in_collection.tsv ---------
table_name:subject_in_collection
GlyGen: subject_in_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/subject_in_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.0890340805053711 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/biosample_in_collection.tsv ---------
table_name:biosample_in_collection
GlyGen: biosample_in_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/biosample_in_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.054608821868896484 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/subject_race.tsv ---------
table_name:subject_race
GlyGen: subject_race: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/subject_race.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.05258917808532715 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/biosample_substance.tsv ---------
table_name:biosample_substance
GlyGen: biosample_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/biosample_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.052137136459350586 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/phenotype_gene.tsv ---------
table_name:phenotype_gene
GlyGen: phenotype_gene: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/phenotype_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.052899837493896484 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/analysis_type.tsv ---------
table_name:analysis_type
GlyGen: analysis_type: Read from file: df: #rows = 1, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/analysis_type.tsv: 2
df: #rows = 1, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.analysis_type;
qt_df:             pk
0  OBI:0000726
1  OBI:0200199
2  OBI:0200085
---- Executed query, got data.frame: qt_df: #rows = 3, #cols: 1

df_pk (at most first 10 elements): ['OBI:0001985']
qt_pk (at most first 10 elements): ['OBI:0000726', 'OBI:0200199', 'OBI:0200085']
---- Removed rows from df with matching pk
*** Entering analysis_type to database ***
df: #rows = 1, #cols: 4

A slice of df:
            id  ... synonyms
0  OBI:0001985  ...       []

[1 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.11592388153076172 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/collection_protein.tsv ---------
table_name:collection_protein
GlyGen: collection_protein: Read from file: df: #rows = 111181, #cols: 3

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/collection_protein.tsv: 111182
df: #rows = 111181, #cols: 3
pKeys: ['collection_id_namespace', 'collection_local_id', 'protein']
Going to write the count query
Wrote the count query
*** Entering collection_protein to database ***
df: #rows = 111181, #cols: 3

A slice of df:
        collection_id_namespace          collection_local_id     protein
0  https://www.data.glygen.org/      COL_Q9ULV8-1_GLY_000001      Q9ULV8
1  https://www.data.glygen.org/      COL_Q53R12-1_GLY_000001      Q53R12
2  https://www.data.glygen.org/  COL_A0A075B6P5-1_GLY_000001  A0A075B6P5
3  https://www.data.glygen.org/      COL_O75153-1_GLY_000001      O75153
4  https://www.data.glygen.org/      COL_Q17RY6-1_GLY_000001      Q17RY6
5  https://www.data.glygen.org/      COL_P62333-1_GLY_000001      P62333
6  https://www.data.glygen.org/      COL_Q8IVF5-1_GLY_000001      Q8IVF5
7  https://www.data.glygen.org/      COL_Q6PII5-1_GLY_000001      Q6PII5
8  https://www.data.glygen.org/      COL_Q2QL34-1_GLY_000001      Q2QL34
9  https://www.data.glygen.org/      COL_P28827-1_GLY_000001      P28827
Data inserted successfully!
sql_count_df:     count
0  111181
count:111181
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 2.0392160415649414 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/biosample_disease.tsv ---------
table_name:biosample_disease
GlyGen: biosample_disease: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/biosample_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.06593465805053711 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/protein_gene.tsv ---------
table_name:protein_gene
GlyGen: protein_gene: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/protein_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.05350136756896973 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/subject.tsv ---------
table_name:subject
GlyGen: subject: Read from file: df: #rows = 0, #cols: 10

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/subject.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.05446028709411621 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/project_in_project.tsv ---------
table_name:project_in_project
GlyGen: project_in_project: Read from file: df: #rows = 991, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/project_in_project.tsv: 992
df: #rows = 991, #cols: 4
pKeys: ['parent_project_id_namespace', 'parent_project_local_id', 'child_project_id_namespace', 'child_project_local_id']
Going to write the count query
Wrote the count query
*** Entering project_in_project to database ***
df: #rows = 991, #cols: 4

A slice of df:
    parent_project_id_namespace  ... child_project_local_id
0  https://www.data.glygen.org/  ...                 Portal
1  https://www.data.glygen.org/  ...                  Array
2  https://www.data.glygen.org/  ...             AD10662905
3  https://www.data.glygen.org/  ...             AD10712497
4  https://www.data.glygen.org/  ...              AD4163938
5  https://www.data.glygen.org/  ...              AD3056904
6  https://www.data.glygen.org/  ...              AD1835716
7  https://www.data.glygen.org/  ...              AD1972992
8  https://www.data.glygen.org/  ...              AD8968332
9  https://www.data.glygen.org/  ...              AD8914705

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:    count
0    991
count:991
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.12800931930541992 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/biosample_from_subject.tsv ---------
table_name:biosample_from_subject
GlyGen: biosample_from_subject: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/biosample_from_subject.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.0545191764831543 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/biosample_gene.tsv ---------
table_name:biosample_gene
GlyGen: biosample_gene: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/biosample_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.05421304702758789 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/biosample.tsv ---------
table_name:biosample
GlyGen: biosample: Read from file: df: #rows = 0, #cols: 8

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/biosample.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.0690462589263916 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/data_type.tsv ---------
table_name:data_type
GlyGen: data_type: Read from file: df: #rows = 6, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/data_type.tsv: 7
df: #rows = 6, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.data_type;
qt_df:           pk
0  data:3488
1  data:2536
2  data:1383
3  data:2082
4  data:3002
5  data:2887
6  data:2968
---- Executed query, got data.frame: qt_df: #rows = 7, #cols: 1

df_pk (at most first 10 elements): ['ILX:0793824', 'ILX:0793825', 'data:1714', 'data:2764', 'data:3110', 'data:3111']
qt_pk (at most first 10 elements): ['data:3488', 'data:2536', 'data:1383', 'data:2082', 'data:3002', 'data:2887', 'data:2968']
---- Removed rows from df with matching pk
*** Entering data_type to database ***
df: #rows = 6, #cols: 4

A slice of df:
            id  ...                                           synonyms
0  ILX:0793824  ...                                                 []
1  ILX:0793825  ...                                                 []
2    data:1714  ...                                                 []
3    data:2764  ...                                                 []
4    data:3110  ...                                                 []
5    data:3111  ...  ["Gene annotation (expression)","Gene expressi...

[6 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.1475658416748047 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/dcc.tsv ---------
table_name:dcc
GlyGen: dcc: Read from file: df: #rows = 1, #cols: 9

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/dcc.tsv: 2
df: #rows = 1, #cols: 9
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.dcc;
qt_df:                                pk
0           cfde_registry_dcc:4dn
1  cfde_registry_dcc:metabolomics
---- Executed query, got data.frame: qt_df: #rows = 2, #cols: 1

df_pk (at most first 10 elements): ['cfde_registry_dcc:glygen']
qt_pk (at most first 10 elements): ['cfde_registry_dcc:4dn', 'cfde_registry_dcc:metabolomics']
---- Removed rows from df with matching pk
*** Entering dcc to database ***
df: #rows = 1, #cols: 9

A slice of df:
                         id  ...       contact_email
0  cfde_registry_dcc:glygen  ...  myglygen@gmail.com

[1 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.15024495124816895 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/id_namespace.tsv ---------
table_name:id_namespace
GlyGen: id_namespace: Read from file: df: #rows = 1, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/id_namespace.tsv: 2
df: #rows = 1, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.id_namespace;
qt_df:                                        pk
0  https://www.metabolomicsworkbench.org/
1             https://data.4dnucleome.org
---- Executed query, got data.frame: qt_df: #rows = 2, #cols: 1

df_pk (at most first 10 elements): ['https://www.data.glygen.org/']
qt_pk (at most first 10 elements): ['https://www.metabolomicsworkbench.org/', 'https://data.4dnucleome.org']
---- Removed rows from df with matching pk
*** Entering id_namespace to database ***
df: #rows = 1, #cols: 4

A slice of df:
                             id  ...         description
0  https://www.data.glygen.org/  ...  The GlyGen project

[1 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.1287076473236084 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/anatomy.tsv ---------
table_name:anatomy
GlyGen: anatomy: Read from file: df: #rows = 66, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/anatomy.tsv: 67
df: #rows = 66, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.anatomy;
qt_df:                  pk
0    UBERON:0001630
1        CL:0002620
2    UBERON:0001474
3    UBERON:0001013
4    UBERON:0001723
..              ...
151  UBERON:0000948
152  UBERON:0002385
153  UBERON:0000002
154  UBERON:0000033
155  UBERON:0000473

[156 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 156, #cols: 1

df_pk (at most first 10 elements): ['UBERON:0000002', 'UBERON:0000007', 'UBERON:0000029', 'UBERON:0000059', 'UBERON:0000086', 'UBERON:0000173', 'UBERON:0000178', 'UBERON:0000305', 'UBERON:0000317', 'UBERON:0000344']
qt_pk (at most first 10 elements): ['UBERON:0001630', 'CL:0002620', 'UBERON:0001474', 'UBERON:0001013', 'UBERON:0001723', 'UBERON:0000087', 'UBERON:0001052', 'UBERON:0007311', 'UBERON:0002037', 'UBERON:0002097']
---- Removed rows from df with matching pk
*** Entering anatomy to database ***
df: #rows = 34, #cols: 4

A slice of df:
                id  ...                                           synonyms
1   UBERON:0000007  ...  ["glandula pituitaria","Hp","pituitary","pitui...
2   UBERON:0000029  ...                                                 []
3   UBERON:0000059  ...                                                 []
4   UBERON:0000086  ...            ["zona pellucida - vitelline membrane"]
7   UBERON:0000305  ...                                         ["amnios"]
8   UBERON:0000317  ...  ["UBERON:0003347","UBERON:0004981","colon muco...
9   UBERON:0000344  ...  ["mucosa of organ","mucosa of organ part","muc...
13  UBERON:0000947  ...  ["trunk of aortic tree","trunk of systemic art...
15  UBERON:0000965  ...  ["camera-type eye lens","eye lens","lens","len...
17  UBERON:0000977  ...                            ["wall of pleural sac"]

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.16471052169799805 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/collection_disease.tsv ---------
table_name:collection_disease
GlyGen: collection_disease: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/collection_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.07181262969970703 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/collection_taxonomy.tsv ---------
table_name:collection_taxonomy
GlyGen: collection_taxonomy: Read from file: df: #rows = 112366, #cols: 3

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/collection_taxonomy.tsv: 112367
df: #rows = 112366, #cols: 3
pKeys: ['collection_id_namespace', 'collection_local_id', 'taxon']
Going to write the count query
Wrote the count query
*** Entering collection_taxonomy to database ***
df: #rows = 112366, #cols: 3

A slice of df:
        collection_id_namespace          collection_local_id          taxon
0  https://www.data.glygen.org/      COL_Q9ULV8-1_GLY_000001  NCBI:txid9606
1  https://www.data.glygen.org/      COL_Q53R12-1_GLY_000001  NCBI:txid9606
2  https://www.data.glygen.org/  COL_A0A075B6P5-1_GLY_000001  NCBI:txid9606
3  https://www.data.glygen.org/      COL_O75153-1_GLY_000001  NCBI:txid9606
4  https://www.data.glygen.org/      COL_Q17RY6-1_GLY_000001  NCBI:txid9606
5  https://www.data.glygen.org/      COL_P62333-1_GLY_000001  NCBI:txid9606
6  https://www.data.glygen.org/      COL_Q8IVF5-1_GLY_000001  NCBI:txid9606
7  https://www.data.glygen.org/      COL_Q6PII5-1_GLY_000001  NCBI:txid9606
8  https://www.data.glygen.org/      COL_Q2QL34-1_GLY_000001  NCBI:txid9606
9  https://www.data.glygen.org/      COL_P28827-1_GLY_000001  NCBI:txid9606
Data inserted successfully!
sql_count_df:     count
0  112366
count:112366
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 2.136028528213501 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/sample_prep_method.tsv ---------
table_name:sample_prep_method
GlyGen: sample_prep_method: Read from file: df: #rows = 0, #cols: 4

Processing C2M2 Files...:  25%|██▌       | 3/12 [01:41<06:09, 41.03s/it]#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/sample_prep_method.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.06051182746887207 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/phenotype.tsv ---------
table_name:phenotype
GlyGen: phenotype: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.0643160343170166 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/substance.tsv ---------
table_name:substance
GlyGen: substance: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.05691838264465332 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/ncbi_taxonomy.tsv ---------
table_name:ncbi_taxonomy
GlyGen: ncbi_taxonomy: Read from file: df: #rows = 9, #cols: 5

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/ncbi_taxonomy.tsv: 10
df: #rows = 9, #cols: 5
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.ncbi_taxonomy;
qt_df:                   pk
0     NCBI:txid10149
1    NCBI:txid543564
2      NCBI:txid5823
3     NCBI:txid99755
4       NCBI:txid287
..               ...
150   NCBI:txid64518
151    NCBI:txid4555
152   NCBI:txid84112
153    NCBI:txid4932
154    NCBI:txid3847

[155 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 155, #cols: 1

df_pk (at most first 10 elements): ['NCBI:txid10090', 'NCBI:txid10116', 'NCBI:txid11108', 'NCBI:txid11116', 'NCBI:txid2697049', 'NCBI:txid63746', 'NCBI:txid694009', 'NCBI:txid7227', 'NCBI:txid9606']
qt_pk (at most first 10 elements): ['NCBI:txid10149', 'NCBI:txid543564', 'NCBI:txid5823', 'NCBI:txid99755', 'NCBI:txid287', 'NCBI:txid75728', 'NCBI:txid252141', 'NCBI:txid382', 'NCBI:txid59463', 'NCBI:txid39293']
---- Removed rows from df with matching pk
*** Entering ncbi_taxonomy to database ***
df: #rows = 5, #cols: 5

A slice of df:
                 id  ...                                           synonyms
2    NCBI:txid11108  ...           ["HCV-H", "Hepatitis C virus isolate H"]
3    NCBI:txid11116  ...                                                 []
4  NCBI:txid2697049  ...  ["2019-nCoV", "COVID-19 virus", "HCoV-19", "Hu...
5    NCBI:txid63746  ...                   ["Hepatitis C virus strain H77"]
6   NCBI:txid694009  ...  ["HCoV-SARS", "Human coronavirus (strain SARS)...

[5 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.11120390892028809 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/project.tsv ---------
table_name:project
GlyGen: project: Read from file: df: #rows = 992, #cols: 7

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/project.tsv: 993
df: #rows = 992, #cols: 7
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering project to database ***
df: #rows = 992, #cols: 7

A slice of df:
                   id_namespace  ... abbreviation
0  https://www.data.glygen.org/  ...       GlyGen
1  https://www.data.glygen.org/  ...       GlyGen
2  https://www.data.glygen.org/  ...      GGArray
3  https://www.data.glygen.org/  ...   AD10662905
4  https://www.data.glygen.org/  ...   AD10712497
5  https://www.data.glygen.org/  ...    AD4163938
6  https://www.data.glygen.org/  ...    AD3056904
7  https://www.data.glygen.org/  ...    AD1835716
8  https://www.data.glygen.org/  ...    AD1972992
9  https://www.data.glygen.org/  ...    AD8968332

[10 rows x 5 columns]
Data inserted successfully!
sql_count_df:    count
0    992
count:992
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.11993145942687988 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/disease.tsv ---------
table_name:disease
GlyGen: disease: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.05463266372680664 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/phenotype_disease.tsv ---------
table_name:phenotype_disease
GlyGen: phenotype_disease: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/phenotype_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.05286550521850586 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/file_in_collection.tsv ---------
table_name:file_in_collection
GlyGen: file_in_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/file_in_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.055119991302490234 seconds.

--------- ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/collection_anatomy.tsv ---------
table_name:collection_anatomy
GlyGen: collection_anatomy: Read from file: df: #rows = 3520, #cols: 3

#Lines in file ingest/c2m2s/GlyGen/glygen_may_autogenerated_C2M2_term_tables/autogenerated_C2M2_term_tables/data/collection_anatomy.tsv: 3521
df: #rows = 3520, #cols: 3
pKeys: ['collection_id_namespace', 'collection_local_id', 'anatomy']
Going to write the count query
Wrote the count query
*** Entering collection_anatomy to database ***
df: #rows = 3520, #cols: 3

A slice of df:
        collection_id_namespace      collection_local_id         anatomy
0  https://www.data.glygen.org/  COL_Q5UIP0-1_GLY_000329  UBERON:0001911
1  https://www.data.glygen.org/  COL_P04004-1_GLY_000329  UBERON:0001977
2  https://www.data.glygen.org/  COL_P04004-1_GLY_000329  UBERON:0001911
3  https://www.data.glygen.org/  COL_P04004-1_GLY_000329  UBERON:0001913
4  https://www.data.glygen.org/  COL_P04004-1_GLY_000329  UBERON:0001969
5  https://www.data.glygen.org/  COL_P05155-1_GLY_000329  UBERON:0001977
6  https://www.data.glygen.org/  COL_P05155-1_GLY_000329  UBERON:0001911
7  https://www.data.glygen.org/  COL_P05155-1_GLY_000329  UBERON:0001088
8  https://www.data.glygen.org/  COL_P05155-1_GLY_000329  UBERON:0001913
9  https://www.data.glygen.org/  COL_Q7Z7D3-1_GLY_000329  UBERON:0001911
Data inserted successfully!
sql_count_df:    count
0   3520
count:3520
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.1562058925628662 seconds.


================================== DCC short label: HuBMAP =============================================
--------- ingest/c2m2s/HuBMAP/submission/submission/dcc.tsv ---------
table_name:dcc
HuBMAP: dcc: Read from file: df: #rows = 1, #cols: 9

#Lines in file ingest/c2m2s/HuBMAP/submission/submission/dcc.tsv: 2
df: #rows = 1, #cols: 9
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.dcc;
qt_df:                                pk
0        cfde_registry_dcc:glygen
1           cfde_registry_dcc:4dn
2  cfde_registry_dcc:metabolomics
---- Executed query, got data.frame: qt_df: #rows = 3, #cols: 1

df_pk (at most first 10 elements): ['cfde_registry_dcc:hubmap']
qt_pk (at most first 10 elements): ['cfde_registry_dcc:glygen', 'cfde_registry_dcc:4dn', 'cfde_registry_dcc:metabolomics']
---- Removed rows from df with matching pk
*** Entering dcc to database ***
df: #rows = 1, #cols: 9

A slice of df:
                         id  ...                          contact_email
0  cfde_registry_dcc:hubmap  ...  cfde-submissions@hubmapconsortium.org

[1 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.12984180450439453 seconds.

--------- ingest/c2m2s/HuBMAP/submission/submission/collection.tsv ---------
table_name:collection
HuBMAP: collection: Read from file: df: #rows = 1327, #cols: 8

#Lines in file ingest/c2m2s/HuBMAP/submission/submission/collection.tsv: 1328
df: #rows = 1327, #cols: 8
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering collection to database ***
df: #rows = 1327, #cols: 8

A slice of df:
                     id_namespace  ... abbreviation
0  tag:hubmapconsortium.org,2023:  ...          NaN
1  tag:hubmapconsortium.org,2023:  ...          NaN
2  tag:hubmapconsortium.org,2023:  ...          NaN
3  tag:hubmapconsortium.org,2023:  ...          NaN
4  tag:hubmapconsortium.org,2023:  ...          NaN
5  tag:hubmapconsortium.org,2023:  ...          NaN
6  tag:hubmapconsortium.org,2023:  ...          NaN
7  tag:hubmapconsortium.org,2023:  ...          NaN
8  tag:hubmapconsortium.org,2023:  ...          NaN
9  tag:hubmapconsortium.org,2023:  ...          NaN

[10 rows x 5 columns]
Data inserted successfully!
sql_count_df:    count
0   1327
count:1327
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.13384461402893066 seconds.

--------- ingest/c2m2s/HuBMAP/submission/submission/subject.tsv ---------
table_name:subject
HuBMAP: subject: Read from file: df: #rows = 206, #cols: 10

#Lines in file ingest/c2m2s/HuBMAP/submission/submission/subject.tsv: 207
df: #rows = 206, #cols: 10
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering subject to database ***
df: #rows = 206, #cols: 10

A slice of df:
                     id_namespace  ... persistent_id
0  tag:hubmapconsortium.org,2023:  ...           NaN
1  tag:hubmapconsortium.org,2023:  ...           NaN
2  tag:hubmapconsortium.org,2023:  ...           NaN
3  tag:hubmapconsortium.org,2023:  ...           NaN
4  tag:hubmapconsortium.org,2023:  ...           NaN
5  tag:hubmapconsortium.org,2023:  ...           NaN
6  tag:hubmapconsortium.org,2023:  ...           NaN
7  tag:hubmapconsortium.org,2023:  ...           NaN
8  tag:hubmapconsortium.org,2023:  ...           NaN
9  tag:hubmapconsortium.org,2023:  ...           NaN

[10 rows x 5 columns]
Data inserted successfully!
sql_count_df:    count
0    206
count:206
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.11780595779418945 seconds.

--------- ingest/c2m2s/HuBMAP/submission/submission/file_format.tsv ---------
table_name:file_format
HuBMAP: file_format: Read from file: df: #rows = 14, #cols: 4

#Lines in file ingest/c2m2s/HuBMAP/submission/submission/file_format.tsv: 15
df: #rows = 14, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.file_format;
qt_df:              pk
0   format:3603
1   format:3004
2   format:3506
3   format:3579
4   format:3987
5   format:2572
6   format:3591
7   format:3590
8   format:3006
9   format:1930
10  format:3468
11  format:3727
12  format:3752
13  format:3583
14  format:3981
15  format:3989
16  format:2330
17  format:3508
18  format:2331
19  format:3003
20  format:3620
21  format:2333
22  format:3475
---- Executed query, got data.frame: qt_df: #rows = 23, #cols: 1

df_pk (at most first 10 elements): ['format:2330', 'format:2332', 'format:3464', 'format:3475', 'format:3508', 'format:3579', 'format:3591', 'format:3620', 'format:3727', 'format:3752']
qt_pk (at most first 10 elements): ['format:3603', 'format:3004', 'format:3506', 'format:3579', 'format:3987', 'format:2572', 'format:3591', 'format:3590', 'format:3006', 'format:1930']
---- Removed rows from df with matching pk
*** Entering file_format to database ***
df: #rows = 4, #cols: 4

A slice of df:
             id  ...                        synonyms
1   format:2332  ...  ["eXtensible Markup Language"]
2   format:3464  ...  ["JavaScript Object Notation"]
10  format:3839  ...                              []
11  format:3873  ...                              []

[4 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.10944867134094238 seconds.

--------- ingest/c2m2s/HuBMAP/submission/submission/subject_substance.tsv ---------
table_name:subject_substance
HuBMAP: subject_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/HuBMAP/submission/submission/subject_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.05318188667297363 seconds.

--------- ingest/c2m2s/HuBMAP/submission/submission/biosample_in_collection.tsv ---------
table_name:biosample_in_collection
HuBMAP: biosample_in_collection: Read from file: df: #rows = 1327, #cols: 4

#Lines in file ingest/c2m2s/HuBMAP/submission/submission/biosample_in_collection.tsv: 1328
df: #rows = 1327, #cols: 4
pKeys: ['biosample_id_namespace', 'biosample_local_id', 'collection_id_namespace', 'collection_local_id']
Going to write the count query
Wrote the count query
*** Entering biosample_in_collection to database ***
df: #rows = 1327, #cols: 4

A slice of df:
           biosample_id_namespace  ... collection_local_id
0  tag:hubmapconsortium.org,2023:  ...     HBM426.HLCN.236
1  tag:hubmapconsortium.org,2023:  ...     HBM679.NNNK.283
2  tag:hubmapconsortium.org,2023:  ...     HBM987.XGTH.368
3  tag:hubmapconsortium.org,2023:  ...     HBM982.TTRB.258
4  tag:hubmapconsortium.org,2023:  ...     HBM569.NBHZ.832
5  tag:hubmapconsortium.org,2023:  ...     HBM297.MZZX.824
6  tag:hubmapconsortium.org,2023:  ...     HBM784.HQQK.452
7  tag:hubmapconsortium.org,2023:  ...     HBM467.RVKV.883
8  tag:hubmapconsortium.org,2023:  ...     HBM674.JTXW.676
9  tag:hubmapconsortium.org,2023:  ...     HBM439.WKBL.739

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:    count
0   1327
count:1327
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.13469767570495605 seconds.

--------- ingest/c2m2s/HuBMAP/submission/submission/collection_disease.tsv ---------
table_name:collection_disease
HuBMAP: collection_disease: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/HuBMAP/submission/submission/collection_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.04950666427612305 seconds.

--------- ingest/c2m2s/HuBMAP/submission/submission/file_describes_collection.tsv ---------
table_name:file_describes_collection
HuBMAP: file_describes_collection: Read from file: df: #rows = 1625, #cols: 4

#Lines in file ingest/c2m2s/HuBMAP/submission/submission/file_describes_collection.tsv: 1626
df: #rows = 1625, #cols: 4
pKeys: ['file_id_namespace', 'file_local_id', 'collection_id_namespace', 'collection_local_id']
Going to write the count query
Wrote the count query
*** Entering file_describes_collection to database ***
df: #rows = 1625, #cols: 4

A slice of df:
                file_id_namespace  ... collection_local_id
0  tag:hubmapconsortium.org,2023:  ...     HBM426.HLCN.236
1  tag:hubmapconsortium.org,2023:  ...     HBM679.NNNK.283
2  tag:hubmapconsortium.org,2023:  ...     HBM987.XGTH.368
3  tag:hubmapconsortium.org,2023:  ...     HBM982.TTRB.258
4  tag:hubmapconsortium.org,2023:  ...     HBM569.NBHZ.832
5  tag:hubmapconsortium.org,2023:  ...     HBM297.MZZX.824
6  tag:hubmapconsortium.org,2023:  ...     HBM784.HQQK.452
7  tag:hubmapconsortium.org,2023:  ...     HBM467.RVKV.883
8  tag:hubmapconsortium.org,2023:  ...     HBM674.JTXW.676
9  tag:hubmapconsortium.org,2023:  ...     HBM439.WKBL.739

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:    count
0   1625
count:1625
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.14346623420715332 seconds.

--------- ingest/c2m2s/HuBMAP/submission/submission/ncbi_taxonomy.tsv ---------
table_name:ncbi_taxonomy
HuBMAP: ncbi_taxonomy: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/HuBMAP/submission/submission/ncbi_taxonomy.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.05896401405334473 seconds.

--------- ingest/c2m2s/HuBMAP/submission/submission/collection_substance.tsv ---------
table_name:collection_substance
HuBMAP: collection_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/HuBMAP/submission/submission/collection_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.05260658264160156 seconds.

--------- ingest/c2m2s/HuBMAP/submission/submission/subject_in_collection.tsv ---------
table_name:subject_in_collection
HuBMAP: subject_in_collection: Read from file: df: #rows = 1327, #cols: 4

#Lines in file ingest/c2m2s/HuBMAP/submission/submission/subject_in_collection.tsv: 1328
df: #rows = 1327, #cols: 4
pKeys: ['subject_id_namespace', 'subject_local_id', 'collection_id_namespace', 'collection_local_id']
Going to write the count query
Wrote the count query
*** Entering subject_in_collection to database ***
df: #rows = 1327, #cols: 4

A slice of df:
             subject_id_namespace  ... collection_local_id
0  tag:hubmapconsortium.org,2023:  ...     HBM426.HLCN.236
1  tag:hubmapconsortium.org,2023:  ...     HBM679.NNNK.283
2  tag:hubmapconsortium.org,2023:  ...     HBM987.XGTH.368
3  tag:hubmapconsortium.org,2023:  ...     HBM982.TTRB.258
4  tag:hubmapconsortium.org,2023:  ...     HBM569.NBHZ.832
5  tag:hubmapconsortium.org,2023:  ...     HBM297.MZZX.824
6  tag:hubmapconsortium.org,2023:  ...     HBM784.HQQK.452
7  tag:hubmapconsortium.org,2023:  ...     HBM467.RVKV.883
8  tag:hubmapconsortium.org,2023:  ...     HBM674.JTXW.676
9  tag:hubmapconsortium.org,2023:  ...     HBM439.WKBL.739

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:    count
0   1327
count:1327
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.13425493240356445 seconds.

--------- ingest/c2m2s/HuBMAP/submission/submission/subject_race.tsv ---------
table_name:subject_race
HuBMAP: subject_race: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/HuBMAP/submission/submission/subject_race.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.05703425407409668 seconds.

--------- ingest/c2m2s/HuBMAP/submission/submission/collection_compound.tsv ---------
table_name:collection_compound
HuBMAP: collection_compound: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/HuBMAP/submission/submission/collection_compound.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.055988311767578125 seconds.

--------- ingest/c2m2s/HuBMAP/submission/submission/biosample_from_subject.tsv ---------
table_name:biosample_from_subject
HuBMAP: biosample_from_subject: Read from file: df: #rows = 644, #cols: 5

#Lines in file ingest/c2m2s/HuBMAP/submission/submission/biosample_from_subject.tsv: 645
df: #rows = 644, #cols: 5
pKeys: ['biosample_id_namespace', 'biosample_local_id', 'subject_id_namespace', 'subject_local_id']
Going to write the count query
Wrote the count query
*** Entering biosample_from_subject to database ***
df: #rows = 644, #cols: 5

A slice of df:
           biosample_id_namespace  ... age_at_sampling
0  tag:hubmapconsortium.org,2023:  ...             NaN
1  tag:hubmapconsortium.org,2023:  ...             NaN
2  tag:hubmapconsortium.org,2023:  ...             NaN
3  tag:hubmapconsortium.org,2023:  ...             NaN
4  tag:hubmapconsortium.org,2023:  ...             NaN
5  tag:hubmapconsortium.org,2023:  ...             NaN
6  tag:hubmapconsortium.org,2023:  ...             NaN
7  tag:hubmapconsortium.org,2023:  ...             NaN
8  tag:hubmapconsortium.org,2023:  ...             NaN
9  tag:hubmapconsortium.org,2023:  ...             NaN

[10 rows x 5 columns]
Data inserted successfully!
sql_count_df:    count
0    644
count:644
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.12026429176330566 seconds.

--------- ingest/c2m2s/HuBMAP/submission/submission/substance.tsv ---------
table_name:substance
HuBMAP: substance: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/HuBMAP/submission/submission/substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.05597686767578125 seconds.

--------- ingest/c2m2s/HuBMAP/submission/submission/file_describes_subject.tsv ---------
table_name:file_describes_subject
HuBMAP: file_describes_subject: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/HuBMAP/submission/submission/file_describes_subject.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.05520486831665039 seconds.

--------- ingest/c2m2s/HuBMAP/submission/submission/collection_in_collection.tsv ---------
table_name:collection_in_collection
HuBMAP: collection_in_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/HuBMAP/submission/submission/collection_in_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.054088592529296875 seconds.

--------- ingest/c2m2s/HuBMAP/submission/submission/id_namespace.tsv ---------
table_name:id_namespace
HuBMAP: id_namespace: Read from file: df: #rows = 1, #cols: 4

#Lines in file ingest/c2m2s/HuBMAP/submission/submission/id_namespace.tsv: 2
df: #rows = 1, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.id_namespace;
qt_df:                                        pk
0  https://www.metabolomicsworkbench.org/
1            https://www.data.glygen.org/
2             https://data.4dnucleome.org
---- Executed query, got data.frame: qt_df: #rows = 3, #cols: 1

df_pk (at most first 10 elements): ['tag:hubmapconsortium.org,2023:']
qt_pk (at most first 10 elements): ['https://www.metabolomicsworkbench.org/', 'https://www.data.glygen.org/', 'https://data.4dnucleome.org']
---- Removed rows from df with matching pk
*** Entering id_namespace to database ***
df: #rows = 1, #cols: 4

A slice of df:
                               id  ...                       description
0  tag:hubmapconsortium.org,2023:  ...  Human BioMolecular Atlas Program

[1 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.10971283912658691 seconds.

--------- ingest/c2m2s/HuBMAP/submission/submission/biosample_substance.tsv ---------
table_name:biosample_substance
HuBMAP: biosample_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/HuBMAP/submission/submission/biosample_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.05437135696411133 seconds.

--------- ingest/c2m2s/HuBMAP/submission/submission/project.tsv ---------
table_name:project
HuBMAP: project: Read from file: df: #rows = 13, #cols: 7

#Lines in file ingest/c2m2s/HuBMAP/submission/submission/project.tsv: 14
df: #rows = 13, #cols: 7
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering project to database ***
df: #rows = 13, #cols: 7

A slice of df:
                     id_namespace  ...                            abbreviation
0  tag:hubmapconsortium.org,2023:  ...                                  HuBMAP
1  tag:hubmapconsortium.org,2023:  ...  University_of_California_San_Diego_TMC
2  tag:hubmapconsortium.org,2023:  ...                            Stanford_TMC
3  tag:hubmapconsortium.org,2023:  ...               University_of_Florida_TMC
4  tag:hubmapconsortium.org,2023:  ...                          Vanderbilt_TMC
5  tag:hubmapconsortium.org,2023:  ...                            Stanford_RTI
6  tag:hubmapconsortium.org,2023:  ...  California_Institute_of_Technology_TMC
7  tag:hubmapconsortium.org,2023:  ...                    EXT_Human_Cell_Atlas
8  tag:hubmapconsortium.org,2023:  ...                    General_Electric_RTI
9  tag:hubmapconsortium.org,2023:  ...                              Purdue_TTD

[10 rows x 5 columns]
Data inserted successfully!
sql_count_df:    count
0     13
count:13
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.10903739929199219 seconds.

--------- ingest/c2m2s/HuBMAP/submission/submission/phenotype_gene.tsv ---------
table_name:phenotype_gene
HuBMAP: phenotype_gene: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/HuBMAP/submission/submission/phenotype_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.05414700508117676 seconds.

--------- ingest/c2m2s/HuBMAP/submission/submission/file_in_collection.tsv ---------
table_name:file_in_collection
HuBMAP: file_in_collection: Read from file: df: #rows = 9465531, #cols: 4

#Lines in file ingest/c2m2s/HuBMAP/submission/submission/file_in_collection.tsv: 9465532
df: #rows = 9465531, #cols: 4
pKeys: ['file_id_namespace', 'file_local_id', 'collection_id_namespace', 'collection_local_id']
Going to write the count query
Wrote the count query
*** Entering file_in_collection to database ***
df: #rows = 9465531, #cols: 4

A slice of df:
                file_id_namespace  ... collection_local_id
0  tag:hubmapconsortium.org,2023:  ...     HBM426.HLCN.236
1  tag:hubmapconsortium.org,2023:  ...     HBM426.HLCN.236
2  tag:hubmapconsortium.org,2023:  ...     HBM426.HLCN.236
3  tag:hubmapconsortium.org,2023:  ...     HBM426.HLCN.236
4  tag:hubmapconsortium.org,2023:  ...     HBM679.NNNK.283
5  tag:hubmapconsortium.org,2023:  ...     HBM679.NNNK.283
6  tag:hubmapconsortium.org,2023:  ...     HBM679.NNNK.283
7  tag:hubmapconsortium.org,2023:  ...     HBM679.NNNK.283
8  tag:hubmapconsortium.org,2023:  ...     HBM679.NNNK.283
9  tag:hubmapconsortium.org,2023:  ...     HBM679.NNNK.283

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:      count
0  9465531
count:9465531
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 393.6633744239807 seconds.

--------- ingest/c2m2s/HuBMAP/submission/submission/file_describes_biosample.tsv ---------
table_name:file_describes_biosample
HuBMAP: file_describes_biosample: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/HuBMAP/submission/submission/file_describes_biosample.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.28920936584472656 seconds.

--------- ingest/c2m2s/HuBMAP/submission/submission/file.tsv ---------
table_name:file
HuBMAP: file: Read from file: df: #rows = 9465531, #cols: 20

#Lines in file ingest/c2m2s/HuBMAP/submission/submission/file.tsv: 9465532
df: #rows = 9465531, #cols: 20
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering file to database ***
df: #rows = 9465531, #cols: 20

A slice of df:
                     id_namespace  ...                                      persistent_id
0  tag:hubmapconsortium.org,2023:  ...  http://hubmap-drs.hubmapconsortium.org/v1/obje...
1  tag:hubmapconsortium.org,2023:  ...  http://hubmap-drs.hubmapconsortium.org/v1/obje...
2  tag:hubmapconsortium.org,2023:  ...  http://hubmap-drs.hubmapconsortium.org/v1/obje...
3  tag:hubmapconsortium.org,2023:  ...  http://hubmap-drs.hubmapconsortium.org/v1/obje...
4  tag:hubmapconsortium.org,2023:  ...  http://hubmap-drs.hubmapconsortium.org/v1/obje...
5  tag:hubmapconsortium.org,2023:  ...  http://hubmap-drs.hubmapconsortium.org/v1/obje...
6  tag:hubmapconsortium.org,2023:  ...  http://hubmap-drs.hubmapconsortium.org/v1/obje...
7  tag:hubmapconsortium.org,2023:  ...  http://hubmap-drs.hubmapconsortium.org/v1/obje...
8  tag:hubmapconsortium.org,2023:  ...  http://hubmap-drs.hubmapconsortium.org/v1/obje...
9  tag:hubmapconsortium.org,2023:  ...  http://hubmap-drs.hubmapconsortium.org/v1/obje...

[10 rows x 5 columns]
Data inserted successfully!
sql_count_df:      count
0  9465531
count:9465531
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 850.1356012821198 seconds.

--------- ingest/c2m2s/HuBMAP/submission/submission/collection_anatomy.tsv ---------
table_name:collection_anatomy
HuBMAP: collection_anatomy: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/HuBMAP/submission/submission/collection_anatomy.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 2.1189045906066895 seconds.

--------- ingest/c2m2s/HuBMAP/submission/submission/phenotype.tsv ---------
table_name:phenotype
HuBMAP: phenotype: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/HuBMAP/submission/submission/phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9507126808166504 seconds.

--------- ingest/c2m2s/HuBMAP/submission/submission/protein_gene.tsv ---------
table_name:protein_gene
HuBMAP: protein_gene: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/HuBMAP/submission/submission/protein_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8869912624359131 seconds.

--------- ingest/c2m2s/HuBMAP/submission/submission/data_type.tsv ---------
table_name:data_type
HuBMAP: data_type: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/HuBMAP/submission/submission/data_type.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8749289512634277 seconds.

--------- ingest/c2m2s/HuBMAP/submission/submission/anatomy.tsv ---------
table_name:anatomy
HuBMAP: anatomy: Read from file: df: #rows = 16, #cols: 4

#Lines in file ingest/c2m2s/HuBMAP/submission/submission/anatomy.tsv: 17
df: #rows = 16, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.anatomy;
qt_df:                  pk
0    UBERON:0001630
1        CL:0002620
2    UBERON:0001914
3    UBERON:0001474
4    UBERON:0001013
..              ...
185  UBERON:0002066
186  UBERON:0002385
187  UBERON:0000002
188  UBERON:0000033
189  UBERON:0000473

[190 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 190, #cols: 1

df_pk (at most first 10 elements): ['UBERON:0000029', 'UBERON:0000059', 'UBERON:0000178', 'UBERON:0000948', 'UBERON:0000995', 'UBERON:0001255', 'UBERON:0001264', 'UBERON:0001465', 'UBERON:0002097', 'UBERON:0002106']
qt_pk (at most first 10 elements): ['UBERON:0001630', 'CL:0002620', 'UBERON:0001914', 'UBERON:0001474', 'UBERON:0001013', 'UBERON:0001723', 'UBERON:0000087', 'UBERON:0001199', 'UBERON:0001052', 'UBERON:0007311']
---- Removed rows from df with matching pk
*** Entering anatomy to database ***
df: #rows = 5, #cols: 4

A slice of df:
                id  ...                       synonyms
5   UBERON:0001255  ...  ["bladder","vesica urinaria"]
7   UBERON:0001465  ...                ["knee region"]
12  UBERON:0002167  ...                             []
14  UBERON:0004538  ...                             []
15  UBERON:0004539  ...                             []

[5 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9411802291870117 seconds.

--------- ingest/c2m2s/HuBMAP/submission/submission/biosample_disease.tsv ---------
table_name:biosample_disease
HuBMAP: biosample_disease: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/HuBMAP/submission/submission/biosample_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.7706215381622314 seconds.

--------- ingest/c2m2s/HuBMAP/submission/submission/sample_prep_method.tsv ---------
table_name:sample_prep_method
HuBMAP: sample_prep_method: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/HuBMAP/submission/submission/sample_prep_method.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 1.0387845039367676 seconds.

--------- ingest/c2m2s/HuBMAP/submission/submission/biosample.tsv ---------
table_name:biosample
HuBMAP: biosample: Read from file: df: #rows = 644, #cols: 8

#Lines in file ingest/c2m2s/HuBMAP/submission/submission/biosample.tsv: 645
df: #rows = 644, #cols: 8
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering biosample to database ***
df: #rows = 644, #cols: 8

A slice of df:
                     id_namespace  ...                                      persistent_id
0  tag:hubmapconsortium.org,2023:  ...  https://portal.hubmapconsortium.org/browse/sam...
1  tag:hubmapconsortium.org,2023:  ...  https://portal.hubmapconsortium.org/browse/sam...
2  tag:hubmapconsortium.org,2023:  ...  https://portal.hubmapconsortium.org/browse/sam...
3  tag:hubmapconsortium.org,2023:  ...  https://portal.hubmapconsortium.org/browse/sam...
4  tag:hubmapconsortium.org,2023:  ...  https://portal.hubmapconsortium.org/browse/sam...
5  tag:hubmapconsortium.org,2023:  ...  https://portal.hubmapconsortium.org/browse/sam...
6  tag:hubmapconsortium.org,2023:  ...  https://portal.hubmapconsortium.org/browse/sam...
7  tag:hubmapconsortium.org,2023:  ...  https://portal.hubmapconsortium.org/browse/sam...
8  tag:hubmapconsortium.org,2023:  ...  https://portal.hubmapconsortium.org/browse/sam...
9  tag:hubmapconsortium.org,2023:  ...  https://portal.hubmapconsortium.org/browse/sam...

[10 rows x 5 columns]
Data inserted successfully!
sql_count_df:    count
0    644
count:644
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.0263175964355469 seconds.

--------- ingest/c2m2s/HuBMAP/submission/submission/collection_phenotype.tsv ---------
table_name:collection_phenotype
HuBMAP: collection_phenotype: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/HuBMAP/submission/submission/collection_phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.949782133102417 seconds.

--------- ingest/c2m2s/HuBMAP/submission/submission/disease.tsv ---------
table_name:disease
HuBMAP: disease: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/HuBMAP/submission/submission/disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8282637596130371 seconds.

--------- ingest/c2m2s/HuBMAP/submission/submission/compound.tsv ---------
table_name:compound
HuBMAP: compound: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/HuBMAP/submission/submission/compound.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8111484050750732 seconds.

--------- ingest/c2m2s/HuBMAP/submission/submission/collection_taxonomy.tsv ---------
table_name:collection_taxonomy
HuBMAP: collection_taxonomy: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/HuBMAP/submission/submission/collection_taxonomy.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9327037334442139 seconds.

--------- ingest/c2m2s/HuBMAP/submission/submission/subject_disease.tsv ---------
table_name:subject_disease
HuBMAP: subject_disease: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/HuBMAP/submission/submission/subject_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8580954074859619 seconds.

--------- ingest/c2m2s/HuBMAP/submission/submission/assay_type.tsv ---------
table_name:assay_type
HuBMAP: assay_type: Read from file: df: #rows = 21, #cols: 4

#Lines in file ingest/c2m2s/HuBMAP/submission/submission/assay_type.tsv: 22
df: #rows = 21, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.assay_type;
qt_df:               pk
0    OBI:0003306
1    OBI:0003104
2    OBI:0002984
3    OBI:0000185
4    OBI:0003300
5    OBI:0003312
6    OBI:0001631
7    OBI:0003301
8    OBI:0003033
9    OBI:0003094
10   OBI:0003097
11   OBI:0003110
12   OBI:0003311
13   OBI:0002631
14   OBI:0003297
15   OBI:0001920
16   OBI:0000716
17   OBI:0001177
18   OBI:0003314
19   OBI:0001848
20   OBI:0003313
21   OBI:0001985
22   OBI:0003299
23   OBI:0003089
24   OBI:0000623
25   OBI:0003105
26   OBI:0000470
27   OBI:0000626
28   OBI:0003305
29   OBI:0003304
30   OBI:0003303
31   OBI:0003034
32   OBI:0600047
33  CHMO:0000087
34   OBI:0003302
35   OBI:0001271
---- Executed query, got data.frame: qt_df: #rows = 36, #cols: 1

df_pk (at most first 10 elements): ['OBI:0000470', 'OBI:0001271', 'OBI:0001977', 'OBI:0002117', 'OBI:0002631', 'OBI:0002762', 'OBI:0003087', 'OBI:0003089', 'OBI:0003092', 'OBI:0003093']
qt_pk (at most first 10 elements): ['OBI:0003306', 'OBI:0003104', 'OBI:0002984', 'OBI:0000185', 'OBI:0003300', 'OBI:0003312', 'OBI:0001631', 'OBI:0003301', 'OBI:0003033', 'OBI:0003094']
---- Removed rows from df with matching pk
*** Entering assay_type to database ***
df: #rows = 14, #cols: 4

A slice of df:
             id  ...                          synonyms
2   OBI:0001977  ...                                []
3   OBI:0002117  ...                           ["WGS"]
5   OBI:0002762  ...                    ["snATAC-seq"]
6   OBI:0003087  ...  ["intrinsic fluorescence assay"]
8   OBI:0003092  ...                                []
9   OBI:0003093  ...                         ["CODEX"]
11  OBI:0003098  ...                                []
12  OBI:0003099  ...                     ["MALDI-IMS"]
13  OBI:0003100  ...                          ["MIBI"]
14  OBI:0003101  ...                      ["NanoDESI"]

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9523792266845703 seconds.

--------- ingest/c2m2s/HuBMAP/submission/submission/phenotype_disease.tsv ---------
table_name:phenotype_disease
HuBMAP: phenotype_disease: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/HuBMAP/submission/submission/phenotype_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8334815502166748 seconds.

--------- ingest/c2m2s/HuBMAP/submission/submission/protein.tsv ---------
table_name:protein
HuBMAP: protein: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/HuBMAP/submission/submission/protein.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8025681972503662 seconds.

--------- ingest/c2m2s/HuBMAP/submission/submission/project_in_project.tsv ---------
table_name:project_in_project
HuBMAP: project_in_project: Read from file: df: #rows = 12, #cols: 4

#Lines in file ingest/c2m2s/HuBMAP/submission/submission/project_in_project.tsv: 13
df: #rows = 12, #cols: 4
pKeys: ['parent_project_id_namespace', 'parent_project_local_id', 'child_project_id_namespace', 'child_project_local_id']
Going to write the count query
Wrote the count query
*** Entering project_in_project to database ***
df: #rows = 12, #cols: 4

Processing C2M2 Files...:  33%|███▎      | 4/12 [22:52<1:10:15, 526.96s/it]A slice of df:
      parent_project_id_namespace  ...                  child_project_local_id
0  tag:hubmapconsortium.org,2023:  ...  University of California San Diego TMC
1  tag:hubmapconsortium.org,2023:  ...                            Stanford TMC
2  tag:hubmapconsortium.org,2023:  ...               University of Florida TMC
3  tag:hubmapconsortium.org,2023:  ...                          Vanderbilt TMC
4  tag:hubmapconsortium.org,2023:  ...                            Stanford RTI
5  tag:hubmapconsortium.org,2023:  ...  California Institute of Technology TMC
6  tag:hubmapconsortium.org,2023:  ...                    EXT Human Cell Atlas
7  tag:hubmapconsortium.org,2023:  ...                    General Electric RTI
8  tag:hubmapconsortium.org,2023:  ...                              Purdue TTD
9  tag:hubmapconsortium.org,2023:  ...                     Broad Institute RTI

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:    count
0     12
count:12
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9009687900543213 seconds.

--------- ingest/c2m2s/HuBMAP/submission/submission/collection_gene.tsv ---------
table_name:collection_gene
HuBMAP: collection_gene: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/HuBMAP/submission/submission/collection_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9371688365936279 seconds.

--------- ingest/c2m2s/HuBMAP/submission/submission/subject_role_taxonomy.tsv ---------
table_name:subject_role_taxonomy
HuBMAP: subject_role_taxonomy: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/HuBMAP/submission/submission/subject_role_taxonomy.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9257447719573975 seconds.

--------- ingest/c2m2s/HuBMAP/submission/submission/subject_phenotype.tsv ---------
table_name:subject_phenotype
HuBMAP: subject_phenotype: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/HuBMAP/submission/submission/subject_phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9277667999267578 seconds.

--------- ingest/c2m2s/HuBMAP/submission/submission/gene.tsv ---------
table_name:gene
HuBMAP: gene: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/HuBMAP/submission/submission/gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9255011081695557 seconds.

--------- ingest/c2m2s/HuBMAP/submission/submission/analysis_type.tsv ---------
table_name:analysis_type
HuBMAP: analysis_type: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/HuBMAP/submission/submission/analysis_type.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.859856367111206 seconds.

--------- ingest/c2m2s/HuBMAP/submission/submission/biosample_gene.tsv ---------
table_name:biosample_gene
HuBMAP: biosample_gene: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/HuBMAP/submission/submission/biosample_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9036014080047607 seconds.

--------- ingest/c2m2s/HuBMAP/submission/submission/collection_protein.tsv ---------
table_name:collection_protein
HuBMAP: collection_protein: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/HuBMAP/submission/submission/collection_protein.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9187846183776855 seconds.

--------- ingest/c2m2s/HuBMAP/submission/submission/collection_defined_by_project.tsv ---------
table_name:collection_defined_by_project
HuBMAP: collection_defined_by_project: Read from file: df: #rows = 1327, #cols: 4

#Lines in file ingest/c2m2s/HuBMAP/submission/submission/collection_defined_by_project.tsv: 1328
df: #rows = 1327, #cols: 4
pKeys: ['collection_id_namespace', 'collection_local_id', 'project_id_namespace', 'project_local_id']
Going to write the count query
Wrote the count query
*** Entering collection_defined_by_project to database ***
df: #rows = 1327, #cols: 4

A slice of df:
          collection_id_namespace  ...                        project_local_id
0  tag:hubmapconsortium.org,2023:  ...  University of California San Diego TMC
1  tag:hubmapconsortium.org,2023:  ...                            Stanford TMC
2  tag:hubmapconsortium.org,2023:  ...               University of Florida TMC
3  tag:hubmapconsortium.org,2023:  ...  University of California San Diego TMC
4  tag:hubmapconsortium.org,2023:  ...                            Stanford TMC
5  tag:hubmapconsortium.org,2023:  ...                            Stanford TMC
6  tag:hubmapconsortium.org,2023:  ...                          Vanderbilt TMC
7  tag:hubmapconsortium.org,2023:  ...                            Stanford RTI
8  tag:hubmapconsortium.org,2023:  ...  University of California San Diego TMC
9  tag:hubmapconsortium.org,2023:  ...                            Stanford TMC

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:    count
0   1327
count:1327
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9640672206878662 seconds.


================================== DCC short label: KidsFirst =============================================
--------- ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/collection.tsv ---------
table_name:collection
KidsFirst: collection: Read from file: df: #rows = 0, #cols: 8

#Lines in file ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9255163669586182 seconds.

--------- ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/anatomy.tsv ---------
table_name:anatomy
KidsFirst: anatomy: Read from file: df: #rows = 18, #cols: 4

#Lines in file ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/anatomy.tsv: 19
df: #rows = 18, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.anatomy;
qt_df:                  pk
0    UBERON:0001630
1        CL:0002620
2    UBERON:0001914
3    UBERON:0001474
4    UBERON:0001013
..              ...
190  UBERON:0002066
191  UBERON:0002385
192  UBERON:0000002
193  UBERON:0000033
194  UBERON:0000473

[195 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 195, #cols: 1

df_pk (at most first 10 elements): ['UBERON:0000178', 'UBERON:0000479', 'UBERON:0000955', 'UBERON:0000988', 'UBERON:0001003', 'UBERON:0001017', 'UBERON:0001037', 'UBERON:0001836', 'UBERON:0002048', 'UBERON:0002363']
qt_pk (at most first 10 elements): ['UBERON:0001630', 'CL:0002620', 'UBERON:0001914', 'UBERON:0001474', 'UBERON:0001013', 'UBERON:0001723', 'UBERON:0000087', 'UBERON:0001199', 'UBERON:0001052', 'UBERON:0007311']
---- Removed rows from df with matching pk
*** Entering anatomy to database ***
df: #rows = 9, #cols: 4

A slice of df:
                id  ...                                           synonyms
3   UBERON:0000988  ...                ["pons of Varolius","pons Varolii"]
5   UBERON:0001017  ...                ["CNS","systema nervosum centrale"]
6   UBERON:0001037  ...                                           ["hair"]
9   UBERON:0002363  ...         ["dura mater of neuraxis","pachymeninges"]
13  UBERON:0003714  ...  ["nerve tissue","nervous tissue","portion of n...
14  UBERON:0003728  ...                      ["mediastinal part of chest"]
15  UBERON:0008337  ...  ["groin","groin area","groin region","iliac fo...
16  UBERON:0010011  ...  ["basal ganglia","basal ganglia set","basal nu...
17  UBERON:0016435  ...                                                 []

[9 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9445888996124268 seconds.

--------- ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/file_in_collection.tsv ---------
table_name:file_in_collection
KidsFirst: file_in_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/file_in_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.7647891044616699 seconds.

--------- ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/file.tsv ---------
table_name:file
KidsFirst: file: Read from file: df: #rows = 288210, #cols: 20

#Lines in file ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/file.tsv: 288211
df: #rows = 288210, #cols: 20
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering file to database ***
df: #rows = 288210, #cols: 20

A slice of df:
  id_namespace  ...                                      persistent_id
0   kidsfirst:  ...  drs://data.kidsfirstdrc.org/e0f8bb06-a2d5-40ad...
1   kidsfirst:  ...                                                NaN
2   kidsfirst:  ...  drs://data.kidsfirstdrc.org/6e5ae75a-268b-47fb...
3   kidsfirst:  ...  drs://data.kidsfirstdrc.org/ff168eff-387d-460b...
4   kidsfirst:  ...                                                NaN
5   kidsfirst:  ...                                                NaN
6   kidsfirst:  ...  drs://data.kidsfirstdrc.org/d5c43836-bc0d-4acd...
7   kidsfirst:  ...                                                NaN
8   kidsfirst:  ...                                                NaN
9   kidsfirst:  ...                                                NaN

[10 rows x 5 columns]
Data inserted successfully!
sql_count_df:     count
0  288210
count:288210
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 17.408976316452026 seconds.

--------- ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/gene.tsv ---------
table_name:gene
KidsFirst: gene: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9468011856079102 seconds.

--------- ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/subject_role_taxonomy.tsv ---------
table_name:subject_role_taxonomy
KidsFirst: subject_role_taxonomy: Read from file: df: #rows = 28550, #cols: 4

#Lines in file ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/subject_role_taxonomy.tsv: 28551
df: #rows = 28550, #cols: 4
pKeys: ['subject_id_namespace', 'subject_local_id', 'role_id', 'taxonomy_id']
Going to write the count query
Wrote the count query
*** Entering subject_role_taxonomy to database ***
df: #rows = 28550, #cols: 4

A slice of df:
  subject_id_namespace subject_local_id              role_id    taxonomy_id
0           kidsfirst:      PT_0001K4K1  cfde_subject_role:0  NCBI:txid9606
1           kidsfirst:      PT_004FDKPF  cfde_subject_role:0  NCBI:txid9606
2           kidsfirst:      PT_004KEANN  cfde_subject_role:0  NCBI:txid9606
3           kidsfirst:      PT_0059H2XT  cfde_subject_role:0  NCBI:txid9606
4           kidsfirst:      PT_005B7CZ4  cfde_subject_role:0  NCBI:txid9606
5           kidsfirst:      PT_005X8BR9  cfde_subject_role:0  NCBI:txid9606
6           kidsfirst:      PT_00606X3B  cfde_subject_role:0  NCBI:txid9606
7           kidsfirst:      PT_0068CEXW  cfde_subject_role:0  NCBI:txid9606
8           kidsfirst:      PT_006SP660  cfde_subject_role:0  NCBI:txid9606
9           kidsfirst:      PT_007GHV3X  cfde_subject_role:0  NCBI:txid9606
Data inserted successfully!
sql_count_df:    count
0  28550
count:28550
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.3768010139465332 seconds.

--------- ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/file_format.tsv ---------
table_name:file_format
KidsFirst: file_format: Read from file: df: #rows = 12, #cols: 4

#Lines in file ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/file_format.tsv: 13
df: #rows = 12, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.file_format;
qt_df:              pk
0   format:3603
1   format:3004
2   format:3506
3   format:3464
4   format:3579
5   format:3987
6   format:2332
7   format:2572
8   format:3591
9   format:3590
10  format:3873
11  format:3006
12  format:1930
13  format:3468
14  format:3727
15  format:3752
16  format:3583
17  format:3981
18  format:3989
19  format:2330
20  format:3508
21  format:2331
22  format:3003
23  format:3839
24  format:3620
25  format:2333
26  format:3475
---- Executed query, got data.frame: qt_df: #rows = 27, #cols: 1

df_pk (at most first 10 elements): ['format:1930', 'format:2331', 'format:2572', 'format:3008', 'format:3016', 'format:3327', 'format:3462', 'format:3475', 'format:3508', 'format:3578']
qt_pk (at most first 10 elements): ['format:3603', 'format:3004', 'format:3506', 'format:3464', 'format:3579', 'format:3987', 'format:2332', 'format:2572', 'format:3591', 'format:3590']
---- Removed rows from df with matching pk
*** Entering file_format to database ***
df: #rows = 6, #cols: 4

A slice of df:
             id  ... synonyms
3   format:3008  ...       []
4   format:3016  ...       []
5   format:3327  ...       []
6   format:3462  ...       []
9   format:3578  ...       []
11  format:3829  ...       []

[6 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9317231178283691 seconds.

--------- ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/project.tsv ---------
table_name:project
KidsFirst: project: Read from file: df: #rows = 40, #cols: 7

#Lines in file ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/project.tsv: 41
df: #rows = 40, #cols: 7
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering project to database ***
df: #rows = 40, #cols: 7

A slice of df:
  id_namespace     local_id  persistent_id  creation_time abbreviation
0   kidsfirst:          drc            NaN            NaN        KFDRC
1   kidsfirst:  SD_ZXJFFMEF            NaN            NaN  SD_ZXJFFMEF
2   kidsfirst:  SD_ZFGDG5YS            NaN            NaN  SD_ZFGDG5YS
3   kidsfirst:  SD_Z6MWD3H0            NaN            NaN  SD_Z6MWD3H0
4   kidsfirst:  SD_Z0D9N23X            NaN            NaN  SD_Z0D9N23X
5   kidsfirst:  SD_YNSSAPHE            NaN            NaN  SD_YNSSAPHE
6   kidsfirst:  SD_YGVA0E1C            NaN            NaN  SD_YGVA0E1C
7   kidsfirst:  SD_W6FWTD8A            NaN            NaN  SD_W6FWTD8A
8   kidsfirst:  SD_W0V965XZ            NaN            NaN  SD_W0V965XZ
9   kidsfirst:  SD_VTTSHWV4            NaN            NaN  SD_VTTSHWV4
Data inserted successfully!
sql_count_df:    count
0     40
count:40
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9394824504852295 seconds.

--------- ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/phenotype_disease.tsv ---------
table_name:phenotype_disease
KidsFirst: phenotype_disease: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/phenotype_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.931851863861084 seconds.

--------- ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/ncbi_taxonomy.tsv ---------
table_name:ncbi_taxonomy
KidsFirst: ncbi_taxonomy: Read from file: df: #rows = 1, #cols: 5

#Lines in file ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/ncbi_taxonomy.tsv: 2
df: #rows = 1, #cols: 5
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.ncbi_taxonomy;
qt_df:                   pk
0     NCBI:txid10149
1    NCBI:txid543564
2      NCBI:txid5823
3     NCBI:txid99755
4       NCBI:txid287
..               ...
155   NCBI:txid64518
156    NCBI:txid4555
157   NCBI:txid84112
158    NCBI:txid4932
159    NCBI:txid3847

[160 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 160, #cols: 1

df_pk (at most first 10 elements): ['NCBI:txid9606']
qt_pk (at most first 10 elements): ['NCBI:txid10149', 'NCBI:txid543564', 'NCBI:txid5823', 'NCBI:txid99755', 'NCBI:txid287', 'NCBI:txid75728', 'NCBI:txid252141', 'NCBI:txid382', 'NCBI:txid59463', 'NCBI:txid39293']
---- Removed rows from df with matching pk
*** Entering ncbi_taxonomy to database ***
df: #rows = 0, #cols: 5

A slice of df:
Empty DataFrame
Columns: [id, clade, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9862985610961914 seconds.

--------- ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/phenotype.tsv ---------
table_name:phenotype
KidsFirst: phenotype: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.7877163887023926 seconds.

--------- ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/substance.tsv ---------
table_name:substance
KidsFirst: substance: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9052786827087402 seconds.

--------- ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/project_in_project.tsv ---------
table_name:project_in_project
KidsFirst: project_in_project: Read from file: df: #rows = 39, #cols: 4

#Lines in file ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/project_in_project.tsv: 40
df: #rows = 39, #cols: 4
pKeys: ['parent_project_id_namespace', 'parent_project_local_id', 'child_project_id_namespace', 'child_project_local_id']
Going to write the count query
Wrote the count query
*** Entering project_in_project to database ***
df: #rows = 39, #cols: 4

A slice of df:
  parent_project_id_namespace  ... child_project_local_id
0                  kidsfirst:  ...            SD_ZXJFFMEF
1                  kidsfirst:  ...            SD_ZFGDG5YS
2                  kidsfirst:  ...            SD_Z6MWD3H0
3                  kidsfirst:  ...            SD_Z0D9N23X
4                  kidsfirst:  ...            SD_YNSSAPHE
5                  kidsfirst:  ...            SD_YGVA0E1C
6                  kidsfirst:  ...            SD_W6FWTD8A
7                  kidsfirst:  ...            SD_W0V965XZ
8                  kidsfirst:  ...            SD_VTTSHWV4
9                  kidsfirst:  ...            SD_RM8AFW0R

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:    count
0     39
count:39
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9253947734832764 seconds.

--------- ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/subject.tsv ---------
table_name:subject
KidsFirst: subject: Read from file: df: #rows = 28550, #cols: 10

#Lines in file ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/subject.tsv: 28551
df: #rows = 28550, #cols: 10
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering subject to database ***
df: #rows = 28550, #cols: 10

A slice of df:
  id_namespace     local_id  ... project_local_id persistent_id
0   kidsfirst:  PT_0001K4K1  ...      SD_Z6MWD3H0           NaN
1   kidsfirst:  PT_004FDKPF  ...      SD_46SK55A3           NaN
2   kidsfirst:  PT_004KEANN  ...      SD_AQ9KVN5P           NaN
3   kidsfirst:  PT_0059H2XT  ...      SD_DZTB5HRR           NaN
4   kidsfirst:  PT_005B7CZ4  ...      SD_PREASA7S           NaN
5   kidsfirst:  PT_005X8BR9  ...      SD_Z6MWD3H0           NaN
6   kidsfirst:  PT_00606X3B  ...      SD_DZTB5HRR           NaN
7   kidsfirst:  PT_0068CEXW  ...      SD_VTTSHWV4           NaN
8   kidsfirst:  PT_006SP660  ...      SD_54G4WG4R           NaN
9   kidsfirst:  PT_007GHV3X  ...      SD_15A2MQQ9           NaN

[10 rows x 5 columns]
Data inserted successfully!
sql_count_df:    count
0  28550
count:28550
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.68656587600708 seconds.

--------- ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/analysis_type.tsv ---------
table_name:analysis_type
KidsFirst: analysis_type: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/analysis_type.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9170284271240234 seconds.

--------- ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/biosample.tsv ---------
table_name:biosample
KidsFirst: biosample: Read from file: df: #rows = 37065, #cols: 8

#Lines in file ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/biosample.tsv: 37066
df: #rows = 37065, #cols: 8
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering biosample to database ***
df: #rows = 37065, #cols: 8

A slice of df:
  id_namespace     local_id  ... project_local_id persistent_id
0   kidsfirst:  BS_002W6DYW  ...      SD_Q2F7XA29           NaN
1   kidsfirst:  BS_003293HH  ...      SD_JWS3V24D           NaN
2   kidsfirst:  BS_003TNG75  ...      SD_AQ9KVN5P           NaN
3   kidsfirst:  BS_004ND16X  ...      SD_VTTSHWV4           NaN
4   kidsfirst:  BS_005FNP7J  ...      SD_YGVA0E1C           NaN
5   kidsfirst:  BS_005J6HQQ  ...      SD_NMVV8A1Y           NaN
6   kidsfirst:  BS_006HP8CE  ...      SD_YNSSAPHE           NaN
7   kidsfirst:  BS_00747N6Y  ...      SD_JWS3V24D           NaN
8   kidsfirst:  BS_007JTNB8  ...      SD_BHJXBDQK           NaN
9   kidsfirst:  BS_008JZQQT  ...      SD_B8X3C1MX           NaN

[10 rows x 5 columns]
Data inserted successfully!
sql_count_df:    count
0  37065
count:37065
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 2.6079702377319336 seconds.

--------- ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/protein_gene.tsv ---------
table_name:protein_gene
KidsFirst: protein_gene: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/protein_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8111863136291504 seconds.

--------- ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/subject_race.tsv ---------
table_name:subject_race
KidsFirst: subject_race: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/subject_race.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9061901569366455 seconds.

--------- ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/collection_phenotype.tsv ---------
table_name:collection_phenotype
KidsFirst: collection_phenotype: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/collection_phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9040994644165039 seconds.

--------- ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/assay_type.tsv ---------
table_name:assay_type
KidsFirst: assay_type: Read from file: df: #rows = 3, #cols: 4

#Lines in file ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/assay_type.tsv: 4
df: #rows = 3, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.assay_type;
qt_df:               pk
0    OBI:0003306
1    OBI:0003104
2    OBI:0002984
3    OBI:0003109
4    OBI:0000185
5    OBI:0003300
6    OBI:0003087
7    OBI:0003312
8    OBI:0003093
9    OBI:0002117
10   OBI:0001631
11   OBI:0003099
12   OBI:0003301
13   OBI:0003033
14   OBI:0003094
15   OBI:0002762
16   OBI:0003097
17   OBI:0001977
18   OBI:0003110
19   OBI:0003311
20   OBI:0002631
21   OBI:0003297
22   OBI:0001920
23   OBI:0003101
24   OBI:0003092
25   OBI:0000716
26   OBI:0001177
27   OBI:0003314
28   OBI:0003108
29   OBI:0001848
30   OBI:0003313
31   OBI:0001985
32   OBI:0003100
33   OBI:0003299
34   OBI:0003089
35   OBI:0000623
36   OBI:0003105
37   OBI:0003107
38   OBI:0000470
39   OBI:0000626
40   OBI:0003305
41   OBI:0003304
42   OBI:0003303
43   OBI:0003103
44   OBI:0003034
45   OBI:0600047
46  CHMO:0000087
47   OBI:0003302
48   OBI:0001271
49   OBI:0003098
---- Executed query, got data.frame: qt_df: #rows = 50, #cols: 1

df_pk (at most first 10 elements): ['OBI:0001177', 'OBI:0002117', 'OBI:0002118']
qt_pk (at most first 10 elements): ['OBI:0003306', 'OBI:0003104', 'OBI:0002984', 'OBI:0003109', 'OBI:0000185', 'OBI:0003300', 'OBI:0003087', 'OBI:0003312', 'OBI:0003093', 'OBI:0002117']
---- Removed rows from df with matching pk
*** Entering assay_type to database ***
df: #rows = 1, #cols: 4

A slice of df:
            id  ... synonyms
2  OBI:0002118  ...  ["WES"]

[1 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9685559272766113 seconds.

--------- ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/collection_anatomy.tsv ---------
table_name:collection_anatomy
KidsFirst: collection_anatomy: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/collection_anatomy.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9572157859802246 seconds.

--------- ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/dcc.tsv ---------
table_name:dcc
KidsFirst: dcc: Read from file: df: #rows = 1, #cols: 9

#Lines in file ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/dcc.tsv: 2
df: #rows = 1, #cols: 9
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.dcc;
qt_df:                                pk
0        cfde_registry_dcc:glygen
1           cfde_registry_dcc:4dn
2  cfde_registry_dcc:metabolomics
3        cfde_registry_dcc:hubmap
---- Executed query, got data.frame: qt_df: #rows = 4, #cols: 1

df_pk (at most first 10 elements): ['cfde_registry_dcc:kidsfirst']
qt_pk (at most first 10 elements): ['cfde_registry_dcc:glygen', 'cfde_registry_dcc:4dn', 'cfde_registry_dcc:metabolomics', 'cfde_registry_dcc:hubmap']
---- Removed rows from df with matching pk
*** Entering dcc to database ***
df: #rows = 1, #cols: 9

A slice of df:
                            id  ...             contact_email
0  cfde_registry_dcc:kidsfirst  ...  support@kidsfirstdrc.org

[1 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9890122413635254 seconds.

--------- ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/collection_gene.tsv ---------
table_name:collection_gene
KidsFirst: collection_gene: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/collection_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9314005374908447 seconds.

--------- ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/collection_compound.tsv ---------
table_name:collection_compound
KidsFirst: collection_compound: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/collection_compound.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.990985631942749 seconds.

--------- ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/biosample_gene.tsv ---------
table_name:biosample_gene
KidsFirst: biosample_gene: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/biosample_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9469177722930908 seconds.

--------- ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/biosample_in_collection.tsv ---------
table_name:biosample_in_collection
KidsFirst: biosample_in_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/biosample_in_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9302570819854736 seconds.

--------- ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/biosample_from_subject.tsv ---------
table_name:biosample_from_subject
KidsFirst: biosample_from_subject: Read from file: df: #rows = 37065, #cols: 5

#Lines in file ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/biosample_from_subject.tsv: 37066
df: #rows = 37065, #cols: 5
pKeys: ['biosample_id_namespace', 'biosample_local_id', 'subject_id_namespace', 'subject_local_id']
Going to write the count query
Wrote the count query
*** Entering biosample_from_subject to database ***
df: #rows = 37065, #cols: 5

A slice of df:
  biosample_id_namespace biosample_local_id  ... subject_local_id age_at_sampling
0             kidsfirst:        BS_002W6DYW  ...      PT_GXMWD7AP             NaN
1             kidsfirst:        BS_003293HH  ...      PT_5SCGPJSY             NaN
2             kidsfirst:        BS_003TNG75  ...      PT_GB30TJ9P             NaN
3             kidsfirst:        BS_004ND16X  ...      PT_R1JJ4TZ5             NaN
4             kidsfirst:        BS_005FNP7J  ...      PT_B31DYVKP             NaN
5             kidsfirst:        BS_005J6HQQ  ...      PT_VW44AQA8             NaN
6             kidsfirst:        BS_006HP8CE  ...      PT_RDCCES07             NaN
7             kidsfirst:        BS_00747N6Y  ...      PT_WM3WDZHD             NaN
8             kidsfirst:        BS_007JTNB8  ...      PT_1MW98VR1            5.13
9             kidsfirst:        BS_008JZQQT  ...      PT_GRE9TDA2             NaN

[10 rows x 5 columns]
Data inserted successfully!
sql_count_df:    count
0  37065
count:37065
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.763967514038086 seconds.

--------- ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/collection_protein.tsv ---------
table_name:collection_protein
KidsFirst: collection_protein: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/collection_protein.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8899507522583008 seconds.

--------- ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/sample_prep_method.tsv ---------
table_name:sample_prep_method
KidsFirst: sample_prep_method: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/sample_prep_method.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9103517532348633 seconds.

--------- ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/subject_phenotype.tsv ---------
table_name:subject_phenotype
KidsFirst: subject_phenotype: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/subject_phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9613001346588135 seconds.

--------- ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/collection_substance.tsv ---------
table_name:collection_substance
KidsFirst: collection_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/collection_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8802049160003662 seconds.

--------- ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/data_type.tsv ---------
table_name:data_type
KidsFirst: data_type: Read from file: df: #rows = 8, #cols: 4

#Lines in file ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/data_type.tsv: 9
df: #rows = 8, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.data_type;
qt_df:              pk
0     data:3488
1     data:3111
2     data:1714
3     data:2536
4   ILX:0793824
5     data:1383
6     data:3110
7     data:2764
8     data:2082
9     data:3002
10    data:2887
11    data:2968
12  ILX:0793825
---- Executed query, got data.frame: qt_df: #rows = 13, #cols: 1

df_pk (at most first 10 elements): ['data:0006', 'data:1916', 'data:2603', 'data:3112', 'data:3210', 'data:3494', 'data:3498', 'data:3914']
qt_pk (at most first 10 elements): ['data:3488', 'data:3111', 'data:1714', 'data:2536', 'ILX:0793824', 'data:1383', 'data:3110', 'data:2764', 'data:2082', 'data:3002']
---- Removed rows from df with matching pk
*** Entering data_type to database ***
df: #rows = 8, #cols: 4

A slice of df:
          id  ...                                           synonyms
0  data:0006  ...                 ["Data record","Data set","Datum"]
1  data:1916  ...                                                 []
2  data:2603  ...  ["Non-coding RNA quantification data","Transcr...
3  data:3112  ...  ["Normalised microarray data","Gene expression...
4  data:3210  ...                                                 []
5  data:3494  ...                                  ["DNA sequences"]
6  data:3498  ...                       ["Gene sequence variations"]
7  data:3914  ...  ["Quality control metrics","QC metrics","QC re...

[8 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.0322673320770264 seconds.

--------- ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/file_describes_subject.tsv ---------
table_name:file_describes_subject
KidsFirst: file_describes_subject: Read from file: df: #rows = 338490, #cols: 4

#Lines in file ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/file_describes_subject.tsv: 338491
df: #rows = 338490, #cols: 4
pKeys: ['file_id_namespace', 'file_local_id', 'subject_id_namespace', 'subject_local_id']
Going to write the count query
Wrote the count query
*** Entering file_describes_subject to database ***
df: #rows = 338490, #cols: 4

A slice of df:
  file_id_namespace file_local_id subject_id_namespace subject_local_id
0        kidsfirst:   GF_0003WJQG           kidsfirst:      PT_X7DXSNZ6
1        kidsfirst:   GF_00065FWM           kidsfirst:      PT_4347ZBEX
2        kidsfirst:   GF_000HXXN3           kidsfirst:      PT_RG8C4JW7
3        kidsfirst:   GF_000TDT79           kidsfirst:      PT_8N9AXZN8
4        kidsfirst:   GF_000VDK42           kidsfirst:      PT_PR4YBBH3
5        kidsfirst:   GF_0010PQSQ           kidsfirst:      PT_G0P3TS2D
6        kidsfirst:   GF_001CSF26           kidsfirst:      PT_3W4P4R21
7        kidsfirst:   GF_001JWT9N           kidsfirst:      PT_G16VK7FR
8        kidsfirst:   GF_0023JGW9           kidsfirst:      PT_MTE126WM
9        kidsfirst:   GF_0023NT7Z           kidsfirst:      PT_3AM9NH23
Data inserted successfully!
sql_count_df:     count
0  338490
count:338490
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 6.065860271453857 seconds.

--------- ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/collection_taxonomy.tsv ---------
table_name:collection_taxonomy
KidsFirst: collection_taxonomy: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/collection_taxonomy.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9281618595123291 seconds.

--------- ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/disease.tsv ---------
table_name:disease
KidsFirst: disease: Read from file: df: #rows = 28, #cols: 4

#Lines in file ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/disease.tsv: 29
df: #rows = 28, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.disease;
qt_df:                pk
0       DOID:2030
1      DOID:10892
2         DOID:17
3    DOID:0050830
4       DOID:5052
..            ...
123     DOID:9452
124  DOID:0050700
125  DOID:0060180
126  DOID:0014667
127     DOID:1289

[128 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 128, #cols: 1

df_pk (at most first 10 elements): ['DOID:0050545', 'DOID:0050567', 'DOID:0050668', 'DOID:0050834', 'DOID:0060250', 'DOID:0080074', 'DOID:0080145', 'DOID:0080171', 'DOID:0080173', 'DOID:0080600']
qt_pk (at most first 10 elements): ['DOID:2030', 'DOID:10892', 'DOID:17', 'DOID:0050830', 'DOID:5052', 'DOID:9269', 'DOID:557', 'DOID:9351', 'DOID:2377', 'DOID:9870']
---- Removed rows from df with matching pk
*** Entering disease to database ***
df: #rows = 25, #cols: 4

A slice of df:
              id  ...                                           synonyms
0   DOID:0050545  ...                   ["heterotaxia","situs ambiguus"]
1   DOID:0050567  ...                                                 []
2   DOID:0050668  ...                                           ["ARBD"]
3   DOID:0050834  ...                             ["CHARGE association"]
4   DOID:0060250  ...                                                 []
5   DOID:0080074  ...                                                 []
6   DOID:0080145  ...  ["DOID:7933","childhood precursor T-lymphoblas...
7   DOID:0080171  ...  ["esophageal atresia and/or tracheoesophageal ...
8   DOID:0080173  ...                   ["exstrophy-epispadias complex"]
10    DOID:11725  ...  ["Brachmann de Lange syndrome","De Lange syndr...

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9388818740844727 seconds.

--------- ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/collection_disease.tsv ---------
table_name:collection_disease
KidsFirst: collection_disease: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/collection_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9078769683837891 seconds.

--------- ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/collection_in_collection.tsv ---------
table_name:collection_in_collection
KidsFirst: collection_in_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/collection_in_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9003379344940186 seconds.

--------- ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/file_describes_biosample.tsv ---------
table_name:file_describes_biosample
KidsFirst: file_describes_biosample: Read from file: df: #rows = 404951, #cols: 4

#Lines in file ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/file_describes_biosample.tsv: 404952
df: #rows = 404951, #cols: 4
pKeys: ['file_id_namespace', 'file_local_id', 'biosample_id_namespace', 'biosample_local_id']
Going to write the count query
Wrote the count query
*** Entering file_describes_biosample to database ***
df: #rows = 404951, #cols: 4

A slice of df:
  file_id_namespace file_local_id biosample_id_namespace biosample_local_id
0        kidsfirst:   GF_ACG5S1T6             kidsfirst:        BS_002W6DYW
1        kidsfirst:   GF_G1RZDA27             kidsfirst:        BS_002W6DYW
2        kidsfirst:   GF_QQXTF4SK             kidsfirst:        BS_002W6DYW
3        kidsfirst:   GF_TB6G822H             kidsfirst:        BS_002W6DYW
4        kidsfirst:   GF_9VJAGRFA             kidsfirst:        BS_003293HH
5        kidsfirst:   GF_AH4QVKHC             kidsfirst:        BS_003293HH
6        kidsfirst:   GF_E3WB2K85             kidsfirst:        BS_003293HH
7        kidsfirst:   GF_HQMM45X2             kidsfirst:        BS_003293HH
8        kidsfirst:   GF_NHBS3J60             kidsfirst:        BS_003293HH
9        kidsfirst:   GF_STVTVGG1             kidsfirst:        BS_003293HH
Data inserted successfully!
sql_count_df:     count
0  404951
count:404951
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 8.256722927093506 seconds.

--------- ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/compound.tsv ---------
table_name:compound
KidsFirst: compound: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/compound.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.988893985748291 seconds.

--------- ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/phenotype_gene.tsv ---------
table_name:phenotype_gene
KidsFirst: phenotype_gene: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/phenotype_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9148883819580078 seconds.

--------- ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/subject_disease.tsv ---------
table_name:subject_disease
KidsFirst: subject_disease: Read from file: df: #rows = 35901, #cols: 4

#Lines in file ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/subject_disease.tsv: 35902
df: #rows = 35901, #cols: 4
pKeys: ['subject_id_namespace', 'subject_local_id', 'association_type', 'disease']
Going to write the count query
Wrote the count query
*** Entering subject_disease to database ***
df: #rows = 35901, #cols: 4

A slice of df:
  subject_id_namespace  ...       disease
0           kidsfirst:  ...      DOID:162
1           kidsfirst:  ...    DOID:14250
2           kidsfirst:  ...     DOID:3827
3           kidsfirst:  ...  DOID:0080145
4           kidsfirst:  ...      DOID:162
5           kidsfirst:  ...     DOID:5656
6           kidsfirst:  ...     DOID:1682
7           kidsfirst:  ...      DOID:162
8           kidsfirst:  ...    DOID:14250
9           kidsfirst:  ...     DOID:5656

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:    count
0  35901
count:35901
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.552832841873169 seconds.

--------- ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/biosample_disease.tsv ---------
table_name:biosample_disease
KidsFirst: biosample_disease: Read from file: df: #rows = 50449, #cols: 4

#Lines in file ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/biosample_disease.tsv: 50450
df: #rows = 50449, #cols: 4
pKeys: ['biosample_id_namespace', 'biosample_local_id', 'association_type', 'disease']
Going to write the count query
Wrote the count query
*** Entering biosample_disease to database ***
df: #rows = 50449, #cols: 4

A slice of df:
  biosample_id_namespace  ...       disease
0             kidsfirst:  ...      DOID:331
1             kidsfirst:  ...      DOID:162
2             kidsfirst:  ...  DOID:0080145
3             kidsfirst:  ...      DOID:162
4             kidsfirst:  ...      DOID:255
5             kidsfirst:  ...     DOID:3369
6             kidsfirst:  ...      DOID:162
7             kidsfirst:  ...       DOID:18
8             kidsfirst:  ...      DOID:769
9             kidsfirst:  ...      DOID:162

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:    count
0  50449
count:50449
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.7623562812805176 seconds.

--------- ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/subject_substance.tsv ---------
table_name:subject_substance
KidsFirst: subject_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/subject_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9507238864898682 seconds.

--------- ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/id_namespace.tsv ---------
table_name:id_namespace
KidsFirst: id_namespace: Read from file: df: #rows = 1, #cols: 4

#Lines in file ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/id_namespace.tsv: 2
df: #rows = 1, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.id_namespace;
qt_df:                                        pk
0  https://www.metabolomicsworkbench.org/
1            https://www.data.glygen.org/
2             https://data.4dnucleome.org
3          tag:hubmapconsortium.org,2023:
---- Executed query, got data.frame: qt_df: #rows = 4, #cols: 1

df_pk (at most first 10 elements): ['kidsfirst:']
qt_pk (at most first 10 elements): ['https://www.metabolomicsworkbench.org/', 'https://www.data.glygen.org/', 'https://data.4dnucleome.org', 'tag:hubmapconsortium.org,2023:']
---- Removed rows from df with matching pk
*** Entering id_namespace to database ***
df: #rows = 1, #cols: 4

A slice of df:
           id  ...                                        description
0  kidsfirst:  ...  A large-scale data resource to help researcher...

[1 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9677560329437256 seconds.

--------- ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/biosample_substance.tsv ---------
table_name:biosample_substance
KidsFirst: biosample_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/biosample_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9506309032440186 seconds.

--------- ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/protein.tsv ---------
table_name:protein
KidsFirst: protein: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/protein.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.898310661315918 seconds.

--------- ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/collection_defined_by_project.tsv ---------
table_name:collection_defined_by_project
KidsFirst: collection_defined_by_project: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/collection_defined_by_project.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9095199108123779 seconds.

--------- ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/subject_in_collection.tsv ---------
table_name:subject_in_collection
KidsFirst: subject_in_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/subject_in_collection.tsv: 1
Processing C2M2 Files...:  42%|████▏     | 5/12 [24:14<42:44, 366.43s/it]  >>>>>>>> Time taken to ingest the metadata from this file: 0.9034020900726318 seconds.

--------- ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/file_describes_collection.tsv ---------
table_name:file_describes_collection
KidsFirst: file_describes_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/KidsFirst/fy2024q3-cfde-c2m2-kids-first/frictionless_validation/file_describes_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9087862968444824 seconds.


================================== DCC short label: SPARC =============================================
--------- ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/dcc.tsv ---------
table_name:dcc
SPARC: dcc: Read from file: df: #rows = 1, #cols: 9

#Lines in file ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/dcc.tsv: 2
df: #rows = 1, #cols: 9
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.dcc;
qt_df:                                pk
0        cfde_registry_dcc:glygen
1     cfde_registry_dcc:kidsfirst
2           cfde_registry_dcc:4dn
3  cfde_registry_dcc:metabolomics
4        cfde_registry_dcc:hubmap
---- Executed query, got data.frame: qt_df: #rows = 5, #cols: 1

df_pk (at most first 10 elements): ['cfde_registry_dcc:sparc']
qt_pk (at most first 10 elements): ['cfde_registry_dcc:glygen', 'cfde_registry_dcc:kidsfirst', 'cfde_registry_dcc:4dn', 'cfde_registry_dcc:metabolomics', 'cfde_registry_dcc:hubmap']
---- Removed rows from df with matching pk
*** Entering dcc to database ***
df: #rows = 1, #cols: 9

A slice of df:
                        id  ...             contact_email
0  cfde_registry_dcc:sparc  ...  jeffrey.grethe@gmail.com

[1 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9915268421173096 seconds.

--------- ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/id_namespace.tsv ---------
table_name:id_namespace
SPARC: id_namespace: Read from file: df: #rows = 6, #cols: 4

#Lines in file ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/id_namespace.tsv: 7
df: #rows = 6, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.id_namespace;
qt_df:                                        pk
0  https://www.metabolomicsworkbench.org/
1            https://www.data.glygen.org/
2             https://data.4dnucleome.org
3                              kidsfirst:
4          tag:hubmapconsortium.org,2023:
---- Executed query, got data.frame: qt_df: #rows = 5, #cols: 1

df_pk (at most first 10 elements): ['SPARC.collection:', 'SPARC.file:', 'SPARC.project:', 'SPARC.sample:', 'SPARC.subject:', 'SPARC:']
qt_pk (at most first 10 elements): ['https://www.metabolomicsworkbench.org/', 'https://www.data.glygen.org/', 'https://data.4dnucleome.org', 'kidsfirst:', 'tag:hubmapconsortium.org,2023:']
---- Removed rows from df with matching pk
*** Entering id_namespace to database ***
df: #rows = 6, #cols: 4

A slice of df:
                  id  ...                                        description
3  SPARC.collection:  ...  The identifier namespace for C2M2 collection r...
1        SPARC.file:  ...  The identifier namespace for C2M2 file records...
2     SPARC.project:  ...  The identifier namespace for C2M2 project reco...
5      SPARC.sample:  ...  The identifier namespace for C2M2 sample recor...
4     SPARC.subject:  ...  The identifier namespace for C2M2 subject reco...
0             SPARC:  ...  The default identifier namespace for C2M2 enti...

[6 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.004969596862793 seconds.

--------- ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/disease.tsv ---------
table_name:disease
SPARC: disease: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9601266384124756 seconds.

--------- ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/data_type.tsv ---------
table_name:data_type
SPARC: data_type: Read from file: df: #rows = 6, #cols: 4

#Lines in file ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/data_type.tsv: 7
df: #rows = 6, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.data_type;
qt_df:              pk
0     data:3112
1     data:0006
2     data:1916
3     data:3210
4     data:3488
5     data:3111
6     data:1714
7     data:2536
8   ILX:0793824
9     data:1383
10    data:3110
11    data:2603
12    data:3494
13    data:2764
14    data:2082
15    data:3002
16    data:3914
17    data:3498
18    data:2887
19    data:2968
20  ILX:0793825
---- Executed query, got data.frame: qt_df: #rows = 21, #cols: 1

df_pk (at most first 10 elements): ['data:0006', 'data:0928', 'data:2044', 'data:2968', 'data:3108', 'data:3869']
qt_pk (at most first 10 elements): ['data:3112', 'data:0006', 'data:1916', 'data:3210', 'data:3488', 'data:3111', 'data:1714', 'data:2536', 'ILX:0793824', 'data:1383']
---- Removed rows from df with matching pk
*** Entering data_type to database ***
df: #rows = 4, #cols: 4

A slice of df:
          id  ... synonyms
4  data:0928  ...       []
5  data:2044  ...       []
1  data:3108  ...       []
2  data:3869  ...       []

[4 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.0053107738494873 seconds.

--------- ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/collection_disease.tsv ---------
table_name:collection_disease
SPARC: collection_disease: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/collection_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9163362979888916 seconds.

--------- ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/file_in_collection.tsv ---------
table_name:file_in_collection
SPARC: file_in_collection: Read from file: df: #rows = 101283, #cols: 4

#Lines in file ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/file_in_collection.tsv: 101284
df: #rows = 101283, #cols: 4
pKeys: ['file_id_namespace', 'file_local_id', 'collection_id_namespace', 'collection_local_id']
Going to write the count query
Wrote the count query
*** Entering file_in_collection to database ***
df: #rows = 101283, #cols: 4

A slice of df:
  file_id_namespace  ...                             collection_local_id
0       SPARC.file:  ...  N:dataset:6f7e029d-684e-4603-9dea-ec82a53c5a75
1       SPARC.file:  ...  N:dataset:a59a7c4c-0978-4bbe-8d92-93218b5c7b31
2       SPARC.file:  ...  N:dataset:7067a6f5-8df2-4ef8-953a-4d0bfafe6555
3       SPARC.file:  ...  N:dataset:7067a6f5-8df2-4ef8-953a-4d0bfafe6555
4       SPARC.file:  ...  N:dataset:9472e802-7896-4adf-a34b-1e9af1bf2cbe
5       SPARC.file:  ...  N:dataset:c46429b9-6db2-40ad-86e5-36ed759a1ee7
6       SPARC.file:  ...  N:dataset:9dd891fc-6d47-4821-95a0-fc7ff2aeee41
7       SPARC.file:  ...  N:dataset:199eb37d-5f1d-4848-98a5-ab105dae48ea
8       SPARC.file:  ...  N:dataset:e1f838d8-09d4-4648-a977-08d6358a390c
9       SPARC.file:  ...  N:dataset:834e182d-b52c-4389-ad09-6ec9467f3b55

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:     count
0  101283
count:101283
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 2.994994640350342 seconds.

--------- ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/subject_role_taxonomy.tsv ---------
table_name:subject_role_taxonomy
SPARC: subject_role_taxonomy: Read from file: df: #rows = 3569, #cols: 4

#Lines in file ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/subject_role_taxonomy.tsv: 3570
df: #rows = 3569, #cols: 4
pKeys: ['subject_id_namespace', 'subject_local_id', 'role_id', 'taxonomy_id']
Going to write the count query
Wrote the count query
*** Entering subject_role_taxonomy to database ***
df: #rows = 3569, #cols: 4

A slice of df:
  subject_id_namespace  ...    taxonomy_id
0       SPARC.subject:  ...  NCBI:txid9940
1       SPARC.subject:  ...  NCBI:txid9825
2       SPARC.subject:  ...  NCBI:txid9825
3       SPARC.subject:  ...  NCBI:txid9825
4       SPARC.subject:  ...  NCBI:txid9825
5       SPARC.subject:  ...  NCBI:txid9825
6       SPARC.subject:  ...  NCBI:txid9825
7       SPARC.subject:  ...  NCBI:txid9825
8       SPARC.subject:  ...  NCBI:txid9825
9       SPARC.subject:  ...  NCBI:txid9825

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:    count
0   3569
count:3569
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.1300132274627686 seconds.

--------- ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/biosample_in_collection.tsv ---------
table_name:biosample_in_collection
SPARC: biosample_in_collection: Read from file: df: #rows = 5414, #cols: 4

#Lines in file ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/biosample_in_collection.tsv: 5415
df: #rows = 5414, #cols: 4
pKeys: ['biosample_id_namespace', 'biosample_local_id', 'collection_id_namespace', 'collection_local_id']
Going to write the count query
Wrote the count query
*** Entering biosample_in_collection to database ***
df: #rows = 5414, #cols: 4

A slice of df:
  biosample_id_namespace  ...                             collection_local_id
0          SPARC.sample:  ...  N:dataset:36b1a054-d05c-46ea-ade1-84cfe2a15a6c
1          SPARC.sample:  ...  N:dataset:36b1a054-d05c-46ea-ade1-84cfe2a15a6c
2          SPARC.sample:  ...  N:dataset:e70a0529-3f7d-41dd-beee-26d024540f2f
3          SPARC.sample:  ...  N:dataset:e70a0529-3f7d-41dd-beee-26d024540f2f
4          SPARC.sample:  ...  N:dataset:e70a0529-3f7d-41dd-beee-26d024540f2f
5          SPARC.sample:  ...  N:dataset:e70a0529-3f7d-41dd-beee-26d024540f2f
6          SPARC.sample:  ...  N:dataset:e70a0529-3f7d-41dd-beee-26d024540f2f
7          SPARC.sample:  ...  N:dataset:e70a0529-3f7d-41dd-beee-26d024540f2f
8          SPARC.sample:  ...  N:dataset:e70a0529-3f7d-41dd-beee-26d024540f2f
9          SPARC.sample:  ...  N:dataset:e70a0529-3f7d-41dd-beee-26d024540f2f

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:    count
0   5414
count:5414
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.2078337669372559 seconds.

--------- ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/subject_phenotype.tsv ---------
table_name:subject_phenotype
SPARC: subject_phenotype: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/subject_phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9805107116699219 seconds.

--------- ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/phenotype_disease.tsv ---------
table_name:phenotype_disease
SPARC: phenotype_disease: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/phenotype_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9384114742279053 seconds.

--------- ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/collection_compound.tsv ---------
table_name:collection_compound
SPARC: collection_compound: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/collection_compound.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8801047801971436 seconds.

--------- ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/protein_gene.tsv ---------
table_name:protein_gene
SPARC: protein_gene: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/protein_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9216434955596924 seconds.

--------- ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/phenotype_gene.tsv ---------
table_name:phenotype_gene
SPARC: phenotype_gene: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/phenotype_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8852808475494385 seconds.

--------- ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/phenotype.tsv ---------
table_name:phenotype
SPARC: phenotype: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9701840877532959 seconds.

--------- ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/subject_disease.tsv ---------
table_name:subject_disease
SPARC: subject_disease: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/subject_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.947310209274292 seconds.

--------- ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/collection_phenotype.tsv ---------
table_name:collection_phenotype
SPARC: collection_phenotype: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/collection_phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9334557056427002 seconds.

--------- ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/protein.tsv ---------
table_name:protein
SPARC: protein: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/protein.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9033164978027344 seconds.

--------- ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/ncbi_taxonomy.tsv ---------
table_name:ncbi_taxonomy
SPARC: ncbi_taxonomy: Read from file: df: #rows = 11, #cols: 5

#Lines in file ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/ncbi_taxonomy.tsv: 12
df: #rows = 11, #cols: 5
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.ncbi_taxonomy;
qt_df:                   pk
0     NCBI:txid10149
1    NCBI:txid543564
2      NCBI:txid5823
3     NCBI:txid99755
4       NCBI:txid287
..               ...
155   NCBI:txid64518
156    NCBI:txid4555
157   NCBI:txid84112
158    NCBI:txid4932
159    NCBI:txid3847

[160 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 160, #cols: 1

df_pk (at most first 10 elements): ['NCBI:txid10090', 'NCBI:txid10114', 'NCBI:txid10116', 'NCBI:txid40674', 'NCBI:txid9606', 'NCBI:txid9615', 'NCBI:txid9669', 'NCBI:txid9685', 'NCBI:txid9823', 'NCBI:txid9825']
qt_pk (at most first 10 elements): ['NCBI:txid10149', 'NCBI:txid543564', 'NCBI:txid5823', 'NCBI:txid99755', 'NCBI:txid287', 'NCBI:txid75728', 'NCBI:txid252141', 'NCBI:txid382', 'NCBI:txid59463', 'NCBI:txid39293']
---- Removed rows from df with matching pk
*** Entering ncbi_taxonomy to database ***
df: #rows = 4, #cols: 5

A slice of df:
               id  ... synonyms
9  NCBI:txid10114  ...       []
8  NCBI:txid40674  ...       []
7   NCBI:txid9669  ...       []
4   NCBI:txid9825  ...       []

[4 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.0292630195617676 seconds.

--------- ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/collection_protein.tsv ---------
table_name:collection_protein
SPARC: collection_protein: Read from file: df: #rows = 0, #cols: 3

/home/mano/DRC/DRC-Portals/database/C2M2/populateC2M2FromS3.py:326: DtypeWarning: Columns (19) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv(table_str, delimiter='\t');
#Lines in file ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/collection_protein.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9101629257202148 seconds.

--------- ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/analysis_type.tsv ---------
table_name:analysis_type
SPARC: analysis_type: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/analysis_type.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8936703205108643 seconds.

--------- ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/file_describes_biosample.tsv ---------
table_name:file_describes_biosample
SPARC: file_describes_biosample: Read from file: df: #rows = 101283, #cols: 4

#Lines in file ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/file_describes_biosample.tsv: 101284
df: #rows = 101283, #cols: 4
pKeys: ['file_id_namespace', 'file_local_id', 'biosample_id_namespace', 'biosample_local_id']
Going to write the count query
Wrote the count query
*** Entering file_describes_biosample to database ***
df: #rows = 101283, #cols: 4

A slice of df:
  file_id_namespace  ...                                 biosample_local_id
0       SPARC.file:  ...  N:dataset:6f7e029d-684e-4603-9dea-ec82a53c5a75...
1       SPARC.file:  ...  N:dataset:a59a7c4c-0978-4bbe-8d92-93218b5c7b31...
2       SPARC.file:  ...  N:dataset:7067a6f5-8df2-4ef8-953a-4d0bfafe6555...
3       SPARC.file:  ...  N:dataset:7067a6f5-8df2-4ef8-953a-4d0bfafe6555...
4       SPARC.file:  ...  N:dataset:9472e802-7896-4adf-a34b-1e9af1bf2cbe...
5       SPARC.file:  ...  N:dataset:c46429b9-6db2-40ad-86e5-36ed759a1ee7...
6       SPARC.file:  ...  N:dataset:9dd891fc-6d47-4821-95a0-fc7ff2aeee41...
7       SPARC.file:  ...  N:dataset:199eb37d-5f1d-4848-98a5-ab105dae48ea...
8       SPARC.file:  ...  N:dataset:e1f838d8-09d4-4648-a977-08d6358a390c...
9       SPARC.file:  ...  N:dataset:834e182d-b52c-4389-ad09-6ec9467f3b55...

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:     count
0  101283
count:101283
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 2.8075451850891113 seconds.

--------- ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/file.tsv ---------
table_name:file
SPARC: file: Read from file: df: #rows = 101283, #cols: 20

#Lines in file ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/file.tsv: 101284
df: #rows = 101283, #cols: 20
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering file to database ***
df: #rows = 101283, #cols: 20

A slice of df:
  id_namespace  ...                                      persistent_id
0  SPARC.file:  ...  https://discover.pennsieve.io/package/N:packag...
1  SPARC.file:  ...  https://discover.pennsieve.io/package/N:packag...
2  SPARC.file:  ...  https://discover.pennsieve.io/package/N:packag...
3  SPARC.file:  ...  https://discover.pennsieve.io/package/N:packag...
4  SPARC.file:  ...  https://discover.pennsieve.io/package/N:packag...
5  SPARC.file:  ...  https://discover.pennsieve.io/package/N:packag...
6  SPARC.file:  ...  https://discover.pennsieve.io/package/N:packag...
7  SPARC.file:  ...  https://discover.pennsieve.io/package/N:packag...
8  SPARC.file:  ...  https://discover.pennsieve.io/package/N:packag...
9  SPARC.file:  ...  https://discover.pennsieve.io/package/N:packag...

[10 rows x 5 columns]
Data inserted successfully!
sql_count_df:     count
0  101283
count:101283
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 7.335299015045166 seconds.

--------- ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/collection_gene.tsv ---------
table_name:collection_gene
SPARC: collection_gene: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/collection_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9593653678894043 seconds.

--------- ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/biosample_from_subject.tsv ---------
table_name:biosample_from_subject
SPARC: biosample_from_subject: Read from file: df: #rows = 5414, #cols: 5

#Lines in file ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/biosample_from_subject.tsv: 5415
df: #rows = 5414, #cols: 5
pKeys: ['biosample_id_namespace', 'biosample_local_id', 'subject_id_namespace', 'subject_local_id']
Going to write the count query
Wrote the count query
*** Entering biosample_from_subject to database ***
df: #rows = 5414, #cols: 5

A slice of df:
  biosample_id_namespace  ... age_at_sampling
0          SPARC.sample:  ...             NaN
1          SPARC.sample:  ...             NaN
2          SPARC.sample:  ...             NaN
3          SPARC.sample:  ...             NaN
4          SPARC.sample:  ...             NaN
5          SPARC.sample:  ...             NaN
6          SPARC.sample:  ...             NaN
7          SPARC.sample:  ...             NaN
8          SPARC.sample:  ...             NaN
9          SPARC.sample:  ...             NaN

[10 rows x 5 columns]
Data inserted successfully!
sql_count_df:    count
0   5414
count:5414
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.124781847000122 seconds.

--------- ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/file_describes_collection.tsv ---------
table_name:file_describes_collection
SPARC: file_describes_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/file_describes_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8926470279693604 seconds.

--------- ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/subject_race.tsv ---------
table_name:subject_race
SPARC: subject_race: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/subject_race.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9644293785095215 seconds.

--------- ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/collection_in_collection.tsv ---------
table_name:collection_in_collection
SPARC: collection_in_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/collection_in_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8157274723052979 seconds.

--------- ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/collection_defined_by_project.tsv ---------
table_name:collection_defined_by_project
SPARC: collection_defined_by_project: Read from file: df: #rows = 260, #cols: 4

#Lines in file ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/collection_defined_by_project.tsv: 261
df: #rows = 260, #cols: 4
pKeys: ['collection_id_namespace', 'collection_local_id', 'project_id_namespace', 'project_local_id']
Going to write the count query
Wrote the count query
*** Entering collection_defined_by_project to database ***
df: #rows = 260, #cols: 4

A slice of df:
  collection_id_namespace  ... project_local_id
0       SPARC.collection:  ...      OT2OD025342
1       SPARC.collection:  ...      OT2OD023848
2       SPARC.collection:  ...      OT2OD023848
3       SPARC.collection:  ...      OT2OD023848
4       SPARC.collection:  ...      OT2OD023848
5       SPARC.collection:  ...      OT2OD023848
6       SPARC.collection:  ...      OT2OD023848
7       SPARC.collection:  ...      OT2OD023848
8       SPARC.collection:  ...      OT2OD023848
9       SPARC.collection:  ...      OT2OD023848

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:    count
0    260
count:260
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.0406324863433838 seconds.

--------- ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/collection_substance.tsv ---------
table_name:collection_substance
SPARC: collection_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/collection_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9743270874023438 seconds.

--------- ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/biosample_substance.tsv ---------
table_name:biosample_substance
SPARC: biosample_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/biosample_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.963231086730957 seconds.

--------- ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/project.tsv ---------
table_name:project
SPARC: project: Read from file: df: #rows = 46, #cols: 7

#Lines in file ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/project.tsv: 47
df: #rows = 46, #cols: 7
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering project to database ***
df: #rows = 46, #cols: 7

A slice of df:
     id_namespace     local_id  ... creation_time       abbreviation
0          SPARC:        SPARC  ...    2017-09-21              SPARC
1  SPARC.project:  OT2OD025342  ...           NaN  SPARC_OT2OD025342
2  SPARC.project:  OT2OD023848  ...           NaN  SPARC_OT2OD023848
3  SPARC.project:  OT2OD025340  ...           NaN  SPARC_OT2OD025340
4  SPARC.project:  OT3OD025349  ...           NaN  SPARC_OT3OD025349
5  SPARC.project:  OT2OD024899  ...           NaN  SPARC_OT2OD024899
6  SPARC.project:  OT2OD023864  ...           NaN  SPARC_OT2OD023864
7  SPARC.project:  OT2OD023847  ...           NaN  SPARC_OT2OD023847
8  SPARC.project:  OT2OD023853  ...           NaN  SPARC_OT2OD023853
9  SPARC.project:  OT2OD023854  ...           NaN  SPARC_OT2OD023854

[10 rows x 5 columns]
Data inserted successfully!
sql_count_df:    count
0     46
count:46
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.0175042152404785 seconds.

--------- ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/anatomy.tsv ---------
table_name:anatomy
SPARC: anatomy: Read from file: df: #rows = 45, #cols: 4

#Lines in file ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/anatomy.tsv: 46
df: #rows = 45, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.anatomy;
qt_df:                  pk
0    UBERON:0000033
1    UBERON:0000473
2    UBERON:0003714
3    UBERON:0008337
4    UBERON:0001630
..              ...
199  UBERON:0000948
200  UBERON:0002066
201  UBERON:0001037
202  UBERON:0002385
203  UBERON:0000002

[204 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 204, #cols: 1

df_pk (at most first 10 elements): ['UBERON:0000010', 'UBERON:0000044', 'UBERON:0000045', 'UBERON:0000057', 'UBERON:0000160', 'UBERON:0000178', 'UBERON:0000945', 'UBERON:0000948', 'UBERON:0001003', 'UBERON:0001013']
qt_pk (at most first 10 elements): ['UBERON:0000033', 'UBERON:0000473', 'UBERON:0003714', 'UBERON:0008337', 'UBERON:0001630', 'CL:0002620', 'UBERON:0001914', 'UBERON:0001474', 'UBERON:0001013', 'UBERON:0001723']
---- Removed rows from df with matching pk
*** Entering anatomy to database ***
df: #rows = 26, #cols: 4

A slice of df:
                id  ... synonyms
1   UBERON:0000010  ...       []
36  UBERON:0000045  ...       []
34  UBERON:0000057  ...       []
22  UBERON:0001018  ...       []
38  UBERON:0001103  ...       []
19  UBERON:0001556  ...       []
15  UBERON:0001649  ...       []
39  UBERON:0001737  ...       []
30  UBERON:0001759  ...       []
43  UBERON:0001809  ...       []

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.8806912899017334 seconds.

--------- ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/assay_type.tsv ---------
table_name:assay_type
SPARC: assay_type: Read from file: df: #rows = 10, #cols: 4

#Lines in file ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/assay_type.tsv: 11
df: #rows = 10, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.assay_type;
qt_df:               pk
0    OBI:0003297
1    OBI:0001985
2    OBI:0003094
3    OBI:0003306
4    OBI:0000185
5    OBI:0002762
6    OBI:0003097
7    OBI:0001920
8    OBI:0003305
9    OBI:0003304
10   OBI:0003034
11   OBI:0000716
12   OBI:0003108
13   OBI:0600047
14   OBI:0003101
15   OBI:0002118
16   OBI:0003100
17   OBI:0003303
18   OBI:0001177
19   OBI:0003312
20   OBI:0003301
21   OBI:0003093
22   OBI:0002117
23   OBI:0003110
24   OBI:0003311
25   OBI:0003104
26   OBI:0001848
27   OBI:0001977
28   OBI:0003299
29   OBI:0003089
30   OBI:0002984
31   OBI:0000623
32   OBI:0003105
33   OBI:0001631
34   OBI:0003092
35   OBI:0003103
36   OBI:0003107
37   OBI:0003300
38   OBI:0002631
39   OBI:0003033
40  CHMO:0000087
41   OBI:0003099
42   OBI:0003314
43   OBI:0003302
44   OBI:0001271
45   OBI:0003098
46   OBI:0000470
47   OBI:0000626
48   OBI:0003087
49   OBI:0003313
50   OBI:0003109
---- Executed query, got data.frame: qt_df: #rows = 51, #cols: 1

df_pk (at most first 10 elements): ['OBI:0000185', 'OBI:0000424', 'OBI:0000454', 'OBI:0001271', 'OBI:0001980', 'OBI:0001986', 'OBI:0002119', 'OBI:0002174', 'OBI:0002176', 'OBI:0002985']
qt_pk (at most first 10 elements): ['OBI:0003297', 'OBI:0001985', 'OBI:0003094', 'OBI:0003306', 'OBI:0000185', 'OBI:0002762', 'OBI:0003097', 'OBI:0001920', 'OBI:0003305', 'OBI:0003304']
---- Removed rows from df with matching pk
*** Entering assay_type to database ***
df: #rows = 8, #cols: 4

A slice of df:
            id  ... synonyms
5  OBI:0000424  ...       []
6  OBI:0000454  ...       []
3  OBI:0001980  ...       []
9  OBI:0001986  ...       []
0  OBI:0002119  ...       []
8  OBI:0002174  ...       []
2  OBI:0002176  ...       []
4  OBI:0002985  ...       []

[8 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.8844239711761475 seconds.

--------- ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/biosample_disease.tsv ---------
table_name:biosample_disease
SPARC: biosample_disease: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/biosample_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8945512771606445 seconds.

--------- ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/collection_anatomy.tsv ---------
table_name:collection_anatomy
SPARC: collection_anatomy: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/collection_anatomy.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.810455322265625 seconds.

--------- ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/gene.tsv ---------
table_name:gene
SPARC: gene: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8651909828186035 seconds.

--------- ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/biosample.tsv ---------
table_name:biosample
SPARC: biosample: Read from file: df: #rows = 5414, #cols: 8

#Lines in file ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/biosample.tsv: 5415
df: #rows = 5414, #cols: 8
SPARC: biosample table: changed column name assay_type to sample_prep_method
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering biosample to database ***
df: #rows = 5414, #cols: 8

A slice of df:
    id_namespace  ... persistent_id
0  SPARC.sample:  ...           NaN
1  SPARC.sample:  ...           NaN
2  SPARC.sample:  ...           NaN
3  SPARC.sample:  ...           NaN
4  SPARC.sample:  ...           NaN
5  SPARC.sample:  ...           NaN
6  SPARC.sample:  ...           NaN
7  SPARC.sample:  ...           NaN
8  SPARC.sample:  ...           NaN
9  SPARC.sample:  ...           NaN

[10 rows x 5 columns]
Data inserted successfully!
sql_count_df:    count
0   5414
count:5414
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.1167190074920654 seconds.

--------- ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/file_describes_subject.tsv ---------
table_name:file_describes_subject
SPARC: file_describes_subject: Read from file: df: #rows = 101283, #cols: 4

#Lines in file ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/file_describes_subject.tsv: 101284
df: #rows = 101283, #cols: 4
pKeys: ['file_id_namespace', 'file_local_id', 'subject_id_namespace', 'subject_local_id']
Going to write the count query
Wrote the count query
*** Entering file_describes_subject to database ***
df: #rows = 101283, #cols: 4

A slice of df:
  file_id_namespace  ...                                   subject_local_id
0       SPARC.file:  ...  N:dataset:6f7e029d-684e-4603-9dea-ec82a53c5a75...
1       SPARC.file:  ...  N:dataset:a59a7c4c-0978-4bbe-8d92-93218b5c7b31...
2       SPARC.file:  ...  N:dataset:7067a6f5-8df2-4ef8-953a-4d0bfafe6555...
3       SPARC.file:  ...  N:dataset:7067a6f5-8df2-4ef8-953a-4d0bfafe6555...
4       SPARC.file:  ...  N:dataset:9472e802-7896-4adf-a34b-1e9af1bf2cbe...
5       SPARC.file:  ...  N:dataset:c46429b9-6db2-40ad-86e5-36ed759a1ee7...
6       SPARC.file:  ...   N:dataset:9dd891fc-6d47-4821-95a0-fc7ff2aeee41_0
7       SPARC.file:  ...  N:dataset:199eb37d-5f1d-4848-98a5-ab105dae48ea...
8       SPARC.file:  ...  N:dataset:e1f838d8-09d4-4648-a977-08d6358a390c...
9       SPARC.file:  ...  N:dataset:834e182d-b52c-4389-ad09-6ec9467f3b55...

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:     count
0  101283
count:101283
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 2.9819610118865967 seconds.

--------- ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/subject.tsv ---------
table_name:subject
SPARC: subject: Read from file: df: #rows = 3570, #cols: 10

#Lines in file ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/subject.tsv: 3571
df: #rows = 3570, #cols: 10
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering subject to database ***
df: #rows = 3570, #cols: 10

A slice of df:
     id_namespace  ... persistent_id
0  SPARC.subject:  ...           NaN
1  SPARC.subject:  ...           NaN
2  SPARC.subject:  ...           NaN
3  SPARC.subject:  ...           NaN
4  SPARC.subject:  ...           NaN
5  SPARC.subject:  ...           NaN
6  SPARC.subject:  ...           NaN
7  SPARC.subject:  ...           NaN
8  SPARC.subject:  ...           NaN
9  SPARC.subject:  ...           NaN

[10 rows x 5 columns]
Data inserted successfully!
sql_count_df:    count
0   3570
count:3570
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.114750623703003 seconds.

--------- ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/file_format.tsv ---------
table_name:file_format
SPARC: file_format: Read from file: df: #rows = 25, #cols: 4

#Lines in file ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/file_format.tsv: 26
df: #rows = 25, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.file_format;
qt_df:              pk
0   format:3603
1   format:3004
2   format:3578
3   format:3506
4   format:3464
5   format:3579
6   format:3327
7   format:3987
8   format:2332
9   format:2572
10  format:3591
11  format:3590
12  format:3873
13  format:3006
14  format:3462
15  format:1930
16  format:3468
17  format:3727
18  format:3752
19  format:3829
20  format:3583
21  format:3981
22  format:3989
23  format:2330
24  format:3508
25  format:2331
26  format:3003
27  format:3016
28  format:3839
29  format:3008
30  format:3620
31  format:2333
32  format:3475
---- Executed query, got data.frame: qt_df: #rows = 33, #cols: 1

df_pk (at most first 10 elements): ['format:1915', 'format:1930', 'format:1964', 'format:2330', 'format:2331', 'format:2332', 'format:2333', 'format:2572', 'format:3464', 'format:3507']
qt_pk (at most first 10 elements): ['format:3603', 'format:3004', 'format:3578', 'format:3506', 'format:3464', 'format:3579', 'format:3327', 'format:3987', 'format:2332', 'format:2572']
---- Removed rows from df with matching pk
*** Entering file_format to database ***
df: #rows = 14, #cols: 4

A slice of df:
             id  ... synonyms
22  format:1915  ...       []
11  format:1964  ...       []
8   format:3507  ...       []
5   format:3547  ...       []
20  format:3554  ...       []
24  format:3604  ...       []
16  format:3626  ...       []
7   format:3751  ...       []
1   format:3990  ...       []
13  format:3996  ...       []

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9178066253662109 seconds.

--------- ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/biosample_gene.tsv ---------
table_name:biosample_gene
SPARC: biosample_gene: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/biosample_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9275491237640381 seconds.

--------- ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/primary_dcc_contact.tsv ---------
table_name:primary_dcc_contact
>>>>>>>> Time taken to ingest the metadata from this file: 6.079673767089844e-05 seconds.

--------- ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/subject_substance.tsv ---------
table_name:subject_substance
SPARC: subject_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/subject_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9516229629516602 seconds.

--------- ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/collection.tsv ---------
table_name:collection
SPARC: collection: Read from file: df: #rows = 260, #cols: 8

#Lines in file ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/collection.tsv: 261
df: #rows = 260, #cols: 8
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering collection to database ***
df: #rows = 260, #cols: 8

A slice of df:
        id_namespace  ... abbreviation
0  SPARC.collection:  ...    0khe_2os4
1  SPARC.collection:  ...    0kpx_xh0x
2  SPARC.collection:  ...    0y4e_eskx
3  SPARC.collection:  ...    14qt_e5f0
4  SPARC.collection:  ...    1h3s_thms
5  SPARC.collection:  ...    1uno_tynt
6  SPARC.collection:  ...    1upo_xvkt
7  SPARC.collection:  ...    23je_ute3
8  SPARC.collection:  ...    36ua_upkq
9  SPARC.collection:  ...    3g8i_abjh

[10 rows x 5 columns]
Data inserted successfully!
sql_count_df:    count
0    260
count:260
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.023956060409546 seconds.

--------- ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/compound.tsv ---------
table_name:compound
SPARC: compound: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/compound.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9606583118438721 seconds.

--------- ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/subject_in_collection.tsv ---------
table_name:subject_in_collection
SPARC: subject_in_collection: Read from file: df: #rows = 3570, #cols: 4

Processing C2M2 Files...:  50%|█████     | 6/12 [25:15<26:15, 262.54s/it]#Lines in file ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/subject_in_collection.tsv: 3571
df: #rows = 3570, #cols: 4
pKeys: ['subject_id_namespace', 'subject_local_id', 'collection_id_namespace', 'collection_local_id']
Going to write the count query
Wrote the count query
*** Entering subject_in_collection to database ***
df: #rows = 3570, #cols: 4

A slice of df:
  subject_id_namespace  ...                             collection_local_id
0       SPARC.subject:  ...  N:dataset:36b1a054-d05c-46ea-ade1-84cfe2a15a6c
1       SPARC.subject:  ...  N:dataset:36b1a054-d05c-46ea-ade1-84cfe2a15a6c
2       SPARC.subject:  ...  N:dataset:e70a0529-3f7d-41dd-beee-26d024540f2f
3       SPARC.subject:  ...  N:dataset:e70a0529-3f7d-41dd-beee-26d024540f2f
4       SPARC.subject:  ...  N:dataset:e70a0529-3f7d-41dd-beee-26d024540f2f
5       SPARC.subject:  ...  N:dataset:e70a0529-3f7d-41dd-beee-26d024540f2f
6       SPARC.subject:  ...  N:dataset:e70a0529-3f7d-41dd-beee-26d024540f2f
7       SPARC.subject:  ...  N:dataset:80a485bf-0d9d-425d-9f51-94b59f842ede
8       SPARC.subject:  ...  N:dataset:80a485bf-0d9d-425d-9f51-94b59f842ede
9       SPARC.subject:  ...  N:dataset:80a485bf-0d9d-425d-9f51-94b59f842ede

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:    count
0   3570
count:3570
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.0489413738250732 seconds.

--------- ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/project_in_project.tsv ---------
table_name:project_in_project
SPARC: project_in_project: Read from file: df: #rows = 45, #cols: 4

#Lines in file ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/project_in_project.tsv: 46
df: #rows = 45, #cols: 4
pKeys: ['parent_project_id_namespace', 'parent_project_local_id', 'child_project_id_namespace', 'child_project_local_id']
Going to write the count query
Wrote the count query
*** Entering project_in_project to database ***
df: #rows = 45, #cols: 4

A slice of df:
  parent_project_id_namespace  ... child_project_local_id
0                      SPARC:  ...            OT2OD025342
1                      SPARC:  ...            OT2OD023848
2                      SPARC:  ...            OT2OD025340
3                      SPARC:  ...            OT3OD025349
4                      SPARC:  ...            OT2OD024899
5                      SPARC:  ...            OT2OD023864
6                      SPARC:  ...            OT2OD023847
7                      SPARC:  ...            OT2OD023853
8                      SPARC:  ...            OT2OD023854
9                      SPARC:  ...           OT2OD0204899

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:    count
0     45
count:45
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.0230607986450195 seconds.

--------- ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/collection_taxonomy.tsv ---------
table_name:collection_taxonomy
SPARC: collection_taxonomy: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/collection_taxonomy.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9151298999786377 seconds.

--------- ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/substance.tsv ---------
table_name:substance
SPARC: substance: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/SPARC/c2m2_2024JUN15_submit/c2m2_2024JUN15_submit/substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.777451753616333 seconds.


================================== DCC short label: ERCC =============================================
Unpack zip file: c2m2_extract_path: ingest/c2m2s/ERCC/datapackage
--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/dcc.tsv ---------
table_name:dcc
ERCC: dcc: Read from file: df: #rows = 1, #cols: 9

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/dcc.tsv: 2
df: #rows = 1, #cols: 9
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.dcc;
qt_df:                                pk
0        cfde_registry_dcc:glygen
1     cfde_registry_dcc:kidsfirst
2         cfde_registry_dcc:sparc
3           cfde_registry_dcc:4dn
4  cfde_registry_dcc:metabolomics
5        cfde_registry_dcc:hubmap
---- Executed query, got data.frame: qt_df: #rows = 6, #cols: 1

df_pk (at most first 10 elements): ['cfde_registry_dcc:exrna']
qt_pk (at most first 10 elements): ['cfde_registry_dcc:glygen', 'cfde_registry_dcc:kidsfirst', 'cfde_registry_dcc:sparc', 'cfde_registry_dcc:4dn', 'cfde_registry_dcc:metabolomics', 'cfde_registry_dcc:hubmap']
---- Removed rows from df with matching pk
*** Entering dcc to database ***
df: #rows = 1, #cols: 9

A slice of df:
                        id  ... contact_email
0  cfde_registry_dcc:exrna  ...  dc12@bcm.edu

[1 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.014829158782959 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/id_namespace.tsv ---------
table_name:id_namespace
ERCC: id_namespace: Read from file: df: #rows = 1, #cols: 4

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/id_namespace.tsv: 2
df: #rows = 1, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.id_namespace;
qt_df:                                         pk
0   https://www.metabolomicsworkbench.org/
1                           SPARC.subject:
2                              SPARC.file:
3             https://www.data.glygen.org/
4              https://data.4dnucleome.org
5                        SPARC.collection:
6                                   SPARC:
7                            SPARC.sample:
8                               kidsfirst:
9           tag:hubmapconsortium.org,2023:
10                          SPARC.project:
---- Executed query, got data.frame: qt_df: #rows = 11, #cols: 1

df_pk (at most first 10 elements): ['ERCC-exRNA']
qt_pk (at most first 10 elements): ['https://www.metabolomicsworkbench.org/', 'SPARC.subject:', 'SPARC.file:', 'https://www.data.glygen.org/', 'https://data.4dnucleome.org', 'SPARC.collection:', 'SPARC:', 'SPARC.sample:', 'kidsfirst:', 'tag:hubmapconsortium.org,2023:']
---- Removed rows from df with matching pk
*** Entering id_namespace to database ***
df: #rows = 1, #cols: 4

A slice of df:
           id  ...                                        description
0  ERCC-exRNA  ...  The exRNA Atlas is the data repository of the ...

[1 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9460635185241699 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/disease.tsv ---------
table_name:disease
ERCC: disease: Read from file: df: #rows = 23, #cols: 4

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/disease.tsv: 24
df: #rows = 23, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.disease;
qt_df:                pk
0       DOID:2030
1      DOID:10892
2         DOID:18
3         DOID:17
4    DOID:0050830
..            ...
148  DOID:0050700
149  DOID:0080171
150  DOID:0060180
151  DOID:0014667
152     DOID:1289

[153 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 153, #cols: 1

df_pk (at most first 10 elements): ['DOID:0080832', 'DOID:10286', 'DOID:10534', 'DOID:10652', 'DOID:10941', 'DOID:1184', 'DOID:12217', 'DOID:1287', 'DOID:14330', 'DOID:1520']
qt_pk (at most first 10 elements): ['DOID:2030', 'DOID:10892', 'DOID:18', 'DOID:17', 'DOID:0050830', 'DOID:1682', 'DOID:5052', 'DOID:9269', 'DOID:255', 'DOID:557']
---- Removed rows from df with matching pk
*** Entering disease to database ***
df: #rows = 14, #cols: 4

A slice of df:
              id  ...                                           synonyms
0   DOID:0080832  ...                                                 []
1     DOID:10286  ...     ["cancer of prostate","carcinoma of prostate"]
2     DOID:10534  ...  ["DOID:10539","DOID:10542","DOID:10543","DOID:...
4     DOID:10941  ...                                 ["brain aneurysm"]
6     DOID:12217  ...  ["Dementia with Lewy bodies","Diffuse Lewy bod...
7      DOID:1287  ...  ["DOID:73","disease of subdivision of hemolymp...
9      DOID:1520  ...         ["carcinoma of colon","Colonic carcinoma"]
10      DOID:219  ...                                                 []
13     DOID:3073  ...  ["brain Glioblastoma","Glioblastoma multiforme...
15     DOID:4905  ...  ["carcinoma of pancreas","Exocrine pancreas ca...

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.952949047088623 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/data_type.tsv ---------
table_name:data_type
ERCC: data_type: Read from file: df: #rows = 3, #cols: 4

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/data_type.tsv: 4
df: #rows = 3, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.data_type;
qt_df:              pk
0     data:3112
1     data:3108
2     data:0006
3     data:1916
4     data:3210
5     data:3488
6     data:3111
7     data:2044
8     data:3869
9     data:1714
10    data:2536
11  ILX:0793824
12    data:1383
13    data:3110
14    data:2603
15    data:3494
16    data:2764
17    data:0928
18    data:2082
19    data:3002
20    data:3914
21    data:3498
22    data:2887
23    data:2968
24  ILX:0793825
---- Executed query, got data.frame: qt_df: #rows = 25, #cols: 1

df_pk (at most first 10 elements): ['data:2048', 'data:2082', 'data:3495']
qt_pk (at most first 10 elements): ['data:3112', 'data:3108', 'data:0006', 'data:1916', 'data:3210', 'data:3488', 'data:3111', 'data:2044', 'data:3869', 'data:1714']
---- Removed rows from df with matching pk
*** Entering data_type to database ***
df: #rows = 2, #cols: 4

A slice of df:
          id  ...               synonyms
0  data:2048  ...  ["Document","Record"]
2  data:3495  ...      ["RNA sequences"]

[2 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9836821556091309 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection_disease.tsv ---------
table_name:collection_disease
ERCC: collection_disease: Read from file: df: #rows = 40, #cols: 3

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection_disease.tsv: 41
df: #rows = 40, #cols: 3
pKeys: ['collection_id_namespace', 'collection_local_id', 'disease']
Going to write the count query
Wrote the count query
*** Entering collection_disease to database ***
df: #rows = 40, #cols: 3

A slice of df:
  collection_id_namespace  collection_local_id     disease
0              ERCC-exRNA  EXR-MANSE1oCqMmF-AN   DOID:2841
1              ERCC-exRNA  EXR-KVICK1oIp40e-AN   DOID:9074
2              ERCC-exRNA  EXR-DGALA1TA1HoZ-AN   DOID:9744
3              ERCC-exRNA  EXR-JFREE1eZDUKB-AN   DOID:1287
4              ERCC-exRNA  EXR-DGALA1ykypVf-AN   DOID:9744
5              ERCC-exRNA  EXR-TPATE10baswA-AN    DOID:409
6              ERCC-exRNA  EXR-KJENS10lPClY-AN   DOID:6713
7              ERCC-exRNA  EXR-KJENS1sPlvS2-AN  DOID:10652
8              ERCC-exRNA  EXR-KJENS1sPlvS2-AN  DOID:14330
9              ERCC-exRNA  EXR-DGALA1P4v4GC-AN   DOID:9744
Data inserted successfully!
sql_count_df:    count
0     40
count:40
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.058638572692871 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/file_in_collection.tsv ---------
table_name:file_in_collection
ERCC: file_in_collection: Read from file: df: #rows = 178133, #cols: 4

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/file_in_collection.tsv: 178134
df: #rows = 178133, #cols: 4
pKeys: ['file_id_namespace', 'file_local_id', 'collection_id_namespace', 'collection_local_id']
Going to write the count query
Wrote the count query
*** Entering file_in_collection to database ***
df: #rows = 178133, #cols: 4

A slice of df:
  file_id_namespace  ...  collection_local_id
0        ERCC-exRNA  ...  EXR-DERLE1Dj6liR-AN
1        ERCC-exRNA  ...  EXR-DERLE1Dj6liR-AN
2        ERCC-exRNA  ...  EXR-DERLE1Dj6liR-AN
3        ERCC-exRNA  ...  EXR-DERLE1Dj6liR-AN
4        ERCC-exRNA  ...  EXR-DERLE1Dj6liR-AN
5        ERCC-exRNA  ...  EXR-DERLE1Dj6liR-AN
6        ERCC-exRNA  ...  EXR-DERLE1Dj6liR-AN
7        ERCC-exRNA  ...  EXR-DERLE1Dj6liR-AN
8        ERCC-exRNA  ...  EXR-DERLE1Dj6liR-AN
9        ERCC-exRNA  ...  EXR-DERLE1Dj6liR-AN

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:     count
0  178133
count:178133
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 5.224209308624268 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/subject_role_taxonomy.tsv ---------
table_name:subject_role_taxonomy
ERCC: subject_role_taxonomy: Read from file: df: #rows = 7209, #cols: 4

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/subject_role_taxonomy.tsv: 7210
df: #rows = 7209, #cols: 4
pKeys: ['subject_id_namespace', 'subject_local_id', 'role_id', 'taxonomy_id']
Going to write the count query
Wrote the count query
*** Entering subject_role_taxonomy to database ***
df: #rows = 7209, #cols: 4

A slice of df:
  subject_id_namespace  ...    taxonomy_id
0           ERCC-exRNA  ...  NCBI:txid9606
1           ERCC-exRNA  ...  NCBI:txid9606
2           ERCC-exRNA  ...  NCBI:txid9606
3           ERCC-exRNA  ...  NCBI:txid9606
4           ERCC-exRNA  ...  NCBI:txid9606
5           ERCC-exRNA  ...  NCBI:txid9606
6           ERCC-exRNA  ...  NCBI:txid9606
7           ERCC-exRNA  ...  NCBI:txid9606
8           ERCC-exRNA  ...  NCBI:txid9606
9           ERCC-exRNA  ...  NCBI:txid9606

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:    count
0   7209
count:7209
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.1564357280731201 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/biosample_in_collection.tsv ---------
table_name:biosample_in_collection
ERCC: biosample_in_collection: Read from file: df: #rows = 10362, #cols: 4

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/biosample_in_collection.tsv: 10363
df: #rows = 10362, #cols: 4
pKeys: ['biosample_id_namespace', 'biosample_local_id', 'collection_id_namespace', 'collection_local_id']
Going to write the count query
Wrote the count query
*** Entering biosample_in_collection to database ***
df: #rows = 10362, #cols: 4

A slice of df:
  biosample_id_namespace  ...  collection_local_id
0             ERCC-exRNA  ...  EXR-DERLE1Dj6liR-AN
1             ERCC-exRNA  ...  EXR-DERLE1Dj6liR-AN
2             ERCC-exRNA  ...  EXR-DERLE1Dj6liR-AN
3             ERCC-exRNA  ...  EXR-IGHIR1V7Sc5u-AN
4             ERCC-exRNA  ...  EXR-IGHIR1V7Sc5u-AN
5             ERCC-exRNA  ...  EXR-IGHIR1V7Sc5u-AN
6             ERCC-exRNA  ...  EXR-IGHIR1V7Sc5u-AN
7             ERCC-exRNA  ...  EXR-IGHIR1V7Sc5u-AN
8             ERCC-exRNA  ...  EXR-IGHIR1V7Sc5u-AN
9             ERCC-exRNA  ...  EXR-IGHIR1V7Sc5u-AN

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:    count
0  10362
count:10362
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.162055253982544 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/subject_phenotype.tsv ---------
table_name:subject_phenotype
ERCC: subject_phenotype: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/subject_phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9243030548095703 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/phenotype_disease.tsv ---------
table_name:phenotype_disease
ERCC: phenotype_disease: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/phenotype_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8379018306732178 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection_compound.tsv ---------
table_name:collection_compound
ERCC: collection_compound: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection_compound.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8751041889190674 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/protein_gene.tsv ---------
table_name:protein_gene
ERCC: protein_gene: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/protein_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8862221240997314 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/phenotype_gene.tsv ---------
table_name:phenotype_gene
ERCC: phenotype_gene: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/phenotype_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9038543701171875 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/phenotype.tsv ---------
table_name:phenotype
ERCC: phenotype: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9364156723022461 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/subject_disease.tsv ---------
table_name:subject_disease
ERCC: subject_disease: Read from file: df: #rows = 1576, #cols: 4

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/subject_disease.tsv: 1577
df: #rows = 1576, #cols: 4
pKeys: ['subject_id_namespace', 'subject_local_id', 'association_type', 'disease']
Going to write the count query
Wrote the count query
*** Entering subject_disease to database ***
df: #rows = 1576, #cols: 4

A slice of df:
  subject_id_namespace  ...    disease
0           ERCC-exRNA  ...  DOID:2841
1           ERCC-exRNA  ...  DOID:2841
2           ERCC-exRNA  ...  DOID:2841
3           ERCC-exRNA  ...  DOID:2841
4           ERCC-exRNA  ...  DOID:2841
5           ERCC-exRNA  ...  DOID:2841
6           ERCC-exRNA  ...  DOID:2841
7           ERCC-exRNA  ...  DOID:9074
8           ERCC-exRNA  ...  DOID:9074
9           ERCC-exRNA  ...  DOID:9074

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:    count
0   1576
count:1576
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.015679121017456 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection_phenotype.tsv ---------
table_name:collection_phenotype
ERCC: collection_phenotype: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection_phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9417121410369873 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/protein.tsv ---------
table_name:protein
ERCC: protein: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/protein.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8463895320892334 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/ncbi_taxonomy.tsv ---------
table_name:ncbi_taxonomy
ERCC: ncbi_taxonomy: Read from file: df: #rows = 2, #cols: 5

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/ncbi_taxonomy.tsv: 3
df: #rows = 2, #cols: 5
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.ncbi_taxonomy;
qt_df:                   pk
0     NCBI:txid10149
1    NCBI:txid543564
2      NCBI:txid5823
3     NCBI:txid99755
4       NCBI:txid287
..               ...
159   NCBI:txid64518
160    NCBI:txid4555
161   NCBI:txid84112
162    NCBI:txid4932
163    NCBI:txid3847

[164 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 164, #cols: 1

df_pk (at most first 10 elements): ['NCBI:txid10090', 'NCBI:txid9606']
qt_pk (at most first 10 elements): ['NCBI:txid10149', 'NCBI:txid543564', 'NCBI:txid5823', 'NCBI:txid99755', 'NCBI:txid287', 'NCBI:txid75728', 'NCBI:txid252141', 'NCBI:txid382', 'NCBI:txid59463', 'NCBI:txid39293']
---- Removed rows from df with matching pk
*** Entering ncbi_taxonomy to database ***
df: #rows = 0, #cols: 5

A slice of df:
Empty DataFrame
Columns: [id, clade, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9810349941253662 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection_protein.tsv ---------
table_name:collection_protein
ERCC: collection_protein: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection_protein.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9503521919250488 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/analysis_type.tsv ---------
table_name:analysis_type
ERCC: analysis_type: Read from file: df: #rows = 1, #cols: 4

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/analysis_type.tsv: 2
df: #rows = 1, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.analysis_type;
qt_df:             pk
0  OBI:0000726
1  OBI:0200199
2  OBI:0001985
3  OBI:0200085
---- Executed query, got data.frame: qt_df: #rows = 4, #cols: 1

df_pk (at most first 10 elements): ['OBI:0001872']
qt_pk (at most first 10 elements): ['OBI:0000726', 'OBI:0200199', 'OBI:0001985', 'OBI:0200085']
---- Removed rows from df with matching pk
*** Entering analysis_type to database ***
df: #rows = 1, #cols: 4

A slice of df:
            id  ... synonyms
0  OBI:0001872  ...       []

[1 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9524192810058594 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/file_describes_biosample.tsv ---------
table_name:file_describes_biosample
ERCC: file_describes_biosample: Read from file: df: #rows = 178133, #cols: 4

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/file_describes_biosample.tsv: 178134
df: #rows = 178133, #cols: 4
pKeys: ['file_id_namespace', 'file_local_id', 'biosample_id_namespace', 'biosample_local_id']
Going to write the count query
Wrote the count query
*** Entering file_describes_biosample to database ***
df: #rows = 178133, #cols: 4

A slice of df:
  file_id_namespace  ...           biosample_local_id
0        ERCC-exRNA  ...  EXR-DERLE1LLAURPLATCOMP1-BS
1        ERCC-exRNA  ...  EXR-DERLE1LLAURPLATCOMP3-BS
2        ERCC-exRNA  ...  EXR-DERLE1LLAURPLATCOMP2-BS
3        ERCC-exRNA  ...  EXR-DERLE1LLAURPLATCOMP3-BS
4        ERCC-exRNA  ...  EXR-DERLE1LLAURPLATCOMP3-BS
5        ERCC-exRNA  ...  EXR-DERLE1LLAURPLATCOMP3-BS
6        ERCC-exRNA  ...  EXR-DERLE1LLAURPLATCOMP3-BS
7        ERCC-exRNA  ...  EXR-DERLE1LLAURPLATCOMP3-BS
8        ERCC-exRNA  ...  EXR-DERLE1LLAURPLATCOMP3-BS
9        ERCC-exRNA  ...  EXR-DERLE1LLAURPLATCOMP3-BS

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:     count
0  178133
count:178133
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 5.058802604675293 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/file.tsv ---------
table_name:file
ERCC: file: Read from file: df: #rows = 178133, #cols: 20

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/file.tsv: 178134
df: #rows = 178133, #cols: 20
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering file to database ***
df: #rows = 178133, #cols: 20

A slice of df:
  id_namespace  ... persistent_id
0   ERCC-exRNA  ...           NaN
1   ERCC-exRNA  ...           NaN
2   ERCC-exRNA  ...           NaN
3   ERCC-exRNA  ...           NaN
4   ERCC-exRNA  ...           NaN
5   ERCC-exRNA  ...           NaN
6   ERCC-exRNA  ...           NaN
7   ERCC-exRNA  ...           NaN
8   ERCC-exRNA  ...           NaN
9   ERCC-exRNA  ...           NaN

[10 rows x 5 columns]
Data inserted successfully!
sql_count_df:     count
0  178133
count:178133
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 11.16651463508606 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection_gene.tsv ---------
table_name:collection_gene
ERCC: collection_gene: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9957952499389648 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/biosample_from_subject.tsv ---------
table_name:biosample_from_subject
ERCC: biosample_from_subject: Read from file: df: #rows = 10362, #cols: 5

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/biosample_from_subject.tsv: 10363
df: #rows = 10362, #cols: 5
pKeys: ['biosample_id_namespace', 'biosample_local_id', 'subject_id_namespace', 'subject_local_id']
Going to write the count query
Wrote the count query
*** Entering biosample_from_subject to database ***
df: #rows = 10362, #cols: 5

A slice of df:
  biosample_id_namespace  ... age_at_sampling
0             ERCC-exRNA  ...             0.0
1             ERCC-exRNA  ...            36.0
2             ERCC-exRNA  ...            36.0
3             ERCC-exRNA  ...            22.0
4             ERCC-exRNA  ...            45.0
5             ERCC-exRNA  ...            22.0
6             ERCC-exRNA  ...            25.0
7             ERCC-exRNA  ...            25.0
8             ERCC-exRNA  ...            40.0
9             ERCC-exRNA  ...            40.0

[10 rows x 5 columns]
Data inserted successfully!
sql_count_df:    count
0  10362
count:10362
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.187713623046875 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/file_describes_collection.tsv ---------
table_name:file_describes_collection
ERCC: file_describes_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/file_describes_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9210693836212158 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/subject_race.tsv ---------
table_name:subject_race
ERCC: subject_race: Read from file: df: #rows = 1257, #cols: 3

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/subject_race.tsv: 1258
df: #rows = 1257, #cols: 3
pKeys: ['subject_id_namespace', 'subject_local_id', 'race']
Going to write the count query
Wrote the count query
*** Entering subject_race to database ***
df: #rows = 1257, #cols: 3

A slice of df:
  subject_id_namespace         subject_local_id                 race
0           ERCC-exRNA    EXR-IGHIR1DONOR4EE-DO  cfde_subject_race:3
1           ERCC-exRNA    EXR-IGHIR1DONOR3IG-DO  cfde_subject_race:3
2           ERCC-exRNA    EXR-IGHIR1DONOR6CO-DO  cfde_subject_race:3
3           ERCC-exRNA    EXR-IGHIR1DONOR5EC-DO  cfde_subject_race:5
4           ERCC-exRNA    EXR-IGHIR1DONOR2SL-DO  cfde_subject_race:5
5           ERCC-exRNA    EXR-IGHIR1DONOR1MR-DO  cfde_subject_race:3
6           ERCC-exRNA  EXR-IGHIR1DONOR13FdM-DO  cfde_subject_race:3
7           ERCC-exRNA   EXR-IGHIR1DONOR15PB-DO  cfde_subject_race:5
8           ERCC-exRNA   EXR-IGHIR1DONOR10BM-DO  cfde_subject_race:3
9           ERCC-exRNA   EXR-TTUSC1U19ZW1P14-DO  cfde_subject_race:4
Data inserted successfully!
sql_count_df:    count
0   1257
count:1257
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9856369495391846 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection_in_collection.tsv ---------
table_name:collection_in_collection
ERCC: collection_in_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection_in_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9199144840240479 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection_defined_by_project.tsv ---------
table_name:collection_defined_by_project
ERCC: collection_defined_by_project: Read from file: df: #rows = 77, #cols: 4

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection_defined_by_project.tsv: 78
df: #rows = 77, #cols: 4
pKeys: ['collection_id_namespace', 'collection_local_id', 'project_id_namespace', 'project_local_id']
Going to write the count query
Wrote the count query
*** Entering collection_defined_by_project to database ***
df: #rows = 77, #cols: 4

A slice of df:
  collection_id_namespace  ...               project_local_id
0              ERCC-exRNA  ...     EXR-DERLE1LLAURPLATCOMP-ST
1              ERCC-exRNA  ...   EXR-IGHIR1Anticoagulants1-ST
2              ERCC-exRNA  ...          EXR-DGALA120170825-ST
3              ERCC-exRNA  ...  EXR-IGHIR1CircadianRhythm2-ST
4              ERCC-exRNA  ...           EXR-TTUSC1U19xZW1-ST
5              ERCC-exRNA  ...            EXR-KJENS1VolT01-ST
6              ERCC-exRNA  ...  EXR-IGHIR1HbContamination1-ST
7              ERCC-exRNA  ...          EXR-MANSE1ALLERAIR-ST
8              ERCC-exRNA  ...          EXR-KVICK1KCVSLE00-ST
9              ERCC-exRNA  ...      EXR-MTEWA1FeedingStudy-ST

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:    count
0     77
count:77
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9641983509063721 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection_substance.tsv ---------
table_name:collection_substance
ERCC: collection_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8963241577148438 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/biosample_substance.tsv ---------
table_name:biosample_substance
ERCC: biosample_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/biosample_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9128448963165283 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/project.tsv ---------
table_name:project
ERCC: project: Read from file: df: #rows = 60, #cols: 7

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/project.tsv: 61
df: #rows = 60, #cols: 7
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering project to database ***
df: #rows = 60, #cols: 7

A slice of df:
  id_namespace  ...            abbreviation
0   ERCC-exRNA  ...                   exRNA
1   ERCC-exRNA  ...     DERLE1LLAURPLATCOMP
2   ERCC-exRNA  ...   IGHIR1Anticoagulants1
3   ERCC-exRNA  ...          DGALA120170825
4   ERCC-exRNA  ...  IGHIR1CircadianRhythm2
5   ERCC-exRNA  ...           TTUSC1U19xZW1
6   ERCC-exRNA  ...            KJENS1VolT01
7   ERCC-exRNA  ...  IGHIR1HbContamination1
8   ERCC-exRNA  ...          MANSE1ALLERAIR
9   ERCC-exRNA  ...          KVICK1KCVSLE00

[10 rows x 5 columns]
Data inserted successfully!
sql_count_df:    count
0     60
count:60
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.011795997619629 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/anatomy.tsv ---------
table_name:anatomy
ERCC: anatomy: Read from file: df: #rows = 26, #cols: 4

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/anatomy.tsv: 27
df: #rows = 26, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.anatomy;
qt_df:                  pk
0    UBERON:0000033
1    UBERON:0004907
2    UBERON:0000473
3    UBERON:0003714
4    UBERON:0008337
..              ...
225  UBERON:0002262
226  UBERON:0001037
227  UBERON:0002385
228  UBERON:0005363
229  UBERON:0000002

[230 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 230, #cols: 1

df_pk (at most first 10 elements): ['UBERON:0000167', 'UBERON:0000178', 'UBERON:0000363', 'UBERON:0000467', 'UBERON:0000955', 'UBERON:0000995', 'UBERON:0000998', 'UBERON:0001008', 'UBERON:0001017', 'UBERON:0001062']
qt_pk (at most first 10 elements): ['UBERON:0000033', 'UBERON:0004907', 'UBERON:0000473', 'UBERON:0003714', 'UBERON:0008337', 'UBERON:0001630', 'CL:0002620', 'UBERON:0001914', 'UBERON:0001474', 'UBERON:0001013']
---- Removed rows from df with matching pk
*** Entering anatomy to database ***
df: #rows = 15, #cols: 4

A slice of df:
                id  ...                                           synonyms
0   UBERON:0000167  ...                ["buccal cavity","cavity of mouth"]
2   UBERON:0000363  ...  ["lymphoreticular system","mononuclear phagocy...
3   UBERON:0000467  ...  ["body system","connected anatomical system","...
6   UBERON:0000998  ...                                  ["seminal gland"]
7   UBERON:0001008  ...  ["excretory system","systema urinaria","system...
9   UBERON:0001062  ...                                                 []
12  UBERON:0001305  ...  ["follicle of ovary","follicle of ovary viewed...
13  UBERON:0001310  ...                                                 []
14  UBERON:0001555  ...           ["digestive tube","enteric tract","gut"]
15  UBERON:0001558  ...                       ["lower respiratory system"]

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9858124256134033 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/sample_prep_method.tsv ---------
table_name:sample_prep_method
ERCC: sample_prep_method: Read from file: df: #rows = 1, #cols: 4

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/sample_prep_method.tsv: 2
df: #rows = 1, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.sample_prep_method;
qt_df: Empty DataFrame
Columns: [pk]
Index: []
---- Executed query, got data.frame: qt_df: #rows = 0, #cols: 1

df_pk (at most first 10 elements): ['OBI:0001902']
qt_pk (at most first 10 elements): []
---- Removed rows from df with matching pk
*** Entering sample_prep_method to database ***
df: #rows = 1, #cols: 4

A slice of df:
            id  ...                             synonyms
0  OBI:0001902  ...  ["Nucleic Acid Preparation Method"]

[1 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9775848388671875 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/assay_type.tsv ---------
table_name:assay_type
ERCC: assay_type: Read from file: df: #rows = 2, #cols: 4

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/assay_type.tsv: 3
df: #rows = 2, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.assay_type;
qt_df:               pk
0    OBI:0003297
1    OBI:0001980
2    OBI:0003094
3    OBI:0003306
4    OBI:0002762
5    OBI:0003097
6    OBI:0001920
7    OBI:0003034
8    OBI:0003108
9    OBI:0003101
10   OBI:0002118
11   OBI:0003100
12   OBI:0003312
13   OBI:0003301
14   OBI:0001986
15   OBI:0003093
16   OBI:0002117
17   OBI:0003104
18   OBI:0001848
19   OBI:0001977
20   OBI:0003299
21   OBI:0003089
22   OBI:0002984
23   OBI:0000623
24   OBI:0003105
25   OBI:0003092
26   OBI:0002174
27   OBI:0003107
28   OBI:0003033
29   OBI:0002119
30   OBI:0000470
31   OBI:0000626
32   OBI:0003313
33   OBI:0003109
34   OBI:0000454
35   OBI:0001985
36   OBI:0000185
37   OBI:0003305
38   OBI:0003304
39   OBI:0000716
40   OBI:0002985
41   OBI:0600047
42   OBI:0003303
43   OBI:0001177
44   OBI:0003110
45   OBI:0003311
46   OBI:0002176
47   OBI:0001631
48   OBI:0000424
49   OBI:0003103
50   OBI:0003300
51   OBI:0002631
52  CHMO:0000087
53   OBI:0003099
54   OBI:0003314
55   OBI:0003302
56   OBI:0001271
57   OBI:0003098
58   OBI:0003087
---- Executed query, got data.frame: qt_df: #rows = 59, #cols: 1

df_pk (at most first 10 elements): ['OBI:0000893', 'OBI:0002112']
qt_pk (at most first 10 elements): ['OBI:0003297', 'OBI:0001980', 'OBI:0003094', 'OBI:0003306', 'OBI:0002762', 'OBI:0003097', 'OBI:0001920', 'OBI:0003034', 'OBI:0003108', 'OBI:0003101']
---- Removed rows from df with matching pk
*** Entering assay_type to database ***
df: #rows = 2, #cols: 4

A slice of df:
            id  ...                                           synonyms
0  OBI:0000893  ...  ["kinetic polymerase chain reaction","Q-PCR","...
1  OBI:0002112  ...                  ["short RNA-seq","small RNA-seq"]

[2 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9363563060760498 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/biosample_disease.tsv ---------
table_name:biosample_disease
ERCC: biosample_disease: Read from file: df: #rows = 2401, #cols: 4

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/biosample_disease.tsv: 2402
df: #rows = 2401, #cols: 4
pKeys: ['biosample_id_namespace', 'biosample_local_id', 'association_type', 'disease']
Going to write the count query
Wrote the count query
*** Entering biosample_disease to database ***
df: #rows = 2401, #cols: 4

A slice of df:
  biosample_id_namespace  ...    disease
0             ERCC-exRNA  ...  DOID:2841
1             ERCC-exRNA  ...  DOID:2841
2             ERCC-exRNA  ...  DOID:2841
3             ERCC-exRNA  ...  DOID:2841
4             ERCC-exRNA  ...  DOID:2841
5             ERCC-exRNA  ...  DOID:2841
6             ERCC-exRNA  ...  DOID:2841
7             ERCC-exRNA  ...  DOID:2841
8             ERCC-exRNA  ...  DOID:2841
9             ERCC-exRNA  ...  DOID:2841

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:    count
0   2401
count:2401
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9307291507720947 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection_anatomy.tsv ---------
table_name:collection_anatomy
ERCC: collection_anatomy: Read from file: df: #rows = 90, #cols: 3

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection_anatomy.tsv: 91
df: #rows = 90, #cols: 3
pKeys: ['collection_id_namespace', 'collection_local_id', 'anatomy']
Going to write the count query
Wrote the count query
*** Entering collection_anatomy to database ***
df: #rows = 90, #cols: 3

A slice of df:
  collection_id_namespace  collection_local_id         anatomy
0              ERCC-exRNA  EXR-DERLE1Dj6liR-AN  UBERON:0001969
1              ERCC-exRNA  EXR-IGHIR1V7Sc5u-AN  UBERON:0004535
2              ERCC-exRNA  EXR-DGALA1ECRXVs-AN  UBERON:0001017
3              ERCC-exRNA  EXR-IGHIR1tbB6UC-AN  UBERON:0004535
4              ERCC-exRNA  EXR-TTUSC1gCrGDH-AN  UBERON:0004535
5              ERCC-exRNA  EXR-KJENS17CZMbP-AN  UBERON:0002465
6              ERCC-exRNA  EXR-IGHIR1P6qCmn-AN  UBERON:0004535
7              ERCC-exRNA  EXR-MANSE1oCqMmF-AN  UBERON:0002048
8              ERCC-exRNA  EXR-MANSE1oCqMmF-AN  UBERON:0004535
9              ERCC-exRNA  EXR-KVICK1oIp40e-AN  UBERON:0001062
Data inserted successfully!
sql_count_df:    count
0     90
count:90
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9372508525848389 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/gene.tsv ---------
table_name:gene
ERCC: gene: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9335837364196777 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/biosample.tsv ---------
table_name:biosample
ERCC: biosample: Read from file: df: #rows = 10362, #cols: 8

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/biosample.tsv: 10363
df: #rows = 10362, #cols: 8
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering biosample to database ***
df: #rows = 10362, #cols: 8

A slice of df:
  id_namespace  ... persistent_id
0   ERCC-exRNA  ...           NaN
1   ERCC-exRNA  ...           NaN
2   ERCC-exRNA  ...           NaN
3   ERCC-exRNA  ...           NaN
4   ERCC-exRNA  ...           NaN
5   ERCC-exRNA  ...           NaN
6   ERCC-exRNA  ...           NaN
7   ERCC-exRNA  ...           NaN
8   ERCC-exRNA  ...           NaN
9   ERCC-exRNA  ...           NaN

[10 rows x 5 columns]
Data inserted successfully!
sql_count_df:    count
0  10362
count:10362
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.2537438869476318 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/file_describes_subject.tsv ---------
table_name:file_describes_subject
ERCC: file_describes_subject: Read from file: df: #rows = 178133, #cols: 4

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/file_describes_subject.tsv: 178134
df: #rows = 178133, #cols: 4
pKeys: ['file_id_namespace', 'file_local_id', 'subject_id_namespace', 'subject_local_id']
Going to write the count query
Wrote the count query
*** Entering file_describes_subject to database ***
df: #rows = 178133, #cols: 4

A slice of df:
  file_id_namespace  ...             subject_local_id
0        ERCC-exRNA  ...  EXR-DERLE1LLAURPLATCOMP1-DO
1        ERCC-exRNA  ...  EXR-DERLE1LLAURPLATCOMP3-DO
2        ERCC-exRNA  ...  EXR-DERLE1LLAURPLATCOMP2-DO
3        ERCC-exRNA  ...  EXR-DERLE1LLAURPLATCOMP3-DO
4        ERCC-exRNA  ...  EXR-DERLE1LLAURPLATCOMP3-DO
5        ERCC-exRNA  ...  EXR-DERLE1LLAURPLATCOMP3-DO
6        ERCC-exRNA  ...  EXR-DERLE1LLAURPLATCOMP3-DO
7        ERCC-exRNA  ...  EXR-DERLE1LLAURPLATCOMP3-DO
8        ERCC-exRNA  ...  EXR-DERLE1LLAURPLATCOMP3-DO
9        ERCC-exRNA  ...  EXR-DERLE1LLAURPLATCOMP3-DO

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:     count
0  178133
count:178133
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 5.076488256454468 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/subject.tsv ---------
table_name:subject
ERCC: subject: Read from file: df: #rows = 7209, #cols: 10

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/subject.tsv: 7210
df: #rows = 7209, #cols: 10
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering subject to database ***
df: #rows = 7209, #cols: 10

A slice of df:
  id_namespace                     local_id  ... project_local_id persistent_id
0   ERCC-exRNA  EXR-DERLE1LLAURPLATCOMP3-DO  ...      exRNA_Atlas           NaN
1   ERCC-exRNA  EXR-DERLE1LLAURPLATCOMP1-DO  ...      exRNA_Atlas           NaN
2   ERCC-exRNA  EXR-DERLE1LLAURPLATCOMP2-DO  ...      exRNA_Atlas           NaN
3   ERCC-exRNA        EXR-IGHIR1DONOR4EE-DO  ...      exRNA_Atlas           NaN
4   ERCC-exRNA        EXR-IGHIR1DONOR3IG-DO  ...      exRNA_Atlas           NaN
5   ERCC-exRNA        EXR-IGHIR1DONOR6CO-DO  ...      exRNA_Atlas           NaN
6   ERCC-exRNA        EXR-IGHIR1DONOR5EC-DO  ...      exRNA_Atlas           NaN
7   ERCC-exRNA        EXR-IGHIR1DONOR2SL-DO  ...      exRNA_Atlas           NaN
8   ERCC-exRNA        EXR-IGHIR1DONOR1MR-DO  ...      exRNA_Atlas           NaN
9   ERCC-exRNA           EXR-DGALA1AC098-DO  ...      exRNA_Atlas           NaN

[10 rows x 5 columns]
Data inserted successfully!
sql_count_df:    count
0   7209
count:7209
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.2261848449707031 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/file_format.tsv ---------
table_name:file_format
ERCC: file_format: Read from file: df: #rows = 3, #cols: 4

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/file_format.tsv: 4
df: #rows = 3, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.file_format;
qt_df:              pk
0   format:3603
1   format:3004
2   format:4000
3   format:3578
4   format:3990
5   format:3506
6   format:3464
7   format:3579
8   format:3327
9   format:3987
10  format:2332
11  format:3507
12  format:3547
13  format:1915
14  format:2572
15  format:3554
16  format:3591
17  format:3590
18  format:4001
19  format:3873
20  format:3604
21  format:3006
22  format:3462
23  format:3997
24  format:3751
25  format:1930
26  format:4007
27  format:3468
28  format:3727
29  format:3752
30  format:3829
31  format:3583
32  format:3981
33  format:3996
34  format:1964
35  format:3989
36  format:2330
37  format:3508
38  format:2331
39  format:3003
40  format:3016
41  format:3839
42  format:3626
43  format:3008
44  format:3620
45  format:2333
46  format:3475
---- Executed query, got data.frame: qt_df: #rows = 47, #cols: 1

df_pk (at most first 10 elements): ['format:1930', 'format:2333', 'format:3475']
qt_pk (at most first 10 elements): ['format:3603', 'format:3004', 'format:4000', 'format:3578', 'format:3990', 'format:3506', 'format:3464', 'format:3579', 'format:3327', 'format:3987']
---- Removed rows from df with matching pk
*** Entering file_format to database ***
df: #rows = 0, #cols: 4

A slice of df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9695873260498047 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/biosample_gene.tsv ---------
table_name:biosample_gene
ERCC: biosample_gene: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/biosample_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9191055297851562 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/subject_substance.tsv ---------
table_name:subject_substance
ERCC: subject_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/subject_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8769373893737793 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection.tsv ---------
table_name:collection
ERCC: collection: Read from file: df: #rows = 77, #cols: 8

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection.tsv: 78
df: #rows = 77, #cols: 8
pKeys: ['id_namespace', 'local_id']
Processing C2M2 Files...:  58%|█████▊    | 7/12 [26:31<16:47, 201.48s/it]Going to write the count query
Wrote the count query
*** Entering collection to database ***
df: #rows = 77, #cols: 8

A slice of df:
  id_namespace             local_id  persistent_id creation_time  abbreviation
0   ERCC-exRNA  EXR-DERLE1Dj6liR-AN            NaN        9/4/20  DERLE1Dj6liR
1   ERCC-exRNA  EXR-IGHIR1V7Sc5u-AN            NaN      11/27/17  IGHIR1V7Sc5u
2   ERCC-exRNA  EXR-DGALA1ECRXVs-AN            NaN       4/16/18  DGALA1ECRXVs
3   ERCC-exRNA  EXR-IGHIR1tbB6UC-AN            NaN      11/27/17  IGHIR1tbB6UC
4   ERCC-exRNA  EXR-TTUSC1gCrGDH-AN            NaN       3/26/18  TTUSC1gCrGDH
5   ERCC-exRNA  EXR-KJENS17CZMbP-AN            NaN       3/11/17  KJENS17CZMbP
6   ERCC-exRNA  EXR-IGHIR1P6qCmn-AN            NaN      11/28/17  IGHIR1P6qCmn
7   ERCC-exRNA  EXR-MANSE1oCqMmF-AN            NaN      10/20/17  MANSE1oCqMmF
8   ERCC-exRNA  EXR-KVICK1oIp40e-AN            NaN      10/17/14  KVICK1oIp40e
9   ERCC-exRNA  EXR-MTEWA1vczugX-AN            NaN        3/7/19  MTEWA1vczugX
Data inserted successfully!
sql_count_df:    count
0     77
count:77
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9871604442596436 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/compound.tsv ---------
table_name:compound
ERCC: compound: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/compound.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9082441329956055 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/subject_in_collection.tsv ---------
table_name:subject_in_collection
ERCC: subject_in_collection: Read from file: df: #rows = 7212, #cols: 4

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/subject_in_collection.tsv: 7213
df: #rows = 7212, #cols: 4
pKeys: ['subject_id_namespace', 'subject_local_id', 'collection_id_namespace', 'collection_local_id']
Going to write the count query
Wrote the count query
*** Entering subject_in_collection to database ***
df: #rows = 7212, #cols: 4

A slice of df:
  subject_id_namespace  ...  collection_local_id
0           ERCC-exRNA  ...  EXR-DERLE1Dj6liR-AN
1           ERCC-exRNA  ...  EXR-DERLE1Dj6liR-AN
2           ERCC-exRNA  ...  EXR-DERLE1Dj6liR-AN
3           ERCC-exRNA  ...  EXR-IGHIR1V7Sc5u-AN
4           ERCC-exRNA  ...  EXR-IGHIR1V7Sc5u-AN
5           ERCC-exRNA  ...  EXR-IGHIR1V7Sc5u-AN
6           ERCC-exRNA  ...  EXR-IGHIR1V7Sc5u-AN
7           ERCC-exRNA  ...  EXR-IGHIR1V7Sc5u-AN
8           ERCC-exRNA  ...  EXR-IGHIR1V7Sc5u-AN
9           ERCC-exRNA  ...  EXR-DGALA1ECRXVs-AN

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:    count
0   7212
count:7212
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.0829966068267822 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/project_in_project.tsv ---------
table_name:project_in_project
ERCC: project_in_project: Read from file: df: #rows = 59, #cols: 4

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/project_in_project.tsv: 60
df: #rows = 59, #cols: 4
pKeys: ['parent_project_id_namespace', 'parent_project_local_id', 'child_project_id_namespace', 'child_project_local_id']
Going to write the count query
Wrote the count query
*** Entering project_in_project to database ***
df: #rows = 59, #cols: 4

A slice of df:
  parent_project_id_namespace  ...         child_project_local_id
0                  ERCC-exRNA  ...     EXR-DERLE1LLAURPLATCOMP-ST
1                  ERCC-exRNA  ...   EXR-IGHIR1Anticoagulants1-ST
2                  ERCC-exRNA  ...          EXR-DGALA120170825-ST
3                  ERCC-exRNA  ...  EXR-IGHIR1CircadianRhythm2-ST
4                  ERCC-exRNA  ...           EXR-TTUSC1U19xZW1-ST
5                  ERCC-exRNA  ...            EXR-KJENS1VolT01-ST
6                  ERCC-exRNA  ...  EXR-IGHIR1HbContamination1-ST
7                  ERCC-exRNA  ...          EXR-MANSE1ALLERAIR-ST
8                  ERCC-exRNA  ...          EXR-KVICK1KCVSLE00-ST
9                  ERCC-exRNA  ...      EXR-MTEWA1FeedingStudy-ST

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:    count
0     59
count:59
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9406085014343262 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection_taxonomy.tsv ---------
table_name:collection_taxonomy
ERCC: collection_taxonomy: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection_taxonomy.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9096994400024414 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/substance.tsv ---------
table_name:substance
ERCC: substance: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9038584232330322 seconds.


================================== DCC short label: MoTrPAC =============================================
Unpack zip file: c2m2_extract_path: ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12
--------- ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/dcc.tsv ---------
table_name:dcc
MoTrPAC: dcc: Read from file: df: #rows = 1, #cols: 9

#Lines in file ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/dcc.tsv: 2
df: #rows = 1, #cols: 9
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.dcc;
qt_df:                                pk
0        cfde_registry_dcc:glygen
1         cfde_registry_dcc:exrna
2     cfde_registry_dcc:kidsfirst
3         cfde_registry_dcc:sparc
4           cfde_registry_dcc:4dn
5  cfde_registry_dcc:metabolomics
6        cfde_registry_dcc:hubmap
---- Executed query, got data.frame: qt_df: #rows = 7, #cols: 1

df_pk (at most first 10 elements): ['cfde_registry_dcc:motrpac']
qt_pk (at most first 10 elements): ['cfde_registry_dcc:glygen', 'cfde_registry_dcc:exrna', 'cfde_registry_dcc:kidsfirst', 'cfde_registry_dcc:sparc', 'cfde_registry_dcc:4dn', 'cfde_registry_dcc:metabolomics', 'cfde_registry_dcc:hubmap']
---- Removed rows from df with matching pk
*** Entering dcc to database ***
df: #rows = 1, #cols: 9

A slice of df:
                          id  ...       contact_email
0  cfde_registry_dcc:motrpac  ...  jzhen@stanford.edu

[1 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.0100185871124268 seconds.

--------- ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/id_namespace.tsv ---------
table_name:id_namespace
MoTrPAC: id_namespace: Read from file: df: #rows = 1, #cols: 4

#Lines in file ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/id_namespace.tsv: 2
df: #rows = 1, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.id_namespace;
qt_df:                                         pk
0   https://www.metabolomicsworkbench.org/
1                           SPARC.subject:
2                              SPARC.file:
3             https://www.data.glygen.org/
4              https://data.4dnucleome.org
5                        SPARC.collection:
6                               ERCC-exRNA
7                                   SPARC:
8                            SPARC.sample:
9                               kidsfirst:
10          tag:hubmapconsortium.org,2023:
11                          SPARC.project:
---- Executed query, got data.frame: qt_df: #rows = 12, #cols: 1

df_pk (at most first 10 elements): ['tag:motrpac-data.org,2023:']
qt_pk (at most first 10 elements): ['https://www.metabolomicsworkbench.org/', 'SPARC.subject:', 'SPARC.file:', 'https://www.data.glygen.org/', 'https://data.4dnucleome.org', 'SPARC.collection:', 'ERCC-exRNA', 'SPARC:', 'SPARC.sample:', 'kidsfirst:']
---- Removed rows from df with matching pk
*** Entering id_namespace to database ***
df: #rows = 1, #cols: 4

A slice of df:
                           id  ...                                        description
0  tag:motrpac-data.org,2023:  ...  A tag-URI-based C2M2 Identifier for MoTrPAC's ...

[1 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9774796962738037 seconds.

--------- ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/disease.tsv ---------
table_name:disease
MoTrPAC: disease: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9185616970062256 seconds.

--------- ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/data_type.tsv ---------
table_name:data_type
MoTrPAC: data_type: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/data_type.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9153218269348145 seconds.

--------- ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/collection_disease.tsv ---------
table_name:collection_disease
MoTrPAC: collection_disease: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/collection_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.890233039855957 seconds.

--------- ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/file_in_collection.tsv ---------
table_name:file_in_collection
MoTrPAC: file_in_collection: Read from file: df: #rows = 18980, #cols: 4

#Lines in file ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/file_in_collection.tsv: 18981
df: #rows = 18980, #cols: 4
pKeys: ['file_id_namespace', 'file_local_id', 'collection_id_namespace', 'collection_local_id']
Going to write the count query
Wrote the count query
*** Entering file_in_collection to database ***
df: #rows = 18980, #cols: 4

A slice of df:
            file_id_namespace  ...            collection_local_id
0  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-epigenomics
1  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-epigenomics
2  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-epigenomics
3  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-epigenomics
4  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-epigenomics
5  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-epigenomics
6  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-epigenomics
7  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-epigenomics
8  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-epigenomics
9  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-epigenomics

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:    count
0  18980
count:18980
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.4122238159179688 seconds.

--------- ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/subject_role_taxonomy.tsv ---------
table_name:subject_role_taxonomy
MoTrPAC: subject_role_taxonomy: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/subject_role_taxonomy.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9198024272918701 seconds.

--------- ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/biosample_in_collection.tsv ---------
table_name:biosample_in_collection
MoTrPAC: biosample_in_collection: Read from file: df: #rows = 5563, #cols: 4

#Lines in file ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/biosample_in_collection.tsv: 5564
df: #rows = 5563, #cols: 4
pKeys: ['biosample_id_namespace', 'biosample_local_id', 'collection_id_namespace', 'collection_local_id']
Going to write the count query
Wrote the count query
*** Entering biosample_in_collection to database ***
df: #rows = 5563, #cols: 4

A slice of df:
       biosample_id_namespace  ...                collection_local_id
0  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-transcriptomics
1  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-transcriptomics
2  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-transcriptomics
3  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-transcriptomics
4  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-transcriptomics
5  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-transcriptomics
6  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-transcriptomics
7  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-transcriptomics
8  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-transcriptomics
9  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-transcriptomics

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:    count
0   5563
count:5563
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.0917539596557617 seconds.

--------- ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/subject_phenotype.tsv ---------
table_name:subject_phenotype
MoTrPAC: subject_phenotype: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/subject_phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9600834846496582 seconds.

--------- ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/phenotype_disease.tsv ---------
table_name:phenotype_disease
MoTrPAC: phenotype_disease: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/phenotype_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.7654125690460205 seconds.

--------- ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/collection_compound.tsv ---------
table_name:collection_compound
MoTrPAC: collection_compound: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/collection_compound.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8166046142578125 seconds.

--------- ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/protein_gene.tsv ---------
table_name:protein_gene
MoTrPAC: protein_gene: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/protein_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.917280912399292 seconds.

--------- ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/phenotype_gene.tsv ---------
table_name:phenotype_gene
MoTrPAC: phenotype_gene: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/phenotype_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9192821979522705 seconds.

--------- ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/phenotype.tsv ---------
table_name:phenotype
MoTrPAC: phenotype: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9101359844207764 seconds.

--------- ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/subject_disease.tsv ---------
table_name:subject_disease
MoTrPAC: subject_disease: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/subject_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9285006523132324 seconds.

--------- ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/collection_phenotype.tsv ---------
table_name:collection_phenotype
MoTrPAC: collection_phenotype: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/collection_phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8843657970428467 seconds.

--------- ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/protein.tsv ---------
table_name:protein
MoTrPAC: protein: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/protein.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9308855533599854 seconds.

--------- ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/ncbi_taxonomy.tsv ---------
table_name:ncbi_taxonomy
MoTrPAC: ncbi_taxonomy: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/ncbi_taxonomy.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9317781925201416 seconds.

--------- ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/collection_protein.tsv ---------
table_name:collection_protein
MoTrPAC: collection_protein: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/collection_protein.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9605355262756348 seconds.

--------- ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/analysis_type.tsv ---------
table_name:analysis_type
MoTrPAC: analysis_type: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/analysis_type.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.915618896484375 seconds.

--------- ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/file_describes_biosample.tsv ---------
table_name:file_describes_biosample
MoTrPAC: file_describes_biosample: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/file_describes_biosample.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8989303112030029 seconds.

--------- ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/file.tsv ---------
table_name:file
MoTrPAC: file: Read from file: df: #rows = 18980, #cols: 20

#Lines in file ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/file.tsv: 18981
df: #rows = 18980, #cols: 20
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering file to database ***
df: #rows = 18980, #cols: 20

A slice of df:
                 id_namespace  ...                         persistent_id
0  tag:motrpac-data.org,2023:  ...  22e49e3b-ef4b-53b8-b486-325a7f6f7f9c
1  tag:motrpac-data.org,2023:  ...  81410bd0-3087-5e9f-97b1-6fe65af51efa
2  tag:motrpac-data.org,2023:  ...  11436d17-5262-5d5d-8acc-379152f9a416
3  tag:motrpac-data.org,2023:  ...  3f175d9c-3446-561a-b176-61ed6d2d18bb
4  tag:motrpac-data.org,2023:  ...  dfaa3feb-27bd-532e-9d35-60c4ab05c455
5  tag:motrpac-data.org,2023:  ...  c00c773d-805f-51e1-a1a5-90c77b2dc908
6  tag:motrpac-data.org,2023:  ...  67186dde-092c-5ee4-a540-fdae10a9c8cc
7  tag:motrpac-data.org,2023:  ...  6c07cca3-bb2d-5912-9a03-dd3e0c9db7ee
8  tag:motrpac-data.org,2023:  ...  aabe09fb-15c8-58e5-ac16-57f94dee4c88
9  tag:motrpac-data.org,2023:  ...  cbda5d6b-3875-587c-9b0b-21adc09a814d

[10 rows x 5 columns]
Data inserted successfully!
sql_count_df:    count
0  18980
count:18980
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.983173131942749 seconds.

--------- ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/collection_gene.tsv ---------
table_name:collection_gene
MoTrPAC: collection_gene: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/collection_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9797472953796387 seconds.

--------- ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/biosample_from_subject.tsv ---------
table_name:biosample_from_subject
MoTrPAC: biosample_from_subject: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/biosample_from_subject.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8769521713256836 seconds.

--------- ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/file_describes_collection.tsv ---------
table_name:file_describes_collection
MoTrPAC: file_describes_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/file_describes_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8887641429901123 seconds.

--------- ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/subject_race.tsv ---------
table_name:subject_race
MoTrPAC: subject_race: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/subject_race.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8730628490447998 seconds.

--------- ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/collection_in_collection.tsv ---------
table_name:collection_in_collection
MoTrPAC: collection_in_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/collection_in_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9446067810058594 seconds.

--------- ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/collection_defined_by_project.tsv ---------
table_name:collection_defined_by_project
MoTrPAC: collection_defined_by_project: Read from file: df: #rows = 7, #cols: 4

#Lines in file ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/collection_defined_by_project.tsv: 8
df: #rows = 7, #cols: 4
pKeys: ['collection_id_namespace', 'collection_local_id', 'project_id_namespace', 'project_local_id']
Going to write the count query
Wrote the count query
*** Entering collection_defined_by_project to database ***
df: #rows = 7, #cols: 4

A slice of df:
      collection_id_namespace  ... project_local_id
0  tag:motrpac-data.org,2023:  ...          motrpac
1  tag:motrpac-data.org,2023:  ...          motrpac
2  tag:motrpac-data.org,2023:  ...          motrpac
3  tag:motrpac-data.org,2023:  ...          motrpac
4  tag:motrpac-data.org,2023:  ...          motrpac
5  tag:motrpac-data.org,2023:  ...          motrpac
6  tag:motrpac-data.org,2023:  ...          motrpac

[7 rows x 4 columns]
Data inserted successfully!
sql_count_df:    count
0      7
count:7
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.020925521850586 seconds.

--------- ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/collection_substance.tsv ---------
table_name:collection_substance
MoTrPAC: collection_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/collection_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8797645568847656 seconds.

--------- ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/biosample_substance.tsv ---------
table_name:biosample_substance
MoTrPAC: biosample_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/biosample_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8653488159179688 seconds.

--------- ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/project.tsv ---------
table_name:project
MoTrPAC: project: Read from file: df: #rows = 1, #cols: 7

#Lines in file ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/project.tsv: 2
df: #rows = 1, #cols: 7
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering project to database ***
df: #rows = 1, #cols: 7

A slice of df:
                 id_namespace local_id  ...  creation_time  abbreviation
0  tag:motrpac-data.org,2023:  motrpac  ...            NaN       MoTrPAC

[1 rows x 5 columns]
Data inserted successfully!
sql_count_df:    count
0      1
count:1
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.031259298324585 seconds.

--------- ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/anatomy.tsv ---------
table_name:anatomy
MoTrPAC: anatomy: Read from file: df: #rows = 19, #cols: 4

#Lines in file ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/anatomy.tsv: 20
df: #rows = 19, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.anatomy;
qt_df:                  pk
0    UBERON:0001013
1    UBERON:0000087
2    UBERON:0001199
3    UBERON:0016435
4    UBERON:0007311
..              ...
240  UBERON:0000033
241  UBERON:0004907
242  UBERON:0000473
243  UBERON:0008337
244  UBERON:0001474

[245 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 245, #cols: 1

df_pk (at most first 10 elements): ['UBERON:0000178', 'UBERON:0000473', 'UBERON:0000948', 'UBERON:0000956', 'UBERON:0000992', 'UBERON:0001155', 'UBERON:0001347', 'UBERON:0001348', 'UBERON:0001379', 'UBERON:0001388']
qt_pk (at most first 10 elements): ['UBERON:0001013', 'UBERON:0000087', 'UBERON:0001199', 'UBERON:0016435', 'UBERON:0007311', 'UBERON:0001736', 'UBERON:0002037', 'UBERON:0002097', 'UBERON:0001017', 'UBERON:0001986']
---- Removed rows from df with matching pk
*** Entering anatomy to database ***
df: #rows = 0, #cols: 4

A slice of df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9791519641876221 seconds.

--------- ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/sample_prep_method.tsv ---------
table_name:sample_prep_method
MoTrPAC: sample_prep_method: Read from file: df: #rows = 6, #cols: 4

#Lines in file ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/sample_prep_method.tsv: 7
df: #rows = 6, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.sample_prep_method;
qt_df:             pk
0  OBI:0001902
---- Executed query, got data.frame: qt_df: #rows = 1, #cols: 1

df_pk (at most first 10 elements): ['OBI:0000366', 'OBI:0000615', 'OBI:0001862', 'OBI:0002773', 'OBI:0003089', 'OBI:0003090']
qt_pk (at most first 10 elements): ['OBI:0001902']
---- Removed rows from df with matching pk
*** Entering sample_prep_method to database ***
df: #rows = 6, #cols: 4

A slice of df:
            id  ...                                           synonyms
0  OBI:0000366  ...           ["metabolite assay","metabolomic assay"]
1  OBI:0000615  ...                             ["proteomic analysis"]
2  OBI:0001862  ...  ["reduced representation bisulfite-seq","RRBS"...
3  OBI:0002773  ...                               ["IA","immunoassay"]
4  OBI:0003089  ...                                  ["bulk ATAC-seq"]
5  OBI:0003090  ...                                                 []

[6 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9950740337371826 seconds.

--------- ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/assay_type.tsv ---------
table_name:assay_type
MoTrPAC: assay_type: Read from file: df: #rows = 6, #cols: 4

#Lines in file ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/assay_type.tsv: 7
df: #rows = 6, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.assay_type;
qt_df:              pk
0   OBI:0003297
1   OBI:0001980
2   OBI:0003094
3   OBI:0003306
4   OBI:0002762
..          ...
56  OBI:0003314
57  OBI:0003302
58  OBI:0001271
59  OBI:0003098
60  OBI:0003087

[61 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 61, #cols: 1

df_pk (at most first 10 elements): ['OBI:0000366', 'OBI:0000615', 'OBI:0001862', 'OBI:0002773', 'OBI:0003089', 'OBI:0003090']
qt_pk (at most first 10 elements): ['OBI:0003297', 'OBI:0001980', 'OBI:0003094', 'OBI:0003306', 'OBI:0002762', 'OBI:0003097', 'OBI:0001920', 'OBI:0002112', 'OBI:0003034', 'OBI:0003108']
---- Removed rows from df with matching pk
*** Entering assay_type to database ***
df: #rows = 5, #cols: 4

A slice of df:
            id  ...                                           synonyms
0  OBI:0000366  ...           ["metabolite assay","metabolomic assay"]
1  OBI:0000615  ...                             ["proteomic analysis"]
2  OBI:0001862  ...  ["reduced representation bisulfite-seq","RRBS"...
3  OBI:0002773  ...                               ["IA","immunoassay"]
5  OBI:0003090  ...                                                 []

[5 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9575090408325195 seconds.

--------- ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/biosample_disease.tsv ---------
table_name:biosample_disease
MoTrPAC: biosample_disease: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/biosample_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9180886745452881 seconds.

--------- ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/collection_anatomy.tsv ---------
table_name:collection_anatomy
MoTrPAC: collection_anatomy: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/collection_anatomy.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8961942195892334 seconds.

--------- ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/gene.tsv ---------
table_name:gene
MoTrPAC: gene: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9584553241729736 seconds.

--------- ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/biosample.tsv ---------
table_name:biosample
MoTrPAC: biosample: Read from file: df: #rows = 6156, #cols: 8

#Lines in file ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/biosample.tsv: 6157
df: #rows = 6156, #cols: 8
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering biosample to database ***
df: #rows = 6156, #cols: 8

A slice of df:
                 id_namespace     local_id  ... project_local_id persistent_id
0  tag:motrpac-data.org,2023:  90217016002  ...          motrpac           NaN
1  tag:motrpac-data.org,2023:  90217016003  ...          motrpac           NaN
2  tag:motrpac-data.org,2023:  90217016004  ...          motrpac           NaN
3  tag:motrpac-data.org,2023:  90218016002  ...          motrpac           NaN
4  tag:motrpac-data.org,2023:  90218016003  ...          motrpac           NaN
5  tag:motrpac-data.org,2023:  90218016004  ...          motrpac           NaN
6  tag:motrpac-data.org,2023:  90218016005  ...          motrpac           NaN
7  tag:motrpac-data.org,2023:  90220016005  ...          motrpac           NaN
8  tag:motrpac-data.org,2023:  90222016002  ...          motrpac           NaN
9  tag:motrpac-data.org,2023:  90222016003  ...          motrpac           NaN

[10 rows x 5 columns]
Data inserted successfully!
sql_count_df:    count
0   6156
count:6156
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.1936225891113281 seconds.

--------- ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/file_describes_subject.tsv ---------
table_name:file_describes_subject
MoTrPAC: file_describes_subject: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/file_describes_subject.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9244637489318848 seconds.

--------- ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/subject.tsv ---------
table_name:subject
MoTrPAC: subject: Read from file: df: #rows = 60, #cols: 10

#Lines in file ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/subject.tsv: 61
df: #rows = 60, #cols: 10
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering subject to database ***
df: #rows = 60, #cols: 10

A slice of df:
                 id_namespace  local_id  ... project_local_id persistent_id
0  tag:motrpac-data.org,2023:  10023259  ...          motrpac           NaN
1  tag:motrpac-data.org,2023:  10024735  ...          motrpac           NaN
2  tag:motrpac-data.org,2023:  10025626  ...          motrpac           NaN
3  tag:motrpac-data.org,2023:  10025707  ...          motrpac           NaN
4  tag:motrpac-data.org,2023:  10025979  ...          motrpac           NaN
5  tag:motrpac-data.org,2023:  10026193  ...          motrpac           NaN
6  tag:motrpac-data.org,2023:  10026355  ...          motrpac           NaN
7  tag:motrpac-data.org,2023:  10026789  ...          motrpac           NaN
8  tag:motrpac-data.org,2023:  10027327  ...          motrpac           NaN
9  tag:motrpac-data.org,2023:  10027599  ...          motrpac           NaN

[10 rows x 5 columns]
Data inserted successfully!
sql_count_df:    count
0     60
count:60
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.0351552963256836 seconds.

--------- ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/file_format.tsv ---------
table_name:file_format
MoTrPAC: file_format: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/file_format.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9071598052978516 seconds.

--------- ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/biosample_gene.tsv ---------
table_name:biosample_gene
MoTrPAC: biosample_gene: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/biosample_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9449846744537354 seconds.

--------- ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/subject_substance.tsv ---------
table_name:subject_substance
MoTrPAC: subject_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/subject_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9514687061309814 seconds.

--------- ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/collection.tsv ---------
table_name:collection
MoTrPAC: collection: Read from file: df: #rows = 7, #cols: 8

#Lines in file ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/collection.tsv: 8
df: #rows = 7, #cols: 8
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering collection to database ***
df: #rows = 7, #cols: 8

A slice of df:
                 id_namespace  ... abbreviation
0  tag:motrpac-data.org,2023:  ...          NaN
1  tag:motrpac-data.org,2023:  ...          NaN
2  tag:motrpac-data.org,2023:  ...          NaN
3  tag:motrpac-data.org,2023:  ...          NaN
4  tag:motrpac-data.org,2023:  ...          NaN
5  tag:motrpac-data.org,2023:  ...          NaN
6  tag:motrpac-data.org,2023:  ...          NaN

[7 rows x 5 columns]
Data inserted successfully!
sql_count_df:    count
0      7
count:7
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9855244159698486 seconds.

--------- ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/compound.tsv ---------
table_name:compound
MoTrPAC: compound: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/compound.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8848605155944824 seconds.

--------- ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/subject_in_collection.tsv ---------
table_name:subject_in_collection
MoTrPAC: subject_in_collection: Read from file: df: #rows = 60, #cols: 4

#Lines in file ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/subject_in_collection.tsv: 61
df: #rows = 60, #cols: 4
pKeys: ['subject_id_namespace', 'subject_local_id', 'collection_id_namespace', 'collection_local_id']
Going to write the count query
Wrote the count query
*** Entering subject_in_collection to database ***
df: #rows = 60, #cols: 4

A slice of df:
         subject_id_namespace  ...                collection_local_id
0  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-transcriptomics
1  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-transcriptomics
2  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-transcriptomics
3  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-transcriptomics
4  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-transcriptomics
5  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-transcriptomics
6  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-transcriptomics
7  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-transcriptomics
8  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-transcriptomics
9  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-transcriptomics

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:    count
0     60
count:60
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.0027868747711182 seconds.

--------- ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/project_in_project.tsv ---------
table_name:project_in_project
MoTrPAC: project_in_project: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/project_in_project.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9288814067840576 seconds.

--------- ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/collection_taxonomy.tsv ---------
table_name:collection_taxonomy
MoTrPAC: collection_taxonomy: Read from file: df: #rows = 0, #cols: 3

Processing C2M2 Files...:  67%|██████▋   | 8/12 [27:22<10:14, 153.59s/it]#Lines in file ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/collection_taxonomy.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9081807136535645 seconds.

--------- ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/substance.tsv ---------
table_name:substance
MoTrPAC: substance: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/MoTrPAC/MoTrPAC_C2M2_datapackage_2024-03-12/submit_03_15_2024/data/substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8666110038757324 seconds.


================================== DCC short label: GTEx =============================================
Unpack zip file: c2m2_extract_path: ingest/c2m2s/GTEx/datapackage
--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/dcc.tsv ---------
table_name:dcc
GTEx: dcc: Read from file: df: #rows = 1, #cols: 9

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/dcc.tsv: 2
df: #rows = 1, #cols: 9
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.dcc;
qt_df:                                pk
0        cfde_registry_dcc:glygen
1         cfde_registry_dcc:exrna
2     cfde_registry_dcc:kidsfirst
3         cfde_registry_dcc:sparc
4           cfde_registry_dcc:4dn
5  cfde_registry_dcc:metabolomics
6       cfde_registry_dcc:motrpac
7        cfde_registry_dcc:hubmap
---- Executed query, got data.frame: qt_df: #rows = 8, #cols: 1

df_pk (at most first 10 elements): ['cfde_registry_dcc:gtex']
qt_pk (at most first 10 elements): ['cfde_registry_dcc:glygen', 'cfde_registry_dcc:exrna', 'cfde_registry_dcc:kidsfirst', 'cfde_registry_dcc:sparc', 'cfde_registry_dcc:4dn', 'cfde_registry_dcc:metabolomics', 'cfde_registry_dcc:motrpac', 'cfde_registry_dcc:hubmap']
---- Removed rows from df with matching pk
*** Entering dcc to database ***
df: #rows = 1, #cols: 9

A slice of df:
                       id  ...               contact_email
0  cfde_registry_dcc:gtex  ...  jnedzel@broadinstitute.org

[1 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9428749084472656 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/id_namespace.tsv ---------
table_name:id_namespace
GTEx: id_namespace: Read from file: df: #rows = 3, #cols: 4

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/id_namespace.tsv: 4
df: #rows = 3, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.id_namespace;
qt_df:                                         pk
0   https://www.metabolomicsworkbench.org/
1               tag:motrpac-data.org,2023:
2                           SPARC.subject:
3                              SPARC.file:
4             https://www.data.glygen.org/
5              https://data.4dnucleome.org
6                        SPARC.collection:
7                               ERCC-exRNA
8                                   SPARC:
9                            SPARC.sample:
10                              kidsfirst:
11          tag:hubmapconsortium.org,2023:
12                          SPARC.project:
---- Executed query, got data.frame: qt_df: #rows = 13, #cols: 1

df_pk (at most first 10 elements): ['adult_gtex', 'egtex', 'gtex']
qt_pk (at most first 10 elements): ['https://www.metabolomicsworkbench.org/', 'tag:motrpac-data.org,2023:', 'SPARC.subject:', 'SPARC.file:', 'https://www.data.glygen.org/', 'https://data.4dnucleome.org', 'SPARC.collection:', 'ERCC-exRNA', 'SPARC:', 'SPARC.sample:']
---- Removed rows from df with matching pk
*** Entering id_namespace to database ***
df: #rows = 3, #cols: 4

A slice of df:
           id  ...                                    description
1  adult_gtex  ...   The ID namespace for the Adult GTEx project.
2       egtex  ...        The ID namespace for the eGTEx project.
0        gtex  ...  The ID namespace for the Global GTEx project.

[3 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9572315216064453 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/disease.tsv ---------
table_name:disease
GTEx: disease: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.896507740020752 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/data_type.tsv ---------
table_name:data_type
GTEx: data_type: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/data_type.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8885340690612793 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection_disease.tsv ---------
table_name:collection_disease
GTEx: collection_disease: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9053022861480713 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/file_in_collection.tsv ---------
table_name:file_in_collection
GTEx: file_in_collection: Read from file: df: #rows = 548, #cols: 4

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/file_in_collection.tsv: 549
df: #rows = 548, #cols: 4
pKeys: ['file_id_namespace', 'file_local_id', 'collection_id_namespace', 'collection_local_id']
Going to write the count query
Wrote the count query
*** Entering file_in_collection to database ***
df: #rows = 548, #cols: 4

A slice of df:
  file_id_namespace  ...                                collection_local_id
0        adult_gtex  ...  gs://adult-gtex/additional_GTEx_datasets/v6p/c...
1        adult_gtex  ...                    gs://adult-gtex/annotations/v3/
2        adult_gtex  ...                    gs://adult-gtex/annotations/v3/
3        adult_gtex  ...                    gs://adult-gtex/annotations/v3/
4        adult_gtex  ...                    gs://adult-gtex/annotations/v3/
5        adult_gtex  ...                    gs://adult-gtex/annotations/v3/
6        adult_gtex  ...                    gs://adult-gtex/annotations/v4/
7        adult_gtex  ...                    gs://adult-gtex/annotations/v4/
8        adult_gtex  ...                    gs://adult-gtex/annotations/v4/
9        adult_gtex  ...                    gs://adult-gtex/annotations/v4/

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:    count
0    548
count:548
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9914045333862305 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/subject_role_taxonomy.tsv ---------
table_name:subject_role_taxonomy
GTEx: subject_role_taxonomy: Read from file: df: #rows = 979, #cols: 4

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/subject_role_taxonomy.tsv: 980
df: #rows = 979, #cols: 4
pKeys: ['subject_id_namespace', 'subject_local_id', 'role_id', 'taxonomy_id']
Going to write the count query
Wrote the count query
*** Entering subject_role_taxonomy to database ***
df: #rows = 979, #cols: 4

A slice of df:
  subject_id_namespace subject_local_id              role_id    taxonomy_id
0           adult_gtex       GTEX-1117F  cfde_subject_role:0  NCBI:txid9606
1           adult_gtex       GTEX-111CU  cfde_subject_role:0  NCBI:txid9606
2           adult_gtex       GTEX-111FC  cfde_subject_role:0  NCBI:txid9606
3           adult_gtex       GTEX-111VG  cfde_subject_role:0  NCBI:txid9606
4           adult_gtex       GTEX-111YS  cfde_subject_role:0  NCBI:txid9606
5           adult_gtex       GTEX-1122O  cfde_subject_role:0  NCBI:txid9606
6           adult_gtex       GTEX-1128S  cfde_subject_role:0  NCBI:txid9606
7           adult_gtex       GTEX-113IC  cfde_subject_role:0  NCBI:txid9606
8           adult_gtex       GTEX-113JC  cfde_subject_role:0  NCBI:txid9606
9           adult_gtex       GTEX-117XS  cfde_subject_role:0  NCBI:txid9606
Data inserted successfully!
sql_count_df:    count
0    979
count:979
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.992919921875 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/biosample_in_collection.tsv ---------
table_name:biosample_in_collection
GTEx: biosample_in_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/biosample_in_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8825016021728516 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/subject_phenotype.tsv ---------
table_name:subject_phenotype
GTEx: subject_phenotype: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/subject_phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9222304821014404 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/phenotype_disease.tsv ---------
table_name:phenotype_disease
GTEx: phenotype_disease: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/phenotype_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9558653831481934 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection_compound.tsv ---------
table_name:collection_compound
GTEx: collection_compound: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection_compound.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8734719753265381 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/protein_gene.tsv ---------
table_name:protein_gene
GTEx: protein_gene: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/protein_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8648436069488525 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/phenotype_gene.tsv ---------
table_name:phenotype_gene
GTEx: phenotype_gene: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/phenotype_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8543846607208252 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/phenotype.tsv ---------
table_name:phenotype
GTEx: phenotype: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9600784778594971 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/subject_disease.tsv ---------
table_name:subject_disease
GTEx: subject_disease: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/subject_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9475359916687012 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection_phenotype.tsv ---------
table_name:collection_phenotype
GTEx: collection_phenotype: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection_phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9487624168395996 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/protein.tsv ---------
table_name:protein
GTEx: protein: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/protein.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9033501148223877 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/ncbi_taxonomy.tsv ---------
table_name:ncbi_taxonomy
GTEx: ncbi_taxonomy: Read from file: df: #rows = 1, #cols: 5

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/ncbi_taxonomy.tsv: 2
df: #rows = 1, #cols: 5
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.ncbi_taxonomy;
qt_df:                   pk
0     NCBI:txid10149
1    NCBI:txid543564
2      NCBI:txid5823
3     NCBI:txid99755
4       NCBI:txid287
..               ...
159   NCBI:txid64518
160    NCBI:txid4555
161   NCBI:txid84112
162    NCBI:txid4932
163    NCBI:txid3847

[164 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 164, #cols: 1

df_pk (at most first 10 elements): ['NCBI:txid9606']
qt_pk (at most first 10 elements): ['NCBI:txid10149', 'NCBI:txid543564', 'NCBI:txid5823', 'NCBI:txid99755', 'NCBI:txid287', 'NCBI:txid75728', 'NCBI:txid252141', 'NCBI:txid382', 'NCBI:txid59463', 'NCBI:txid39293']
---- Removed rows from df with matching pk
*** Entering ncbi_taxonomy to database ***
df: #rows = 0, #cols: 5

A slice of df:
Empty DataFrame
Columns: [id, clade, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.8817975521087646 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection_protein.tsv ---------
table_name:collection_protein
GTEx: collection_protein: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection_protein.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8475797176361084 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/analysis_type.tsv ---------
table_name:analysis_type
GTEx: analysis_type: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/analysis_type.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9008231163024902 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/file_describes_biosample.tsv ---------
table_name:file_describes_biosample
GTEx: file_describes_biosample: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/file_describes_biosample.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8747007846832275 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/file.tsv ---------
table_name:file
GTEx: file: Read from file: df: #rows = 548, #cols: 20

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/file.tsv: 549
df: #rows = 548, #cols: 20
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering file to database ***
df: #rows = 548, #cols: 20

A slice of df:
  id_namespace  ...                         persistent_id
0   adult_gtex  ...  2378df26-3468-5ef1-aa59-69cbd172e8df
1   adult_gtex  ...  c2e0595e-415a-5c42-a0a8-eba0d720ec6e
2   adult_gtex  ...  c888027e-9d03-5b06-af2b-9eacf480b82f
3   adult_gtex  ...  3fb110a1-c63f-590b-977c-8a8803cd5fe8
4   adult_gtex  ...  9869ed76-711a-5244-b3a1-87b3b8d9dd3d
5   adult_gtex  ...  a6af1981-4f5a-5060-a66f-da08da5e1c2e
6   adult_gtex  ...  b3d6fb0d-e969-5d9e-a3ba-7b4f5f58f342
7   adult_gtex  ...  e80e7101-3e33-520b-a3fc-9358b8b02729
8   adult_gtex  ...  10c02d38-a871-5a45-ad30-e14029d263d5
9   adult_gtex  ...  87b9ac49-878b-525e-8b68-aecb0329c110

[10 rows x 5 columns]
Data inserted successfully!
sql_count_df:    count
0    548
count:548
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9866466522216797 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection_gene.tsv ---------
table_name:collection_gene
GTEx: collection_gene: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9122371673583984 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/biosample_from_subject.tsv ---------
table_name:biosample_from_subject
GTEx: biosample_from_subject: Read from file: df: #rows = 22015, #cols: 5

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/biosample_from_subject.tsv: 22016
df: #rows = 22015, #cols: 5
pKeys: ['biosample_id_namespace', 'biosample_local_id', 'subject_id_namespace', 'subject_local_id']
Going to write the count query
Wrote the count query
*** Entering biosample_from_subject to database ***
df: #rows = 22015, #cols: 5

A slice of df:
  biosample_id_namespace  ... age_at_sampling
0             adult_gtex  ...             NaN
1             adult_gtex  ...             NaN
2             adult_gtex  ...             NaN
3             adult_gtex  ...             NaN
4             adult_gtex  ...             NaN
5             adult_gtex  ...             NaN
6             adult_gtex  ...             NaN
7             adult_gtex  ...             NaN
8             adult_gtex  ...             NaN
9             adult_gtex  ...             NaN

[10 rows x 5 columns]
Data inserted successfully!
sql_count_df:    count
0  22015
count:22015
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.3210952281951904 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/file_describes_collection.tsv ---------
table_name:file_describes_collection
GTEx: file_describes_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/file_describes_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.7732157707214355 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/subject_race.tsv ---------
table_name:subject_race
GTEx: subject_race: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/subject_race.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8767638206481934 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection_in_collection.tsv ---------
table_name:collection_in_collection
GTEx: collection_in_collection: Read from file: df: #rows = 71, #cols: 4

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection_in_collection.tsv: 72
df: #rows = 71, #cols: 4
pKeys: ['superset_collection_id_namespace', 'superset_collection_local_id', 'subset_collection_id_namespace', 'subset_collection_local_id']
Going to write the count query
Wrote the count query
*** Entering collection_in_collection to database ***
df: #rows = 71, #cols: 4

A slice of df:
  superset_collection_id_namespace  ...                         subset_collection_local_id
0                       adult_gtex  ...      gs://adult-gtex/additional_GTEx_datasets/v6p/
1                       adult_gtex  ...  gs://adult-gtex/additional_GTEx_datasets/v6p/c...
2                       adult_gtex  ...                    gs://adult-gtex/annotations/v3/
3                       adult_gtex  ...                    gs://adult-gtex/annotations/v4/
4                       adult_gtex  ...                    gs://adult-gtex/annotations/v6/
5                       adult_gtex  ...                   gs://adult-gtex/annotations/v6p/
6                       adult_gtex  ...                    gs://adult-gtex/annotations/v7/
7                       adult_gtex  ...                    gs://adult-gtex/annotations/v8/
8                       adult_gtex  ...                       gs://adult-gtex/bulk-gex/v3/
9                       adult_gtex  ...               gs://adult-gtex/bulk-gex/v3/rna-seq/

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:    count
0     71
count:71
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.014399766921997 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection_defined_by_project.tsv ---------
table_name:collection_defined_by_project
GTEx: collection_defined_by_project: Read from file: df: #rows = 14, #cols: 4

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection_defined_by_project.tsv: 15
df: #rows = 14, #cols: 4
pKeys: ['collection_id_namespace', 'collection_local_id', 'project_id_namespace', 'project_local_id']
Going to write the count query
Wrote the count query
*** Entering collection_defined_by_project to database ***
df: #rows = 14, #cols: 4

A slice of df:
  collection_id_namespace  ... project_local_id
0              adult_gtex  ...       adult_gtex
1              adult_gtex  ...       adult_gtex
2              adult_gtex  ...       adult_gtex
3              adult_gtex  ...       adult_gtex
4              adult_gtex  ...       adult_gtex
5              adult_gtex  ...       adult_gtex
6              adult_gtex  ...       adult_gtex
7              adult_gtex  ...       adult_gtex
8              adult_gtex  ...       adult_gtex
9                   egtex  ...            egtex

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:    count
0     14
count:14
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.004990577697754 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection_substance.tsv ---------
table_name:collection_substance
GTEx: collection_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9452104568481445 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/biosample_substance.tsv ---------
table_name:biosample_substance
GTEx: biosample_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/biosample_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9046924114227295 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/project.tsv ---------
table_name:project
GTEx: project: Read from file: df: #rows = 3, #cols: 7

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/project.tsv: 4
df: #rows = 3, #cols: 7
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering project to database ***
df: #rows = 3, #cols: 7

A slice of df:
  id_namespace    local_id  persistent_id  creation_time abbreviation
0         gtex        gtex            NaN            NaN         gtex
1   adult_gtex  adult_gtex            NaN            NaN          NaN
2        egtex       egtex            NaN            NaN        egtex
Data inserted successfully!
sql_count_df:    count
0      3
count:3
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9885563850402832 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/anatomy.tsv ---------
table_name:anatomy
GTEx: anatomy: Read from file: df: #rows = 51, #cols: 4

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/anatomy.tsv: 52
df: #rows = 51, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.anatomy;
qt_df:                  pk
0    UBERON:0001013
1    UBERON:0000087
2    UBERON:0001199
3    UBERON:0016435
4    UBERON:0007311
..              ...
240  UBERON:0000033
241  UBERON:0004907
242  UBERON:0000473
243  UBERON:0008337
244  UBERON:0001474

[245 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 245, #cols: 1

df_pk (at most first 10 elements): ['UBERON:0000007', 'UBERON:0000458', 'UBERON:0000473', 'UBERON:0000945', 'UBERON:0000992', 'UBERON:0000995', 'UBERON:0000996', 'UBERON:0001114', 'UBERON:0001150', 'UBERON:0001157']
qt_pk (at most first 10 elements): ['UBERON:0001013', 'UBERON:0000087', 'UBERON:0001199', 'UBERON:0016435', 'UBERON:0007311', 'UBERON:0001736', 'UBERON:0002037', 'UBERON:0002097', 'UBERON:0001017', 'UBERON:0001986']
---- Removed rows from df with matching pk
*** Entering anatomy to database ***
df: #rows = 36, #cols: 4

A slice of df:
                id  ...                                           synonyms
1   UBERON:0000458  ...                                                 []
6   UBERON:0000996  ...                                                 []
7   UBERON:0001114  ...  ["liver right lobe","lobus hepaticus dexter","...
8   UBERON:0001150  ...                ["pancreas body","pancreatic body"]
9   UBERON:0001157  ...                              ["colon transversum"]
10  UBERON:0001159  ...                                                 []
11  UBERON:0001211  ...                    ["noduli lymphoidei aggregati"]
15  UBERON:0001323  ...                         ["medial popliteal nerve"]
16  UBERON:0001496  ...  ["ascending thoracic aorta","pars ascendens ao...
17  UBERON:0001621  ...                         ["coronary arterial tree"]

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9974989891052246 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/sample_prep_method.tsv ---------
table_name:sample_prep_method
GTEx: sample_prep_method: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/sample_prep_method.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9467217922210693 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/assay_type.tsv ---------
table_name:assay_type
GTEx: assay_type: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/assay_type.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8996541500091553 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/biosample_disease.tsv ---------
table_name:biosample_disease
GTEx: biosample_disease: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/biosample_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9426798820495605 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection_anatomy.tsv ---------
table_name:collection_anatomy
GTEx: collection_anatomy: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection_anatomy.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9402549266815186 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/gene.tsv ---------
table_name:gene
GTEx: gene: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9457871913909912 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/biosample.tsv ---------
table_name:biosample
GTEx: biosample: Read from file: df: #rows = 22015, #cols: 8

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/biosample.tsv: 22016
df: #rows = 22015, #cols: 8
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering biosample to database ***
df: #rows = 22015, #cols: 8

A slice of df:
  id_namespace  ...             persistent_id
0   adult_gtex  ...  GTEX-1117F-0003-SM-58Q7G
1   adult_gtex  ...  GTEX-1117F-0003-SM-5DWSB
2   adult_gtex  ...  GTEX-1117F-0003-SM-6WBT7
3   adult_gtex  ...  GTEX-111CU-0003-SM-58Q95
4   adult_gtex  ...  GTEX-111CU-0003-SM-5DWTR
5   adult_gtex  ...  GTEX-111CU-0003-SM-6WBUD
6   adult_gtex  ...  GTEX-111FC-0001-SM-58Q7U
7   adult_gtex  ...  GTEX-111FC-0001-SM-5DWSO
8   adult_gtex  ...  GTEX-111FC-0001-SM-6WBTJ
9   adult_gtex  ...  GTEX-111VG-0004-SM-58Q85

[10 rows x 5 columns]
Data inserted successfully!
sql_count_df:    count
0  22015
count:22015
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.5527372360229492 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/file_describes_subject.tsv ---------
table_name:file_describes_subject
GTEx: file_describes_subject: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/file_describes_subject.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9578945636749268 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/subject.tsv ---------
table_name:subject
GTEx: subject: Read from file: df: #rows = 979, #cols: 10

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/subject.tsv: 980
df: #rows = 979, #cols: 10
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering subject to database ***
df: #rows = 979, #cols: 10

A slice of df:
  id_namespace    local_id project_id_namespace project_local_id  persistent_id
0   adult_gtex  GTEX-1117F           adult_gtex       adult_gtex            NaN
1   adult_gtex  GTEX-111CU           adult_gtex       adult_gtex            NaN
2   adult_gtex  GTEX-111FC           adult_gtex       adult_gtex            NaN
3   adult_gtex  GTEX-111VG           adult_gtex       adult_gtex            NaN
4   adult_gtex  GTEX-111YS           adult_gtex       adult_gtex            NaN
5   adult_gtex  GTEX-1122O           adult_gtex       adult_gtex            NaN
6   adult_gtex  GTEX-1128S           adult_gtex       adult_gtex            NaN
7   adult_gtex  GTEX-113IC           adult_gtex       adult_gtex            NaN
8   adult_gtex  GTEX-113JC           adult_gtex       adult_gtex            NaN
9   adult_gtex  GTEX-117XS           adult_gtex       adult_gtex            NaN
Data inserted successfully!
sql_count_df:    count
0    979
count:979
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.051769733428955 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/file_format.tsv ---------
table_name:file_format
GTEx: file_format: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/file_format.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8900935649871826 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/biosample_gene.tsv ---------
table_name:biosample_gene
GTEx: biosample_gene: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/biosample_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9004471302032471 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/subject_substance.tsv ---------
table_name:subject_substance
GTEx: subject_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/subject_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9024133682250977 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection.tsv ---------
table_name:collection
GTEx: collection: Read from file: df: #rows = 85, #cols: 8

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection.tsv: 86
df: #rows = 85, #cols: 8
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering collection to database ***
df: #rows = 85, #cols: 8

A slice of df:
  id_namespace  ... abbreviation
0   adult_gtex  ...          NaN
1   adult_gtex  ...          NaN
2   adult_gtex  ...          NaN
3   adult_gtex  ...          NaN
4   adult_gtex  ...          NaN
5   adult_gtex  ...          NaN
6   adult_gtex  ...          NaN
7   adult_gtex  ...          NaN
8   adult_gtex  ...          NaN
9   adult_gtex  ...          NaN

[10 rows x 5 columns]
Data inserted successfully!
sql_count_df:    count
0     85
count:85
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9819157123565674 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/compound.tsv ---------
table_name:compound
GTEx: compound: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/compound.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9133594036102295 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/subject_in_collection.tsv ---------
table_name:subject_in_collection
GTEx: subject_in_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/subject_in_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9065766334533691 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/project_in_project.tsv ---------
table_name:project_in_project
GTEx: project_in_project: Read from file: df: #rows = 2, #cols: 4

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/project_in_project.tsv: 3
df: #rows = 2, #cols: 4
pKeys: ['parent_project_id_namespace', 'parent_project_local_id', 'child_project_id_namespace', 'child_project_local_id']
Going to write the count query
Wrote the count query
*** Entering project_in_project to database ***
df: #rows = 2, #cols: 4

A slice of df:
  parent_project_id_namespace  ... child_project_local_id
0                        gtex  ...             adult_gtex
1                        gtex  ...                  egtex

[2 rows x 4 columns]
Data inserted successfully!
sql_count_df:    count
0      2
count:2
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9666578769683838 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection_taxonomy.tsv ---------
table_name:collection_taxonomy
GTEx: collection_taxonomy: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection_taxonomy.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8792455196380615 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/substance.tsv ---------
table_name:substance
GTEx: substance: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9233596324920654 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/external_CV_reference_files/HPO_MPO_Entrez_gene_IDs_to_EnsEMBL_IDs.tsv ---------
table_name:HPO_MPO_Entrez_gene_IDs_to_EnsEMBL_IDs
>>>>>>>> Time taken to ingest the metadata from this file: 5.078315734863281e-05 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/external_CV_reference_files/ensembl_genes.tsv ---------
table_name:ensembl_genes
>>>>>>>> Time taken to ingest the metadata from this file: 5.14984130859375e-05 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/external_CV_reference_files/Interlex_data_type.2023-03-02.tsv ---------
table_name:Interlex_data_type.2023-03-02
>>>>>>>> Time taken to ingest the metadata from this file: 4.00543212890625e-05 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/external_CV_reference_files/OBI.provisional_terms.2023-03-02.tsv ---------
table_name:OBI.provisional_terms.2023-03-02
>>>>>>>> Time taken to ingest the metadata from this file: 3.814697265625e-05 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/external_CV_reference_files/Interlex_file_format.2022-11-01.tsv ---------
table_name:Interlex_file_format.2022-11-01
>>>>>>>> Time taken to ingest the metadata from this file: 3.4332275390625e-05 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/external_CV_reference_files/EDAM.version_1.25.tsv ---------
table_name:EDAM.version_1.25
>>>>>>>> Time taken to ingest the metadata from this file: 4.2438507080078125e-05 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/external_CV_reference_files/ensembl_organism_name_to_ncbi_taxonomy_id.tsv ---------
table_name:ensembl_organism_name_to_ncbi_taxonomy_id
>>>>>>>> Time taken to ingest the metadata from this file: 3.361701965332031e-05 seconds.

Processing C2M2 Files...:  75%|███████▌  | 9/12 [32:44<10:19, 206.35s/it]--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/external_CV_reference_files/sample_pubchem_reference_data/compound.first_5000_records.max_100_synonyms_per_term.tsv ---------
table_name:compound.first_5000_records.max_100_synonyms_per_term
>>>>>>>> Time taken to ingest the metadata from this file: 0.00011515617370605469 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/external_CV_reference_files/sample_pubchem_reference_data/substance.first_5000_records.max_100_synonyms_per_term.tsv ---------
table_name:substance.first_5000_records.max_100_synonyms_per_term
>>>>>>>> Time taken to ingest the metadata from this file: 3.314018249511719e-05 seconds.


================================== DCC short label: HMP =============================================
Unpack zip file: c2m2_extract_path: ingest/c2m2s/HMP/datapackage
--------- ingest/c2m2s/HMP/datapackage/merged/data/subject_race.tsv ---------
table_name:subject_race
HMP: subject_race: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/subject_race.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9313704967498779 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/protein.tsv ---------
table_name:protein
HMP: protein: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/protein.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8861606121063232 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/disease.tsv ---------
table_name:disease
HMP: disease: Read from file: df: #rows = 8, #cols: 4

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/disease.tsv: 9
df: #rows = 8, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.disease;
qt_df:                pk
0       DOID:2030
1       DOID:5844
2      DOID:10892
3         DOID:18
4         DOID:17
..            ...
162  DOID:0050700
163  DOID:0080171
164  DOID:0060180
165  DOID:0014667
166     DOID:1289

[167 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 167, #cols: 1

df_pk (at most first 10 elements): ['DOID:4914', 'DOID:5295', 'DOID:8677', 'DOID:8778', 'DOID:8893', 'DOID:934', 'DOID:9778', 'DOID:9970']
qt_pk (at most first 10 elements): ['DOID:2030', 'DOID:5844', 'DOID:10892', 'DOID:18', 'DOID:17', 'DOID:0050830', 'DOID:10534', 'DOID:1682', 'DOID:5052', 'DOID:9269']
---- Removed rows from df with matching pk
*** Entering disease to database ***
df: #rows = 4, #cols: 4

A slice of df:
          id  ...                                           synonyms
0  DOID:4914  ...                     ["Oesophageal adenocarcinoma"]
1  DOID:5295  ...  ["DOID:10759","DOID:11222","DOID:11789","DOID:...
2  DOID:8677  ...  ["ENTEROCOLITIS NECROTIZING","necrotizing ente...
3  DOID:8778  ...  ["DOID:8784","DOID:8855","DOID:8942","Crohn di...

[4 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.980539083480835 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/phenotype_gene.tsv ---------
table_name:phenotype_gene
HMP: phenotype_gene: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/phenotype_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8971683979034424 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/dcc.tsv ---------
table_name:dcc
HMP: dcc: Read from file: df: #rows = 1, #cols: 9

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/dcc.tsv: 2
df: #rows = 1, #cols: 9
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.dcc;
qt_df:                                pk
0        cfde_registry_dcc:glygen
1         cfde_registry_dcc:exrna
2     cfde_registry_dcc:kidsfirst
3         cfde_registry_dcc:sparc
4           cfde_registry_dcc:4dn
5  cfde_registry_dcc:metabolomics
6       cfde_registry_dcc:motrpac
7        cfde_registry_dcc:hubmap
8          cfde_registry_dcc:gtex
---- Executed query, got data.frame: qt_df: #rows = 9, #cols: 1

df_pk (at most first 10 elements): ['cfde_registry_dcc:hmp']
qt_pk (at most first 10 elements): ['cfde_registry_dcc:glygen', 'cfde_registry_dcc:exrna', 'cfde_registry_dcc:kidsfirst', 'cfde_registry_dcc:sparc', 'cfde_registry_dcc:4dn', 'cfde_registry_dcc:metabolomics', 'cfde_registry_dcc:motrpac', 'cfde_registry_dcc:hubmap', 'cfde_registry_dcc:gtex']
---- Removed rows from df with matching pk
*** Entering dcc to database ***
df: #rows = 1, #cols: 9

A slice of df:
                      id  ...             contact_email
0  cfde_registry_dcc:hmp  ...  abrady@som.umaryland.edu

[1 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.980759859085083 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/biosample_in_collection.tsv ---------
table_name:biosample_in_collection
HMP: biosample_in_collection: Read from file: df: #rows = 58417, #cols: 4

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/biosample_in_collection.tsv: 58418
df: #rows = 58417, #cols: 4
pKeys: ['biosample_id_namespace', 'biosample_local_id', 'collection_id_namespace', 'collection_local_id']
Going to write the count query
Wrote the count query
*** Entering biosample_in_collection to database ***
df: #rows = 58417, #cols: 4

A slice of df:
        biosample_id_namespace  ...      collection_local_id
0  tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000002
1  tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000003
2  tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000004
3  tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000007
4  tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000008
5  tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000012
6  tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000014
7  tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000015
8  tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000016
9  tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000017

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:    count
0  58417
count:58417
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.9295508861541748 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/biosample_disease.tsv ---------
table_name:biosample_disease
HMP: biosample_disease: Read from file: df: #rows = 2531, #cols: 4

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/biosample_disease.tsv: 2532
df: #rows = 2531, #cols: 4
pKeys: ['biosample_id_namespace', 'biosample_local_id', 'association_type', 'disease']
Going to write the count query
Wrote the count query
*** Entering biosample_disease to database ***
df: #rows = 2531, #cols: 4

A slice of df:
        biosample_id_namespace  ...    disease
0  tag:hmpdacc.org,2022-04-04:  ...  DOID:4914
1  tag:hmpdacc.org,2022-04-04:  ...  DOID:4914
2  tag:hmpdacc.org,2022-04-04:  ...  DOID:4914
3  tag:hmpdacc.org,2022-04-04:  ...  DOID:4914
4  tag:hmpdacc.org,2022-04-04:  ...  DOID:4914
5  tag:hmpdacc.org,2022-04-04:  ...  DOID:4914
6  tag:hmpdacc.org,2022-04-04:  ...  DOID:4914
7  tag:hmpdacc.org,2022-04-04:  ...  DOID:4914
8  tag:hmpdacc.org,2022-04-04:  ...  DOID:4914
9  tag:hmpdacc.org,2022-04-04:  ...  DOID:4914

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:    count
0   2531
count:2531
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.894336462020874 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/biosample_from_subject.tsv ---------
table_name:biosample_from_subject
HMP: biosample_from_subject: Read from file: df: #rows = 49471, #cols: 5

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/biosample_from_subject.tsv: 49472
df: #rows = 49471, #cols: 5
/home/mano/DRC/DRC-Portals/database/C2M2/populateC2M2FromS3.py:326: DtypeWarning: Columns (4,19) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv(table_str, delimiter='\t');
pKeys: ['biosample_id_namespace', 'biosample_local_id', 'subject_id_namespace', 'subject_local_id']
Going to write the count query
Wrote the count query
*** Entering biosample_from_subject to database ***
df: #rows = 49471, #cols: 5

A slice of df:
        biosample_id_namespace  ... age_at_sampling
0  tag:hmpdacc.org,2022-04-04:  ...             NaN
1  tag:hmpdacc.org,2022-04-04:  ...             NaN
2  tag:hmpdacc.org,2022-04-04:  ...             NaN
3  tag:hmpdacc.org,2022-04-04:  ...             NaN
4  tag:hmpdacc.org,2022-04-04:  ...             NaN
5  tag:hmpdacc.org,2022-04-04:  ...             NaN
6  tag:hmpdacc.org,2022-04-04:  ...             NaN
7  tag:hmpdacc.org,2022-04-04:  ...             NaN
8  tag:hmpdacc.org,2022-04-04:  ...             NaN
9  tag:hmpdacc.org,2022-04-04:  ...             NaN

[10 rows x 5 columns]
Data inserted successfully!
sql_count_df:    count
0  49471
count:49471
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.8998475074768066 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/subject.tsv ---------
table_name:subject
HMP: subject: Read from file: df: #rows = 7903, #cols: 10

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/subject.tsv: 7904
df: #rows = 7903, #cols: 10
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering subject to database ***
df: #rows = 7903, #cols: 10

A slice of df:
                  id_namespace       local_id  ... project_local_id persistent_id
0  tag:hmpdacc.org,2022-04-04:  HHS_158458797  ...              HHS           NaN
1  tag:hmpdacc.org,2022-04-04:  HHS_158479027  ...              HHS           NaN
2  tag:hmpdacc.org,2022-04-04:  HHS_158499257  ...              HHS           NaN
3  tag:hmpdacc.org,2022-04-04:  HHS_158742018  ...              HHS           NaN
4  tag:hmpdacc.org,2022-04-04:  HHS_158802708  ...              HHS           NaN
5  tag:hmpdacc.org,2022-04-04:  HHS_158944319  ...              HHS           NaN
6  tag:hmpdacc.org,2022-04-04:  HHS_158984779  ...              HHS           NaN
7  tag:hmpdacc.org,2022-04-04:  HHS_159247771  ...              HHS           NaN
8  tag:hmpdacc.org,2022-04-04:  HHS_159146620  ...              HHS           NaN
9  tag:hmpdacc.org,2022-04-04:  HHS_159166850  ...              HHS           NaN

[10 rows x 5 columns]
Data inserted successfully!
sql_count_df:    count
0   7903
count:7903
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.073805809020996 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/anatomy.tsv ---------
table_name:anatomy
HMP: anatomy: Read from file: df: #rows = 95, #cols: 4

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/anatomy.tsv: 96
df: #rows = 95, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.anatomy;
qt_df:                  pk
0    UBERON:0001013
1    UBERON:0000087
2    UBERON:0001199
3    UBERON:0016435
4    UBERON:0007311
..              ...
276  UBERON:0000033
277  UBERON:0004907
278  UBERON:0000473
279  UBERON:0008337
280  UBERON:0001474

[281 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 281, #cols: 1

df_pk (at most first 10 elements): ['UBERON:0000002', 'UBERON:0000003', 'UBERON:0000004', 'UBERON:0000029', 'UBERON:0000165', 'UBERON:0000167', 'UBERON:0000178', 'UBERON:0000341', 'UBERON:0000376', 'UBERON:0000403']
qt_pk (at most first 10 elements): ['UBERON:0001013', 'UBERON:0000087', 'UBERON:0001199', 'UBERON:0016435', 'UBERON:0007311', 'UBERON:0001736', 'UBERON:0002037', 'UBERON:0009835', 'UBERON:0001621', 'UBERON:0002097']
---- Removed rows from df with matching pk
*** Entering anatomy to database ***
df: #rows = 61, #cols: 4

A slice of df:
                id  ...                                           synonyms
1   UBERON:0000003  ...                                                 []
2   UBERON:0000004  ...  ["nasal sac","nose","peripheral olfactory organ"]
4   UBERON:0000165  ...                    ["regio oralis","regio oralis"]
7   UBERON:0000341  ...                                                 []
8   UBERON:0000376  ...  ["hind limb stylopod","hind limb stylopodium",...
11  UBERON:0000916  ...         ["abdominopelvic region","abdominopelvis"]
14  UBERON:0000964  ...                      ["cornea of camera-type eye"]
16  UBERON:0000976  ...                          ["humeri","humerus bone"]
17  UBERON:0000978  ...                                   ["tetrapod leg"]
18  UBERON:0000979  ...                           ["shankbone","shinbone"]

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.839935302734375 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/collection_anatomy.tsv ---------
table_name:collection_anatomy
HMP: collection_anatomy: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/collection_anatomy.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.7905473709106445 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/file.tsv ---------
table_name:file
HMP: file: Read from file: df: #rows = 251136, #cols: 20

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/file.tsv: 251137
df: #rows = 251136, #cols: 20
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering file to database ***
df: #rows = 251136, #cols: 20

A slice of df:
                  id_namespace  ...                        persistent_id
0  tag:hmpdacc.org,2022-04-04:  ...   drs://drs.hmpdacc.org/1ZkxDLC0OEDy
1  tag:hmpdacc.org,2022-04-04:  ...   drs://drs.hmpdacc.org/U58IbOCZ5jUk
2  tag:hmpdacc.org,2022-04-04:  ...  drs://drs.hmpdacc.org/1OT3AWnkIXUoY
3  tag:hmpdacc.org,2022-04-04:  ...  drs://drs.hmpdacc.org/10zrHKv3T7FtB
4  tag:hmpdacc.org,2022-04-04:  ...   drs://drs.hmpdacc.org/zPUjtQyNKYat
5  tag:hmpdacc.org,2022-04-04:  ...  drs://drs.hmpdacc.org/1IgPmzXpM2UG6
6  tag:hmpdacc.org,2022-04-04:  ...   drs://drs.hmpdacc.org/50zejhq1rY7M
7  tag:hmpdacc.org,2022-04-04:  ...   drs://drs.hmpdacc.org/D8SPdeVQefeX
8  tag:hmpdacc.org,2022-04-04:  ...  drs://drs.hmpdacc.org/11vWXRE4WNptV
9  tag:hmpdacc.org,2022-04-04:  ...   drs://drs.hmpdacc.org/T3luwCUe9ro6

[10 rows x 5 columns]
Data inserted successfully!
sql_count_df:     count
0  251136
count:251136
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 18.678050756454468 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/file_in_collection.tsv ---------
table_name:file_in_collection
HMP: file_in_collection: Read from file: df: #rows = 36849, #cols: 4

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/file_in_collection.tsv: 36850
df: #rows = 36849, #cols: 4
pKeys: ['file_id_namespace', 'file_local_id', 'collection_id_namespace', 'collection_local_id']
Going to write the count query
Wrote the count query
*** Entering file_in_collection to database ***
df: #rows = 36849, #cols: 4

A slice of df:
             file_id_namespace  ...      collection_local_id
0  tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000002
1  tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000002
2  tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000003
3  tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000003
4  tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000004
5  tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000004
6  tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000007
7  tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000007
8  tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000008
9  tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000012

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:    count
0  36849
count:36849
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.6820399761199951 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/project.tsv ---------
table_name:project
HMP: project: Read from file: df: #rows = 24, #cols: 7

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/project.tsv: 25
df: #rows = 24, #cols: 7
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering project to database ***
df: #rows = 24, #cols: 7

A slice of df:
                  id_namespace      local_id  ...  creation_time  abbreviation
0  tag:hmpdacc.org,2022-04-04:           HMP  ...            NaN           HMP
1  tag:hmpdacc.org,2022-04-04:          HMP1  ...            NaN          HMP1
2  tag:hmpdacc.org,2022-04-04:           HHS  ...            NaN           HHS
3  tag:hmpdacc.org,2022-04-04:          Demo  ...            NaN          Demo
4  tag:hmpdacc.org,2022-04-04:     Psoriasis  ...            NaN     Psoriasis
5  tag:hmpdacc.org,2022-04-04:        VagMic  ...            NaN        VagMic
6  tag:hmpdacc.org,2022-04-04:  CrohnDietGen  ...            NaN  CrohnDietGen
7  tag:hmpdacc.org,2022-04-04:          Acne  ...            NaN          Acne
8  tag:hmpdacc.org,2022-04-04:      UrethMic  ...            NaN      UrethMic
9  tag:hmpdacc.org,2022-04-04:       Obesity  ...            NaN       Obesity

[10 rows x 5 columns]
Data inserted successfully!
sql_count_df:    count
0     24
count:24
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.998755693435669 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/biosample.tsv ---------
table_name:biosample
HMP: biosample: Read from file: df: #rows = 51873, #cols: 8

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/biosample.tsv: 51874
df: #rows = 51873, #cols: 8
HMP: biosample table: changed column name assay_type to sample_prep_method
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering biosample to database ***
df: #rows = 51873, #cols: 8

A slice of df:
                  id_namespace   local_id  ... project_local_id persistent_id
0  tag:hmpdacc.org,2022-04-04:  SRS011105  ...              HHS           NaN
1  tag:hmpdacc.org,2022-04-04:  SRS011132  ...              HHS           NaN
2  tag:hmpdacc.org,2022-04-04:  SRS011263  ...              HHS           NaN
3  tag:hmpdacc.org,2022-04-04:  SRS011397  ...              HHS           NaN
4  tag:hmpdacc.org,2022-04-04:  SRS012291  ...              HHS           NaN
5  tag:hmpdacc.org,2022-04-04:  SRS012663  ...              HHS           NaN
6  tag:hmpdacc.org,2022-04-04:  SRS012998  ...              HHS           NaN
7  tag:hmpdacc.org,2022-04-04:  SRS013155  ...              HHS           NaN
8  tag:hmpdacc.org,2022-04-04:  SRS013269  ...              HHS           NaN
9  tag:hmpdacc.org,2022-04-04:  SRS013637  ...              HHS           NaN

[10 rows x 5 columns]
Data inserted successfully!
sql_count_df:    count
0  51873
count:51873
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 2.1762583255767822 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/collection_taxonomy.tsv ---------
table_name:collection_taxonomy
HMP: collection_taxonomy: Read from file: df: #rows = 6022, #cols: 3

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/collection_taxonomy.tsv: 6023
df: #rows = 6022, #cols: 3
pKeys: ['collection_id_namespace', 'collection_local_id', 'taxon']
Going to write the count query
Wrote the count query
*** Entering collection_taxonomy to database ***
df: #rows = 6022, #cols: 3

A slice of df:
       collection_id_namespace      collection_local_id            taxon
0  tag:hmpdacc.org,2022-04-04:  2010RefGen_SAMN00000002  NCBI:txid445970
1  tag:hmpdacc.org,2022-04-04:  2010RefGen_SAMN00000003  NCBI:txid445972
2  tag:hmpdacc.org,2022-04-04:  2010RefGen_SAMN00000004  NCBI:txid449673
3  tag:hmpdacc.org,2022-04-04:  2010RefGen_SAMN00000007  NCBI:txid445974
4  tag:hmpdacc.org,2022-04-04:  2010RefGen_SAMN00000008  NCBI:txid411461
5  tag:hmpdacc.org,2022-04-04:  2010RefGen_SAMN00000012  NCBI:txid451640
6  tag:hmpdacc.org,2022-04-04:  2010RefGen_SAMN00000014  NCBI:txid470145
7  tag:hmpdacc.org,2022-04-04:  2010RefGen_SAMN00000015  NCBI:txid471870
8  tag:hmpdacc.org,2022-04-04:  2010RefGen_SAMN00000016  NCBI:txid470146
9  tag:hmpdacc.org,2022-04-04:  2010RefGen_SAMN00000017  NCBI:txid471872
Data inserted successfully!
sql_count_df:    count
0   6022
count:6022
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.0972633361816406 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/protein_gene.tsv ---------
table_name:protein_gene
HMP: protein_gene: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/protein_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9192190170288086 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/collection_protein.tsv ---------
table_name:collection_protein
HMP: collection_protein: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/collection_protein.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9050741195678711 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/collection_defined_by_project.tsv ---------
table_name:collection_defined_by_project
HMP: collection_defined_by_project: Read from file: df: #rows = 20146, #cols: 4

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/collection_defined_by_project.tsv: 20147
df: #rows = 20146, #cols: 4
pKeys: ['collection_id_namespace', 'collection_local_id', 'project_id_namespace', 'project_local_id']
Going to write the count query
Wrote the count query
*** Entering collection_defined_by_project to database ***
df: #rows = 20146, #cols: 4

A slice of df:
       collection_id_namespace  ... project_local_id
0  tag:hmpdacc.org,2022-04-04:  ...           RefGen
1  tag:hmpdacc.org,2022-04-04:  ...           RefGen
2  tag:hmpdacc.org,2022-04-04:  ...           RefGen
3  tag:hmpdacc.org,2022-04-04:  ...           RefGen
4  tag:hmpdacc.org,2022-04-04:  ...           RefGen
5  tag:hmpdacc.org,2022-04-04:  ...           RefGen
6  tag:hmpdacc.org,2022-04-04:  ...           RefGen
7  tag:hmpdacc.org,2022-04-04:  ...           RefGen
8  tag:hmpdacc.org,2022-04-04:  ...           RefGen
9  tag:hmpdacc.org,2022-04-04:  ...           RefGen

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:    count
0  20146
count:20146
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.2814807891845703 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/collection_compound.tsv ---------
table_name:collection_compound
HMP: collection_compound: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/collection_compound.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8955442905426025 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/phenotype.tsv ---------
table_name:phenotype
HMP: phenotype: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9195129871368408 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/subject_in_collection.tsv ---------
table_name:subject_in_collection
HMP: subject_in_collection: Read from file: df: #rows = 21563, #cols: 4

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/subject_in_collection.tsv: 21564
df: #rows = 21563, #cols: 4
pKeys: ['subject_id_namespace', 'subject_local_id', 'collection_id_namespace', 'collection_local_id']
Going to write the count query
Wrote the count query
*** Entering subject_in_collection to database ***
df: #rows = 21563, #cols: 4

A slice of df:
          subject_id_namespace  ...    collection_local_id
0  tag:hmpdacc.org,2022-04-04:  ...  hmasm1_anterior_nares
1  tag:hmpdacc.org,2022-04-04:  ...  hmasm1_anterior_nares
2  tag:hmpdacc.org,2022-04-04:  ...  hmasm1_anterior_nares
3  tag:hmpdacc.org,2022-04-04:  ...  hmasm1_anterior_nares
4  tag:hmpdacc.org,2022-04-04:  ...  hmasm1_anterior_nares
5  tag:hmpdacc.org,2022-04-04:  ...  hmasm1_anterior_nares
6  tag:hmpdacc.org,2022-04-04:  ...  hmasm1_anterior_nares
7  tag:hmpdacc.org,2022-04-04:  ...  hmasm1_anterior_nares
8  tag:hmpdacc.org,2022-04-04:  ...  hmasm1_anterior_nares
9  tag:hmpdacc.org,2022-04-04:  ...  hmasm1_anterior_nares

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:    count
0  21563
count:21563
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.403867244720459 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/id_namespace.tsv ---------
table_name:id_namespace
HMP: id_namespace: Read from file: df: #rows = 1, #cols: 4

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/id_namespace.tsv: 2
df: #rows = 1, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.id_namespace;
qt_df:                                         pk
0   https://www.metabolomicsworkbench.org/
1               tag:motrpac-data.org,2023:
2                           SPARC.subject:
3                                    egtex
4                              SPARC.file:
5             https://www.data.glygen.org/
6              https://data.4dnucleome.org
7                                     gtex
8                        SPARC.collection:
9                               ERCC-exRNA
10                                  SPARC:
11                              adult_gtex
12                           SPARC.sample:
13                              kidsfirst:
14          tag:hubmapconsortium.org,2023:
15                          SPARC.project:
---- Executed query, got data.frame: qt_df: #rows = 16, #cols: 1

df_pk (at most first 10 elements): ['tag:hmpdacc.org,2022-04-04:']
qt_pk (at most first 10 elements): ['https://www.metabolomicsworkbench.org/', 'tag:motrpac-data.org,2023:', 'SPARC.subject:', 'egtex', 'SPARC.file:', 'https://www.data.glygen.org/', 'https://data.4dnucleome.org', 'gtex', 'SPARC.collection:', 'ERCC-exRNA']
---- Removed rows from df with matching pk
*** Entering id_namespace to database ***
df: #rows = 1, #cols: 4

A slice of df:
                            id  ...                                        description
0  tag:hmpdacc.org,2022-04-04:  ...  The default identifier namespace id_namespace ...

[1 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9516086578369141 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/subject_phenotype.tsv ---------
table_name:subject_phenotype
HMP: subject_phenotype: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/subject_phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9189462661743164 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/substance.tsv ---------
table_name:substance
HMP: substance: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.929591178894043 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/collection_in_collection.tsv ---------
table_name:collection_in_collection
HMP: collection_in_collection: Read from file: df: #rows = 20124, #cols: 4

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/collection_in_collection.tsv: 20125
df: #rows = 20124, #cols: 4
pKeys: ['superset_collection_id_namespace', 'superset_collection_local_id', 'subset_collection_id_namespace', 'subset_collection_local_id']
Going to write the count query
Wrote the count query
*** Entering collection_in_collection to database ***
df: #rows = 20124, #cols: 4

A slice of df:
  superset_collection_id_namespace  ... subset_collection_local_id
0      tag:hmpdacc.org,2022-04-04:  ...    2010RefGen_SAMN00000002
1      tag:hmpdacc.org,2022-04-04:  ...    2010RefGen_SAMN00000003
2      tag:hmpdacc.org,2022-04-04:  ...    2010RefGen_SAMN00000004
3      tag:hmpdacc.org,2022-04-04:  ...    2010RefGen_SAMN00000007
4      tag:hmpdacc.org,2022-04-04:  ...    2010RefGen_SAMN00000008
5      tag:hmpdacc.org,2022-04-04:  ...    2010RefGen_SAMN00000012
6      tag:hmpdacc.org,2022-04-04:  ...    2010RefGen_SAMN00000014
7      tag:hmpdacc.org,2022-04-04:  ...    2010RefGen_SAMN00000015
8      tag:hmpdacc.org,2022-04-04:  ...    2010RefGen_SAMN00000016
9      tag:hmpdacc.org,2022-04-04:  ...    2010RefGen_SAMN00000017

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:    count
0  20124
count:20124
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.2660894393920898 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/file_describes_subject.tsv ---------
table_name:file_describes_subject
HMP: file_describes_subject: Read from file: df: #rows = 240632, #cols: 4

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/file_describes_subject.tsv: 240633
df: #rows = 240632, #cols: 4
pKeys: ['file_id_namespace', 'file_local_id', 'subject_id_namespace', 'subject_local_id']
Going to write the count query
Wrote the count query
*** Entering file_describes_subject to database ***
df: #rows = 240632, #cols: 4

A slice of df:
             file_id_namespace  ... subject_local_id
0  tag:hmpdacc.org,2022-04-04:  ...    HHS_158458797
1  tag:hmpdacc.org,2022-04-04:  ...    HHS_158479027
2  tag:hmpdacc.org,2022-04-04:  ...    HHS_158458797
3  tag:hmpdacc.org,2022-04-04:  ...    HHS_158458797
4  tag:hmpdacc.org,2022-04-04:  ...    HHS_158458797
5  tag:hmpdacc.org,2022-04-04:  ...    HHS_158458797
6  tag:hmpdacc.org,2022-04-04:  ...    HHS_158458797
7  tag:hmpdacc.org,2022-04-04:  ...    HHS_158479027
8  tag:hmpdacc.org,2022-04-04:  ...    HHS_158479027
9  tag:hmpdacc.org,2022-04-04:  ...    HHS_158479027

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:     count
0  240632
count:240632
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 5.618013620376587 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/compound.tsv ---------
table_name:compound
HMP: compound: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/compound.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8961594104766846 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/collection_substance.tsv ---------
table_name:collection_substance
HMP: collection_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/collection_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.930534839630127 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/biosample_gene.tsv ---------
table_name:biosample_gene
HMP: biosample_gene: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/biosample_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9192633628845215 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/collection_disease.tsv ---------
table_name:collection_disease
HMP: collection_disease: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/collection_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9400639533996582 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/analysis_type.tsv ---------
table_name:analysis_type
HMP: analysis_type: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/analysis_type.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9172298908233643 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/phenotype_disease.tsv ---------
table_name:phenotype_disease
HMP: phenotype_disease: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/phenotype_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9036355018615723 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/gene.tsv ---------
table_name:gene
HMP: gene: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9318242073059082 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/file_describes_biosample.tsv ---------
table_name:file_describes_biosample
HMP: file_describes_biosample: Read from file: df: #rows = 289343, #cols: 4

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/file_describes_biosample.tsv: 289344
df: #rows = 289343, #cols: 4
pKeys: ['file_id_namespace', 'file_local_id', 'biosample_id_namespace', 'biosample_local_id']
Going to write the count query
Wrote the count query
*** Entering file_describes_biosample to database ***
df: #rows = 289343, #cols: 4

A slice of df:
             file_id_namespace  ... biosample_local_id
0  tag:hmpdacc.org,2022-04-04:  ...          SRS011061
1  tag:hmpdacc.org,2022-04-04:  ...          SRS011084
2  tag:hmpdacc.org,2022-04-04:  ...          SRS011086
3  tag:hmpdacc.org,2022-04-04:  ...          SRS011090
4  tag:hmpdacc.org,2022-04-04:  ...          SRS011098
5  tag:hmpdacc.org,2022-04-04:  ...          SRS011105
6  tag:hmpdacc.org,2022-04-04:  ...          SRS011111
7  tag:hmpdacc.org,2022-04-04:  ...          SRS011115
8  tag:hmpdacc.org,2022-04-04:  ...          SRS011126
9  tag:hmpdacc.org,2022-04-04:  ...          SRS011132

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:     count
0  289343
count:289343
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 6.460203170776367 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/collection_gene.tsv ---------
table_name:collection_gene
HMP: collection_gene: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/collection_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9621033668518066 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/subject_substance.tsv ---------
table_name:subject_substance
HMP: subject_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/subject_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9281172752380371 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/project_in_project.tsv ---------
table_name:project_in_project
HMP: project_in_project: Read from file: df: #rows = 23, #cols: 4

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/project_in_project.tsv: 24
df: #rows = 23, #cols: 4
pKeys: ['parent_project_id_namespace', 'parent_project_local_id', 'child_project_id_namespace', 'child_project_local_id']
Going to write the count query
Wrote the count query
*** Entering project_in_project to database ***
df: #rows = 23, #cols: 4

A slice of df:
   parent_project_id_namespace  ... child_project_local_id
0  tag:hmpdacc.org,2022-04-04:  ...                   HMP1
1  tag:hmpdacc.org,2022-04-04:  ...                    HHS
2  tag:hmpdacc.org,2022-04-04:  ...                   Demo
3  tag:hmpdacc.org,2022-04-04:  ...              Psoriasis
4  tag:hmpdacc.org,2022-04-04:  ...                 VagMic
5  tag:hmpdacc.org,2022-04-04:  ...           CrohnDietGen
6  tag:hmpdacc.org,2022-04-04:  ...                 UlcCol
7  tag:hmpdacc.org,2022-04-04:  ...               UrethMic
8  tag:hmpdacc.org,2022-04-04:  ...                Obesity
9  tag:hmpdacc.org,2022-04-04:  ...            CrohnStrFun

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:    count
0     23
count:23
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.0281121730804443 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/ncbi_taxonomy.tsv ---------
table_name:ncbi_taxonomy
HMP: ncbi_taxonomy: Read from file: df: #rows = 2313, #cols: 5

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/ncbi_taxonomy.tsv: 2314
df: #rows = 2313, #cols: 5
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.ncbi_taxonomy;
qt_df:                   pk
0     NCBI:txid10149
1    NCBI:txid543564
2      NCBI:txid5823
3     NCBI:txid99755
4       NCBI:txid287
..               ...
159   NCBI:txid64518
160    NCBI:txid4555
161   NCBI:txid84112
162    NCBI:txid4932
163    NCBI:txid3847

[164 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 164, #cols: 1

df_pk (at most first 10 elements): ['NCBI:txid1000568', 'NCBI:txid1000569', 'NCBI:txid1000570', 'NCBI:txid1000588', 'NCBI:txid1000589', 'NCBI:txid1000590', 'NCBI:txid1002339', 'NCBI:txid1002364', 'NCBI:txid1002365', 'NCBI:txid1002366']
qt_pk (at most first 10 elements): ['NCBI:txid10149', 'NCBI:txid543564', 'NCBI:txid5823', 'NCBI:txid99755', 'NCBI:txid287', 'NCBI:txid75728', 'NCBI:txid252141', 'NCBI:txid382', 'NCBI:txid59463', 'NCBI:txid39293']
---- Removed rows from df with matching pk
*** Entering ncbi_taxonomy to database ***
df: #rows = 2303, #cols: 5

A slice of df:
                 id  ...                                           synonyms
0  NCBI:txid1000568  ...                                                 []
1  NCBI:txid1000569  ...                                                 []
2  NCBI:txid1000570  ...  ["Streptococcus anginosus ATCC 12395", "Strept...
3  NCBI:txid1000588  ...          ["Streptococcus mitis bv. 2 strain SK95"]
4  NCBI:txid1000589  ...  ["Streptococcus dysgalactiae subsp. equisimili...
5  NCBI:txid1000590  ...  ["Staphylococcus epidermidis str. 14.1.R1.SE",...
6  NCBI:txid1002339  ...                                                 []
7  NCBI:txid1002364  ...  ["Hafnia alvei str. ATCC 51873", "Hafnia alvei...
8  NCBI:txid1002365  ...  ["Lactobacillus rhamnosus BCRC 14029", "Lactob...
9  NCBI:txid1002366  ...  ["Listeria innocua str. ATCC 33091", "Listeria...

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.1035139560699463 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/file_format.tsv ---------
table_name:file_format
HMP: file_format: Read from file: df: #rows = 15, #cols: 4

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/file_format.tsv: 16
df: #rows = 15, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.file_format;
qt_df:              pk
0   format:3603
1   format:3004
2   format:4000
3   format:3578
4   format:3990
5   format:3506
6   format:3464
7   format:3579
8   format:3327
9   format:3987
10  format:2332
11  format:3507
12  format:3547
13  format:1915
14  format:2572
15  format:3554
16  format:3591
17  format:3590
18  format:4001
19  format:3873
20  format:3604
21  format:3006
22  format:3462
23  format:3997
24  format:3751
25  format:1930
26  format:4007
27  format:3468
28  format:3727
29  format:3752
30  format:3829
31  format:3583
32  format:3981
33  format:3996
34  format:1964
35  format:3989
36  format:2330
37  format:3508
38  format:2331
39  format:3003
40  format:3016
41  format:3839
42  format:3626
43  format:3008
44  format:3620
45  format:2333
46  format:3475
---- Executed query, got data.frame: qt_df: #rows = 47, #cols: 1

df_pk (at most first 10 elements): ['format:1919', 'format:1929', 'format:1930', 'format:1936', 'format:1975', 'format:2330', 'format:2572', 'format:3244', 'format:3464', 'format:3468']
qt_pk (at most first 10 elements): ['format:3603', 'format:3004', 'format:4000', 'format:3578', 'format:3990', 'format:3506', 'format:3464', 'format:3579', 'format:3327', 'format:3987']
---- Removed rows from df with matching pk
*** Entering file_format to database ***
df: #rows = 8, #cols: 4

A slice of df:
             id  ...                                  synonyms
0   format:1919  ...                                        []
1   format:1929  ...  ["FASTA sequence format","FASTA format"]
3   format:1936  ...                               ["GenBank"]
4   format:1975  ...                                        []
7   format:3244  ...                                        []
12  format:3654  ...                                        []
13  format:3712  ...                                        []
14  format:3746  ...  ["BIological Observation Matrix format"]

[8 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.0139095783233643 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/subject_disease.tsv ---------
table_name:subject_disease
HMP: subject_disease: Read from file: df: #rows = 492, #cols: 4

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/subject_disease.tsv: 493
df: #rows = 492, #cols: 4
pKeys: ['subject_id_namespace', 'subject_local_id', 'association_type', 'disease']
Going to write the count query
Wrote the count query
*** Entering subject_disease to database ***
df: #rows = 492, #cols: 4

A slice of df:
          subject_id_namespace  ...    disease
0  tag:hmpdacc.org,2022-04-04:  ...  DOID:4914
1  tag:hmpdacc.org,2022-04-04:  ...  DOID:4914
2  tag:hmpdacc.org,2022-04-04:  ...  DOID:4914
3  tag:hmpdacc.org,2022-04-04:  ...  DOID:4914
4  tag:hmpdacc.org,2022-04-04:  ...  DOID:4914
5  tag:hmpdacc.org,2022-04-04:  ...  DOID:4914
6  tag:hmpdacc.org,2022-04-04:  ...  DOID:4914
7  tag:hmpdacc.org,2022-04-04:  ...  DOID:4914
8  tag:hmpdacc.org,2022-04-04:  ...  DOID:4914
9  tag:hmpdacc.org,2022-04-04:  ...  DOID:4914

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:    count
0    492
count:492
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9828641414642334 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/file_describes_collection.tsv ---------
table_name:file_describes_collection
HMP: file_describes_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/file_describes_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9078540802001953 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/data_type.tsv ---------
table_name:data_type
HMP: data_type: Read from file: df: #rows = 16, #cols: 4

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/data_type.tsv: 17
df: #rows = 16, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.data_type;
qt_df:              pk
0     data:3112
1     data:3108
2     data:0006
3     data:1916
4     data:3210
5     data:3488
6     data:3111
7     data:2044
8     data:3869
9     data:1714
10    data:2536
11    data:3495
12  ILX:0793824
13    data:1383
14    data:3110
15    data:2603
16    data:3494
17    data:2764
18    data:2048
19    data:0928
20    data:2082
21    data:3002
22    data:3914
23    data:3498
24    data:2887
25    data:2968
26  ILX:0793825
---- Executed query, got data.frame: qt_df: #rows = 27, #cols: 1

df_pk (at most first 10 elements): ['data:0907', 'data:0925', 'data:0943', 'data:0945', 'data:1255', 'data:1270', 'data:1916', 'data:2048', 'data:2082', 'data:2600']
qt_pk (at most first 10 elements): ['data:3112', 'data:3108', 'data:0006', 'data:1916', 'data:3210', 'data:3488', 'data:3111', 'data:2044', 'data:3869', 'data:1714']
---- Removed rows from df with matching pk
*** Entering data_type to database ***
df: #rows = 10, #cols: 4

A slice of df:
           id  ...                                           synonyms
0   data:0907  ...  ["Protein classification data","Protein family...
1   data:0925  ...              ["Contigs","SO:0000353","SO:0001248"]
2   data:0943  ...                      ["Mass spectrometry spectra"]
3   data:0945  ...  ["Peptide spectrum match","'Protein identifica...
4   data:1255  ...  ["Feature record","Sequence features report","...
5   data:1270  ...                         ["Sequence feature table"]
9   data:2600  ...                              ["Network","Pathway"]
11  data:2976  ...  ["Protein sequences","Amino acid sequence","Am...
12  data:3028  ...                                 ["Taxonomic data"]
15  data:3917  ...                              ["Read count matrix"]

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.025282382965088 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/assay_type.tsv ---------
table_name:assay_type
HMP: assay_type: Read from file: df: #rows = 12, #cols: 4

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/assay_type.tsv: 13
df: #rows = 12, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.assay_type;
qt_df:              pk
0   OBI:0003297
1   OBI:0001980
2   OBI:0003094
3   OBI:0003090
4   OBI:0003306
..          ...
61  OBI:0003302
62  OBI:0001271
63  OBI:0003098
64  OBI:0002773
65  OBI:0003087

[66 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 66, #cols: 1

df_pk (at most first 10 elements): ['OBI:0000366', 'OBI:0000615', 'OBI:0001271', 'OBI:0002117', 'OBI:0002118', 'OBI:0002145', 'OBI:0002623', 'OBI:0002760', 'OBI:0002761', 'OBI:0002763']
qt_pk (at most first 10 elements): ['OBI:0003297', 'OBI:0001980', 'OBI:0003094', 'OBI:0003090', 'OBI:0003306', 'OBI:0002762', 'OBI:0003097', 'OBI:0001920', 'OBI:0002112', 'OBI:0003034']
---- Removed rows from df with matching pk
*** Entering assay_type to database ***
df: #rows = 7, #cols: 4

A slice of df:
             id  ...                       synonyms
5   OBI:0002145  ...                             []
6   OBI:0002623  ...                        ["WMS"]
7   OBI:0002760  ...                             []
8   OBI:0002761  ...            ["lipidomic assay"]
9   OBI:0002763  ...  ["16S rRNA sequencing assay"]
10  OBI:0002766  ...                             []
11  OBI:0002768  ...                             []

[7 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9958128929138184 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/collection.tsv ---------
table_name:collection
HMP: collection: Read from file: df: #rows = 20146, #cols: 8

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/collection.tsv: 20147
df: #rows = 20146, #cols: 8
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering collection to database ***
df: #rows = 20146, #cols: 8

A slice of df:
                  id_namespace  ...             abbreviation
0  tag:hmpdacc.org,2022-04-04:  ...               2010RefGen
1  tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000002
2  tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000003
3  tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000004
4  tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000007
5  tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000008
6  tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000012
7  tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000014
8  tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000015
9  tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000016

[10 rows x 5 columns]
Data inserted successfully!
sql_count_df:    count
0  20146
count:20146
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.5860764980316162 seconds.

Processing C2M2 Files...:  83%|████████▎ | 10/12 [34:08<05:37, 168.51s/it]--------- ingest/c2m2s/HMP/datapackage/merged/data/subject_role_taxonomy.tsv ---------
table_name:subject_role_taxonomy
HMP: subject_role_taxonomy: Read from file: df: #rows = 7903, #cols: 4

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/subject_role_taxonomy.tsv: 7904
df: #rows = 7903, #cols: 4
pKeys: ['subject_id_namespace', 'subject_local_id', 'role_id', 'taxonomy_id']
Going to write the count query
Wrote the count query
*** Entering subject_role_taxonomy to database ***
df: #rows = 7903, #cols: 4

A slice of df:
          subject_id_namespace  ...    taxonomy_id
0  tag:hmpdacc.org,2022-04-04:  ...  NCBI:txid9606
1  tag:hmpdacc.org,2022-04-04:  ...  NCBI:txid9606
2  tag:hmpdacc.org,2022-04-04:  ...  NCBI:txid9606
3  tag:hmpdacc.org,2022-04-04:  ...  NCBI:txid9606
4  tag:hmpdacc.org,2022-04-04:  ...  NCBI:txid9606
5  tag:hmpdacc.org,2022-04-04:  ...  NCBI:txid9606
6  tag:hmpdacc.org,2022-04-04:  ...  NCBI:txid9606
7  tag:hmpdacc.org,2022-04-04:  ...  NCBI:txid9606
8  tag:hmpdacc.org,2022-04-04:  ...  NCBI:txid9606
9  tag:hmpdacc.org,2022-04-04:  ...  NCBI:txid9606

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:    count
0   7903
count:7903
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.1568427085876465 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/biosample_substance.tsv ---------
table_name:biosample_substance
HMP: biosample_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/biosample_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9367609024047852 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/collection_phenotype.tsv ---------
table_name:collection_phenotype
HMP: collection_phenotype: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/collection_phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8494887351989746 seconds.


================================== DCC short label: IDG =============================================
Unpack zip file: c2m2_extract_path: ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage
--------- ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/analysis_type.tsv ---------
table_name:analysis_type
IDG: analysis_type: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/analysis_type.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9191403388977051 seconds.

--------- ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/protein_gene.tsv ---------
table_name:protein_gene
IDG: protein_gene: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/protein_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9143276214599609 seconds.

--------- ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/biosample_from_subject.tsv ---------
table_name:biosample_from_subject
IDG: biosample_from_subject: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/biosample_from_subject.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9712586402893066 seconds.

--------- ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/disease.tsv ---------
table_name:disease
IDG: disease: Read from file: df: #rows = 1899, #cols: 4

#Lines in file ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/disease.tsv: 1900
df: #rows = 1899, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.disease;
qt_df:                pk
0       DOID:2030
1       DOID:5844
2      DOID:10892
3         DOID:18
4         DOID:17
..            ...
166  DOID:0050700
167  DOID:0080171
168  DOID:0060180
169  DOID:0014667
170     DOID:1289

[171 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 171, #cols: 1

df_pk (at most first 10 elements): ['DOID:10003', 'DOID:10016', 'DOID:10017', 'DOID:1002', 'DOID:10033', 'DOID:10041', 'DOID:10112', 'DOID:10124', 'DOID:10126', 'DOID:10140']
qt_pk (at most first 10 elements): ['DOID:2030', 'DOID:5844', 'DOID:10892', 'DOID:18', 'DOID:17', 'DOID:0050830', 'DOID:10534', 'DOID:1682', 'DOID:5052', 'DOID:9269']
---- Removed rows from df with matching pk
*** Entering disease to database ***
df: #rows = 1772, #cols: 4

A slice of df:
            id  ...                                           synonyms
0   DOID:10003  ...  ["DOID:11053","DOID:12112","DOID:12114","centr...
1   DOID:10016  ...  ["MEN type IIB","MEN2B","mucosal neuroma syndr...
2   DOID:10017  ...  ["MEN type I","Wermer syndrome","Wermer's synd...
3    DOID:1002  ...                                                 []
4   DOID:10033  ...  ["Ciliary muscle paresis","Cycloplegic paralys...
5   DOID:10041  ...  ["familial atypical multiple mole-melanoma","F...
7   DOID:10124  ...                                      ["DOID:2284"]
8   DOID:10126  ...                                 ["conical cornea"]
9   DOID:10140  ...      ["dry eye disease","Tear film insufficiency"]
10  DOID:10154  ...                                                 []

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.0527639389038086 seconds.

--------- ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection.tsv ---------
table_name:collection
IDG: collection: Read from file: df: #rows = 74743, #cols: 8

#Lines in file ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection.tsv: 74744
df: #rows = 74743, #cols: 8
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering collection to database ***
df: #rows = 74743, #cols: 8

A slice of df:
                       id_namespace  ... abbreviation
0  https://www.druggablegenome.net/  ...          NaN
1  https://www.druggablegenome.net/  ...          NaN
2  https://www.druggablegenome.net/  ...          NaN
3  https://www.druggablegenome.net/  ...          NaN
4  https://www.druggablegenome.net/  ...          NaN
5  https://www.druggablegenome.net/  ...          NaN
6  https://www.druggablegenome.net/  ...          NaN
7  https://www.druggablegenome.net/  ...          NaN
8  https://www.druggablegenome.net/  ...          NaN
9  https://www.druggablegenome.net/  ...          NaN

[10 rows x 5 columns]
Data inserted successfully!
sql_count_df:    count
0  74743
count:74743
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 3.218290090560913 seconds.

--------- ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/gene.tsv ---------
table_name:gene
IDG: gene: Read from file: df: #rows = 19634, #cols: 5

#Lines in file ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/gene.tsv: 19635
df: #rows = 19634, #cols: 5
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.gene;
qt_df:                    pk
0     ENSG00000106003
1     ENSG00000079805
2     ENSG00000187605
3     ENSG00000164611
4     ENSG00000117118
...               ...
5626  ENSG00000213585
5627  ENSG00000198851
5628  ENSG00000196505
5629  ENSG00000169252
5630  ENSG00000110245

[5631 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 5631, #cols: 1

df_pk (at most first 10 elements): ['ENSG00000000003', 'ENSG00000000005', 'ENSG00000000419', 'ENSG00000000457', 'ENSG00000000460', 'ENSG00000000938', 'ENSG00000000971', 'ENSG00000001036', 'ENSG00000001084', 'ENSG00000001167']
qt_pk (at most first 10 elements): ['ENSG00000106003', 'ENSG00000079805', 'ENSG00000187605', 'ENSG00000164611', 'ENSG00000117118', 'ENSG00000187730', 'ENSG00000204525', 'ENSG00000070729', 'ENSG00000157240', 'ENSG00000281013']
---- Removed rows from df with matching pk
*** Entering gene to database ***
df: #rows = 14665, #cols: 5

A slice of df:
                 id  ...       organism
0   ENSG00000000003  ...  NCBI:txid9606
1   ENSG00000000005  ...  NCBI:txid9606
3   ENSG00000000457  ...  NCBI:txid9606
4   ENSG00000000460  ...  NCBI:txid9606
5   ENSG00000000938  ...  NCBI:txid9606
7   ENSG00000001036  ...  NCBI:txid9606
9   ENSG00000001167  ...  NCBI:txid9606
10  ENSG00000001460  ...  NCBI:txid9606
11  ENSG00000001461  ...  NCBI:txid9606
13  ENSG00000001561  ...  NCBI:txid9606

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 3.7105753421783447 seconds.

--------- ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/file_describes_collection.tsv ---------
table_name:file_describes_collection
IDG: file_describes_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/file_describes_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8920049667358398 seconds.

--------- ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/subject_race.tsv ---------
table_name:subject_race
IDG: subject_race: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/subject_race.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9512333869934082 seconds.

--------- ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/project_in_project.tsv ---------
table_name:project_in_project
IDG: project_in_project: Read from file: df: #rows = 5, #cols: 4

#Lines in file ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/project_in_project.tsv: 6
df: #rows = 5, #cols: 4
pKeys: ['parent_project_id_namespace', 'parent_project_local_id', 'child_project_id_namespace', 'child_project_local_id']
Going to write the count query
Wrote the count query
*** Entering project_in_project to database ***
df: #rows = 5, #cols: 4

A slice of df:
        parent_project_id_namespace  ... child_project_local_id
0  https://www.druggablegenome.net/  ...            Harmonizome
1  https://www.druggablegenome.net/  ...           Drugmonizome
2  https://www.druggablegenome.net/  ...      idg_tcrd_diseases
3  https://www.druggablegenome.net/  ...  idg_drugcentral_drugs
4  https://www.druggablegenome.net/  ...       idg_tcrd_targets

[5 rows x 4 columns]
Data inserted successfully!
sql_count_df:    count
0      5
count:5
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9895825386047363 seconds.

--------- ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/subject_substance.tsv ---------
table_name:subject_substance
IDG: subject_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/subject_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9263668060302734 seconds.

--------- ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/id_namespace.tsv ---------
table_name:id_namespace
IDG: id_namespace: Read from file: df: #rows = 4, #cols: 4

#Lines in file ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/id_namespace.tsv: 5
df: #rows = 4, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.id_namespace;
qt_df:                                         pk
0   https://www.metabolomicsworkbench.org/
1               tag:motrpac-data.org,2023:
2                           SPARC.subject:
3                                    egtex
4                              SPARC.file:
5             https://www.data.glygen.org/
6              https://data.4dnucleome.org
7                                     gtex
8                        SPARC.collection:
9                               ERCC-exRNA
10             tag:hmpdacc.org,2022-04-04:
11                                  SPARC:
12                              adult_gtex
13                           SPARC.sample:
14                              kidsfirst:
15          tag:hubmapconsortium.org,2023:
16                          SPARC.project:
---- Executed query, got data.frame: qt_df: #rows = 17, #cols: 1

df_pk (at most first 10 elements): ['https://druggablegenome.net/cfde_idg_drugcentral_drugs', 'https://druggablegenome.net/cfde_idg_tcrd_diseases', 'https://druggablegenome.net/cfde_idg_tcrd_targets', 'https://www.druggablegenome.net/']
qt_pk (at most first 10 elements): ['https://www.metabolomicsworkbench.org/', 'tag:motrpac-data.org,2023:', 'SPARC.subject:', 'egtex', 'SPARC.file:', 'https://www.data.glygen.org/', 'https://data.4dnucleome.org', 'gtex', 'SPARC.collection:', 'ERCC-exRNA']
---- Removed rows from df with matching pk
*** Entering id_namespace to database ***
df: #rows = 4, #cols: 4

A slice of df:
                                                  id  ...                                        description
2  https://druggablegenome.net/cfde_idg_drugcentr...  ...  IDG DrugCentral.org, online reference for appr...
1  https://druggablegenome.net/cfde_idg_tcrd_dise...  ...  IDG Target Central Resource Database (TCRD) Di...
3  https://druggablegenome.net/cfde_idg_tcrd_targets  ...  IDG Target Central Resource Database (TCRD) Ta...
0                   https://www.druggablegenome.net/  ...  The goal of IDG is to improve our understandin...

[4 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.0057199001312256 seconds.

--------- ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/file_format.tsv ---------
table_name:file_format
IDG: file_format: Read from file: df: #rows = 4, #cols: 4

#Lines in file ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/file_format.tsv: 5
df: #rows = 4, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.file_format;
qt_df:              pk
0   format:3654
1   format:3603
2   format:3004
3   format:4000
4   format:3578
5   format:3990
6   format:3506
7   format:3464
8   format:3579
9   format:3327
10  format:1936
11  format:3987
12  format:2332
13  format:3507
14  format:1975
15  format:3547
16  format:3712
17  format:1915
18  format:2572
19  format:3554
20  format:3591
21  format:3590
22  format:4001
23  format:3873
24  format:3604
25  format:3006
26  format:3462
27  format:3997
28  format:3751
29  format:1930
30  format:4007
31  format:3468
32  format:3244
33  format:3727
34  format:3752
35  format:1919
36  format:3829
37  format:3583
38  format:1929
39  format:3981
40  format:3996
41  format:1964
42  format:3746
43  format:3989
44  format:2330
45  format:3508
46  format:2331
47  format:3003
48  format:3016
49  format:3839
50  format:3626
51  format:3008
52  format:3620
53  format:2333
54  format:3475
---- Executed query, got data.frame: qt_df: #rows = 55, #cols: 1

df_pk (at most first 10 elements): ['format:2330', 'format:3464', 'format:3475', 'format:3989']
qt_pk (at most first 10 elements): ['format:3654', 'format:3603', 'format:3004', 'format:4000', 'format:3578', 'format:3990', 'format:3506', 'format:3464', 'format:3579', 'format:3327']
---- Removed rows from df with matching pk
*** Entering file_format to database ***
df: #rows = 0, #cols: 4

A slice of df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9513566493988037 seconds.

--------- ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/ncbi_taxonomy.tsv ---------
table_name:ncbi_taxonomy
IDG: ncbi_taxonomy: Read from file: df: #rows = 1, #cols: 5

#Lines in file ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/ncbi_taxonomy.tsv: 2
df: #rows = 1, #cols: 5
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.ncbi_taxonomy;
qt_df:                     pk
0        NCBI:txid5823
1       NCBI:txid99755
2     NCBI:txid1095745
3     NCBI:txid1739397
4      NCBI:txid742723
...                ...
2462   NCBI:txid742726
2463  NCBI:txid1715207
2464  NCBI:txid1161416
2465   NCBI:txid765081
2466   NCBI:txid999422

[2467 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 2467, #cols: 1

df_pk (at most first 10 elements): ['NCBI:txid9606']
qt_pk (at most first 10 elements): ['NCBI:txid5823', 'NCBI:txid99755', 'NCBI:txid1095745', 'NCBI:txid1739397', 'NCBI:txid742723', 'NCBI:txid1715193', 'NCBI:txid469585', 'NCBI:txid1581186', 'NCBI:txid762963', 'NCBI:txid1542093']
---- Removed rows from df with matching pk
*** Entering ncbi_taxonomy to database ***
df: #rows = 0, #cols: 5

A slice of df:
Empty DataFrame
Columns: [id, clade, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.993241548538208 seconds.

--------- ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/project.tsv ---------
table_name:project
IDG: project: Read from file: df: #rows = 6, #cols: 7

#Lines in file ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/project.tsv: 7
df: #rows = 6, #cols: 7
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering project to database ***
df: #rows = 6, #cols: 7

A slice of df:
                                        id_namespace  ... abbreviation
0                   https://www.druggablegenome.net/  ...          NaN
1                   https://www.druggablegenome.net/  ...          IDG
2                   https://www.druggablegenome.net/  ...          NaN
3  https://druggablegenome.net/cfde_idg_tcrd_dise...  ...       tgtpgs
4  https://druggablegenome.net/cfde_idg_drugcentr...  ...       drgpgs
5  https://druggablegenome.net/cfde_idg_tcrd_targets  ...       tgtpgs

[6 rows x 5 columns]
Data inserted successfully!
sql_count_df:    count
0      6
count:6
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9624114036560059 seconds.

--------- ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection_taxonomy.tsv ---------
table_name:collection_taxonomy
IDG: collection_taxonomy: Read from file: df: #rows = 18479, #cols: 3

#Lines in file ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection_taxonomy.tsv: 18480
df: #rows = 18479, #cols: 3
pKeys: ['collection_id_namespace', 'collection_local_id', 'taxon']
Going to write the count query
Wrote the count query
*** Entering collection_taxonomy to database ***
df: #rows = 18479, #cols: 3

A slice of df:
            collection_id_namespace     collection_local_id          taxon
0  https://www.druggablegenome.net/     GABPB1_associations  NCBI:txid9606
1  https://www.druggablegenome.net/      NR2C2_associations  NCBI:txid9606
2  https://www.druggablegenome.net/       FSHR_associations  NCBI:txid9606
3  https://www.druggablegenome.net/  C17orf107_associations  NCBI:txid9606
4  https://www.druggablegenome.net/      BEND7_associations  NCBI:txid9606
5  https://www.druggablegenome.net/    TNFAIP1_associations  NCBI:txid9606
6  https://www.druggablegenome.net/      SCRN1_associations  NCBI:txid9606
7  https://www.druggablegenome.net/      ITFG2_associations  NCBI:txid9606
8  https://www.druggablegenome.net/      DCAF5_associations  NCBI:txid9606
9  https://www.druggablegenome.net/       WNT6_associations  NCBI:txid9606
Data inserted successfully!
sql_count_df:    count
0  18479
count:18479
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.2051877975463867 seconds.

--------- ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/subject_in_collection.tsv ---------
table_name:subject_in_collection
IDG: subject_in_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/subject_in_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9097912311553955 seconds.

--------- ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/assay_type.tsv ---------
table_name:assay_type
IDG: assay_type: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/assay_type.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9078330993652344 seconds.

--------- ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/subject_role_taxonomy.tsv ---------
table_name:subject_role_taxonomy
IDG: subject_role_taxonomy: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/subject_role_taxonomy.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9013402462005615 seconds.

--------- ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/biosample_in_collection.tsv ---------
table_name:biosample_in_collection
IDG: biosample_in_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/biosample_in_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9644222259521484 seconds.

--------- ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/substance.tsv ---------
table_name:substance
IDG: substance: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9110500812530518 seconds.

--------- ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/phenotype_disease.tsv ---------
table_name:phenotype_disease
IDG: phenotype_disease: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/phenotype_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9805569648742676 seconds.

--------- ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/file_in_collection.tsv ---------
table_name:file_in_collection
IDG: file_in_collection: Read from file: df: #rows = 74743, #cols: 4

#Lines in file ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/file_in_collection.tsv: 74744
df: #rows = 74743, #cols: 4
pKeys: ['file_id_namespace', 'file_local_id', 'collection_id_namespace', 'collection_local_id']
Going to write the count query
Wrote the count query
*** Entering file_in_collection to database ***
df: #rows = 74743, #cols: 4

A slice of df:
                  file_id_namespace  ...        collection_local_id
0  https://www.druggablegenome.net/  ...        GABPB1_associations
1  https://www.druggablegenome.net/  ...         NR2C2_associations
2  https://www.druggablegenome.net/  ...          FSHR_associations
3  https://www.druggablegenome.net/  ...          RMRP_associations
4  https://www.druggablegenome.net/  ...  LOC100129894_associations
5  https://www.druggablegenome.net/  ...      HMGB1P21_associations
6  https://www.druggablegenome.net/  ...     C17orf107_associations
7  https://www.druggablegenome.net/  ...     LOC650024_associations
8  https://www.druggablegenome.net/  ...  LOC100130924_associations
9  https://www.druggablegenome.net/  ...      MIR143HG_associations

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:    count
0  74743
count:74743
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 2.400235414505005 seconds.

--------- ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection_in_collection.tsv ---------
table_name:collection_in_collection
IDG: collection_in_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection_in_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9270439147949219 seconds.

--------- ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection_compound.tsv ---------
table_name:collection_compound
IDG: collection_compound: Read from file: df: #rows = 16604, #cols: 3

#Lines in file ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection_compound.tsv: 16605
df: #rows = 16604, #cols: 3
pKeys: ['collection_id_namespace', 'collection_local_id', 'compound']
Going to write the count query
Wrote the count query
*** Entering collection_compound to database ***
df: #rows = 16604, #cols: 3

A slice of df:
            collection_id_namespace  ...  compound
0  https://www.druggablegenome.net/  ...   1069140
1  https://www.druggablegenome.net/  ...   6102686
2  https://www.druggablegenome.net/  ...  24748050
3  https://www.druggablegenome.net/  ...  16131215
4  https://www.druggablegenome.net/  ...      1103
5  https://www.druggablegenome.net/  ...      5960
6  https://www.druggablegenome.net/  ...      6057
7  https://www.druggablegenome.net/  ...    439174
8  https://www.druggablegenome.net/  ...     33032
9  https://www.druggablegenome.net/  ...       586

[10 rows x 3 columns]
Data inserted successfully!
sql_count_df:    count
0  16604
count:16604
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.2890963554382324 seconds.

--------- ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/data_type.tsv ---------
table_name:data_type
IDG: data_type: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/data_type.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8775455951690674 seconds.

--------- ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/dcc.tsv ---------
table_name:dcc
IDG: dcc: Read from file: df: #rows = 1, #cols: 9

#Lines in file ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/dcc.tsv: 2
df: #rows = 1, #cols: 9
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.dcc;
qt_df:                                pk
0        cfde_registry_dcc:glygen
1         cfde_registry_dcc:exrna
2     cfde_registry_dcc:kidsfirst
3         cfde_registry_dcc:sparc
4           cfde_registry_dcc:4dn
5           cfde_registry_dcc:hmp
6  cfde_registry_dcc:metabolomics
7       cfde_registry_dcc:motrpac
8        cfde_registry_dcc:hubmap
9          cfde_registry_dcc:gtex
---- Executed query, got data.frame: qt_df: #rows = 10, #cols: 1

df_pk (at most first 10 elements): ['cfde_registry_dcc:idg']
qt_pk (at most first 10 elements): ['cfde_registry_dcc:glygen', 'cfde_registry_dcc:exrna', 'cfde_registry_dcc:kidsfirst', 'cfde_registry_dcc:sparc', 'cfde_registry_dcc:4dn', 'cfde_registry_dcc:hmp', 'cfde_registry_dcc:metabolomics', 'cfde_registry_dcc:motrpac', 'cfde_registry_dcc:hubmap', 'cfde_registry_dcc:gtex']
---- Removed rows from df with matching pk
*** Entering dcc to database ***
df: #rows = 1, #cols: 9

A slice of df:
                      id  ...         contact_email
0  cfde_registry_dcc:idg  ...  JJYang@salud.unm.edu

[1 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.972031831741333 seconds.

--------- ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/phenotype.tsv ---------
table_name:phenotype
IDG: phenotype: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8783857822418213 seconds.

--------- ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/file_describes_biosample.tsv ---------
table_name:file_describes_biosample
IDG: file_describes_biosample: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/file_describes_biosample.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9113776683807373 seconds.

--------- ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection_anatomy.tsv ---------
table_name:collection_anatomy
IDG: collection_anatomy: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection_anatomy.tsv: 1
/home/mano/DRC/DRC-Portals/database/C2M2/populateC2M2FromS3.py:326: DtypeWarning: Columns (12) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv(table_str, delimiter='\t');
>>>>>>>> Time taken to ingest the metadata from this file: 0.8782484531402588 seconds.

--------- ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/biosample_substance.tsv ---------
table_name:biosample_substance
IDG: biosample_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/biosample_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9113821983337402 seconds.

--------- ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/biosample.tsv ---------
table_name:biosample
IDG: biosample: Read from file: df: #rows = 0, #cols: 8

#Lines in file ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/biosample.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.919137716293335 seconds.

--------- ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/biosample_disease.tsv ---------
table_name:biosample_disease
IDG: biosample_disease: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/biosample_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9240281581878662 seconds.

--------- ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/file.tsv ---------
table_name:file
IDG: file: Read from file: df: #rows = 75893, #cols: 20

#Lines in file ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/file.tsv: 75894
df: #rows = 75893, #cols: 20
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering file to database ***
df: #rows = 75893, #cols: 20

A slice of df:
                       id_namespace  ...                                      persistent_id
0  https://www.druggablegenome.net/  ...  https://kmc-idg.s3.us-east-2.amazonaws.com/ism...
1  https://www.druggablegenome.net/  ...  https://kmc-idg.s3.us-east-2.amazonaws.com/ism...
2  https://www.druggablegenome.net/  ...  https://kmc-idg.s3.us-east-2.amazonaws.com/ism...
3  https://www.druggablegenome.net/  ...  https://kmc-idg.s3.us-east-2.amazonaws.com/ism...
4  https://www.druggablegenome.net/  ...  https://kmc-idg.s3.us-east-2.amazonaws.com/ism...
5  https://www.druggablegenome.net/  ...  https://kmc-idg.s3.us-east-2.amazonaws.com/ism...
6  https://www.druggablegenome.net/  ...  https://kmc-idg.s3.us-east-2.amazonaws.com/ism...
7  https://www.druggablegenome.net/  ...  https://kmc-idg.s3.us-east-2.amazonaws.com/ism...
8  https://www.druggablegenome.net/  ...  https://kmc-idg.s3.us-east-2.amazonaws.com/ism...
9  https://www.druggablegenome.net/  ...  https://kmc-idg.s3.us-east-2.amazonaws.com/ism...

[10 rows x 5 columns]
Data inserted successfully!
sql_count_df:    count
0  75893
count:75893
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 5.328519821166992 seconds.

--------- ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/protein.tsv ---------
table_name:protein
IDG: protein: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/protein.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9310214519500732 seconds.

--------- ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/anatomy.tsv ---------
table_name:anatomy
IDG: anatomy: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/anatomy.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8944623470306396 seconds.

--------- ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection_defined_by_project.tsv ---------
table_name:collection_defined_by_project
IDG: collection_defined_by_project: Read from file: df: #rows = 74743, #cols: 4

#Lines in file ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection_defined_by_project.tsv: 74744
df: #rows = 74743, #cols: 4
pKeys: ['collection_id_namespace', 'collection_local_id', 'project_id_namespace', 'project_local_id']
Going to write the count query
Wrote the count query
*** Entering collection_defined_by_project to database ***
df: #rows = 74743, #cols: 4

A slice of df:
            collection_id_namespace  ... project_local_id
0  https://www.druggablegenome.net/  ...      Harmonizome
1  https://www.druggablegenome.net/  ...      Harmonizome
2  https://www.druggablegenome.net/  ...      Harmonizome
3  https://www.druggablegenome.net/  ...      Harmonizome
4  https://www.druggablegenome.net/  ...      Harmonizome
5  https://www.druggablegenome.net/  ...      Harmonizome
6  https://www.druggablegenome.net/  ...      Harmonizome
7  https://www.druggablegenome.net/  ...      Harmonizome
8  https://www.druggablegenome.net/  ...      Harmonizome
9  https://www.druggablegenome.net/  ...      Harmonizome

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:    count
0  74743
count:74743
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 2.4601621627807617 seconds.

--------- ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/subject.tsv ---------
table_name:subject
IDG: subject: Read from file: df: #rows = 0, #cols: 10

#Lines in file ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/subject.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8711216449737549 seconds.

--------- ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection_protein.tsv ---------
table_name:collection_protein
IDG: collection_protein: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection_protein.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9056065082550049 seconds.

--------- ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/file_describes_subject.tsv ---------
table_name:file_describes_subject
IDG: file_describes_subject: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/file_describes_subject.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8721094131469727 seconds.

--------- ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection_disease.tsv ---------
table_name:collection_disease
IDG: collection_disease: Read from file: df: #rows = 1899, #cols: 3

#Lines in file ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection_disease.tsv: 1900
df: #rows = 1899, #cols: 3
pKeys: ['collection_id_namespace', 'collection_local_id', 'disease']
Going to write the count query
Wrote the count query
*** Entering collection_disease to database ***
df: #rows = 1899, #cols: 3

A slice of df:
                             collection_id_namespace  ...  disease
0  https://druggablegenome.net/cfde_idg_tcrd_dise...  ...  DOID:15
1  https://druggablegenome.net/cfde_idg_tcrd_dise...  ...  DOID:17
2  https://druggablegenome.net/cfde_idg_tcrd_dise...  ...  DOID:28
3  https://druggablegenome.net/cfde_idg_tcrd_dise...  ...  DOID:37
4  https://druggablegenome.net/cfde_idg_tcrd_dise...  ...  DOID:47
5  https://druggablegenome.net/cfde_idg_tcrd_dise...  ...  DOID:48
6  https://druggablegenome.net/cfde_idg_tcrd_dise...  ...  DOID:50
7  https://druggablegenome.net/cfde_idg_tcrd_dise...  ...  DOID:57
8  https://druggablegenome.net/cfde_idg_tcrd_dise...  ...  DOID:65
9  https://druggablegenome.net/cfde_idg_tcrd_dise...  ...  DOID:66

[10 rows x 3 columns]
Data inserted successfully!
sql_count_df:    count
0   1899
count:1899
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9644887447357178 seconds.

--------- ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/sample_prep_method.tsv ---------
table_name:sample_prep_method
IDG: sample_prep_method: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/sample_prep_method.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8438456058502197 seconds.

--------- ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/phenotype_gene.tsv ---------
table_name:phenotype_gene
IDG: phenotype_gene: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/phenotype_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9087369441986084 seconds.

--------- ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/biosample_gene.tsv ---------
table_name:biosample_gene
IDG: biosample_gene: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/biosample_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8466558456420898 seconds.

--------- ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection_substance.tsv ---------
table_name:collection_substance
IDG: collection_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9031643867492676 seconds.

--------- ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection_phenotype.tsv ---------
table_name:collection_phenotype
IDG: collection_phenotype: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection_phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9103341102600098 seconds.

--------- ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection_gene.tsv ---------
table_name:collection_gene
IDG: collection_gene: Read from file: df: #rows = 37774, #cols: 3

#Lines in file ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection_gene.tsv: 37775
df: #rows = 37774, #cols: 3
pKeys: ['collection_id_namespace', 'collection_local_id', 'gene']
Going to write the count query
Wrote the count query
*** Entering collection_gene to database ***
df: #rows = 37774, #cols: 3

A slice of df:
            collection_id_namespace     collection_local_id             gene
0  https://www.druggablegenome.net/     GABPB1_associations  ENSG00000104064
1  https://www.druggablegenome.net/      NR2C2_associations  ENSG00000177463
2  https://www.druggablegenome.net/       FSHR_associations  ENSG00000170820
3  https://www.druggablegenome.net/  C17orf107_associations  ENSG00000205710
4  https://www.druggablegenome.net/      BEND7_associations  ENSG00000165626
5  https://www.druggablegenome.net/    TNFAIP1_associations  ENSG00000109079
6  https://www.druggablegenome.net/      SCRN1_associations  ENSG00000136193
7  https://www.druggablegenome.net/      ITFG2_associations  ENSG00000111203
8  https://www.druggablegenome.net/      DCAF5_associations  ENSG00000139990
9  https://www.druggablegenome.net/       WNT6_associations  ENSG00000115596
Data inserted successfully!
sql_count_df:    count
0  37774
count:37774
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.5521373748779297 seconds.

--------- ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/compound.tsv ---------
table_name:compound
IDG: compound: Read from file: df: #rows = 12962, #cols: 4

#Lines in file ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/compound.tsv: 12963
df: #rows = 12962, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.compound;
qt_df:              pk
0      G21286VC
1      G66231VJ
2      G55943II
3      G30268KJ
4      G76631VS
...         ...
45186  G94172VX
45187  G38602GT
45188  91846918
45189  G28852XW
45190  G04679CK

[45191 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 45191, #cols: 1

df_pk (at most first 10 elements): ['6', '11', '19', '38', '44', '49', '51', '58', '70', '72']
qt_pk (at most first 10 elements): ['G21286VC', 'G66231VJ', 'G55943II', 'G30268KJ', 'G76631VS', 'G42138LH', 'G10602EW', 'G84227HS', 'G72207TE', 'G19073EP']
---- Removed rows from df with matching pk
*** Entering compound to database ***
df: #rows = 12920, #cols: 4

A slice of df:
       id  ...                                           synonyms
9825    6  ...  ["1-chloro-2,4-dinitrobenzene", "2,4-Dinitroch...
534    11  ...  ["1,2-dichloroethane", "Ethylene dichloride", ...
3329   19  ...  ["2,3-Dihydroxybenzoic acid", "303-38-8", "Pyr...
5650   38  ...  ["2-dehydropantoate", "ketopantoic acid", "4-h...
6107   44  ...  ["tartronate", "hydroxypropanedioate", "hydrox...
7919   49  ...  ["3-Methyl-2-oxobutanoic acid", "759-05-7", "3...
8110   51  ...  ["2-ketoglutaric acid", "2-Oxopentanedioic aci...
9702   58  ...  ["2-oxobutanoic acid", "2-oxobutyric acid", "2...
11256  70  ...  ["4-methyl-2-oxopentanoic acid", "4-Methyl-2-o...
11578  72  ...  ["3,4-DIHYDROXYBENZOIC ACID", "protocatechuic ...

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 6.03463339805603 seconds.

--------- ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/subject_phenotype.tsv ---------
table_name:subject_phenotype
IDG: subject_phenotype: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/subject_phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8667416572570801 seconds.

--------- ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/subject_disease.tsv ---------
table_name:subject_disease
IDG: subject_disease: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/IDG/IDG_C2M2_2024-01-09_datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/subject_disease.tsv: 1
Processing C2M2 Files...:  92%|█████████▏| 11/12 [35:17<02:17, 137.95s/it]/home/mano/DRC/DRC-Portals/database/C2M2/populateC2M2FromS3.py:326: DtypeWarning: Columns (15) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv(table_str, delimiter='\t');
>>>>>>>> Time taken to ingest the metadata from this file: 0.8916895389556885 seconds.


================================== DCC short label: LINCS =============================================
Unpack zip file: c2m2_extract_path: ingest/c2m2s/LINCS/datapackage
--------- ingest/c2m2s/LINCS/datapackage/analysis_type.tsv ---------
table_name:analysis_type
LINCS: analysis_type: Read from file: df: #rows = 1, #cols: 4

#Lines in file ingest/c2m2s/LINCS/datapackage/analysis_type.tsv: 2
df: #rows = 1, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.analysis_type;
qt_df:             pk
0  OBI:0000726
1  OBI:0200199
2  OBI:0001985
3  OBI:0001872
4  OBI:0200085
---- Executed query, got data.frame: qt_df: #rows = 5, #cols: 1

df_pk (at most first 10 elements): ['OBI:0000679']
qt_pk (at most first 10 elements): ['OBI:0000726', 'OBI:0200199', 'OBI:0001985', 'OBI:0001872', 'OBI:0200085']
---- Removed rows from df with matching pk
*** Entering analysis_type to database ***
df: #rows = 1, #cols: 4

A slice of df:
            id  ... synonyms
0  OBI:0000679  ...       []

[1 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.0190200805664062 seconds.

--------- ingest/c2m2s/LINCS/datapackage/file.tsv ---------
table_name:file
LINCS: file: Read from file: df: #rows = 1495871, #cols: 20

#Lines in file ingest/c2m2s/LINCS/datapackage/file.tsv: 1495872
df: #rows = 1495871, #cols: 20
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering file to database ***
df: #rows = 1495871, #cols: 20

A slice of df:
                    id_namespace  ...                                      persistent_id
0  https://www.lincsproject.org/  ...  drs://drs.lincs-dcic.org/ad5426c19f2d8844e5506...
1  https://www.lincsproject.org/  ...  drs://drs.lincs-dcic.org/d599b0067e6f82930100d...
2  https://www.lincsproject.org/  ...  drs://drs.lincs-dcic.org/ab8cecde46b8ad5584607...
3  https://www.lincsproject.org/  ...  drs://drs.lincs-dcic.org/492e3c4aef6122256ffd9...
4  https://www.lincsproject.org/  ...  drs://drs.lincs-dcic.org/3823c1ba8ea2244fdfd93...
5  https://www.lincsproject.org/  ...  drs://drs.lincs-dcic.org/6abf832ca7f912f12fb03...
6  https://www.lincsproject.org/  ...  drs://drs.lincs-dcic.org/980e696c1a30842b8ef5e...
7  https://www.lincsproject.org/  ...  drs://drs.lincs-dcic.org/c532c0711823feb38e3b2...
8  https://www.lincsproject.org/  ...  drs://drs.lincs-dcic.org/ffe08e05aa7320f349d17...
9  https://www.lincsproject.org/  ...  drs://drs.lincs-dcic.org/3547a9c006247ec0f1f04...

[10 rows x 5 columns]
Data inserted successfully!
sql_count_df:      count
0  1495871
count:1495871
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 109.97322654724121 seconds.

--------- ingest/c2m2s/LINCS/datapackage/project.tsv ---------
table_name:project
LINCS: project: Read from file: df: #rows = 17, #cols: 7

#Lines in file ingest/c2m2s/LINCS/datapackage/project.tsv: 18
df: #rows = 17, #cols: 7
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering project to database ***
df: #rows = 17, #cols: 7

A slice of df:
                    id_namespace  ... abbreviation
0  https://www.lincsproject.org/  ...        LINCS
1  https://www.lincsproject.org/  ...          NaN
2  https://www.lincsproject.org/  ...          NaN
3  https://www.lincsproject.org/  ...          NaN
4  https://www.lincsproject.org/  ...          NaN
5  https://www.lincsproject.org/  ...          NaN
6  https://www.lincsproject.org/  ...          NaN
7  https://www.lincsproject.org/  ...        CMAP2
8  https://www.lincsproject.org/  ...    LINCSProt
9  https://www.lincsproject.org/  ...        CMAP1

[10 rows x 5 columns]
Data inserted successfully!
sql_count_df:    count
0     17
count:17
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.0458574295043945 seconds.

--------- ingest/c2m2s/LINCS/datapackage/project_in_project.tsv ---------
table_name:project_in_project
LINCS: project_in_project: Read from file: df: #rows = 16, #cols: 4

#Lines in file ingest/c2m2s/LINCS/datapackage/project_in_project.tsv: 17
df: #rows = 16, #cols: 4
pKeys: ['parent_project_id_namespace', 'parent_project_local_id', 'child_project_id_namespace', 'child_project_local_id']
Going to write the count query
Wrote the count query
*** Entering project_in_project to database ***
df: #rows = 16, #cols: 4

A slice of df:
     parent_project_id_namespace  ... child_project_local_id
0  https://www.lincsproject.org/  ...          LINCS phase 2
1  https://www.lincsproject.org/  ...          LINCS phase 1
2  https://www.lincsproject.org/  ...               External
3  https://www.lincsproject.org/  ...   LINCS MCF10A project
4  https://www.lincsproject.org/  ...    LINCS joint project
5  https://www.lincsproject.org/  ...     LINCS trans-center
6  https://www.lincsproject.org/  ...           L1000-Phase2
7  https://www.lincsproject.org/  ...       LINCS Proteomics
8  https://www.lincsproject.org/  ...           L1000-Phase1
9  https://www.lincsproject.org/  ...            L1000-PCCSE

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:    count
0     16
count:16
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.8635079860687256 seconds.

--------- ingest/c2m2s/LINCS/datapackage/file_describes_subject.tsv ---------
table_name:file_describes_subject
LINCS: file_describes_subject: Read from file: df: #rows = 1466498, #cols: 4

#Lines in file ingest/c2m2s/LINCS/datapackage/file_describes_subject.tsv: 1466499
df: #rows = 1466498, #cols: 4
pKeys: ['file_id_namespace', 'file_local_id', 'subject_id_namespace', 'subject_local_id']
Going to write the count query
Wrote the count query
*** Entering file_describes_subject to database ***
df: #rows = 1466498, #cols: 4

A slice of df:
               file_id_namespace  ... subject_local_id
0  https://www.lincsproject.org/  ...         LCL-1431
1  https://www.lincsproject.org/  ...         LCL-1431
2  https://www.lincsproject.org/  ...         LCL-1461
3  https://www.lincsproject.org/  ...         LCL-1315
4  https://www.lincsproject.org/  ...         LCL-1475
5  https://www.lincsproject.org/  ...         LCL-1476
6  https://www.lincsproject.org/  ...         LCL-1460
7  https://www.lincsproject.org/  ...         LCL-2085
8  https://www.lincsproject.org/  ...         LCL-1476
9  https://www.lincsproject.org/  ...         LCL-1476

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:      count
0  1466498
count:1466498
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 40.352612018585205 seconds.

--------- ingest/c2m2s/LINCS/datapackage/file_describes_biosample.tsv ---------
table_name:file_describes_biosample
LINCS: file_describes_biosample: Read from file: df: #rows = 1467229, #cols: 4

#Lines in file ingest/c2m2s/LINCS/datapackage/file_describes_biosample.tsv: 1467230
df: #rows = 1467229, #cols: 4
pKeys: ['file_id_namespace', 'file_local_id', 'biosample_id_namespace', 'biosample_local_id']
Going to write the count query
Wrote the count query
*** Entering file_describes_biosample to database ***
df: #rows = 1467229, #cols: 4

A slice of df:
               file_id_namespace  ... biosample_local_id
0  https://www.lincsproject.org/  ...  LDG-1192:LCL-1431
1  https://www.lincsproject.org/  ...  LDG-1191:LCL-1431
2  https://www.lincsproject.org/  ...  LDG-1199:LCL-1461
3  https://www.lincsproject.org/  ...  LDG-1199:LCL-1315
4  https://www.lincsproject.org/  ...  LDG-1199:LCL-1475
5  https://www.lincsproject.org/  ...  LDG-1199:LCL-1476
6  https://www.lincsproject.org/  ...  LDG-1199:LCL-1460
7  https://www.lincsproject.org/  ...  LDG-1199:LCL-2085
8  https://www.lincsproject.org/  ...  LDG-1265:LCL-1476
9  https://www.lincsproject.org/  ...  LDG-1266:LCL-1476

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:      count
0  1467229
count:1467229
>>> All good.
/home/mano/DRC/DRC-Portals/database/C2M2/populateC2M2FromS3.py:326: DtypeWarning: Columns (5) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv(table_str, delimiter='\t');
>>>>>>>> Time taken to ingest the metadata from this file: 43.96034598350525 seconds.

--------- ingest/c2m2s/LINCS/datapackage/biosample_gene.tsv ---------
table_name:biosample_gene
LINCS: biosample_gene: Read from file: df: #rows = 361735, #cols: 3

#Lines in file ingest/c2m2s/LINCS/datapackage/biosample_gene.tsv: 361736
df: #rows = 361735, #cols: 3
pKeys: ['biosample_id_namespace', 'biosample_local_id', 'gene']
Going to write the count query
Wrote the count query
*** Entering biosample_gene to database ***
df: #rows = 361735, #cols: 3

A slice of df:
          biosample_id_namespace  ...             gene
0  https://www.lincsproject.org/  ...  ENSG00000002330
1  https://www.lincsproject.org/  ...  ENSG00000003402
2  https://www.lincsproject.org/  ...  ENSG00000147853
3  https://www.lincsproject.org/  ...  ENSG00000112245
4  https://www.lincsproject.org/  ...  ENSG00000159322
5  https://www.lincsproject.org/  ...  ENSG00000123545
6  https://www.lincsproject.org/  ...  ENSG00000147853
7  https://www.lincsproject.org/  ...  ENSG00000177888
8  https://www.lincsproject.org/  ...  ENSG00000172071
9  https://www.lincsproject.org/  ...  ENSG00000112137

[10 rows x 3 columns]
Data inserted successfully!
sql_count_df:     count
0  361735
count:361735
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 9.038606882095337 seconds.

--------- ingest/c2m2s/LINCS/datapackage/biosample_from_subject.tsv ---------
table_name:biosample_from_subject
LINCS: biosample_from_subject: Read from file: df: #rows = 1466796, #cols: 5

#Lines in file ingest/c2m2s/LINCS/datapackage/biosample_from_subject.tsv: 1466797
df: #rows = 1466796, #cols: 5
pKeys: ['biosample_id_namespace', 'biosample_local_id', 'subject_id_namespace', 'subject_local_id']
Going to write the count query
Wrote the count query
*** Entering biosample_from_subject to database ***
df: #rows = 1466796, #cols: 5

A slice of df:
          biosample_id_namespace  ... age_at_sampling
0  https://www.lincsproject.org/  ...             NaN
1  https://www.lincsproject.org/  ...             NaN
2  https://www.lincsproject.org/  ...             NaN
3  https://www.lincsproject.org/  ...             NaN
4  https://www.lincsproject.org/  ...             NaN
5  https://www.lincsproject.org/  ...             NaN
6  https://www.lincsproject.org/  ...             NaN
7  https://www.lincsproject.org/  ...             NaN
8  https://www.lincsproject.org/  ...             NaN
9  https://www.lincsproject.org/  ...             NaN

[10 rows x 5 columns]
Data inserted successfully!
sql_count_df:      count
0  1466796
count:1466796
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 42.12493705749512 seconds.

--------- ingest/c2m2s/LINCS/datapackage/biosample_substance.tsv ---------
table_name:biosample_substance
LINCS: biosample_substance: Read from file: df: #rows = 860285, #cols: 3

#Lines in file ingest/c2m2s/LINCS/datapackage/biosample_substance.tsv: 860286
df: #rows = 860285, #cols: 3
pKeys: ['biosample_id_namespace', 'biosample_local_id', 'substance']
Going to write the count query
Wrote the count query
*** Entering biosample_substance to database ***
df: #rows = 860285, #cols: 3

A slice of df:
          biosample_id_namespace  ...  substance
0  https://www.lincsproject.org/  ...  375174554
1  https://www.lincsproject.org/  ...  375174554
2  https://www.lincsproject.org/  ...  375174554
3  https://www.lincsproject.org/  ...  375174554
4  https://www.lincsproject.org/  ...  375174554
5  https://www.lincsproject.org/  ...  375174554
6  https://www.lincsproject.org/  ...  375174554
7  https://www.lincsproject.org/  ...  375174554
8  https://www.lincsproject.org/  ...  375174554
9  https://www.lincsproject.org/  ...  375174554

[10 rows x 3 columns]
Data inserted successfully!
sql_count_df:     count
0  860285
count:860285
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 22.13970398902893 seconds.

--------- ingest/c2m2s/LINCS/datapackage/biosample_disease.tsv ---------
table_name:biosample_disease
LINCS: biosample_disease: Read from file: df: #rows = 1211094, #cols: 4

#Lines in file ingest/c2m2s/LINCS/datapackage/biosample_disease.tsv: 1211095
df: #rows = 1211094, #cols: 4
pKeys: ['biosample_id_namespace', 'biosample_local_id', 'association_type', 'disease']
Going to write the count query
Wrote the count query
*** Entering biosample_disease to database ***
df: #rows = 1211094, #cols: 4

A slice of df:
          biosample_id_namespace  ...    disease
0  https://www.lincsproject.org/  ...  DOID:1240
1  https://www.lincsproject.org/  ...  DOID:1240
2  https://www.lincsproject.org/  ...  DOID:1240
3  https://www.lincsproject.org/  ...  DOID:1240
4  https://www.lincsproject.org/  ...  DOID:1240
5  https://www.lincsproject.org/  ...  DOID:1240
6  https://www.lincsproject.org/  ...  DOID:1240
7  https://www.lincsproject.org/  ...  DOID:1240
8  https://www.lincsproject.org/  ...  DOID:1240
9  https://www.lincsproject.org/  ...  DOID:1240

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:      count
0  1211094
count:1211094
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 33.04272508621216 seconds.

--------- ingest/c2m2s/LINCS/datapackage/biosample.tsv ---------
table_name:biosample
LINCS: biosample: Read from file: df: #rows = 1466796, #cols: 8

#Lines in file ingest/c2m2s/LINCS/datapackage/biosample.tsv: 1466797
df: #rows = 1466796, #cols: 8
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering biosample to database ***
df: #rows = 1466796, #cols: 8

A slice of df:
                    id_namespace  ... persistent_id
0  https://www.lincsproject.org/  ...           NaN
1  https://www.lincsproject.org/  ...           NaN
2  https://www.lincsproject.org/  ...           NaN
3  https://www.lincsproject.org/  ...           NaN
4  https://www.lincsproject.org/  ...           NaN
5  https://www.lincsproject.org/  ...           NaN
6  https://www.lincsproject.org/  ...           NaN
7  https://www.lincsproject.org/  ...           NaN
8  https://www.lincsproject.org/  ...           NaN
9  https://www.lincsproject.org/  ...           NaN

[10 rows x 5 columns]
Data inserted successfully!
sql_count_df:      count
0  1466796
count:1466796
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 51.028684854507446 seconds.

--------- ingest/c2m2s/LINCS/datapackage/gene.tsv ---------
table_name:gene
LINCS: gene: Read from file: df: #rows = 7443, #cols: 5

#Lines in file ingest/c2m2s/LINCS/datapackage/gene.tsv: 7444
df: #rows = 7443, #cols: 5
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.gene;
qt_df:                     pk
0      ENSG00000005007
1      ENSG00000158769
2      ENSG00000079805
3      ENSG00000164611
4      ENSG00000204525
...                ...
20291  ENSG00000255524
20292  ENSG00000171396
20293  ENSG00000141456
20294  ENSG00000134444
20295  ENSG00000170178

[20296 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 20296, #cols: 1

df_pk (at most first 10 elements): ['ENSG00000000003', 'ENSG00000000457', 'ENSG00000000938', 'ENSG00000000971', 'ENSG00000001084', 'ENSG00000001617', 'ENSG00000001626', 'ENSG00000001630', 'ENSG00000002330', 'ENSG00000002549']
qt_pk (at most first 10 elements): ['ENSG00000005007', 'ENSG00000158769', 'ENSG00000079805', 'ENSG00000164611', 'ENSG00000204525', 'ENSG00000112245', 'ENSG00000137975', 'ENSG00000035115', 'ENSG00000182111', 'ENSG00000108381']
---- Removed rows from df with matching pk
*** Entering gene to database ***
df: #rows = 21, #cols: 5

A slice of df:
                   id  ...       organism
6957  ENSG00000203499  ...  NCBI:txid9606
6975  ENSG00000204228  ...  NCBI:txid9606
6998  ENSG00000204392  ...  NCBI:txid9606
7004  ENSG00000204463  ...  NCBI:txid9606
7103  ENSG00000213676  ...  NCBI:txid9606
7106  ENSG00000213722  ...  NCBI:txid9606
7110  ENSG00000213886  ...  NCBI:txid9606
7164  ENSG00000221988  ...  NCBI:txid9606
7189  ENSG00000230463  ...  NCBI:txid9606
7200  ENSG00000232629  ...  NCBI:txid9606

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.7246313095092773 seconds.

--------- ingest/c2m2s/LINCS/datapackage/substance.tsv ---------
table_name:substance
LINCS: substance: Read from file: df: #rows = 29437, #cols: 5

#Lines in file ingest/c2m2s/LINCS/datapackage/substance.tsv: 29438
df: #rows = 29437, #cols: 5
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.substance;
qt_df: Empty DataFrame
Columns: [pk]
Index: []
---- Executed query, got data.frame: qt_df: #rows = 0, #cols: 1

df_pk (at most first 10 elements): ['85248499', '85248500', '85248502', '85281160', '85281172', '85787080', '85787083', '85787089', '85787096', '85787100']
qt_pk (at most first 10 elements): []
---- Removed rows from df with matching pk
*** Entering substance to database ***
df: #rows = 29437, #cols: 5

A slice of df:
             id  ...  compound
23228  85248499  ...   1604254
23229  85248500  ...   1993104
23230  85248502  ...  22693263
23231  85281160  ...    576989
23232  85281172  ...   3473393
23233  85787080  ...   5377914
23234  85787083  ...   6708558
23235  85787089  ...  54676535
23236  85787096  ...   6708584
23237  85787100  ...    637213

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 5.607727766036987 seconds.

--------- ingest/c2m2s/LINCS/datapackage/sample_prep_method.tsv ---------
table_name:sample_prep_method
LINCS: sample_prep_method: Read from file: df: #rows = 2, #cols: 4

#Lines in file ingest/c2m2s/LINCS/datapackage/sample_prep_method.tsv: 3
df: #rows = 2, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.sample_prep_method;
qt_df:             pk
0  OBI:0003090
1  OBI:0001862
2  OBI:0001902
3  OBI:0002773
4  OBI:0000366
5  OBI:0000615
6  OBI:0003089
---- Executed query, got data.frame: qt_df: #rows = 7, #cols: 1

df_pk (at most first 10 elements): ['OBI:0600005', 'OBI:0600024']
qt_pk (at most first 10 elements): ['OBI:0003090', 'OBI:0001862', 'OBI:0001902', 'OBI:0002773', 'OBI:0000366', 'OBI:0000615', 'OBI:0003089']
---- Removed rows from df with matching pk
*** Entering sample_prep_method to database ***
df: #rows = 2, #cols: 4

A slice of df:
            id  ... synonyms
0  OBI:0600005  ...       []
1  OBI:0600024  ...       []

[2 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.943018913269043 seconds.

--------- ingest/c2m2s/LINCS/datapackage/protein.tsv ---------
table_name:protein
LINCS: protein: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/LINCS/datapackage/protein.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.946007490158081 seconds.

--------- ingest/c2m2s/LINCS/datapackage/phenotype.tsv ---------
table_name:phenotype
LINCS: phenotype: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/LINCS/datapackage/phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.934459924697876 seconds.

--------- ingest/c2m2s/LINCS/datapackage/ncbi_taxonomy.tsv ---------
table_name:ncbi_taxonomy
LINCS: ncbi_taxonomy: Read from file: df: #rows = 1, #cols: 5

#Lines in file ingest/c2m2s/LINCS/datapackage/ncbi_taxonomy.tsv: 2
df: #rows = 1, #cols: 5
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.ncbi_taxonomy;
qt_df:                     pk
0        NCBI:txid5823
1       NCBI:txid99755
2     NCBI:txid1095745
3     NCBI:txid1739397
4      NCBI:txid742723
...                ...
2462   NCBI:txid742726
2463  NCBI:txid1715207
2464  NCBI:txid1161416
2465   NCBI:txid765081
2466   NCBI:txid999422

[2467 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 2467, #cols: 1

df_pk (at most first 10 elements): ['NCBI:txid9606']
qt_pk (at most first 10 elements): ['NCBI:txid5823', 'NCBI:txid99755', 'NCBI:txid1095745', 'NCBI:txid1739397', 'NCBI:txid742723', 'NCBI:txid1715193', 'NCBI:txid469585', 'NCBI:txid1581186', 'NCBI:txid762963', 'NCBI:txid1542093']
---- Removed rows from df with matching pk
*** Entering ncbi_taxonomy to database ***
df: #rows = 0, #cols: 5

A slice of df:
Empty DataFrame
Columns: [id, clade, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.998429536819458 seconds.

--------- ingest/c2m2s/LINCS/datapackage/file_format.tsv ---------
table_name:file_format
LINCS: file_format: Read from file: df: #rows = 4, #cols: 4

#Lines in file ingest/c2m2s/LINCS/datapackage/file_format.tsv: 5
df: #rows = 4, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.file_format;
qt_df:              pk
0   format:3727
1   format:3327
2   format:3590
3   format:1936
4   format:1929
5   format:3746
6   format:3006
7   format:3462
8   format:3987
9   format:3468
10  format:3507
11  format:3004
12  format:3626
13  format:3620
14  format:3997
15  format:1915
16  format:4001
17  format:3751
18  format:3981
19  format:3752
20  format:3989
21  format:3873
22  format:2572
23  format:2330
24  format:4000
25  format:3554
26  format:3591
27  format:1919
28  format:2331
29  format:1975
30  format:1930
31  format:3654
32  format:3829
33  format:3008
34  format:3578
35  format:3603
36  format:3547
37  format:3244
38  format:3003
39  format:3990
40  format:3506
41  format:4007
42  format:3996
43  format:3583
44  format:3839
45  format:2333
46  format:3464
47  format:3712
48  format:3604
49  format:3508
50  format:3016
51  format:2332
52  format:1964
53  format:3475
54  format:3579
---- Executed query, got data.frame: qt_df: #rows = 55, #cols: 1

df_pk (at most first 10 elements): ['format:3475', 'format:3752', 'format:3981', 'format:3989']
qt_pk (at most first 10 elements): ['format:3727', 'format:3327', 'format:3590', 'format:1936', 'format:1929', 'format:3746', 'format:3006', 'format:3462', 'format:3987', 'format:3468']
---- Removed rows from df with matching pk
*** Entering file_format to database ***
df: #rows = 0, #cols: 4

A slice of df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9650626182556152 seconds.

--------- ingest/c2m2s/LINCS/datapackage/disease.tsv ---------
table_name:disease
LINCS: disease: Read from file: df: #rows = 29, #cols: 4

#Lines in file ingest/c2m2s/LINCS/datapackage/disease.tsv: 30
df: #rows = 29, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.disease;
qt_df:               pk
0      DOID:4977
1      DOID:6683
2     DOID:13941
3      DOID:8947
4     DOID:11840
...          ...
1938   DOID:9553
1939  DOID:12895
1940   DOID:3491
1941   DOID:8838
1942   DOID:2468

[1943 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 1943, #cols: 1

df_pk (at most first 10 elements): ['DOID:0060058', 'DOID:0070004', 'DOID:10286', 'DOID:1107', 'DOID:1240', 'DOID:1324', 'DOID:1520', 'DOID:1909', 'DOID:2526', 'DOID:2999']
qt_pk (at most first 10 elements): ['DOID:4977', 'DOID:6683', 'DOID:13941', 'DOID:8947', 'DOID:11840', 'DOID:14447', 'DOID:11054', 'DOID:1791', 'DOID:13810', 'DOID:10780']
---- Removed rows from df with matching pk
*** Entering disease to database ***
df: #rows = 7, #cols: 4

A slice of df:
              id  ...                                           synonyms
0   DOID:0060058  ...         ["DOID:1033","DOID:353","lymphoid cancer"]
1   DOID:0070004  ...                                                 []
8      DOID:2526  ...                                                 []
16     DOID:3605  ...  ["cystadenocarcinoma of ovary","cystadenocarci...
18     DOID:3702  ...  ["adenocarcinoma cervix uteri","adenocarcinoma...
22     DOID:4006  ...  ["bladder transitional cell carcinoma","transi...
23     DOID:4007  ...                   ["carcinoma of urinary bladder"]

[7 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9969692230224609 seconds.

--------- ingest/c2m2s/LINCS/datapackage/data_type.tsv ---------
table_name:data_type
LINCS: data_type: Read from file: df: #rows = 8, #cols: 4

#Lines in file ingest/c2m2s/LINCS/datapackage/data_type.tsv: 9
df: #rows = 8, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.data_type;
qt_df:              pk
0     data:3112
1     data:3108
2     data:0907
3     data:0006
4     data:1916
5     data:3210
6     data:3488
7     data:3111
8     data:2044
9     data:0945
10    data:1270
11    data:3869
12    data:1714
13    data:2536
14    data:3495
15  ILX:0793824
16    data:1383
17    data:3110
18    data:2603
19    data:2600
20    data:3494
21    data:2764
22    data:2048
23    data:0943
24    data:0928
25    data:3028
26    data:1255
27    data:2082
28    data:3002
29    data:3914
30    data:3498
31    data:3917
32    data:2887
33    data:2976
34    data:2968
35    data:0925
36  ILX:0793825
---- Executed query, got data.frame: qt_df: #rows = 37, #cols: 1

df_pk (at most first 10 elements): ['data:0928', 'data:1566', 'data:2536', 'data:2603', 'data:2968', 'data:3002', 'data:3112', 'data:3917']
qt_pk (at most first 10 elements): ['data:3112', 'data:3108', 'data:0907', 'data:0006', 'data:1916', 'data:3210', 'data:3488', 'data:3111', 'data:2044', 'data:0945']
---- Removed rows from df with matching pk
*** Entering data_type to database ***
df: #rows = 1, #cols: 4

A slice of df:
          id  ...                             synonyms
1  data:1566  ...  ["Protein-drug interaction report"]

[1 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9861233234405518 seconds.

--------- ingest/c2m2s/LINCS/datapackage/compound.tsv ---------
table_name:compound
LINCS: compound: Read from file: df: #rows = 29315, #cols: 4

#Lines in file ingest/c2m2s/LINCS/datapackage/compound.tsv: 29316
df: #rows = 29315, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.compound;
qt_df:              pk
0      G21286VC
1      44665680
2      G55943II
3      11955614
4       5289593
...         ...
58106  G92927TC
58107  91857021
58108  91846918
58109  24812758
58110  G04679CK

[58111 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 58111, #cols: 1

df_pk (at most first 10 elements): ['86', '119', '137', '177', '187', '200', '204', '237', '243', '244']
qt_pk (at most first 10 elements): ['G21286VC', '44665680', 'G55943II', '11955614', '5289593', 'G10602EW', 'G84227HS', '25017411', 'G72207TE', 'G63954IW']
---- Removed rows from df with matching pk
*** Entering compound to database ***
df: #rows = 26578, #cols: 4

A slice of df:
        id  ...                                           synonyms
1252   177  ...  ["acetaldehyde", "ethanal", "75-07-0", "acetic...
1369   200  ...  ["1H-imidazole-4-carboxamide, 5-amino-1-(5-O-p...
2641   370  ...  ["Gallic acid", "3,4,5-Trihydroxybenzoic acid"...
8943   450  ...  ["13-methyl-6,7,8,9,11,12,14,15,16,17-decahydr...
8963   453  ...  ["Hexitol", "hexane-1,2,3,4,5,6-hexol", "hexan...
9024   462  ...  ["DL-Palmitoyl Carnitine", "palmitoyl carnitin...
9053   464  ...  ["Hippuric acid", "2-Benzamidoacetic acid", "4...
9260   476  ...  ["Phosphomevalonic acid", "1189-94-2", "Phosph...
28945  833  ...  ["DL-Citrulline", "627-77-0", "2-Amino-5-ureid...
29010  913  ...  ["2-(Methylamino)-1-phenylethanol", "6589-55-5...

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 19.095476388931274 seconds.

--------- ingest/c2m2s/LINCS/datapackage/assay_type.tsv ---------
table_name:assay_type
LINCS: assay_type: Read from file: df: #rows = 27, #cols: 4

#Lines in file ingest/c2m2s/LINCS/datapackage/assay_type.tsv: 28
df: #rows = 27, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.assay_type;
qt_df:              pk
0   OBI:0002761
1   OBI:0003297
2   OBI:0001980
3   OBI:0003094
4   OBI:0003090
..          ...
68  OBI:0003302
69  OBI:0001271
70  OBI:0003098
71  OBI:0002773
72  OBI:0003087

[73 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 73, #cols: 1

df_pk (at most first 10 elements): ['OBI:0000661', 'OBI:0000893', 'OBI:0001271', 'OBI:0001501', 'OBI:0002039', 'OBI:0002946', 'OBI:0002947', 'OBI:0002948', 'OBI:0002949', 'OBI:0002950']
qt_pk (at most first 10 elements): ['OBI:0002761', 'OBI:0003297', 'OBI:0001980', 'OBI:0003094', 'OBI:0003090', 'OBI:0002760', 'OBI:0003306', 'OBI:0002762', 'OBI:0003097', 'OBI:0001920']
---- Removed rows from df with matching pk
*** Entering assay_type to database ***
df: #rows = 25, #cols: 4

A slice of df:
             id  ...                                         synonyms
0   OBI:0000661  ...                                        ["ELISA"]
3   OBI:0001501  ...                                               []
4   OBI:0002039  ...                    ["ATAC-seq","ATAC-seq assay"]
5   OBI:0002946  ...                                               []
6   OBI:0002947  ...  ["fluroescence imaging-based cell count assay"]
7   OBI:0002948  ...                                               []
8   OBI:0002949  ...                                               []
9   OBI:0002950  ...                                               []
10  OBI:0002951  ...                                               []
11  OBI:0002952  ...                                               []

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9677965641021729 seconds.

--------- ingest/c2m2s/LINCS/datapackage/anatomy.tsv ---------
table_name:anatomy
LINCS: anatomy: Read from file: df: #rows = 60, #cols: 4

#Lines in file ingest/c2m2s/LINCS/datapackage/anatomy.tsv: 61
df: #rows = 60, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.anatomy;
qt_df:                  pk
0    UBERON:0001474
1    UBERON:0001013
2    UBERON:0000087
3    UBERON:0001199
4    UBERON:0016435
..              ...
337  UBERON:0000033
338  UBERON:0004907
339  UBERON:0000473
340  UBERON:0013069
341  UBERON:0008337

[342 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 342, #cols: 1

df_pk (at most first 10 elements): ['UBERON:0000002', 'UBERON:0000007', 'UBERON:0000029', 'UBERON:0000056', 'UBERON:0000059', 'UBERON:0000160', 'UBERON:0000178', 'UBERON:0000310', 'UBERON:0000358', 'UBERON:0000473']
qt_pk (at most first 10 elements): ['UBERON:0001474', 'UBERON:0001013', 'UBERON:0000087', 'UBERON:0001199', 'UBERON:0016435', 'UBERON:0007311', 'UBERON:0001728', 'UBERON:0001736', 'UBERON:0002037', 'UBERON:0009835']
---- Removed rows from df with matching pk
*** Entering anatomy to database ***
df: #rows = 19, #cols: 4

A slice of df:
                id  ...                                           synonyms
3   UBERON:0000056  ...                                                 []
15  UBERON:0000974  ...                                                 []
22  UBERON:0001016  ...                            ["neurological system"]
24  UBERON:0001021  ...                      ["nerves","peripheral nerve"]
26  UBERON:0001044  ...                                 ["salivary gland"]
27  UBERON:0001051  ...             ["laryngeal pharynx","laryngopharynx"]
29  UBERON:0001179  ...                                                 []
32  UBERON:0001295  ...  ["tunica mucosa (endometrium)","tunica mucosa ...
34  UBERON:0001744  ...          ["lymphatic tissue","lymphocytic tissue"]
35  UBERON:0001981  ...  ["region of vascular tree organ","vascular ele...

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9187445640563965 seconds.

--------- ingest/c2m2s/LINCS/datapackage/protein_gene.tsv ---------
table_name:protein_gene
LINCS: protein_gene: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/LINCS/datapackage/protein_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8866345882415771 seconds.

--------- ingest/c2m2s/LINCS/datapackage/phenotype_gene.tsv ---------
table_name:phenotype_gene
LINCS: phenotype_gene: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/LINCS/datapackage/phenotype_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9162962436676025 seconds.

--------- ingest/c2m2s/LINCS/datapackage/phenotype_disease.tsv ---------
table_name:phenotype_disease
LINCS: phenotype_disease: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/LINCS/datapackage/phenotype_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8844616413116455 seconds.

--------- ingest/c2m2s/LINCS/datapackage/subject.tsv ---------
table_name:subject
LINCS: subject: Read from file: df: #rows = 1966, #cols: 10

#Lines in file ingest/c2m2s/LINCS/datapackage/subject.tsv: 1967
df: #rows = 1966, #cols: 10
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering subject to database ***
df: #rows = 1966, #cols: 10

A slice of df:
                    id_namespace local_id  ... project_local_id persistent_id
0  https://www.lincsproject.org/     CD34  ...            LINCS           NaN
1  https://www.lincsproject.org/     HL60  ...            LINCS           NaN
2  https://www.lincsproject.org/      PC3  ...            LINCS           NaN
3  https://www.lincsproject.org/     U937  ...            LINCS           NaN
4  https://www.lincsproject.org/     MCF7  ...            LINCS           NaN
5  https://www.lincsproject.org/     A375  ...            LINCS           NaN
6  https://www.lincsproject.org/  HEK293T  ...            LINCS           NaN
7  https://www.lincsproject.org/     HA1E  ...            LINCS           NaN
8  https://www.lincsproject.org/   HCC515  ...            LINCS           NaN
9  https://www.lincsproject.org/     VCAP  ...            LINCS           NaN

[10 rows x 5 columns]
Data inserted successfully!
sql_count_df:    count
0   1966
count:1966
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.061537742614746 seconds.

--------- ingest/c2m2s/LINCS/datapackage/subject_substance.tsv ---------
table_name:subject_substance
LINCS: subject_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/LINCS/datapackage/subject_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8829147815704346 seconds.

--------- ingest/c2m2s/LINCS/datapackage/subject_race.tsv ---------
table_name:subject_race
LINCS: subject_race: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/LINCS/datapackage/subject_race.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8936433792114258 seconds.

--------- ingest/c2m2s/LINCS/datapackage/subject_role_taxonomy.tsv ---------
table_name:subject_role_taxonomy
LINCS: subject_role_taxonomy: Read from file: df: #rows = 1966, #cols: 4

#Lines in file ingest/c2m2s/LINCS/datapackage/subject_role_taxonomy.tsv: 1967
df: #rows = 1966, #cols: 4
pKeys: ['subject_id_namespace', 'subject_local_id', 'role_id', 'taxonomy_id']
Going to write the count query
Wrote the count query
*** Entering subject_role_taxonomy to database ***
df: #rows = 1966, #cols: 4

A slice of df:
            subject_id_namespace  ...    taxonomy_id
0  https://www.lincsproject.org/  ...  NCBI:txid9606
1  https://www.lincsproject.org/  ...  NCBI:txid9606
2  https://www.lincsproject.org/  ...  NCBI:txid9606
3  https://www.lincsproject.org/  ...  NCBI:txid9606
4  https://www.lincsproject.org/  ...  NCBI:txid9606
5  https://www.lincsproject.org/  ...  NCBI:txid9606
6  https://www.lincsproject.org/  ...  NCBI:txid9606
7  https://www.lincsproject.org/  ...  NCBI:txid9606
8  https://www.lincsproject.org/  ...  NCBI:txid9606
9  https://www.lincsproject.org/  ...  NCBI:txid9606

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:    count
0   1966
count:1966
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9832658767700195 seconds.

--------- ingest/c2m2s/LINCS/datapackage/subject_phenotype.tsv ---------
table_name:subject_phenotype
LINCS: subject_phenotype: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/LINCS/datapackage/subject_phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8657031059265137 seconds.

--------- ingest/c2m2s/LINCS/datapackage/subject_in_collection.tsv ---------
table_name:subject_in_collection
LINCS: subject_in_collection: Read from file: df: #rows = 12002, #cols: 4

#Lines in file ingest/c2m2s/LINCS/datapackage/subject_in_collection.tsv: 12003
df: #rows = 12002, #cols: 4
pKeys: ['subject_id_namespace', 'subject_local_id', 'collection_id_namespace', 'collection_local_id']
Going to write the count query
Wrote the count query
*** Entering subject_in_collection to database ***
df: #rows = 12002, #cols: 4

A slice of df:
            subject_id_namespace  ... collection_local_id
0  https://www.lincsproject.org/  ...            LDG-1251
1  https://www.lincsproject.org/  ...            LDG-1251
2  https://www.lincsproject.org/  ...            LDG-1104
3  https://www.lincsproject.org/  ...            LDG-1074
4  https://www.lincsproject.org/  ...            LDG-1215
5  https://www.lincsproject.org/  ...            LDG-1215
6  https://www.lincsproject.org/  ...            LDG-1215
7  https://www.lincsproject.org/  ...            LDG-1215
8  https://www.lincsproject.org/  ...            LDG-1215
9  https://www.lincsproject.org/  ...            LDG-1215

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:    count
0  12002
count:12002
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.183898687362671 seconds.

--------- ingest/c2m2s/LINCS/datapackage/subject_disease.tsv ---------
table_name:subject_disease
LINCS: subject_disease: Read from file: df: #rows = 197, #cols: 4

#Lines in file ingest/c2m2s/LINCS/datapackage/subject_disease.tsv: 198
df: #rows = 197, #cols: 4
pKeys: ['subject_id_namespace', 'subject_local_id', 'association_type', 'disease']
Going to write the count query
Wrote the count query
*** Entering subject_disease to database ***
df: #rows = 197, #cols: 4

A slice of df:
            subject_id_namespace  ...       disease
0  https://www.lincsproject.org/  ...     DOID:1240
1  https://www.lincsproject.org/  ...     DOID:2526
2  https://www.lincsproject.org/  ...  DOID:0060058
3  https://www.lincsproject.org/  ...     DOID:3459
4  https://www.lincsproject.org/  ...     DOID:1909
5  https://www.lincsproject.org/  ...     DOID:1324
6  https://www.lincsproject.org/  ...     DOID:2526
7  https://www.lincsproject.org/  ...      DOID:305
8  https://www.lincsproject.org/  ...     DOID:1520
9  https://www.lincsproject.org/  ...     DOID:1324

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:    count
0    197
count:197
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.004284143447876 seconds.

--------- ingest/c2m2s/LINCS/datapackage/primary_dcc_contact.tsv ---------
table_name:primary_dcc_contact
>>>>>>>> Time taken to ingest the metadata from this file: 4.839897155761719e-05 seconds.

--------- ingest/c2m2s/LINCS/datapackage/id_namespace.tsv ---------
table_name:id_namespace
LINCS: id_namespace: Read from file: df: #rows = 1, #cols: 4

#Lines in file ingest/c2m2s/LINCS/datapackage/id_namespace.tsv: 2
df: #rows = 1, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.id_namespace;
qt_df:                                                    pk
0              https://www.metabolomicsworkbench.org/
1                          tag:motrpac-data.org,2023:
2   https://druggablegenome.net/cfde_idg_drugcentr...
3                                      SPARC.subject:
4                                               egtex
5                    https://www.druggablegenome.net/
6                                         SPARC.file:
7                        https://www.data.glygen.org/
8                         https://data.4dnucleome.org
9   https://druggablegenome.net/cfde_idg_tcrd_dise...
10                                               gtex
11                                  SPARC.collection:
12  https://druggablegenome.net/cfde_idg_tcrd_targets
13                                         ERCC-exRNA
14                        tag:hmpdacc.org,2022-04-04:
15                                             SPARC:
16                                         adult_gtex
17                                      SPARC.sample:
18                                         kidsfirst:
19                     tag:hubmapconsortium.org,2023:
20                                     SPARC.project:
---- Executed query, got data.frame: qt_df: #rows = 21, #cols: 1

df_pk (at most first 10 elements): ['https://www.lincsproject.org/']
qt_pk (at most first 10 elements): ['https://www.metabolomicsworkbench.org/', 'tag:motrpac-data.org,2023:', 'https://druggablegenome.net/cfde_idg_drugcentral_drugs', 'SPARC.subject:', 'egtex', 'https://www.druggablegenome.net/', 'SPARC.file:', 'https://www.data.glygen.org/', 'https://data.4dnucleome.org', 'https://druggablegenome.net/cfde_idg_tcrd_diseases']
---- Removed rows from df with matching pk
*** Entering id_namespace to database ***
df: #rows = 1, #cols: 4

A slice of df:
                              id  ...                                        description
0  https://www.lincsproject.org/  ...  A library that catalogs changes that occur whe...

[1 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9549546241760254 seconds.

--------- ingest/c2m2s/LINCS/datapackage/file_in_collection.tsv ---------
table_name:file_in_collection
LINCS: file_in_collection: Read from file: df: #rows = 465, #cols: 4

#Lines in file ingest/c2m2s/LINCS/datapackage/file_in_collection.tsv: 466
df: #rows = 465, #cols: 4
pKeys: ['file_id_namespace', 'file_local_id', 'collection_id_namespace', 'collection_local_id']
Going to write the count query
Wrote the count query
*** Entering file_in_collection to database ***
df: #rows = 465, #cols: 4

A slice of df:
               file_id_namespace  ... collection_local_id
0  https://www.lincsproject.org/  ...            LDG-1397
1  https://www.lincsproject.org/  ...            LDG-1107
2  https://www.lincsproject.org/  ...            LDG-1399
3  https://www.lincsproject.org/  ...            LDG-1187
4  https://www.lincsproject.org/  ...            LDG-1251
5  https://www.lincsproject.org/  ...            LDG-1042
6  https://www.lincsproject.org/  ...            LDG-1104
7  https://www.lincsproject.org/  ...            LDG-1096
8  https://www.lincsproject.org/  ...            LDG-1148
9  https://www.lincsproject.org/  ...            LDG-1160

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:    count
0    465
count:465
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9593198299407959 seconds.

--------- ingest/c2m2s/LINCS/datapackage/file_describes_collection.tsv ---------
table_name:file_describes_collection
LINCS: file_describes_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/LINCS/datapackage/file_describes_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9176332950592041 seconds.

--------- ingest/c2m2s/LINCS/datapackage/dcc.tsv ---------
table_name:dcc
LINCS: dcc: Read from file: df: #rows = 1, #cols: 9

#Lines in file ingest/c2m2s/LINCS/datapackage/dcc.tsv: 2
df: #rows = 1, #cols: 9
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.dcc;
qt_df:                                 pk
0         cfde_registry_dcc:glygen
1          cfde_registry_dcc:exrna
2      cfde_registry_dcc:kidsfirst
3          cfde_registry_dcc:sparc
4            cfde_registry_dcc:4dn
5            cfde_registry_dcc:hmp
6   cfde_registry_dcc:metabolomics
7        cfde_registry_dcc:motrpac
8         cfde_registry_dcc:hubmap
9           cfde_registry_dcc:gtex
10           cfde_registry_dcc:idg
---- Executed query, got data.frame: qt_df: #rows = 11, #cols: 1

df_pk (at most first 10 elements): ['cfde_registry_dcc:lincs']
qt_pk (at most first 10 elements): ['cfde_registry_dcc:glygen', 'cfde_registry_dcc:exrna', 'cfde_registry_dcc:kidsfirst', 'cfde_registry_dcc:sparc', 'cfde_registry_dcc:4dn', 'cfde_registry_dcc:hmp', 'cfde_registry_dcc:metabolomics', 'cfde_registry_dcc:motrpac', 'cfde_registry_dcc:hubmap', 'cfde_registry_dcc:gtex']
---- Removed rows from df with matching pk
*** Entering dcc to database ***
df: #rows = 1, #cols: 9

A slice of df:
                        id  ...        contact_email
0  cfde_registry_dcc:lincs  ...  avi.maayan@mssm.edu

[1 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9965729713439941 seconds.

--------- ingest/c2m2s/LINCS/datapackage/collection.tsv ---------
table_name:collection
LINCS: collection: Read from file: df: #rows = 409, #cols: 8

#Lines in file ingest/c2m2s/LINCS/datapackage/collection.tsv: 410
df: #rows = 409, #cols: 8
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering collection to database ***
df: #rows = 409, #cols: 8

A slice of df:
                    id_namespace  ... abbreviation
0  https://www.lincsproject.org/  ...          NaN
1  https://www.lincsproject.org/  ...          NaN
2  https://www.lincsproject.org/  ...          NaN
3  https://www.lincsproject.org/  ...          NaN
4  https://www.lincsproject.org/  ...          NaN
5  https://www.lincsproject.org/  ...          NaN
6  https://www.lincsproject.org/  ...          NaN
7  https://www.lincsproject.org/  ...          NaN
8  https://www.lincsproject.org/  ...          NaN
9  https://www.lincsproject.org/  ...          NaN

[10 rows x 5 columns]
Data inserted successfully!
sql_count_df:    count
0    409
count:409
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.0082511901855469 seconds.

--------- ingest/c2m2s/LINCS/datapackage/collection_taxonomy.tsv ---------
table_name:collection_taxonomy
LINCS: collection_taxonomy: Read from file: df: #rows = 409, #cols: 3

#Lines in file ingest/c2m2s/LINCS/datapackage/collection_taxonomy.tsv: 410
df: #rows = 409, #cols: 3
pKeys: ['collection_id_namespace', 'collection_local_id', 'taxon']
Going to write the count query
Wrote the count query
*** Entering collection_taxonomy to database ***
df: #rows = 409, #cols: 3

A slice of df:
         collection_id_namespace collection_local_id          taxon
0  https://www.lincsproject.org/            LDG-1397  NCBI:txid9606
1  https://www.lincsproject.org/            LDG-1107  NCBI:txid9606
2  https://www.lincsproject.org/            LDG-1399  NCBI:txid9606
3  https://www.lincsproject.org/            LDG-1187  NCBI:txid9606
4  https://www.lincsproject.org/            LDG-1251  NCBI:txid9606
5  https://www.lincsproject.org/            LDG-1042  NCBI:txid9606
6  https://www.lincsproject.org/            LDG-1104  NCBI:txid9606
7  https://www.lincsproject.org/            LDG-1096  NCBI:txid9606
8  https://www.lincsproject.org/            LDG-1148  NCBI:txid9606
9  https://www.lincsproject.org/            LDG-1160  NCBI:txid9606
Data inserted successfully!
sql_count_df:    count
0    409
count:409
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.0066051483154297 seconds.

--------- ingest/c2m2s/LINCS/datapackage/collection_substance.tsv ---------
table_name:collection_substance
LINCS: collection_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/LINCS/datapackage/collection_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9249351024627686 seconds.

--------- ingest/c2m2s/LINCS/datapackage/collection_protein.tsv ---------
table_name:collection_protein
LINCS: collection_protein: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/LINCS/datapackage/collection_protein.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9189925193786621 seconds.

--------- ingest/c2m2s/LINCS/datapackage/collection_phenotype.tsv ---------
table_name:collection_phenotype
LINCS: collection_phenotype: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/LINCS/datapackage/collection_phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9186258316040039 seconds.

--------- ingest/c2m2s/LINCS/datapackage/collection_in_collection.tsv ---------
table_name:collection_in_collection
LINCS: collection_in_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/LINCS/datapackage/collection_in_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9470052719116211 seconds.

--------- ingest/c2m2s/LINCS/datapackage/collection_gene.tsv ---------
table_name:collection_gene
LINCS: collection_gene: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/LINCS/datapackage/collection_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9260420799255371 seconds.

--------- ingest/c2m2s/LINCS/datapackage/collection_disease.tsv ---------
table_name:collection_disease
LINCS: collection_disease: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/LINCS/datapackage/collection_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.9226183891296387 seconds.

--------- ingest/c2m2s/LINCS/datapackage/collection_defined_by_project.tsv ---------
table_name:collection_defined_by_project
LINCS: collection_defined_by_project: Read from file: df: #rows = 409, #cols: 4

#Lines in file ingest/c2m2s/LINCS/datapackage/collection_defined_by_project.tsv: 410
df: #rows = 409, #cols: 4
pKeys: ['collection_id_namespace', 'collection_local_id', 'project_id_namespace', 'project_local_id']
Going to write the count query
Wrote the count query
*** Entering collection_defined_by_project to database ***
df: #rows = 409, #cols: 4

A slice of df:
         collection_id_namespace  ... project_local_id
0  https://www.lincsproject.org/  ...    LINCS phase 2
1  https://www.lincsproject.org/  ...    LINCS phase 1
2  https://www.lincsproject.org/  ...    LINCS phase 2
3  https://www.lincsproject.org/  ...    LINCS phase 1
4  https://www.lincsproject.org/  ...    LINCS phase 2
5  https://www.lincsproject.org/  ...    LINCS phase 1
6  https://www.lincsproject.org/  ...    LINCS phase 1
7  https://www.lincsproject.org/  ...    LINCS phase 1
8  https://www.lincsproject.org/  ...    LINCS phase 1
9  https://www.lincsproject.org/  ...    LINCS phase 1

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:    count
0    409
count:409
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9756186008453369 seconds.

--------- ingest/c2m2s/LINCS/datapackage/collection_compound.tsv ---------
table_name:collection_compound
LINCS: collection_compound: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/LINCS/datapackage/collection_compound.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.8948891162872314 seconds.

--------- ingest/c2m2s/LINCS/datapackage/collection_anatomy.tsv ---------
table_name:collection_anatomy
LINCS: collection_anatomy: Read from file: df: #rows = 179, #cols: 3

#Lines in file ingest/c2m2s/LINCS/datapackage/collection_anatomy.tsv: 180
df: #rows = 179, #cols: 3
pKeys: ['collection_id_namespace', 'collection_local_id', 'anatomy']
Going to write the count query
Wrote the count query
*** Entering collection_anatomy to database ***
df: #rows = 179, #cols: 3

A slice of df:
         collection_id_namespace collection_local_id         anatomy
0  https://www.lincsproject.org/            LDG-1251  UBERON:0000178
1  https://www.lincsproject.org/            LDG-1104  UBERON:0002048
2  https://www.lincsproject.org/            LDG-1074  UBERON:0002097
3  https://www.lincsproject.org/            LDG-1215  UBERON:0002097
4  https://www.lincsproject.org/            LDG-1120  UBERON:0000310
5  https://www.lincsproject.org/            LDG-1252  UBERON:0000310
6  https://www.lincsproject.org/            LDG-1253  UBERON:0000310
7  https://www.lincsproject.org/            LDG-1254  UBERON:0000310
8  https://www.lincsproject.org/            LDG-1415  UBERON:0000310
9  https://www.lincsproject.org/            LDG-1416  UBERON:0000310
Data inserted successfully!
sql_count_df:    count
0    179
count:179
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.004157543182373 seconds.

--------- ingest/c2m2s/LINCS/datapackage/biosample_in_collection.tsv ---------
table_name:biosample_in_collection
LINCS: biosample_in_collection: Read from file: df: #rows = 12002, #cols: 4

#Lines in file ingest/c2m2s/LINCS/datapackage/biosample_in_collection.tsv: 12003
df: #rows = 12002, #cols: 4
pKeys: ['biosample_id_namespace', 'biosample_local_id', 'collection_id_namespace', 'collection_local_id']
Going to write the count query
Wrote the count query
*** Entering biosample_in_collection to database ***
df: #rows = 12002, #cols: 4

A slice of df:
          biosample_id_namespace  ... collection_local_id
0  https://www.lincsproject.org/  ...            LDG-1251
1  https://www.lincsproject.org/  ...            LDG-1251
2  https://www.lincsproject.org/  ...            LDG-1104
3  https://www.lincsproject.org/  ...            LDG-1074
4  https://www.lincsproject.org/  ...            LDG-1215
5  https://www.lincsproject.org/  ...            LDG-1215
6  https://www.lincsproject.org/  ...            LDG-1215
7  https://www.lincsproject.org/  ...            LDG-1215
8  https://www.lincsproject.org/  ...            LDG-1215
9  https://www.lincsproject.org/  ...            LDG-1215

[10 rows x 4 columns]
Data inserted successfully!
sql_count_df:    count
0  12002
count:12002
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.2072467803955078 seconds.

--------- ingest/c2m2s/LINCS/datapackage/__MACOSX/._analysis_type.tsv ---------
>>>>>>>> Time taken to ingest the metadata from this file: 2.8848648071289062e-05 seconds.

--------- ingest/c2m2s/LINCS/datapackage/__MACOSX/._project.tsv ---------
Processing C2M2 Files...: 100%|██████████| 12/12 [42:24<00:00, 226.12s/it]Processing C2M2 Files...: 100%|██████████| 12/12 [42:24<00:00, 212.08s/it]
>>>>>>>> Time taken to ingest the metadata from this file: 9.846687316894531e-05 seconds.

>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Time taken to ingest the metadata from the files: 2545.009935617447 seconds.

 ----------- Adding foreign key constraint for table file ----------
ALTER TABLE c2m2.file DROP CONSTRAINT IF EXISTS fk_file_id_namespace_1;
ALTER TABLE c2m2.file ADD CONSTRAINT  fk_file_id_namespace_1 FOREIGN KEY (id_namespace) REFERENCES c2m2.id_namespace (id);
ALTER TABLE c2m2.file DROP CONSTRAINT IF EXISTS fk_file_project_2;
ALTER TABLE c2m2.file ADD CONSTRAINT  fk_file_project_2 FOREIGN KEY (project_id_namespace, project_local_id) REFERENCES c2m2.project (id_namespace, local_id);
ALTER TABLE c2m2.file DROP CONSTRAINT IF EXISTS fk_file_file_format_3;
ALTER TABLE c2m2.file ADD CONSTRAINT  fk_file_file_format_3 FOREIGN KEY (file_format) REFERENCES c2m2.file_format (id);
ALTER TABLE c2m2.file DROP CONSTRAINT IF EXISTS fk_file_file_format_4;
ALTER TABLE c2m2.file ADD CONSTRAINT  fk_file_file_format_4 FOREIGN KEY (compression_format) REFERENCES c2m2.file_format (id);
ALTER TABLE c2m2.file DROP CONSTRAINT IF EXISTS fk_file_data_type_5;
ALTER TABLE c2m2.file ADD CONSTRAINT  fk_file_data_type_5 FOREIGN KEY (data_type) REFERENCES c2m2.data_type (id);
ALTER TABLE c2m2.file DROP CONSTRAINT IF EXISTS fk_file_assay_type_6;
ALTER TABLE c2m2.file ADD CONSTRAINT  fk_file_assay_type_6 FOREIGN KEY (assay_type) REFERENCES c2m2.assay_type (id);
ALTER TABLE c2m2.file DROP CONSTRAINT IF EXISTS fk_file_analysis_type_7;
ALTER TABLE c2m2.file ADD CONSTRAINT  fk_file_analysis_type_7 FOREIGN KEY (analysis_type) REFERENCES c2m2.analysis_type (id);
ALTER TABLE c2m2.file DROP CONSTRAINT IF EXISTS fk_file_collection_8;
ALTER TABLE c2m2.file ADD CONSTRAINT  fk_file_collection_8 FOREIGN KEY (bundle_collection_id_namespace, bundle_collection_local_id) REFERENCES c2m2.collection (id_namespace, local_id);
 ----------- Adding foreign key constraint for table biosample ----------
ALTER TABLE c2m2.biosample DROP CONSTRAINT IF EXISTS fk_biosample_id_namespace_1;
ALTER TABLE c2m2.biosample ADD CONSTRAINT  fk_biosample_id_namespace_1 FOREIGN KEY (id_namespace) REFERENCES c2m2.id_namespace (id);
ALTER TABLE c2m2.biosample DROP CONSTRAINT IF EXISTS fk_biosample_project_2;
ALTER TABLE c2m2.biosample ADD CONSTRAINT  fk_biosample_project_2 FOREIGN KEY (project_id_namespace, project_local_id) REFERENCES c2m2.project (id_namespace, local_id);
ALTER TABLE c2m2.biosample DROP CONSTRAINT IF EXISTS fk_biosample_sample_prep_method_3;
ALTER TABLE c2m2.biosample ADD CONSTRAINT  fk_biosample_sample_prep_method_3 FOREIGN KEY (sample_prep_method) REFERENCES c2m2.sample_prep_method (id);
ALTER TABLE c2m2.biosample DROP CONSTRAINT IF EXISTS fk_biosample_anatomy_4;
ALTER TABLE c2m2.biosample ADD CONSTRAINT  fk_biosample_anatomy_4 FOREIGN KEY (anatomy) REFERENCES c2m2.anatomy (id);
 ----------- Adding foreign key constraint for table subject ----------
ALTER TABLE c2m2.subject DROP CONSTRAINT IF EXISTS fk_subject_id_namespace_1;
ALTER TABLE c2m2.subject ADD CONSTRAINT  fk_subject_id_namespace_1 FOREIGN KEY (id_namespace) REFERENCES c2m2.id_namespace (id);
ALTER TABLE c2m2.subject DROP CONSTRAINT IF EXISTS fk_subject_project_2;
ALTER TABLE c2m2.subject ADD CONSTRAINT  fk_subject_project_2 FOREIGN KEY (project_id_namespace, project_local_id) REFERENCES c2m2.project (id_namespace, local_id);
 ----------- Adding foreign key constraint for table dcc ----------
ALTER TABLE c2m2.dcc DROP CONSTRAINT IF EXISTS fk_dcc_project_1;
ALTER TABLE c2m2.dcc ADD CONSTRAINT  fk_dcc_project_1 FOREIGN KEY (project_id_namespace, project_local_id) REFERENCES c2m2.project (id_namespace, local_id);
 ----------- Adding foreign key constraint for table project ----------
ALTER TABLE c2m2.project DROP CONSTRAINT IF EXISTS fk_project_id_namespace_1;
ALTER TABLE c2m2.project ADD CONSTRAINT  fk_project_id_namespace_1 FOREIGN KEY (id_namespace) REFERENCES c2m2.id_namespace (id);
 ----------- Adding foreign key constraint for table project_in_project ----------
ALTER TABLE c2m2.project_in_project DROP CONSTRAINT IF EXISTS fk_project_in_project_project_1;
ALTER TABLE c2m2.project_in_project ADD CONSTRAINT  fk_project_in_project_project_1 FOREIGN KEY (parent_project_id_namespace, parent_project_local_id) REFERENCES c2m2.project (id_namespace, local_id);
ALTER TABLE c2m2.project_in_project DROP CONSTRAINT IF EXISTS fk_project_in_project_project_2;
ALTER TABLE c2m2.project_in_project ADD CONSTRAINT  fk_project_in_project_project_2 FOREIGN KEY (child_project_id_namespace, child_project_local_id) REFERENCES c2m2.project (id_namespace, local_id);
 ----------- Adding foreign key constraint for table collection ----------
ALTER TABLE c2m2.collection DROP CONSTRAINT IF EXISTS fk_collection_id_namespace_1;
ALTER TABLE c2m2.collection ADD CONSTRAINT  fk_collection_id_namespace_1 FOREIGN KEY (id_namespace) REFERENCES c2m2.id_namespace (id);
 ----------- Adding foreign key constraint for table collection_in_collection ----------
ALTER TABLE c2m2.collection_in_collection DROP CONSTRAINT IF EXISTS fk_collection_in_collection_collection_1;
ALTER TABLE c2m2.collection_in_collection ADD CONSTRAINT  fk_collection_in_collection_collection_1 FOREIGN KEY (superset_collection_id_namespace, superset_collection_local_id) REFERENCES c2m2.collection (id_namespace, local_id);
ALTER TABLE c2m2.collection_in_collection DROP CONSTRAINT IF EXISTS fk_collection_in_collection_collection_2;
ALTER TABLE c2m2.collection_in_collection ADD CONSTRAINT  fk_collection_in_collection_collection_2 FOREIGN KEY (subset_collection_id_namespace, subset_collection_local_id) REFERENCES c2m2.collection (id_namespace, local_id);
 ----------- Adding foreign key constraint for table file_describes_collection ----------
ALTER TABLE c2m2.file_describes_collection DROP CONSTRAINT IF EXISTS fk_file_describes_collection_file_1;
ALTER TABLE c2m2.file_describes_collection ADD CONSTRAINT  fk_file_describes_collection_file_1 FOREIGN KEY (file_id_namespace, file_local_id) REFERENCES c2m2.file (id_namespace, local_id);
ALTER TABLE c2m2.file_describes_collection DROP CONSTRAINT IF EXISTS fk_file_describes_collection_collection_2;
ALTER TABLE c2m2.file_describes_collection ADD CONSTRAINT  fk_file_describes_collection_collection_2 FOREIGN KEY (collection_id_namespace, collection_local_id) REFERENCES c2m2.collection (id_namespace, local_id);
 ----------- Adding foreign key constraint for table collection_defined_by_project ----------
ALTER TABLE c2m2.collection_defined_by_project DROP CONSTRAINT IF EXISTS fk_collection_defined_by_project_collection_1;
ALTER TABLE c2m2.collection_defined_by_project ADD CONSTRAINT  fk_collection_defined_by_project_collection_1 FOREIGN KEY (collection_id_namespace, collection_local_id) REFERENCES c2m2.collection (id_namespace, local_id);
ALTER TABLE c2m2.collection_defined_by_project DROP CONSTRAINT IF EXISTS fk_collection_defined_by_project_project_2;
ALTER TABLE c2m2.collection_defined_by_project ADD CONSTRAINT  fk_collection_defined_by_project_project_2 FOREIGN KEY (project_id_namespace, project_local_id) REFERENCES c2m2.project (id_namespace, local_id);
 ----------- Adding foreign key constraint for table file_in_collection ----------
ALTER TABLE c2m2.file_in_collection DROP CONSTRAINT IF EXISTS fk_file_in_collection_file_1;
ALTER TABLE c2m2.file_in_collection ADD CONSTRAINT  fk_file_in_collection_file_1 FOREIGN KEY (file_id_namespace, file_local_id) REFERENCES c2m2.file (id_namespace, local_id);
ALTER TABLE c2m2.file_in_collection DROP CONSTRAINT IF EXISTS fk_file_in_collection_collection_2;
ALTER TABLE c2m2.file_in_collection ADD CONSTRAINT  fk_file_in_collection_collection_2 FOREIGN KEY (collection_id_namespace, collection_local_id) REFERENCES c2m2.collection (id_namespace, local_id);
 ----------- Adding foreign key constraint for table biosample_in_collection ----------
ALTER TABLE c2m2.biosample_in_collection DROP CONSTRAINT IF EXISTS fk_biosample_in_collection_biosample_1;
ALTER TABLE c2m2.biosample_in_collection ADD CONSTRAINT  fk_biosample_in_collection_biosample_1 FOREIGN KEY (biosample_id_namespace, biosample_local_id) REFERENCES c2m2.biosample (id_namespace, local_id);
ALTER TABLE c2m2.biosample_in_collection DROP CONSTRAINT IF EXISTS fk_biosample_in_collection_collection_2;
ALTER TABLE c2m2.biosample_in_collection ADD CONSTRAINT  fk_biosample_in_collection_collection_2 FOREIGN KEY (collection_id_namespace, collection_local_id) REFERENCES c2m2.collection (id_namespace, local_id);
 ----------- Adding foreign key constraint for table subject_in_collection ----------
ALTER TABLE c2m2.subject_in_collection DROP CONSTRAINT IF EXISTS fk_subject_in_collection_subject_1;
ALTER TABLE c2m2.subject_in_collection ADD CONSTRAINT  fk_subject_in_collection_subject_1 FOREIGN KEY (subject_id_namespace, subject_local_id) REFERENCES c2m2.subject (id_namespace, local_id);
ALTER TABLE c2m2.subject_in_collection DROP CONSTRAINT IF EXISTS fk_subject_in_collection_collection_2;
ALTER TABLE c2m2.subject_in_collection ADD CONSTRAINT  fk_subject_in_collection_collection_2 FOREIGN KEY (collection_id_namespace, collection_local_id) REFERENCES c2m2.collection (id_namespace, local_id);
 ----------- Adding foreign key constraint for table file_describes_biosample ----------
ALTER TABLE c2m2.file_describes_biosample DROP CONSTRAINT IF EXISTS fk_file_describes_biosample_file_1;
ALTER TABLE c2m2.file_describes_biosample ADD CONSTRAINT  fk_file_describes_biosample_file_1 FOREIGN KEY (file_id_namespace, file_local_id) REFERENCES c2m2.file (id_namespace, local_id);
ALTER TABLE c2m2.file_describes_biosample DROP CONSTRAINT IF EXISTS fk_file_describes_biosample_biosample_2;
ALTER TABLE c2m2.file_describes_biosample ADD CONSTRAINT  fk_file_describes_biosample_biosample_2 FOREIGN KEY (biosample_id_namespace, biosample_local_id) REFERENCES c2m2.biosample (id_namespace, local_id);
 ----------- Adding foreign key constraint for table file_describes_subject ----------
ALTER TABLE c2m2.file_describes_subject DROP CONSTRAINT IF EXISTS fk_file_describes_subject_file_1;
ALTER TABLE c2m2.file_describes_subject ADD CONSTRAINT  fk_file_describes_subject_file_1 FOREIGN KEY (file_id_namespace, file_local_id) REFERENCES c2m2.file (id_namespace, local_id);
ALTER TABLE c2m2.file_describes_subject DROP CONSTRAINT IF EXISTS fk_file_describes_subject_subject_2;
ALTER TABLE c2m2.file_describes_subject ADD CONSTRAINT  fk_file_describes_subject_subject_2 FOREIGN KEY (subject_id_namespace, subject_local_id) REFERENCES c2m2.subject (id_namespace, local_id);
 ----------- Adding foreign key constraint for table biosample_from_subject ----------
ALTER TABLE c2m2.biosample_from_subject DROP CONSTRAINT IF EXISTS fk_biosample_from_subject_biosample_1;
ALTER TABLE c2m2.biosample_from_subject ADD CONSTRAINT  fk_biosample_from_subject_biosample_1 FOREIGN KEY (biosample_id_namespace, biosample_local_id) REFERENCES c2m2.biosample (id_namespace, local_id);
ALTER TABLE c2m2.biosample_from_subject DROP CONSTRAINT IF EXISTS fk_biosample_from_subject_subject_2;
ALTER TABLE c2m2.biosample_from_subject ADD CONSTRAINT  fk_biosample_from_subject_subject_2 FOREIGN KEY (subject_id_namespace, subject_local_id) REFERENCES c2m2.subject (id_namespace, local_id);
 ----------- Adding foreign key constraint for table biosample_disease ----------
ALTER TABLE c2m2.biosample_disease DROP CONSTRAINT IF EXISTS fk_biosample_disease_biosample_1;
ALTER TABLE c2m2.biosample_disease ADD CONSTRAINT  fk_biosample_disease_biosample_1 FOREIGN KEY (biosample_id_namespace, biosample_local_id) REFERENCES c2m2.biosample (id_namespace, local_id);
ALTER TABLE c2m2.biosample_disease DROP CONSTRAINT IF EXISTS fk_biosample_disease_disease_2;
ALTER TABLE c2m2.biosample_disease ADD CONSTRAINT  fk_biosample_disease_disease_2 FOREIGN KEY (disease) REFERENCES c2m2.disease (id);
 ----------- Adding foreign key constraint for table subject_disease ----------
ALTER TABLE c2m2.subject_disease DROP CONSTRAINT IF EXISTS fk_subject_disease_subject_1;
ALTER TABLE c2m2.subject_disease ADD CONSTRAINT  fk_subject_disease_subject_1 FOREIGN KEY (subject_id_namespace, subject_local_id) REFERENCES c2m2.subject (id_namespace, local_id);
ALTER TABLE c2m2.subject_disease DROP CONSTRAINT IF EXISTS fk_subject_disease_disease_2;
ALTER TABLE c2m2.subject_disease ADD CONSTRAINT  fk_subject_disease_disease_2 FOREIGN KEY (disease) REFERENCES c2m2.disease (id);
 ----------- Adding foreign key constraint for table collection_disease ----------
ALTER TABLE c2m2.collection_disease DROP CONSTRAINT IF EXISTS fk_collection_disease_collection_1;
ALTER TABLE c2m2.collection_disease ADD CONSTRAINT  fk_collection_disease_collection_1 FOREIGN KEY (collection_id_namespace, collection_local_id) REFERENCES c2m2.collection (id_namespace, local_id);
ALTER TABLE c2m2.collection_disease DROP CONSTRAINT IF EXISTS fk_collection_disease_disease_2;
ALTER TABLE c2m2.collection_disease ADD CONSTRAINT  fk_collection_disease_disease_2 FOREIGN KEY (disease) REFERENCES c2m2.disease (id);
 ----------- Adding foreign key constraint for table collection_phenotype ----------
ALTER TABLE c2m2.collection_phenotype DROP CONSTRAINT IF EXISTS fk_collection_phenotype_collection_1;
ALTER TABLE c2m2.collection_phenotype ADD CONSTRAINT  fk_collection_phenotype_collection_1 FOREIGN KEY (collection_id_namespace, collection_local_id) REFERENCES c2m2.collection (id_namespace, local_id);
ALTER TABLE c2m2.collection_phenotype DROP CONSTRAINT IF EXISTS fk_collection_phenotype_phenotype_2;
ALTER TABLE c2m2.collection_phenotype ADD CONSTRAINT  fk_collection_phenotype_phenotype_2 FOREIGN KEY (phenotype) REFERENCES c2m2.phenotype (id);
 ----------- Adding foreign key constraint for table collection_gene ----------
ALTER TABLE c2m2.collection_gene DROP CONSTRAINT IF EXISTS fk_collection_gene_collection_1;
ALTER TABLE c2m2.collection_gene ADD CONSTRAINT  fk_collection_gene_collection_1 FOREIGN KEY (collection_id_namespace, collection_local_id) REFERENCES c2m2.collection (id_namespace, local_id);
ALTER TABLE c2m2.collection_gene DROP CONSTRAINT IF EXISTS fk_collection_gene_gene_2;
ALTER TABLE c2m2.collection_gene ADD CONSTRAINT  fk_collection_gene_gene_2 FOREIGN KEY (gene) REFERENCES c2m2.gene (id);
 ----------- Adding foreign key constraint for table collection_compound ----------
ALTER TABLE c2m2.collection_compound DROP CONSTRAINT IF EXISTS fk_collection_compound_collection_1;
ALTER TABLE c2m2.collection_compound ADD CONSTRAINT  fk_collection_compound_collection_1 FOREIGN KEY (collection_id_namespace, collection_local_id) REFERENCES c2m2.collection (id_namespace, local_id);
ALTER TABLE c2m2.collection_compound DROP CONSTRAINT IF EXISTS fk_collection_compound_compound_2;
ALTER TABLE c2m2.collection_compound ADD CONSTRAINT  fk_collection_compound_compound_2 FOREIGN KEY (compound) REFERENCES c2m2.compound (id);
 ----------- Adding foreign key constraint for table collection_substance ----------
ALTER TABLE c2m2.collection_substance DROP CONSTRAINT IF EXISTS fk_collection_substance_collection_1;
ALTER TABLE c2m2.collection_substance ADD CONSTRAINT  fk_collection_substance_collection_1 FOREIGN KEY (collection_id_namespace, collection_local_id) REFERENCES c2m2.collection (id_namespace, local_id);
ALTER TABLE c2m2.collection_substance DROP CONSTRAINT IF EXISTS fk_collection_substance_substance_2;
ALTER TABLE c2m2.collection_substance ADD CONSTRAINT  fk_collection_substance_substance_2 FOREIGN KEY (substance) REFERENCES c2m2.substance (id);
 ----------- Adding foreign key constraint for table collection_taxonomy ----------
ALTER TABLE c2m2.collection_taxonomy DROP CONSTRAINT IF EXISTS fk_collection_taxonomy_collection_1;
ALTER TABLE c2m2.collection_taxonomy ADD CONSTRAINT  fk_collection_taxonomy_collection_1 FOREIGN KEY (collection_id_namespace, collection_local_id) REFERENCES c2m2.collection (id_namespace, local_id);
ALTER TABLE c2m2.collection_taxonomy DROP CONSTRAINT IF EXISTS fk_collection_taxonomy_ncbi_taxonomy_2;
ALTER TABLE c2m2.collection_taxonomy ADD CONSTRAINT  fk_collection_taxonomy_ncbi_taxonomy_2 FOREIGN KEY (taxon) REFERENCES c2m2.ncbi_taxonomy (id);
 ----------- Adding foreign key constraint for table collection_anatomy ----------
ALTER TABLE c2m2.collection_anatomy DROP CONSTRAINT IF EXISTS fk_collection_anatomy_collection_1;
ALTER TABLE c2m2.collection_anatomy ADD CONSTRAINT  fk_collection_anatomy_collection_1 FOREIGN KEY (collection_id_namespace, collection_local_id) REFERENCES c2m2.collection (id_namespace, local_id);
ALTER TABLE c2m2.collection_anatomy DROP CONSTRAINT IF EXISTS fk_collection_anatomy_anatomy_2;
ALTER TABLE c2m2.collection_anatomy ADD CONSTRAINT  fk_collection_anatomy_anatomy_2 FOREIGN KEY (anatomy) REFERENCES c2m2.anatomy (id);
 ----------- Adding foreign key constraint for table collection_protein ----------
ALTER TABLE c2m2.collection_protein DROP CONSTRAINT IF EXISTS fk_collection_protein_collection_1;
ALTER TABLE c2m2.collection_protein ADD CONSTRAINT  fk_collection_protein_collection_1 FOREIGN KEY (collection_id_namespace, collection_local_id) REFERENCES c2m2.collection (id_namespace, local_id);
ALTER TABLE c2m2.collection_protein DROP CONSTRAINT IF EXISTS fk_collection_protein_protein_2;
ALTER TABLE c2m2.collection_protein ADD CONSTRAINT  fk_collection_protein_protein_2 FOREIGN KEY (protein) REFERENCES c2m2.protein (id);
 ----------- Adding foreign key constraint for table subject_phenotype ----------
ALTER TABLE c2m2.subject_phenotype DROP CONSTRAINT IF EXISTS fk_subject_phenotype_subject_1;
ALTER TABLE c2m2.subject_phenotype ADD CONSTRAINT  fk_subject_phenotype_subject_1 FOREIGN KEY (subject_id_namespace, subject_local_id) REFERENCES c2m2.subject (id_namespace, local_id);
ALTER TABLE c2m2.subject_phenotype DROP CONSTRAINT IF EXISTS fk_subject_phenotype_phenotype_2;
ALTER TABLE c2m2.subject_phenotype ADD CONSTRAINT  fk_subject_phenotype_phenotype_2 FOREIGN KEY (phenotype) REFERENCES c2m2.phenotype (id);
 ----------- Adding foreign key constraint for table biosample_substance ----------
ALTER TABLE c2m2.biosample_substance DROP CONSTRAINT IF EXISTS fk_biosample_substance_biosample_1;
ALTER TABLE c2m2.biosample_substance ADD CONSTRAINT  fk_biosample_substance_biosample_1 FOREIGN KEY (biosample_id_namespace, biosample_local_id) REFERENCES c2m2.biosample (id_namespace, local_id);
ALTER TABLE c2m2.biosample_substance DROP CONSTRAINT IF EXISTS fk_biosample_substance_substance_2;
ALTER TABLE c2m2.biosample_substance ADD CONSTRAINT  fk_biosample_substance_substance_2 FOREIGN KEY (substance) REFERENCES c2m2.substance (id);
 ----------- Adding foreign key constraint for table subject_substance ----------
ALTER TABLE c2m2.subject_substance DROP CONSTRAINT IF EXISTS fk_subject_substance_subject_1;
ALTER TABLE c2m2.subject_substance ADD CONSTRAINT  fk_subject_substance_subject_1 FOREIGN KEY (subject_id_namespace, subject_local_id) REFERENCES c2m2.subject (id_namespace, local_id);
ALTER TABLE c2m2.subject_substance DROP CONSTRAINT IF EXISTS fk_subject_substance_substance_2;
ALTER TABLE c2m2.subject_substance ADD CONSTRAINT  fk_subject_substance_substance_2 FOREIGN KEY (substance) REFERENCES c2m2.substance (id);
 ----------- Adding foreign key constraint for table biosample_gene ----------
ALTER TABLE c2m2.biosample_gene DROP CONSTRAINT IF EXISTS fk_biosample_gene_biosample_1;
ALTER TABLE c2m2.biosample_gene ADD CONSTRAINT  fk_biosample_gene_biosample_1 FOREIGN KEY (biosample_id_namespace, biosample_local_id) REFERENCES c2m2.biosample (id_namespace, local_id);
ALTER TABLE c2m2.biosample_gene DROP CONSTRAINT IF EXISTS fk_biosample_gene_gene_2;
ALTER TABLE c2m2.biosample_gene ADD CONSTRAINT  fk_biosample_gene_gene_2 FOREIGN KEY (gene) REFERENCES c2m2.gene (id);
 ----------- Adding foreign key constraint for table phenotype_gene ----------
ALTER TABLE c2m2.phenotype_gene DROP CONSTRAINT IF EXISTS fk_phenotype_gene_phenotype_1;
ALTER TABLE c2m2.phenotype_gene ADD CONSTRAINT  fk_phenotype_gene_phenotype_1 FOREIGN KEY (phenotype) REFERENCES c2m2.phenotype (id);
ALTER TABLE c2m2.phenotype_gene DROP CONSTRAINT IF EXISTS fk_phenotype_gene_gene_2;
ALTER TABLE c2m2.phenotype_gene ADD CONSTRAINT  fk_phenotype_gene_gene_2 FOREIGN KEY (gene) REFERENCES c2m2.gene (id);
 ----------- Adding foreign key constraint for table phenotype_disease ----------
ALTER TABLE c2m2.phenotype_disease DROP CONSTRAINT IF EXISTS fk_phenotype_disease_phenotype_1;
ALTER TABLE c2m2.phenotype_disease ADD CONSTRAINT  fk_phenotype_disease_phenotype_1 FOREIGN KEY (phenotype) REFERENCES c2m2.phenotype (id);
ALTER TABLE c2m2.phenotype_disease DROP CONSTRAINT IF EXISTS fk_phenotype_disease_disease_2;
ALTER TABLE c2m2.phenotype_disease ADD CONSTRAINT  fk_phenotype_disease_disease_2 FOREIGN KEY (disease) REFERENCES c2m2.disease (id);
 ----------- Adding foreign key constraint for table subject_race ----------
ALTER TABLE c2m2.subject_race DROP CONSTRAINT IF EXISTS fk_subject_race_subject_1;
ALTER TABLE c2m2.subject_race ADD CONSTRAINT  fk_subject_race_subject_1 FOREIGN KEY (subject_id_namespace, subject_local_id) REFERENCES c2m2.subject (id_namespace, local_id);
 ----------- Adding foreign key constraint for table subject_role_taxonomy ----------
ALTER TABLE c2m2.subject_role_taxonomy DROP CONSTRAINT IF EXISTS fk_subject_role_taxonomy_subject_1;
ALTER TABLE c2m2.subject_role_taxonomy ADD CONSTRAINT  fk_subject_role_taxonomy_subject_1 FOREIGN KEY (subject_id_namespace, subject_local_id) REFERENCES c2m2.subject (id_namespace, local_id);
ALTER TABLE c2m2.subject_role_taxonomy DROP CONSTRAINT IF EXISTS fk_subject_role_taxonomy_ncbi_taxonomy_2;
ALTER TABLE c2m2.subject_role_taxonomy ADD CONSTRAINT  fk_subject_role_taxonomy_ncbi_taxonomy_2 FOREIGN KEY (taxonomy_id) REFERENCES c2m2.ncbi_taxonomy (id);
 ----------- Adding foreign key constraint for table assay_type ----------
 ----------- Adding foreign key constraint for table analysis_type ----------
 ----------- Adding foreign key constraint for table ncbi_taxonomy ----------
 ----------- Adding foreign key constraint for table anatomy ----------
 ----------- Adding foreign key constraint for table file_format ----------
 ----------- Adding foreign key constraint for table data_type ----------
 ----------- Adding foreign key constraint for table disease ----------
 ----------- Adding foreign key constraint for table phenotype ----------
 ----------- Adding foreign key constraint for table compound ----------
 ----------- Adding foreign key constraint for table substance ----------
ALTER TABLE c2m2.substance DROP CONSTRAINT IF EXISTS fk_substance_compound_1;
ALTER TABLE c2m2.substance ADD CONSTRAINT  fk_substance_compound_1 FOREIGN KEY (compound) REFERENCES c2m2.compound (id);
 ----------- Adding foreign key constraint for table gene ----------
ALTER TABLE c2m2.gene DROP CONSTRAINT IF EXISTS fk_gene_ncbi_taxonomy_1;
ALTER TABLE c2m2.gene ADD CONSTRAINT  fk_gene_ncbi_taxonomy_1 FOREIGN KEY (organism) REFERENCES c2m2.ncbi_taxonomy (id);
 ----------- Adding foreign key constraint for table protein ----------
ALTER TABLE c2m2.protein DROP CONSTRAINT IF EXISTS fk_protein_ncbi_taxonomy_1;
ALTER TABLE c2m2.protein ADD CONSTRAINT  fk_protein_ncbi_taxonomy_1 FOREIGN KEY (organism) REFERENCES c2m2.ncbi_taxonomy (id);
 ----------- Adding foreign key constraint for table protein_gene ----------
ALTER TABLE c2m2.protein_gene DROP CONSTRAINT IF EXISTS fk_protein_gene_protein_1;
ALTER TABLE c2m2.protein_gene ADD CONSTRAINT  fk_protein_gene_protein_1 FOREIGN KEY (protein) REFERENCES c2m2.protein (id);
ALTER TABLE c2m2.protein_gene DROP CONSTRAINT IF EXISTS fk_protein_gene_gene_2;
ALTER TABLE c2m2.protein_gene ADD CONSTRAINT  fk_protein_gene_gene_2 FOREIGN KEY (gene) REFERENCES c2m2.gene (id);
 ----------- Adding foreign key constraint for table sample_prep_method ----------
 ----------- Adding foreign key constraint for table id_namespace ----------
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Time taken to add foreign constraints: 62.61675500869751 seconds.


>>>>>>>> Attempting removal of .0 from columns size_in_bytes and uncompressed_size_in_bytes of table c2m2.file successful.

Update successful.

>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Total time taken: 3668.0545930862427 seconds.

********** C2M2 metadata ingestion completed: schema_name: c2m2.
