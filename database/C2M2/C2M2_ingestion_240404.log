------------ dcc_short_labels:['4DN', 'ERCC', 'GTEx', 'GlyGen', 'HMP', 'HuBMAP', 'IDG', 'Kids%20First', 'LINCS', 'Metabolomics', 'MoTrPAC', 'SPARC']
********** No arguments specified: will use schema_name: c2m2, and ingest from all DCCs.
DROP SCHEMA IF EXISTS c2m2 CASCADE;
Creating c2m2
=================== table_name: file ===========================
---- Column name: id_namespace: information read ----
---- Column name: local_id: information read ----
---- Column name: project_id_namespace: information read ----
---- Column name: project_local_id: information read ----
---- Column name: persistent_id: information read ----
---- Column name: creation_time: information read ----
---- Column name: size_in_bytes: information read ----
---- Column name: uncompressed_size_in_bytes: information read ----
---- Column name: sha256: information read ----
---- Column name: md5: information read ----
---- Column name: filename: information read ----
---- Column name: file_format: information read ----
---- Column name: compression_format: information read ----
---- Column name: data_type: information read ----
---- Column name: assay_type: information read ----
---- Column name: analysis_type: information read ----
---- Column name: mime_type: information read ----
---- Column name: bundle_collection_id_namespace: information read ----
---- Column name: bundle_collection_local_id: information read ----
---- Column name: dbgap_study_id: information read ----
create_table_query:
CREATE TABLE c2m2.file (
id_namespace VARCHAR NOT NULL, 
local_id VARCHAR NOT NULL, 
project_id_namespace VARCHAR NOT NULL, 
project_local_id VARCHAR NOT NULL, 
persistent_id VARCHAR DEFAULT '', 
creation_time VARCHAR DEFAULT '', 
size_in_bytes VARCHAR DEFAULT '', 
uncompressed_size_in_bytes VARCHAR DEFAULT '', 
sha256 VARCHAR DEFAULT '', 
md5 VARCHAR DEFAULT '', 
filename VARCHAR NOT NULL, 
file_format VARCHAR DEFAULT '', 
compression_format VARCHAR DEFAULT '', 
data_type VARCHAR DEFAULT '', 
assay_type VARCHAR DEFAULT '', 
analysis_type VARCHAR DEFAULT '', 
mime_type VARCHAR DEFAULT '', 
bundle_collection_id_namespace VARCHAR DEFAULT '', 
bundle_collection_local_id VARCHAR DEFAULT '', 
dbgap_study_id VARCHAR DEFAULT '',
PRIMARY KEY(id_namespace, local_id)
);
=================== table_name: biosample ===========================
---- Column name: id_namespace: information read ----
---- Column name: local_id: information read ----
---- Column name: project_id_namespace: information read ----
---- Column name: project_local_id: information read ----
---- Column name: persistent_id: information read ----
---- Column name: creation_time: information read ----
---- Column name: sample_prep_method: information read ----
---- Column name: anatomy: information read ----
create_table_query:
CREATE TABLE c2m2.biosample (
id_namespace VARCHAR NOT NULL, 
local_id VARCHAR NOT NULL, 
project_id_namespace VARCHAR NOT NULL, 
project_local_id VARCHAR NOT NULL, 
persistent_id VARCHAR DEFAULT '', 
creation_time VARCHAR DEFAULT '', 
sample_prep_method VARCHAR DEFAULT '', 
anatomy VARCHAR DEFAULT '',
PRIMARY KEY(id_namespace, local_id)
);
=================== table_name: subject ===========================
---- Column name: id_namespace: information read ----
---- Column name: local_id: information read ----
---- Column name: project_id_namespace: information read ----
---- Column name: project_local_id: information read ----
---- Column name: persistent_id: information read ----
---- Column name: creation_time: information read ----
---- Column name: granularity: information read ----
---- Column name: sex: information read ----
---- Column name: ethnicity: information read ----
---- Column name: age_at_enrollment: information read ----
create_table_query:
CREATE TABLE c2m2.subject (
id_namespace VARCHAR NOT NULL, 
local_id VARCHAR NOT NULL, 
project_id_namespace VARCHAR NOT NULL, 
project_local_id VARCHAR NOT NULL, 
persistent_id VARCHAR DEFAULT '', 
creation_time VARCHAR DEFAULT '', 
granularity VARCHAR NOT NULL, 
sex VARCHAR DEFAULT '', 
ethnicity VARCHAR DEFAULT '', 
age_at_enrollment VARCHAR DEFAULT '',
PRIMARY KEY(id_namespace, local_id)
);
=================== table_name: dcc ===========================
---- Column name: id: information read ----
---- Column name: dcc_name: information read ----
---- Column name: dcc_abbreviation: information read ----
---- Column name: dcc_description: information read ----
---- Column name: contact_email: information read ----
---- Column name: contact_name: information read ----
---- Column name: dcc_url: information read ----
---- Column name: project_id_namespace: information read ----
---- Column name: project_local_id: information read ----
create_table_query:
CREATE TABLE c2m2.dcc (
id VARCHAR NOT NULL, 
dcc_name VARCHAR NOT NULL, 
dcc_abbreviation VARCHAR NOT NULL, 
dcc_description VARCHAR DEFAULT '', 
contact_email VARCHAR NOT NULL, 
contact_name VARCHAR NOT NULL, 
dcc_url VARCHAR NOT NULL, 
project_id_namespace VARCHAR NOT NULL, 
project_local_id VARCHAR NOT NULL,
PRIMARY KEY(id)
);
=================== table_name: project ===========================
---- Column name: id_namespace: information read ----
---- Column name: local_id: information read ----
---- Column name: persistent_id: information read ----
---- Column name: creation_time: information read ----
---- Column name: abbreviation: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
create_table_query:
CREATE TABLE c2m2.project (
id_namespace VARCHAR NOT NULL, 
local_id VARCHAR NOT NULL, 
persistent_id VARCHAR DEFAULT '', 
creation_time VARCHAR DEFAULT '', 
abbreviation VARCHAR DEFAULT '', 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '',
PRIMARY KEY(id_namespace, local_id)
);
=================== table_name: project_in_project ===========================
---- Column name: parent_project_id_namespace: information read ----
---- Column name: parent_project_local_id: information read ----
---- Column name: child_project_id_namespace: information read ----
---- Column name: child_project_local_id: information read ----
create_table_query:
CREATE TABLE c2m2.project_in_project (
parent_project_id_namespace VARCHAR NOT NULL, 
parent_project_local_id VARCHAR NOT NULL, 
child_project_id_namespace VARCHAR NOT NULL, 
child_project_local_id VARCHAR NOT NULL,
PRIMARY KEY(parent_project_id_namespace, parent_project_local_id, child_project_id_namespace, child_project_local_id)
);
=================== table_name: collection ===========================
---- Column name: id_namespace: information read ----
---- Column name: local_id: information read ----
---- Column name: persistent_id: information read ----
---- Column name: creation_time: information read ----
---- Column name: abbreviation: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
---- Column name: has_time_series_data: information read ----
create_table_query:
CREATE TABLE c2m2.collection (
id_namespace VARCHAR NOT NULL, 
local_id VARCHAR NOT NULL, 
persistent_id VARCHAR DEFAULT '', 
creation_time VARCHAR DEFAULT '', 
abbreviation VARCHAR DEFAULT '', 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '', 
has_time_series_data VARCHAR DEFAULT '',
PRIMARY KEY(id_namespace, local_id)
);
=================== table_name: collection_in_collection ===========================
---- Column name: superset_collection_id_namespace: information read ----
---- Column name: superset_collection_local_id: information read ----
---- Column name: subset_collection_id_namespace: information read ----
---- Column name: subset_collection_local_id: information read ----
create_table_query:
CREATE TABLE c2m2.collection_in_collection (
superset_collection_id_namespace VARCHAR NOT NULL, 
superset_collection_local_id VARCHAR NOT NULL, 
subset_collection_id_namespace VARCHAR NOT NULL, 
subset_collection_local_id VARCHAR NOT NULL,
PRIMARY KEY(superset_collection_id_namespace, superset_collection_local_id, subset_collection_id_namespace, subset_collection_local_id)
);
=================== table_name: file_describes_collection ===========================
---- Column name: file_id_namespace: information read ----
---- Column name: file_local_id: information read ----
---- Column name: collection_id_namespace: information read ----
---- Column name: collection_local_id: information read ----
create_table_query:
CREATE TABLE c2m2.file_describes_collection (
file_id_namespace VARCHAR NOT NULL, 
file_local_id VARCHAR NOT NULL, 
collection_id_namespace VARCHAR NOT NULL, 
collection_local_id VARCHAR NOT NULL,
PRIMARY KEY(file_id_namespace, file_local_id, collection_id_namespace, collection_local_id)
);
=================== table_name: collection_defined_by_project ===========================
---- Column name: collection_id_namespace: information read ----
---- Column name: collection_local_id: information read ----
---- Column name: project_id_namespace: information read ----
---- Column name: project_local_id: information read ----
create_table_query:
CREATE TABLE c2m2.collection_defined_by_project (
collection_id_namespace VARCHAR NOT NULL, 
collection_local_id VARCHAR NOT NULL, 
project_id_namespace VARCHAR NOT NULL, 
project_local_id VARCHAR NOT NULL,
PRIMARY KEY(collection_id_namespace, collection_local_id, project_id_namespace, project_local_id)
);
=================== table_name: file_in_collection ===========================
---- Column name: file_id_namespace: information read ----
---- Column name: file_local_id: information read ----
---- Column name: collection_id_namespace: information read ----
---- Column name: collection_local_id: information read ----
create_table_query:
CREATE TABLE c2m2.file_in_collection (
file_id_namespace VARCHAR NOT NULL, 
file_local_id VARCHAR NOT NULL, 
collection_id_namespace VARCHAR NOT NULL, 
collection_local_id VARCHAR NOT NULL,
PRIMARY KEY(file_id_namespace, file_local_id, collection_id_namespace, collection_local_id)
);
=================== table_name: biosample_in_collection ===========================
---- Column name: biosample_id_namespace: information read ----
---- Column name: biosample_local_id: information read ----
---- Column name: collection_id_namespace: information read ----
---- Column name: collection_local_id: information read ----
create_table_query:
CREATE TABLE c2m2.biosample_in_collection (
biosample_id_namespace VARCHAR NOT NULL, 
biosample_local_id VARCHAR NOT NULL, 
collection_id_namespace VARCHAR NOT NULL, 
collection_local_id VARCHAR NOT NULL,
PRIMARY KEY(biosample_id_namespace, biosample_local_id, collection_id_namespace, collection_local_id)
);
=================== table_name: subject_in_collection ===========================
---- Column name: subject_id_namespace: information read ----
---- Column name: subject_local_id: information read ----
---- Column name: collection_id_namespace: information read ----
---- Column name: collection_local_id: information read ----
create_table_query:
CREATE TABLE c2m2.subject_in_collection (
subject_id_namespace VARCHAR NOT NULL, 
subject_local_id VARCHAR NOT NULL, 
collection_id_namespace VARCHAR NOT NULL, 
collection_local_id VARCHAR NOT NULL,
PRIMARY KEY(subject_id_namespace, subject_local_id, collection_id_namespace, collection_local_id)
);
=================== table_name: file_describes_biosample ===========================
---- Column name: file_id_namespace: information read ----
---- Column name: file_local_id: information read ----
---- Column name: biosample_id_namespace: information read ----
---- Column name: biosample_local_id: information read ----
create_table_query:
CREATE TABLE c2m2.file_describes_biosample (
file_id_namespace VARCHAR NOT NULL, 
file_local_id VARCHAR NOT NULL, 
biosample_id_namespace VARCHAR NOT NULL, 
biosample_local_id VARCHAR NOT NULL,
PRIMARY KEY(file_id_namespace, file_local_id, biosample_id_namespace, biosample_local_id)
);
=================== table_name: file_describes_subject ===========================
---- Column name: file_id_namespace: information read ----
---- Column name: file_local_id: information read ----
---- Column name: subject_id_namespace: information read ----
---- Column name: subject_local_id: information read ----
create_table_query:
CREATE TABLE c2m2.file_describes_subject (
file_id_namespace VARCHAR NOT NULL, 
file_local_id VARCHAR NOT NULL, 
subject_id_namespace VARCHAR NOT NULL, 
subject_local_id VARCHAR NOT NULL,
PRIMARY KEY(file_id_namespace, file_local_id, subject_id_namespace, subject_local_id)
);
=================== table_name: biosample_from_subject ===========================
---- Column name: biosample_id_namespace: information read ----
---- Column name: biosample_local_id: information read ----
---- Column name: subject_id_namespace: information read ----
---- Column name: subject_local_id: information read ----
---- Column name: age_at_sampling: information read ----
create_table_query:
CREATE TABLE c2m2.biosample_from_subject (
biosample_id_namespace VARCHAR NOT NULL, 
biosample_local_id VARCHAR NOT NULL, 
subject_id_namespace VARCHAR NOT NULL, 
subject_local_id VARCHAR NOT NULL, 
age_at_sampling VARCHAR DEFAULT '',
PRIMARY KEY(biosample_id_namespace, biosample_local_id, subject_id_namespace, subject_local_id)
);
=================== table_name: biosample_disease ===========================
---- Column name: biosample_id_namespace: information read ----
---- Column name: biosample_local_id: information read ----
---- Column name: association_type: information read ----
---- Column name: disease: information read ----
create_table_query:
CREATE TABLE c2m2.biosample_disease (
biosample_id_namespace VARCHAR NOT NULL, 
biosample_local_id VARCHAR NOT NULL, 
association_type VARCHAR NOT NULL, 
disease VARCHAR NOT NULL,
PRIMARY KEY(biosample_id_namespace, biosample_local_id, association_type, disease)
);
=================== table_name: subject_disease ===========================
---- Column name: subject_id_namespace: information read ----
---- Column name: subject_local_id: information read ----
---- Column name: association_type: information read ----
---- Column name: disease: information read ----
create_table_query:
CREATE TABLE c2m2.subject_disease (
subject_id_namespace VARCHAR NOT NULL, 
subject_local_id VARCHAR NOT NULL, 
association_type VARCHAR NOT NULL, 
disease VARCHAR NOT NULL,
PRIMARY KEY(subject_id_namespace, subject_local_id, association_type, disease)
);
=================== table_name: collection_disease ===========================
---- Column name: collection_id_namespace: information read ----
---- Column name: collection_local_id: information read ----
---- Column name: disease: information read ----
create_table_query:
CREATE TABLE c2m2.collection_disease (
collection_id_namespace VARCHAR NOT NULL, 
collection_local_id VARCHAR NOT NULL, 
disease VARCHAR NOT NULL,
PRIMARY KEY(collection_id_namespace, collection_local_id, disease)
);
=================== table_name: collection_phenotype ===========================
---- Column name: collection_id_namespace: information read ----
---- Column name: collection_local_id: information read ----
---- Column name: phenotype: information read ----
create_table_query:
CREATE TABLE c2m2.collection_phenotype (
collection_id_namespace VARCHAR NOT NULL, 
collection_local_id VARCHAR NOT NULL, 
phenotype VARCHAR NOT NULL,
PRIMARY KEY(collection_id_namespace, collection_local_id, phenotype)
);
=================== table_name: collection_gene ===========================
---- Column name: collection_id_namespace: information read ----
---- Column name: collection_local_id: information read ----
---- Column name: gene: information read ----
create_table_query:
CREATE TABLE c2m2.collection_gene (
collection_id_namespace VARCHAR NOT NULL, 
collection_local_id VARCHAR NOT NULL, 
gene VARCHAR NOT NULL,
PRIMARY KEY(collection_id_namespace, collection_local_id, gene)
);
=================== table_name: collection_compound ===========================
---- Column name: collection_id_namespace: information read ----
---- Column name: collection_local_id: information read ----
---- Column name: compound: information read ----
create_table_query:
CREATE TABLE c2m2.collection_compound (
collection_id_namespace VARCHAR NOT NULL, 
collection_local_id VARCHAR NOT NULL, 
compound VARCHAR NOT NULL,
PRIMARY KEY(collection_id_namespace, collection_local_id, compound)
);
=================== table_name: collection_substance ===========================
---- Column name: collection_id_namespace: information read ----
---- Column name: collection_local_id: information read ----
---- Column name: substance: information read ----
create_table_query:
CREATE TABLE c2m2.collection_substance (
collection_id_namespace VARCHAR NOT NULL, 
collection_local_id VARCHAR NOT NULL, 
substance VARCHAR NOT NULL,
PRIMARY KEY(collection_id_namespace, collection_local_id, substance)
);
=================== table_name: collection_taxonomy ===========================
---- Column name: collection_id_namespace: information read ----
---- Column name: collection_local_id: information read ----
---- Column name: taxon: information read ----
create_table_query:
CREATE TABLE c2m2.collection_taxonomy (
collection_id_namespace VARCHAR NOT NULL, 
collection_local_id VARCHAR NOT NULL, 
taxon VARCHAR NOT NULL,
PRIMARY KEY(collection_id_namespace, collection_local_id, taxon)
);
=================== table_name: collection_anatomy ===========================
---- Column name: collection_id_namespace: information read ----
---- Column name: collection_local_id: information read ----
---- Column name: anatomy: information read ----
create_table_query:
CREATE TABLE c2m2.collection_anatomy (
collection_id_namespace VARCHAR NOT NULL, 
collection_local_id VARCHAR NOT NULL, 
anatomy VARCHAR NOT NULL,
PRIMARY KEY(collection_id_namespace, collection_local_id, anatomy)
);
=================== table_name: collection_protein ===========================
---- Column name: collection_id_namespace: information read ----
---- Column name: collection_local_id: information read ----
---- Column name: protein: information read ----
create_table_query:
CREATE TABLE c2m2.collection_protein (
collection_id_namespace VARCHAR NOT NULL, 
collection_local_id VARCHAR NOT NULL, 
protein VARCHAR NOT NULL,
PRIMARY KEY(collection_id_namespace, collection_local_id, protein)
);
=================== table_name: subject_phenotype ===========================
---- Column name: subject_id_namespace: information read ----
---- Column name: subject_local_id: information read ----
---- Column name: association_type: information read ----
---- Column name: phenotype: information read ----
create_table_query:
CREATE TABLE c2m2.subject_phenotype (
subject_id_namespace VARCHAR NOT NULL, 
subject_local_id VARCHAR NOT NULL, 
association_type VARCHAR NOT NULL, 
phenotype VARCHAR NOT NULL,
PRIMARY KEY(subject_id_namespace, subject_local_id, association_type, phenotype)
);
=================== table_name: biosample_substance ===========================
---- Column name: biosample_id_namespace: information read ----
---- Column name: biosample_local_id: information read ----
---- Column name: substance: information read ----
create_table_query:
CREATE TABLE c2m2.biosample_substance (
biosample_id_namespace VARCHAR NOT NULL, 
biosample_local_id VARCHAR NOT NULL, 
substance VARCHAR NOT NULL,
PRIMARY KEY(biosample_id_namespace, biosample_local_id, substance)
);
=================== table_name: subject_substance ===========================
---- Column name: subject_id_namespace: information read ----
---- Column name: subject_local_id: information read ----
---- Column name: substance: information read ----
create_table_query:
CREATE TABLE c2m2.subject_substance (
subject_id_namespace VARCHAR NOT NULL, 
subject_local_id VARCHAR NOT NULL, 
substance VARCHAR NOT NULL,
PRIMARY KEY(subject_id_namespace, subject_local_id, substance)
);
=================== table_name: biosample_gene ===========================
---- Column name: biosample_id_namespace: information read ----
---- Column name: biosample_local_id: information read ----
---- Column name: gene: information read ----
create_table_query:
CREATE TABLE c2m2.biosample_gene (
biosample_id_namespace VARCHAR NOT NULL, 
biosample_local_id VARCHAR NOT NULL, 
gene VARCHAR NOT NULL,
PRIMARY KEY(biosample_id_namespace, biosample_local_id, gene)
);
=================== table_name: phenotype_gene ===========================
---- Column name: phenotype: information read ----
---- Column name: gene: information read ----
create_table_query:
CREATE TABLE c2m2.phenotype_gene (
phenotype VARCHAR NOT NULL, 
gene VARCHAR NOT NULL,
PRIMARY KEY(phenotype, gene)
);
=================== table_name: phenotype_disease ===========================
---- Column name: phenotype: information read ----
---- Column name: disease: information read ----
create_table_query:
CREATE TABLE c2m2.phenotype_disease (
phenotype VARCHAR NOT NULL, 
disease VARCHAR NOT NULL,
PRIMARY KEY(phenotype, disease)
);
=================== table_name: subject_race ===========================
---- Column name: subject_id_namespace: information read ----
---- Column name: subject_local_id: information read ----
---- Column name: race: information read ----
create_table_query:
CREATE TABLE c2m2.subject_race (
subject_id_namespace VARCHAR NOT NULL, 
subject_local_id VARCHAR NOT NULL, 
race VARCHAR DEFAULT '',
PRIMARY KEY(subject_id_namespace, subject_local_id, race)
);
=================== table_name: subject_role_taxonomy ===========================
---- Column name: subject_id_namespace: information read ----
---- Column name: subject_local_id: information read ----
---- Column name: role_id: information read ----
---- Column name: taxonomy_id: information read ----
create_table_query:
CREATE TABLE c2m2.subject_role_taxonomy (
subject_id_namespace VARCHAR NOT NULL, 
subject_local_id VARCHAR NOT NULL, 
role_id VARCHAR NOT NULL, 
taxonomy_id VARCHAR NOT NULL,
PRIMARY KEY(subject_id_namespace, subject_local_id, role_id, taxonomy_id)
);
=================== table_name: assay_type ===========================
---- Column name: id: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
---- Column name: synonyms: information read ----
create_table_query:
CREATE TABLE c2m2.assay_type (
id VARCHAR NOT NULL, 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '', 
synonyms VARCHAR DEFAULT '',
PRIMARY KEY(id)
);
=================== table_name: analysis_type ===========================
---- Column name: id: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
---- Column name: synonyms: information read ----
create_table_query:
CREATE TABLE c2m2.analysis_type (
id VARCHAR NOT NULL, 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '', 
synonyms VARCHAR DEFAULT '',
PRIMARY KEY(id)
);
=================== table_name: ncbi_taxonomy ===========================
---- Column name: id: information read ----
---- Column name: clade: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
---- Column name: synonyms: information read ----
create_table_query:
CREATE TABLE c2m2.ncbi_taxonomy (
id VARCHAR NOT NULL, 
clade VARCHAR NOT NULL, 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '', 
synonyms VARCHAR DEFAULT '',
PRIMARY KEY(id)
);
=================== table_name: anatomy ===========================
---- Column name: id: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
---- Column name: synonyms: information read ----
create_table_query:
CREATE TABLE c2m2.anatomy (
id VARCHAR NOT NULL, 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '', 
synonyms VARCHAR DEFAULT '',
PRIMARY KEY(id)
);
=================== table_name: file_format ===========================
---- Column name: id: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
---- Column name: synonyms: information read ----
create_table_query:
CREATE TABLE c2m2.file_format (
id VARCHAR NOT NULL, 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '', 
synonyms VARCHAR DEFAULT '',
PRIMARY KEY(id)
);
=================== table_name: data_type ===========================
---- Column name: id: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
---- Column name: synonyms: information read ----
create_table_query:
CREATE TABLE c2m2.data_type (
id VARCHAR NOT NULL, 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '', 
synonyms VARCHAR DEFAULT '',
PRIMARY KEY(id)
);
=================== table_name: disease ===========================
---- Column name: id: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
---- Column name: synonyms: information read ----
create_table_query:
CREATE TABLE c2m2.disease (
id VARCHAR NOT NULL, 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '', 
synonyms VARCHAR DEFAULT '',
PRIMARY KEY(id)
);
=================== table_name: phenotype ===========================
---- Column name: id: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
---- Column name: synonyms: information read ----
create_table_query:
CREATE TABLE c2m2.phenotype (
id VARCHAR NOT NULL, 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '', 
synonyms VARCHAR DEFAULT '',
PRIMARY KEY(id)
);
=================== table_name: compound ===========================
---- Column name: id: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
---- Column name: synonyms: information read ----
create_table_query:
CREATE TABLE c2m2.compound (
id VARCHAR NOT NULL, 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '', 
synonyms VARCHAR DEFAULT '',
PRIMARY KEY(id)
);
=================== table_name: substance ===========================
---- Column name: id: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
---- Column name: synonyms: information read ----
---- Column name: compound: information read ----
create_table_query:
CREATE TABLE c2m2.substance (
id VARCHAR NOT NULL, 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '', 
synonyms VARCHAR DEFAULT '', 
compound VARCHAR NOT NULL,
PRIMARY KEY(id)
);
=================== table_name: gene ===========================
---- Column name: id: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
---- Column name: synonyms: information read ----
---- Column name: organism: information read ----
create_table_query:
CREATE TABLE c2m2.gene (
id VARCHAR NOT NULL, 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '', 
synonyms VARCHAR DEFAULT '', 
organism VARCHAR NOT NULL,
PRIMARY KEY(id)
);
=================== table_name: protein ===========================
---- Column name: id: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
---- Column name: synonyms: information read ----
---- Column name: organism: information read ----
create_table_query:
CREATE TABLE c2m2.protein (
id VARCHAR NOT NULL, 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '', 
synonyms VARCHAR DEFAULT '', 
organism VARCHAR DEFAULT '',
PRIMARY KEY(id)
);
=================== table_name: protein_gene ===========================
---- Column name: protein: information read ----
---- Column name: gene: information read ----
create_table_query:
CREATE TABLE c2m2.protein_gene (
protein VARCHAR NOT NULL, 
gene VARCHAR NOT NULL,
PRIMARY KEY(protein, gene)
);
=================== table_name: sample_prep_method ===========================
---- Column name: id: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
---- Column name: synonyms: information read ----
create_table_query:
CREATE TABLE c2m2.sample_prep_method (
id VARCHAR NOT NULL, 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '', 
synonyms VARCHAR DEFAULT '',
PRIMARY KEY(id)
);
=================== table_name: id_namespace ===========================
---- Column name: id: information read ----
---- Column name: abbreviation: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
create_table_query:
CREATE TABLE c2m2.id_namespace (
id VARCHAR NOT NULL, 
abbreviation VARCHAR DEFAULT '', 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '',
PRIMARY KEY(id)
);
================== Defined all tables ======================
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Time taken to define table: 0.13812732696533203 seconds.

Names of all tables:
['file', 'biosample', 'subject', 'dcc', 'project', 'project_in_project', 'collection', 'collection_in_collection', 'file_describes_collection', 'collection_defined_by_project', 'file_in_collection', 'biosample_in_collection', 'subject_in_collection', 'file_describes_biosample', 'file_describes_subject', 'biosample_from_subject', 'biosample_disease', 'subject_disease', 'collection_disease', 'collection_phenotype', 'collection_gene', 'collection_compound', 'collection_substance', 'collection_taxonomy', 'collection_anatomy', 'collection_protein', 'subject_phenotype', 'biosample_substance', 'subject_substance', 'biosample_gene', 'phenotype_gene', 'phenotype_disease', 'subject_race', 'subject_role_taxonomy', 'assay_type', 'analysis_type', 'ncbi_taxonomy', 'anatomy', 'file_format', 'data_type', 'disease', 'phenotype', 'compound', 'substance', 'gene', 'protein', 'protein_gene', 'sample_prep_method', 'id_namespace']

Going to ingest metadata from files


********* c2m2s dataframe is: **********
    filetype         filename  ...     created  dcc_short_label
9       C2M2  datapackage.zip  ...  2024-03-10              4DN
16      C2M2  datapackage.zip  ...  2023-08-17             ERCC
22      C2M2  datapackage.zip  ...  2023-09-01             GTEx
31      C2M2  datapackage.zip  ...  2024-03-14           GlyGen
38      C2M2  datapackage.zip  ...  2022-06-20              HMP
46      C2M2  datapackage.zip  ...  2024-01-04           HuBMAP
53      C2M2  datapackage.zip  ...  2024-01-09              IDG
65      C2M2  datapackage.zip  ...  2024-03-10     Kids%20First
76      C2M2  datapackage.zip  ...  2023-09-18            LINCS
90      C2M2  datapackage.zip  ...  2024-03-10     Metabolomics
96      C2M2  datapackage.zip  ...  2024-03-12          MoTrPAC
107     C2M2  datapackage.zip  ...  2024-03-17            SPARC

[12 rows x 14 columns]
Processing C2M2 Files...:   0%|          | 0/12 [00:00<?, ?it/s]
================================== DCC short label: 4DN =============================================
--------- ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/dcc.tsv ---------
table_name:dcc
4DN: dcc: Read from file: df: #rows = 1, #cols: 9

#Lines in file ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/dcc.tsv: 2
df: #rows = 1, #cols: 9
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.dcc;
qt_df: Empty DataFrame
Columns: [pk]
Index: []
---- Executed query, got data.frame: qt_df: #rows = 0, #cols: 1

df_pk (at most first 10 elements): ['cfde_registry_dcc:4dn']
qt_pk (at most first 10 elements): []
---- Removed rows from df with matching pk
*** Entering dcc to database ***
df: #rows = 1, #cols: 9

A slice of df:
                      id  ...           contact_email
0  cfde_registry_dcc:4dn  ...  support@4dnucleome.org

[1 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.08816409111022949 seconds.

--------- ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/id_namespace.tsv ---------
table_name:id_namespace
4DN: id_namespace: Read from file: df: #rows = 1, #cols: 4

#Lines in file ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/id_namespace.tsv: 2
df: #rows = 1, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.id_namespace;
qt_df: Empty DataFrame
Columns: [pk]
Index: []
---- Executed query, got data.frame: qt_df: #rows = 0, #cols: 1

df_pk (at most first 10 elements): ['https://data.4dnucleome.org']
qt_pk (at most first 10 elements): []
---- Removed rows from df with matching pk
*** Entering id_namespace to database ***
df: #rows = 1, #cols: 4

A slice of df:
                            id  ...                                        description
0  https://data.4dnucleome.org  ...  Study of the three-dimensional organization of...

[1 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.05328941345214844 seconds.

--------- ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/disease.tsv ---------
table_name:disease
4DN: disease: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.02179431915283203 seconds.

--------- ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/data_type.tsv ---------
table_name:data_type
4DN: data_type: Read from file: df: #rows = 5, #cols: 4

#Lines in file ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/data_type.tsv: 6
df: #rows = 5, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.data_type;
qt_df: Empty DataFrame
Columns: [pk]
Index: []
---- Executed query, got data.frame: qt_df: #rows = 0, #cols: 1

df_pk (at most first 10 elements): ['data:1383', 'data:2082', 'data:2887', 'data:2968', 'data:3002']
qt_pk (at most first 10 elements): []
---- Removed rows from df with matching pk
*** Entering data_type to database ***
df: #rows = 5, #cols: 4

A slice of df:
          id  ...                                           synonyms
0  data:1383  ...  ["Sequence alignment (nucleic acid)","RNA sequ...
1  data:2082  ...                                          ["Array"]
2  data:2887  ...  ["Sequence record (nucleic acid)","Nucleotide ...
3  data:2968  ...                                     ["Image data"]
4  data:3002  ...  ["Genome-browser track","Genome annotation tra...

[5 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.05315375328063965 seconds.

--------- ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/collection_disease.tsv ---------
table_name:collection_disease
4DN: collection_disease: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/collection_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.02186751365661621 seconds.

--------- ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/file_in_collection.tsv ---------
table_name:file_in_collection
4DN: file_in_collection: Read from file: df: #rows = 42830, #cols: 4

#Lines in file ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/file_in_collection.tsv: 42831
df: #rows = 42830, #cols: 4
pKeys: ['file_id_namespace', 'file_local_id', 'collection_id_namespace', 'collection_local_id']
Going to write the count query
Wrote the count query
*** Entering file_in_collection to database ***
df: #rows = 42830, #cols: 4

A slice of df:
             file_id_namespace  ...                   collection_local_id
0  https://data.4dnucleome.org  ...  82f15e77-cea6-4a67-af31-2a4b03f5cb80
1  https://data.4dnucleome.org  ...  82f15e77-cea6-4a67-af31-2a4b03f5cb80
2  https://data.4dnucleome.org  ...  82f15e77-cea6-4a67-af31-2a4b03f5cb80
3  https://data.4dnucleome.org  ...  32b53129-8f25-4df6-82a4-a5e8cc010a51
4  https://data.4dnucleome.org  ...  32b53129-8f25-4df6-82a4-a5e8cc010a51
5  https://data.4dnucleome.org  ...  32b53129-8f25-4df6-82a4-a5e8cc010a51
6  https://data.4dnucleome.org  ...  52964056-822d-43a0-b1e5-ecc1d7f43b20
7  https://data.4dnucleome.org  ...  52964056-822d-43a0-b1e5-ecc1d7f43b20
8  https://data.4dnucleome.org  ...  52964056-822d-43a0-b1e5-ecc1d7f43b20
9  https://data.4dnucleome.org  ...  171bbf21-a162-45da-b08f-f1cdee46d5cd

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.7598507404327393 seconds.

--------- ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/subject_role_taxonomy.tsv ---------
table_name:subject_role_taxonomy
4DN: subject_role_taxonomy: Read from file: df: #rows = 286, #cols: 4

#Lines in file ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/subject_role_taxonomy.tsv: 287
df: #rows = 286, #cols: 4
pKeys: ['subject_id_namespace', 'subject_local_id', 'role_id', 'taxonomy_id']
Going to write the count query
Wrote the count query
*** Entering subject_role_taxonomy to database ***
df: #rows = 286, #cols: 4

A slice of df:
          subject_id_namespace  ...     taxonomy_id
0  https://data.4dnucleome.org  ...  NCBI:txid10090
1  https://data.4dnucleome.org  ...  NCBI:txid10090
2  https://data.4dnucleome.org  ...   NCBI:txid9606
3  https://data.4dnucleome.org  ...   NCBI:txid9606
4  https://data.4dnucleome.org  ...   NCBI:txid9606
5  https://data.4dnucleome.org  ...   NCBI:txid9606
6  https://data.4dnucleome.org  ...   NCBI:txid9606
7  https://data.4dnucleome.org  ...  NCBI:txid10090
8  https://data.4dnucleome.org  ...  NCBI:txid10090
9  https://data.4dnucleome.org  ...  NCBI:txid10090

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.05684685707092285 seconds.

--------- ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/biosample_in_collection.tsv ---------
table_name:biosample_in_collection
4DN: biosample_in_collection: Read from file: df: #rows = 5140, #cols: 4

#Lines in file ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/biosample_in_collection.tsv: 5141
df: #rows = 5140, #cols: 4
pKeys: ['biosample_id_namespace', 'biosample_local_id', 'collection_id_namespace', 'collection_local_id']
Going to write the count query
Wrote the count query
*** Entering biosample_in_collection to database ***
df: #rows = 5140, #cols: 4

A slice of df:
        biosample_id_namespace  ...                   collection_local_id
0  https://data.4dnucleome.org  ...  82f15e77-cea6-4a67-af31-2a4b03f5cb80
1  https://data.4dnucleome.org  ...  32b53129-8f25-4df6-82a4-a5e8cc010a51
2  https://data.4dnucleome.org  ...  52964056-822d-43a0-b1e5-ecc1d7f43b20
3  https://data.4dnucleome.org  ...  171bbf21-a162-45da-b08f-f1cdee46d5cd
4  https://data.4dnucleome.org  ...  b10869f7-58a4-439d-8ed9-d6f2e217c952
5  https://data.4dnucleome.org  ...  9868aa2a-5740-4636-b622-d7a524e17890
6  https://data.4dnucleome.org  ...  e00bd828-3ca8-407e-b6ac-1d840fa69ba6
7  https://data.4dnucleome.org  ...  c4eb572d-d3ac-4603-bccb-96ed51a41c3a
8  https://data.4dnucleome.org  ...  64aa3e71-22ef-4559-bb55-6e63f9e16df9
9  https://data.4dnucleome.org  ...  fba0fbc9-d034-4d18-a80b-5cca4fa7a31e

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.13547682762145996 seconds.

--------- ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/subject_phenotype.tsv ---------
table_name:subject_phenotype
4DN: subject_phenotype: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/subject_phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.02277350425720215 seconds.

--------- ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/phenotype_disease.tsv ---------
table_name:phenotype_disease
4DN: phenotype_disease: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/phenotype_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.021942138671875 seconds.

--------- ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/collection_compound.tsv ---------
table_name:collection_compound
4DN: collection_compound: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/collection_compound.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.022101640701293945 seconds.

--------- ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/protein_gene.tsv ---------
table_name:protein_gene
4DN: protein_gene: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/protein_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.022640228271484375 seconds.

--------- ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/phenotype_gene.tsv ---------
table_name:phenotype_gene
4DN: phenotype_gene: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/phenotype_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.02154064178466797 seconds.

--------- ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/phenotype.tsv ---------
table_name:phenotype
4DN: phenotype: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.02246832847595215 seconds.

--------- ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/subject_disease.tsv ---------
table_name:subject_disease
4DN: subject_disease: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/subject_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.021884918212890625 seconds.

--------- ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/collection_phenotype.tsv ---------
table_name:collection_phenotype
4DN: collection_phenotype: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/collection_phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.022914886474609375 seconds.

--------- ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/protein.tsv ---------
table_name:protein
4DN: protein: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/protein.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.02213287353515625 seconds.

--------- ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/ncbi_taxonomy.tsv ---------
table_name:ncbi_taxonomy
4DN: ncbi_taxonomy: Read from file: df: #rows = 7, #cols: 5

#Lines in file ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/ncbi_taxonomy.tsv: 8
df: #rows = 7, #cols: 5
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.ncbi_taxonomy;
qt_df: Empty DataFrame
Columns: [pk]
Index: []
---- Executed query, got data.frame: qt_df: #rows = 0, #cols: 1

df_pk (at most first 10 elements): ['NCBI:txid10036', 'NCBI:txid10090', 'NCBI:txid60711', 'NCBI:txid7227', 'NCBI:txid7955', 'NCBI:txid9031', 'NCBI:txid9606']
qt_pk (at most first 10 elements): []
---- Removed rows from df with matching pk
*** Entering ncbi_taxonomy to database ***
df: #rows = 7, #cols: 5

A slice of df:
               id  ...                                           synonyms
0  NCBI:txid10036  ...  ["Syrian hamster", "Cricetus auratus", "Golden...
1  NCBI:txid10090  ...                                          ["mouse"]
2  NCBI:txid60711  ...  ["Cercopithecus aethiops sabaeus", "Cercopithe...
3   NCBI:txid7227  ...                        ["Sophophora melanogaster"]
4   NCBI:txid7955  ...  ["zebra fish", "Brachydanio rerio", "Brachydan...
5   NCBI:txid9031  ...  ["chickens", "Gallus domesticus", "Gallus gall...
6   NCBI:txid9606  ...                                                 []

[7 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0572359561920166 seconds.

--------- ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/collection_protein.tsv ---------
table_name:collection_protein
4DN: collection_protein: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/collection_protein.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.021683931350708008 seconds.

--------- ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/analysis_type.tsv ---------
table_name:analysis_type
4DN: analysis_type: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/analysis_type.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.022178173065185547 seconds.

--------- ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/file_describes_biosample.tsv ---------
table_name:file_describes_biosample
4DN: file_describes_biosample: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/file_describes_biosample.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.021927356719970703 seconds.

--------- ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/file.tsv ---------
table_name:file
4DN: file: Read from file: df: #rows = 42412, #cols: 20

#Lines in file ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/file.tsv: 42413
df: #rows = 42412, #cols: 20
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering file to database ***
df: #rows = 42412, #cols: 20

A slice of df:
                  id_namespace  ...                                      persistent_id
0  https://data.4dnucleome.org  ...  drs://data.4dnucleome.org/ga4gh/drs/v1/objects...
1  https://data.4dnucleome.org  ...  drs://data.4dnucleome.org/ga4gh/drs/v1/objects...
2  https://data.4dnucleome.org  ...  drs://data.4dnucleome.org/ga4gh/drs/v1/objects...
3  https://data.4dnucleome.org  ...  drs://data.4dnucleome.org/ga4gh/drs/v1/objects...
4  https://data.4dnucleome.org  ...  drs://data.4dnucleome.org/ga4gh/drs/v1/objects...
5  https://data.4dnucleome.org  ...  drs://data.4dnucleome.org/ga4gh/drs/v1/objects...
6  https://data.4dnucleome.org  ...  drs://data.4dnucleome.org/ga4gh/drs/v1/objects...
7  https://data.4dnucleome.org  ...  drs://data.4dnucleome.org/ga4gh/drs/v1/objects...
8  https://data.4dnucleome.org  ...  drs://data.4dnucleome.org/ga4gh/drs/v1/objects...
9  https://data.4dnucleome.org  ...  drs://data.4dnucleome.org/ga4gh/drs/v1/objects...

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 2.1015663146972656 seconds.

--------- ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/collection_gene.tsv ---------
table_name:collection_gene
4DN: collection_gene: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/collection_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.028422832489013672 seconds.

--------- ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/biosample_from_subject.tsv ---------
table_name:biosample_from_subject
4DN: biosample_from_subject: Read from file: df: #rows = 2961, #cols: 5

#Lines in file ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/biosample_from_subject.tsv: 2962
df: #rows = 2961, #cols: 5
pKeys: ['biosample_id_namespace', 'biosample_local_id', 'subject_id_namespace', 'subject_local_id']
Going to write the count query
Wrote the count query
*** Entering biosample_from_subject to database ***
df: #rows = 2961, #cols: 5

A slice of df:
        biosample_id_namespace  ... age_at_sampling
0  https://data.4dnucleome.org  ...             NaN
1  https://data.4dnucleome.org  ...             NaN
2  https://data.4dnucleome.org  ...             NaN
3  https://data.4dnucleome.org  ...             NaN
4  https://data.4dnucleome.org  ...             NaN
5  https://data.4dnucleome.org  ...             NaN
6  https://data.4dnucleome.org  ...             NaN
7  https://data.4dnucleome.org  ...             NaN
8  https://data.4dnucleome.org  ...             NaN
9  https://data.4dnucleome.org  ...             NaN

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.10531973838806152 seconds.

--------- ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/file_describes_collection.tsv ---------
table_name:file_describes_collection
4DN: file_describes_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/file_describes_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.02475285530090332 seconds.

--------- ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/subject_race.tsv ---------
table_name:subject_race
4DN: subject_race: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/subject_race.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.02425241470336914 seconds.

--------- ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/collection_in_collection.tsv ---------
table_name:collection_in_collection
4DN: collection_in_collection: Read from file: df: #rows = 5140, #cols: 4

#Lines in file ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/collection_in_collection.tsv: 5141
df: #rows = 5140, #cols: 4
pKeys: ['superset_collection_id_namespace', 'superset_collection_local_id', 'subset_collection_id_namespace', 'subset_collection_local_id']
Going to write the count query
Wrote the count query
*** Entering collection_in_collection to database ***
df: #rows = 5140, #cols: 4

A slice of df:
  superset_collection_id_namespace  ...            subset_collection_local_id
0      https://data.4dnucleome.org  ...  82f15e77-cea6-4a67-af31-2a4b03f5cb80
1      https://data.4dnucleome.org  ...  32b53129-8f25-4df6-82a4-a5e8cc010a51
2      https://data.4dnucleome.org  ...  52964056-822d-43a0-b1e5-ecc1d7f43b20
3      https://data.4dnucleome.org  ...  171bbf21-a162-45da-b08f-f1cdee46d5cd
4      https://data.4dnucleome.org  ...  b10869f7-58a4-439d-8ed9-d6f2e217c952
5      https://data.4dnucleome.org  ...  9868aa2a-5740-4636-b622-d7a524e17890
6      https://data.4dnucleome.org  ...  e00bd828-3ca8-407e-b6ac-1d840fa69ba6
7      https://data.4dnucleome.org  ...  c4eb572d-d3ac-4603-bccb-96ed51a41c3a
8      https://data.4dnucleome.org  ...  64aa3e71-22ef-4559-bb55-6e63f9e16df9
9      https://data.4dnucleome.org  ...  fba0fbc9-d034-4d18-a80b-5cca4fa7a31e

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.13518810272216797 seconds.

--------- ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/collection_defined_by_project.tsv ---------
table_name:collection_defined_by_project
4DN: collection_defined_by_project: Read from file: df: #rows = 7347, #cols: 4

#Lines in file ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/collection_defined_by_project.tsv: 7348
df: #rows = 7347, #cols: 4
pKeys: ['collection_id_namespace', 'collection_local_id', 'project_id_namespace', 'project_local_id']
Going to write the count query
Wrote the count query
*** Entering collection_defined_by_project to database ***
df: #rows = 7347, #cols: 4

A slice of df:
       collection_id_namespace  ...                      project_local_id
0  https://data.4dnucleome.org  ...  ee89349a-1d43-4048-9142-bc750f0f3b32
1  https://data.4dnucleome.org  ...  ee89349a-1d43-4048-9142-bc750f0f3b32
2  https://data.4dnucleome.org  ...  ee89349a-1d43-4048-9142-bc750f0f3b32
3  https://data.4dnucleome.org  ...  ee89349a-1d43-4048-9142-bc750f0f3b32
4  https://data.4dnucleome.org  ...  ee89349a-1d43-4048-9142-bc750f0f3b32
5  https://data.4dnucleome.org  ...  ee89349a-1d43-4048-9142-bc750f0f3b32
6  https://data.4dnucleome.org  ...  ee89349a-1d43-4048-9142-bc750f0f3b32
7  https://data.4dnucleome.org  ...  ee89349a-1d43-4048-9142-bc750f0f3b32
8  https://data.4dnucleome.org  ...  ee89349a-1d43-4048-9142-bc750f0f3b32
9  https://data.4dnucleome.org  ...  ee89349a-1d43-4048-9142-bc750f0f3b32

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.1665973663330078 seconds.

--------- ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/collection_substance.tsv ---------
table_name:collection_substance
4DN: collection_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/collection_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.024327516555786133 seconds.

--------- ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/biosample_substance.tsv ---------
table_name:biosample_substance
4DN: biosample_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/biosample_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.0239105224609375 seconds.

--------- ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/project.tsv ---------
table_name:project
4DN: project: Read from file: df: #rows = 41, #cols: 7

#Lines in file ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/project.tsv: 42
df: #rows = 41, #cols: 7
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering project to database ***
df: #rows = 41, #cols: 7

A slice of df:
                  id_namespace  ... abbreviation
0  https://data.4dnucleome.org  ...          4DN
1  https://data.4dnucleome.org  ...          NaN
2  https://data.4dnucleome.org  ...          NaN
3  https://data.4dnucleome.org  ...          NaN
4  https://data.4dnucleome.org  ...          NaN
5  https://data.4dnucleome.org  ...          NaN
6  https://data.4dnucleome.org  ...          NaN
7  https://data.4dnucleome.org  ...          NaN
8  https://data.4dnucleome.org  ...          NaN
9  https://data.4dnucleome.org  ...          NaN

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.059270620346069336 seconds.

--------- ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/anatomy.tsv ---------
table_name:anatomy
4DN: anatomy: Read from file: df: #rows = 56, #cols: 4

#Lines in file ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/anatomy.tsv: 57
df: #rows = 56, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.anatomy;
qt_df: Empty DataFrame
Columns: [pk]
Index: []
---- Executed query, got data.frame: qt_df: #rows = 0, #cols: 1

df_pk (at most first 10 elements): ['CL:0000034', 'CL:0000081', 'CL:0000082', 'CL:0000216', 'CL:0000501', 'CL:0000604', 'CL:0000893', 'CL:0000945', 'CL:0002553', 'CL:0002586']
qt_pk (at most first 10 elements): []
---- Removed rows from df with matching pk
*** Entering anatomy to database ***
df: #rows = 56, #cols: 4

A slice of df:
           id  ...                                           synonyms
0  CL:0000034  ...                               ["animal stem cell"]
1  CL:0000081  ...                                                 []
2  CL:0000082  ...                           ["lung epithelial cell"]
3  CL:0000216  ...                                                 []
4  CL:0000501  ...                        ["granulosa cell of ovary"]
5  CL:0000604  ...                                                 []
6  CL:0000893  ...  ["immature T cell","immature T lymphocyte","im...
7  CL:0000945  ...                                                 []
8  CL:0002553  ...                                                 []
9  CL:0002586  ...                                                 []

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.06076240539550781 seconds.

--------- ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/sample_prep_method.tsv ---------
table_name:sample_prep_method
4DN: sample_prep_method: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/sample_prep_method.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.02405548095703125 seconds.

--------- ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/assay_type.tsv ---------
table_name:assay_type
4DN: assay_type: Read from file: df: #rows = 31, #cols: 4

#Lines in file ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/assay_type.tsv: 32
df: #rows = 31, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.assay_type;
qt_df: Empty DataFrame
Columns: [pk]
Index: []
---- Executed query, got data.frame: qt_df: #rows = 0, #cols: 1

df_pk (at most first 10 elements): ['CHMO:0000087', 'OBI:0000185', 'OBI:0000626', 'OBI:0000716', 'OBI:0001177', 'OBI:0001271', 'OBI:0001631', 'OBI:0001848', 'OBI:0001920', 'OBI:0002631']
qt_pk (at most first 10 elements): []
---- Removed rows from df with matching pk
*** Entering assay_type to database ***
df: #rows = 31, #cols: 4

A slice of df:
             id  ...                                           synonyms
0  CHMO:0000087  ...  ["fluorescence imaging","fluorescence microsco...
1   OBI:0000185  ...                                                 []
2   OBI:0000626  ...                          ["nucleotide sequencing"]
3   OBI:0000716  ...  ["chromatin immunoprecipitation sequencing ass...
4   OBI:0001177  ...                                                 []
5   OBI:0001271  ...  ["transcription profiling by high throughput s...
6   OBI:0001631  ...                                                 []
7   OBI:0001848  ...                      ["ChIA-PET","ChIA-PET assay"]
8   OBI:0001920  ...                    ["Repli-seq","Repli-seq assay"]
9   OBI:0002631  ...                                      ["scRNA-seq"]

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0607905387878418 seconds.

--------- ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/biosample_disease.tsv ---------
table_name:biosample_disease
4DN: biosample_disease: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/biosample_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.02441120147705078 seconds.

--------- ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/collection_anatomy.tsv ---------
table_name:collection_anatomy
4DN: collection_anatomy: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/collection_anatomy.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.024510622024536133 seconds.

--------- ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/gene.tsv ---------
table_name:gene
4DN: gene: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.024637699127197266 seconds.

--------- ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/biosample.tsv ---------
table_name:biosample
4DN: biosample: Read from file: df: #rows = 2961, #cols: 8

#Lines in file ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/biosample.tsv: 2962
df: #rows = 2961, #cols: 8
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering biosample to database ***
df: #rows = 2961, #cols: 8

A slice of df:
                  id_namespace  ...                             persistent_id
0  https://data.4dnucleome.org  ...  https://data.4dnucleome.org/4DNBSYXSMXMU
1  https://data.4dnucleome.org  ...  https://data.4dnucleome.org/4DNBSBPM6HI7
2  https://data.4dnucleome.org  ...  https://data.4dnucleome.org/4DNBSQRAB6W7
3  https://data.4dnucleome.org  ...  https://data.4dnucleome.org/4DNBSZW2RZ3F
4  https://data.4dnucleome.org  ...  https://data.4dnucleome.org/4DNBSWNKF27O
5  https://data.4dnucleome.org  ...  https://data.4dnucleome.org/4DNBSJF32XV6
6  https://data.4dnucleome.org  ...  https://data.4dnucleome.org/4DNBSFUB5FNQ
7  https://data.4dnucleome.org  ...  https://data.4dnucleome.org/4DNBSULQFV1V
8  https://data.4dnucleome.org  ...  https://data.4dnucleome.org/4DNBSHBJWMDD
9  https://data.4dnucleome.org  ...  https://data.4dnucleome.org/4DNBSQL9GNBN

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.12862515449523926 seconds.

--------- ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/file_describes_subject.tsv ---------
table_name:file_describes_subject
4DN: file_describes_subject: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/file_describes_subject.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.02592921257019043 seconds.

--------- ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/subject.tsv ---------
table_name:subject
4DN: subject: Read from file: df: #rows = 286, #cols: 10

#Lines in file ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/subject.tsv: 287
df: #rows = 286, #cols: 10
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering subject to database ***
df: #rows = 286, #cols: 10

A slice of df:
                  id_namespace  ...                             persistent_id
0  https://data.4dnucleome.org  ...  https://data.4dnucleome.org/4DNSRSHTV6AX
1  https://data.4dnucleome.org  ...  https://data.4dnucleome.org/4DNSR8U6913B
2  https://data.4dnucleome.org  ...  https://data.4dnucleome.org/4DNSRWQFKJYO
3  https://data.4dnucleome.org  ...  https://data.4dnucleome.org/4DNSRXXGU3CH
4  https://data.4dnucleome.org  ...  https://data.4dnucleome.org/4DNSRQS7I4EG
5  https://data.4dnucleome.org  ...  https://data.4dnucleome.org/4DNSRBJKA2H5
6  https://data.4dnucleome.org  ...  https://data.4dnucleome.org/4DNSRJBQJC94
7  https://data.4dnucleome.org  ...  https://data.4dnucleome.org/4DNSRW37B8NM
8  https://data.4dnucleome.org  ...  https://data.4dnucleome.org/4DNSRDPPKSG3
9  https://data.4dnucleome.org  ...  https://data.4dnucleome.org/4DNSRZFDUTN3

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.06699299812316895 seconds.

--------- ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/file_format.tsv ---------
table_name:file_format
4DN: file_format: Read from file: df: #rows = 15, #cols: 4

#Lines in file ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/file_format.tsv: 16
df: #rows = 15, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.file_format;
qt_df: Empty DataFrame
Columns: [pk]
Index: []
---- Executed query, got data.frame: qt_df: #rows = 0, #cols: 1

df_pk (at most first 10 elements): ['format:1930', 'format:2330', 'format:2331', 'format:2572', 'format:3003', 'format:3004', 'format:3006', 'format:3475', 'format:3583', 'format:3590']
qt_pk (at most first 10 elements): []
---- Removed rows from df with matching pk
*** Entering file_format to database ***
df: #rows = 15, #cols: 4

A slice of df:
            id  ...                                  synonyms
0  format:1930  ...                           ["FASTAQ","fq"]
1  format:2330  ...               ["Plain text format","txt"]
2  format:2331  ...             ["Hypertext Markup Language"]
3  format:2572  ...                                        []
4  format:3003  ...                                        []
5  format:3004  ...                                        []
6  format:3006  ...                                        []
7  format:3475  ...  ["Tab-delimited","Tab-separated values"]
8  format:3583  ...                                        []
9  format:3590  ...                                    ["h5"]

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.05920243263244629 seconds.

--------- ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/biosample_gene.tsv ---------
table_name:biosample_gene
4DN: biosample_gene: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/biosample_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.028342723846435547 seconds.

--------- ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/subject_substance.tsv ---------
table_name:subject_substance
4DN: subject_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/subject_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.025282621383666992 seconds.

--------- ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/collection.tsv ---------
table_name:collection
4DN: collection: Read from file: df: #rows = 7347, #cols: 8

#Lines in file ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/collection.tsv: 7348
df: #rows = 7347, #cols: 8
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering collection to database ***
df: #rows = 7347, #cols: 8

A slice of df:
                  id_namespace  ...  abbreviation
0  https://data.4dnucleome.org  ...  4DNESPE924IP
1  https://data.4dnucleome.org  ...  4DNEXYXXV9AQ
2  https://data.4dnucleome.org  ...  4DNEXDSE1987
3  https://data.4dnucleome.org  ...  4DNEXRBK6HWZ
4  https://data.4dnucleome.org  ...  4DNEXH6CINOZ
5  https://data.4dnucleome.org  ...  4DNESMTNNB3N
6  https://data.4dnucleome.org  ...  4DNEX4L6B8F2
7  https://data.4dnucleome.org  ...  4DNEXZTUN9TK
8  https://data.4dnucleome.org  ...  4DNEX6ZNHHBS
9  https://data.4dnucleome.org  ...  4DNEXBUVZYLI

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.24557018280029297 seconds.

--------- ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/compound.tsv ---------
table_name:compound
4DN: compound: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/compound.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.02607440948486328 seconds.

--------- ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/subject_in_collection.tsv ---------
table_name:subject_in_collection
4DN: subject_in_collection: Read from file: df: #rows = 2207, #cols: 4

#Lines in file ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/subject_in_collection.tsv: 2208
df: #rows = 2207, #cols: 4
pKeys: ['subject_id_namespace', 'subject_local_id', 'collection_id_namespace', 'collection_local_id']
Going to write the count query
Wrote the count query
*** Entering subject_in_collection to database ***
df: #rows = 2207, #cols: 4

A slice of df:
          subject_id_namespace  ...                   collection_local_id
0  https://data.4dnucleome.org  ...  eeec002c-fbeb-4d00-98be-44988bc722ab
1  https://data.4dnucleome.org  ...  c4af61db-b761-4b66-b94b-9b8b4ab5acb1
2  https://data.4dnucleome.org  ...  1a98a8cd-744e-4b72-88b0-16644d5ad85b
3  https://data.4dnucleome.org  ...  5911b4ec-4f40-4ce6-846e-be59c93cdc36
4  https://data.4dnucleome.org  ...  6d723940-f9f9-43a2-a579-a31431f6ad6f
5  https://data.4dnucleome.org  ...  b2a2c4b9-4cbb-4b7f-bf9d-541f2f772bd6
6  https://data.4dnucleome.org  ...  1260b55d-5b1d-4a3f-afca-e6ed7dfb2c4e
7  https://data.4dnucleome.org  ...  212d231d-0e36-4bb5-8e7f-be240b24a212
8  https://data.4dnucleome.org  ...  e312455e-53f8-4c98-9ec8-230e46164102
9  https://data.4dnucleome.org  ...  58648eba-40cd-4b14-b4a1-5502c7002d5a

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.09287142753601074 seconds.

--------- ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/project_in_project.tsv ---------
table_name:project_in_project
4DN: project_in_project: Read from file: df: #rows = 40, #cols: 4

#Lines in file ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/project_in_project.tsv: 41
df: #rows = 40, #cols: 4
pKeys: ['parent_project_id_namespace', 'parent_project_local_id', 'child_project_id_namespace', 'child_project_local_id']
Going to write the count query
Wrote the count query
*** Entering project_in_project to database ***
df: #rows = 40, #cols: 4

A slice of df:
   parent_project_id_namespace  ...                child_project_local_id
0  https://data.4dnucleome.org  ...  ee89349a-1d43-4048-9142-bc750f0f3b32
1  https://data.4dnucleome.org  ...  91b694c3-f4d7-4ddd-8278-16f94e15c1c5
2  https://data.4dnucleome.org  ...  f959fce7-bd94-4a8d-961d-8c72a4eaa1ad
3  https://data.4dnucleome.org  ...  0247d660-dc33-4a2e-84a7-eb1ac2cbbaca
4  https://data.4dnucleome.org  ...  71171a4e-dca1-44cb-8375-fafd896c6923
5  https://data.4dnucleome.org  ...  8432a44c-4da7-446b-9080-f4fae299ebd6
6  https://data.4dnucleome.org  ...  12a92962-8265-4fc0-b2f8-cf14f05db58b
7  https://data.4dnucleome.org  ...  b7c5d0c8-053e-4da3-b446-b68787a5a738
8  https://data.4dnucleome.org  ...  8c9d595e-2809-4779-ae6e-305341f695ff
9  https://data.4dnucleome.org  ...  fcc7f634-9252-499f-b79c-380795af2ddd

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
Processing C2M2 Files...:   8%|▊         | 1/12 [00:06<01:08,  6.23s/it]>>>>>>>> Time taken to ingest the metadata from this file: 0.0588071346282959 seconds.

--------- ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/collection_taxonomy.tsv ---------
table_name:collection_taxonomy
4DN: collection_taxonomy: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/collection_taxonomy.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.02460503578186035 seconds.

--------- ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/substance.tsv ---------
table_name:substance
4DN: substance: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/4DN/datapackage/240306_c2m2_4dn_sub/data/substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.025023698806762695 seconds.


================================== DCC short label: ERCC =============================================
--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/dcc.tsv ---------
table_name:dcc
ERCC: dcc: Read from file: df: #rows = 1, #cols: 9

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/dcc.tsv: 2
df: #rows = 1, #cols: 9
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.dcc;
qt_df:                       pk
0  cfde_registry_dcc:4dn
---- Executed query, got data.frame: qt_df: #rows = 1, #cols: 1

df_pk (at most first 10 elements): ['cfde_registry_dcc:exrna']
qt_pk (at most first 10 elements): ['cfde_registry_dcc:4dn']
---- Removed rows from df with matching pk
*** Entering dcc to database ***
df: #rows = 1, #cols: 9

A slice of df:
                        id  ... contact_email
0  cfde_registry_dcc:exrna  ...  dc12@bcm.edu

[1 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.06145286560058594 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/id_namespace.tsv ---------
table_name:id_namespace
ERCC: id_namespace: Read from file: df: #rows = 1, #cols: 4

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/id_namespace.tsv: 2
df: #rows = 1, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.id_namespace;
qt_df:                             pk
0  https://data.4dnucleome.org
---- Executed query, got data.frame: qt_df: #rows = 1, #cols: 1

df_pk (at most first 10 elements): ['ERCC-exRNA']
qt_pk (at most first 10 elements): ['https://data.4dnucleome.org']
---- Removed rows from df with matching pk
*** Entering id_namespace to database ***
df: #rows = 1, #cols: 4

A slice of df:
           id  ...                                        description
0  ERCC-exRNA  ...  The exRNA Atlas is the data repository of the ...

[1 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.06116771697998047 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/disease.tsv ---------
table_name:disease
ERCC: disease: Read from file: df: #rows = 23, #cols: 4

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/disease.tsv: 24
df: #rows = 23, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.disease;
qt_df: Empty DataFrame
Columns: [pk]
Index: []
---- Executed query, got data.frame: qt_df: #rows = 0, #cols: 1

df_pk (at most first 10 elements): ['DOID:0080832', 'DOID:10286', 'DOID:10534', 'DOID:10652', 'DOID:10941', 'DOID:1184', 'DOID:12217', 'DOID:1287', 'DOID:14330', 'DOID:1520']
qt_pk (at most first 10 elements): []
---- Removed rows from df with matching pk
*** Entering disease to database ***
df: #rows = 23, #cols: 4

A slice of df:
             id  ...                                           synonyms
0  DOID:0080832  ...                                                 []
1    DOID:10286  ...     ["cancer of prostate","carcinoma of prostate"]
2    DOID:10534  ...  ["DOID:10539","DOID:10542","DOID:10543","DOID:...
3    DOID:10652  ...        ["Alzheimer disease","Alzheimers dementia"]
4    DOID:10941  ...                                 ["brain aneurysm"]
5     DOID:1184  ...                                                 []
6    DOID:12217  ...  ["Dementia with Lewy bodies","Diffuse Lewy bod...
7     DOID:1287  ...  ["DOID:73","disease of subdivision of hemolymp...
8    DOID:14330  ...          ["paralysis agitans","Parkinson disease"]
9     DOID:1520  ...         ["carcinoma of colon","Colonic carcinoma"]

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0610196590423584 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/data_type.tsv ---------
table_name:data_type
ERCC: data_type: Read from file: df: #rows = 3, #cols: 4

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/data_type.tsv: 4
df: #rows = 3, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.data_type;
qt_df:           pk
0  data:1383
1  data:2082
2  data:3002
3  data:2887
4  data:2968
---- Executed query, got data.frame: qt_df: #rows = 5, #cols: 1

df_pk (at most first 10 elements): ['data:2048', 'data:2082', 'data:3495']
qt_pk (at most first 10 elements): ['data:1383', 'data:2082', 'data:3002', 'data:2887', 'data:2968']
---- Removed rows from df with matching pk
*** Entering data_type to database ***
df: #rows = 2, #cols: 4

A slice of df:
          id  ...               synonyms
0  data:2048  ...  ["Document","Record"]
2  data:3495  ...      ["RNA sequences"]

[2 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.06046557426452637 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection_disease.tsv ---------
table_name:collection_disease
ERCC: collection_disease: Read from file: df: #rows = 40, #cols: 3

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection_disease.tsv: 41
df: #rows = 40, #cols: 3
pKeys: ['collection_id_namespace', 'collection_local_id', 'disease']
Going to write the count query
Wrote the count query
*** Entering collection_disease to database ***
df: #rows = 40, #cols: 3

A slice of df:
  collection_id_namespace  collection_local_id     disease
0              ERCC-exRNA  EXR-MANSE1oCqMmF-AN   DOID:2841
1              ERCC-exRNA  EXR-KVICK1oIp40e-AN   DOID:9074
2              ERCC-exRNA  EXR-DGALA1TA1HoZ-AN   DOID:9744
3              ERCC-exRNA  EXR-JFREE1eZDUKB-AN   DOID:1287
4              ERCC-exRNA  EXR-DGALA1ykypVf-AN   DOID:9744
5              ERCC-exRNA  EXR-TPATE10baswA-AN    DOID:409
6              ERCC-exRNA  EXR-KJENS10lPClY-AN   DOID:6713
7              ERCC-exRNA  EXR-KJENS1sPlvS2-AN  DOID:10652
8              ERCC-exRNA  EXR-KJENS1sPlvS2-AN  DOID:14330
9              ERCC-exRNA  EXR-DGALA1P4v4GC-AN   DOID:9744
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.05535101890563965 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/file_in_collection.tsv ---------
table_name:file_in_collection
ERCC: file_in_collection: Read from file: df: #rows = 178133, #cols: 4

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/file_in_collection.tsv: 178134
df: #rows = 178133, #cols: 4
pKeys: ['file_id_namespace', 'file_local_id', 'collection_id_namespace', 'collection_local_id']
Going to write the count query
Wrote the count query
*** Entering file_in_collection to database ***
df: #rows = 178133, #cols: 4

A slice of df:
  file_id_namespace  ...  collection_local_id
0        ERCC-exRNA  ...  EXR-DERLE1Dj6liR-AN
1        ERCC-exRNA  ...  EXR-DERLE1Dj6liR-AN
2        ERCC-exRNA  ...  EXR-DERLE1Dj6liR-AN
3        ERCC-exRNA  ...  EXR-DERLE1Dj6liR-AN
4        ERCC-exRNA  ...  EXR-DERLE1Dj6liR-AN
5        ERCC-exRNA  ...  EXR-DERLE1Dj6liR-AN
6        ERCC-exRNA  ...  EXR-DERLE1Dj6liR-AN
7        ERCC-exRNA  ...  EXR-DERLE1Dj6liR-AN
8        ERCC-exRNA  ...  EXR-DERLE1Dj6liR-AN
9        ERCC-exRNA  ...  EXR-DERLE1Dj6liR-AN

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 3.615650177001953 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/subject_role_taxonomy.tsv ---------
table_name:subject_role_taxonomy
ERCC: subject_role_taxonomy: Read from file: df: #rows = 7209, #cols: 4

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/subject_role_taxonomy.tsv: 7210
df: #rows = 7209, #cols: 4
pKeys: ['subject_id_namespace', 'subject_local_id', 'role_id', 'taxonomy_id']
Going to write the count query
Wrote the count query
*** Entering subject_role_taxonomy to database ***
df: #rows = 7209, #cols: 4

A slice of df:
  subject_id_namespace  ...    taxonomy_id
0           ERCC-exRNA  ...  NCBI:txid9606
1           ERCC-exRNA  ...  NCBI:txid9606
2           ERCC-exRNA  ...  NCBI:txid9606
3           ERCC-exRNA  ...  NCBI:txid9606
4           ERCC-exRNA  ...  NCBI:txid9606
5           ERCC-exRNA  ...  NCBI:txid9606
6           ERCC-exRNA  ...  NCBI:txid9606
7           ERCC-exRNA  ...  NCBI:txid9606
8           ERCC-exRNA  ...  NCBI:txid9606
9           ERCC-exRNA  ...  NCBI:txid9606

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.17789006233215332 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/biosample_in_collection.tsv ---------
table_name:biosample_in_collection
ERCC: biosample_in_collection: Read from file: df: #rows = 10362, #cols: 4

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/biosample_in_collection.tsv: 10363
df: #rows = 10362, #cols: 4
pKeys: ['biosample_id_namespace', 'biosample_local_id', 'collection_id_namespace', 'collection_local_id']
Going to write the count query
Wrote the count query
*** Entering biosample_in_collection to database ***
df: #rows = 10362, #cols: 4

A slice of df:
  biosample_id_namespace  ...  collection_local_id
0             ERCC-exRNA  ...  EXR-DERLE1Dj6liR-AN
1             ERCC-exRNA  ...  EXR-DERLE1Dj6liR-AN
2             ERCC-exRNA  ...  EXR-DERLE1Dj6liR-AN
3             ERCC-exRNA  ...  EXR-IGHIR1V7Sc5u-AN
4             ERCC-exRNA  ...  EXR-IGHIR1V7Sc5u-AN
5             ERCC-exRNA  ...  EXR-IGHIR1V7Sc5u-AN
6             ERCC-exRNA  ...  EXR-IGHIR1V7Sc5u-AN
7             ERCC-exRNA  ...  EXR-IGHIR1V7Sc5u-AN
8             ERCC-exRNA  ...  EXR-IGHIR1V7Sc5u-AN
9             ERCC-exRNA  ...  EXR-IGHIR1V7Sc5u-AN

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.2153489589691162 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/subject_phenotype.tsv ---------
table_name:subject_phenotype
ERCC: subject_phenotype: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/subject_phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.0255281925201416 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/phenotype_disease.tsv ---------
table_name:phenotype_disease
ERCC: phenotype_disease: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/phenotype_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.02440500259399414 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection_compound.tsv ---------
table_name:collection_compound
ERCC: collection_compound: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection_compound.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.025140762329101562 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/protein_gene.tsv ---------
table_name:protein_gene
ERCC: protein_gene: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/protein_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.02487945556640625 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/phenotype_gene.tsv ---------
table_name:phenotype_gene
ERCC: phenotype_gene: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/phenotype_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.024876832962036133 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/phenotype.tsv ---------
table_name:phenotype
ERCC: phenotype: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.0260465145111084 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/subject_disease.tsv ---------
table_name:subject_disease
ERCC: subject_disease: Read from file: df: #rows = 1576, #cols: 4

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/subject_disease.tsv: 1577
df: #rows = 1576, #cols: 4
pKeys: ['subject_id_namespace', 'subject_local_id', 'association_type', 'disease']
Going to write the count query
Wrote the count query
*** Entering subject_disease to database ***
df: #rows = 1576, #cols: 4

A slice of df:
  subject_id_namespace  ...    disease
0           ERCC-exRNA  ...  DOID:2841
1           ERCC-exRNA  ...  DOID:2841
2           ERCC-exRNA  ...  DOID:2841
3           ERCC-exRNA  ...  DOID:2841
4           ERCC-exRNA  ...  DOID:2841
5           ERCC-exRNA  ...  DOID:2841
6           ERCC-exRNA  ...  DOID:2841
7           ERCC-exRNA  ...  DOID:9074
8           ERCC-exRNA  ...  DOID:9074
9           ERCC-exRNA  ...  DOID:9074

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0820474624633789 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection_phenotype.tsv ---------
table_name:collection_phenotype
ERCC: collection_phenotype: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection_phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.025069713592529297 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/protein.tsv ---------
table_name:protein
ERCC: protein: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/protein.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.025010347366333008 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/ncbi_taxonomy.tsv ---------
table_name:ncbi_taxonomy
ERCC: ncbi_taxonomy: Read from file: df: #rows = 2, #cols: 5

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/ncbi_taxonomy.tsv: 3
df: #rows = 2, #cols: 5
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.ncbi_taxonomy;
qt_df:                pk
0  NCBI:txid60711
1  NCBI:txid10090
2  NCBI:txid10036
3   NCBI:txid7955
4   NCBI:txid9031
5   NCBI:txid7227
6   NCBI:txid9606
---- Executed query, got data.frame: qt_df: #rows = 7, #cols: 1

df_pk (at most first 10 elements): ['NCBI:txid10090', 'NCBI:txid9606']
qt_pk (at most first 10 elements): ['NCBI:txid60711', 'NCBI:txid10090', 'NCBI:txid10036', 'NCBI:txid7955', 'NCBI:txid9031', 'NCBI:txid7227', 'NCBI:txid9606']
---- Removed rows from df with matching pk
*** Entering ncbi_taxonomy to database ***
df: #rows = 0, #cols: 5

A slice of df:
Empty DataFrame
Columns: [id, clade, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.05487322807312012 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection_protein.tsv ---------
table_name:collection_protein
ERCC: collection_protein: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection_protein.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.024491310119628906 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/analysis_type.tsv ---------
table_name:analysis_type
ERCC: analysis_type: Read from file: df: #rows = 1, #cols: 4

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/analysis_type.tsv: 2
df: #rows = 1, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.analysis_type;
qt_df: Empty DataFrame
Columns: [pk]
Index: []
---- Executed query, got data.frame: qt_df: #rows = 0, #cols: 1

df_pk (at most first 10 elements): ['OBI:0001872']
qt_pk (at most first 10 elements): []
---- Removed rows from df with matching pk
*** Entering analysis_type to database ***
df: #rows = 1, #cols: 4

A slice of df:
            id  ... synonyms
0  OBI:0001872  ...       []

[1 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.06147599220275879 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/file_describes_biosample.tsv ---------
table_name:file_describes_biosample
ERCC: file_describes_biosample: Read from file: df: #rows = 178133, #cols: 4

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/file_describes_biosample.tsv: 178134
df: #rows = 178133, #cols: 4
pKeys: ['file_id_namespace', 'file_local_id', 'biosample_id_namespace', 'biosample_local_id']
Going to write the count query
Wrote the count query
*** Entering file_describes_biosample to database ***
df: #rows = 178133, #cols: 4

A slice of df:
  file_id_namespace  ...           biosample_local_id
0        ERCC-exRNA  ...  EXR-DERLE1LLAURPLATCOMP1-BS
1        ERCC-exRNA  ...  EXR-DERLE1LLAURPLATCOMP3-BS
2        ERCC-exRNA  ...  EXR-DERLE1LLAURPLATCOMP2-BS
3        ERCC-exRNA  ...  EXR-DERLE1LLAURPLATCOMP3-BS
4        ERCC-exRNA  ...  EXR-DERLE1LLAURPLATCOMP3-BS
5        ERCC-exRNA  ...  EXR-DERLE1LLAURPLATCOMP3-BS
6        ERCC-exRNA  ...  EXR-DERLE1LLAURPLATCOMP3-BS
7        ERCC-exRNA  ...  EXR-DERLE1LLAURPLATCOMP3-BS
8        ERCC-exRNA  ...  EXR-DERLE1LLAURPLATCOMP3-BS
9        ERCC-exRNA  ...  EXR-DERLE1LLAURPLATCOMP3-BS

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 3.594332695007324 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/file.tsv ---------
table_name:file
ERCC: file: Read from file: df: #rows = 178133, #cols: 20

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/file.tsv: 178134
df: #rows = 178133, #cols: 20
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering file to database ***
df: #rows = 178133, #cols: 20

A slice of df:
  id_namespace  ... persistent_id
0   ERCC-exRNA  ...           NaN
1   ERCC-exRNA  ...           NaN
2   ERCC-exRNA  ...           NaN
3   ERCC-exRNA  ...           NaN
4   ERCC-exRNA  ...           NaN
5   ERCC-exRNA  ...           NaN
6   ERCC-exRNA  ...           NaN
7   ERCC-exRNA  ...           NaN
8   ERCC-exRNA  ...           NaN
9   ERCC-exRNA  ...           NaN

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 8.922331809997559 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection_gene.tsv ---------
table_name:collection_gene
ERCC: collection_gene: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.05407261848449707 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/biosample_from_subject.tsv ---------
table_name:biosample_from_subject
ERCC: biosample_from_subject: Read from file: df: #rows = 10362, #cols: 5

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/biosample_from_subject.tsv: 10363
df: #rows = 10362, #cols: 5
pKeys: ['biosample_id_namespace', 'biosample_local_id', 'subject_id_namespace', 'subject_local_id']
Going to write the count query
Wrote the count query
*** Entering biosample_from_subject to database ***
df: #rows = 10362, #cols: 5

A slice of df:
  biosample_id_namespace  ... age_at_sampling
0             ERCC-exRNA  ...             0.0
1             ERCC-exRNA  ...            36.0
2             ERCC-exRNA  ...            36.0
3             ERCC-exRNA  ...            22.0
4             ERCC-exRNA  ...            45.0
5             ERCC-exRNA  ...            22.0
6             ERCC-exRNA  ...            25.0
7             ERCC-exRNA  ...            25.0
8             ERCC-exRNA  ...            40.0
9             ERCC-exRNA  ...            40.0

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.2644956111907959 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/file_describes_collection.tsv ---------
table_name:file_describes_collection
ERCC: file_describes_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/file_describes_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.033129215240478516 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/subject_race.tsv ---------
table_name:subject_race
ERCC: subject_race: Read from file: df: #rows = 1257, #cols: 3

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/subject_race.tsv: 1258
df: #rows = 1257, #cols: 3
pKeys: ['subject_id_namespace', 'subject_local_id', 'race']
Going to write the count query
Wrote the count query
*** Entering subject_race to database ***
df: #rows = 1257, #cols: 3

A slice of df:
  subject_id_namespace         subject_local_id                 race
0           ERCC-exRNA    EXR-IGHIR1DONOR4EE-DO  cfde_subject_race:3
1           ERCC-exRNA    EXR-IGHIR1DONOR3IG-DO  cfde_subject_race:3
2           ERCC-exRNA    EXR-IGHIR1DONOR6CO-DO  cfde_subject_race:3
3           ERCC-exRNA    EXR-IGHIR1DONOR5EC-DO  cfde_subject_race:5
4           ERCC-exRNA    EXR-IGHIR1DONOR2SL-DO  cfde_subject_race:5
5           ERCC-exRNA    EXR-IGHIR1DONOR1MR-DO  cfde_subject_race:3
6           ERCC-exRNA  EXR-IGHIR1DONOR13FdM-DO  cfde_subject_race:3
7           ERCC-exRNA   EXR-IGHIR1DONOR15PB-DO  cfde_subject_race:5
8           ERCC-exRNA   EXR-IGHIR1DONOR10BM-DO  cfde_subject_race:3
9           ERCC-exRNA   EXR-TTUSC1U19ZW1P14-DO  cfde_subject_race:4
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.08283853530883789 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection_in_collection.tsv ---------
table_name:collection_in_collection
ERCC: collection_in_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection_in_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03130149841308594 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection_defined_by_project.tsv ---------
table_name:collection_defined_by_project
ERCC: collection_defined_by_project: Read from file: df: #rows = 77, #cols: 4

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection_defined_by_project.tsv: 78
df: #rows = 77, #cols: 4
pKeys: ['collection_id_namespace', 'collection_local_id', 'project_id_namespace', 'project_local_id']
Going to write the count query
Wrote the count query
*** Entering collection_defined_by_project to database ***
df: #rows = 77, #cols: 4

A slice of df:
  collection_id_namespace  ...               project_local_id
0              ERCC-exRNA  ...     EXR-DERLE1LLAURPLATCOMP-ST
1              ERCC-exRNA  ...   EXR-IGHIR1Anticoagulants1-ST
2              ERCC-exRNA  ...          EXR-DGALA120170825-ST
3              ERCC-exRNA  ...  EXR-IGHIR1CircadianRhythm2-ST
4              ERCC-exRNA  ...           EXR-TTUSC1U19xZW1-ST
5              ERCC-exRNA  ...            EXR-KJENS1VolT01-ST
6              ERCC-exRNA  ...  EXR-IGHIR1HbContamination1-ST
7              ERCC-exRNA  ...          EXR-MANSE1ALLERAIR-ST
8              ERCC-exRNA  ...          EXR-KVICK1KCVSLE00-ST
9              ERCC-exRNA  ...      EXR-MTEWA1FeedingStudy-ST

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0634303092956543 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection_substance.tsv ---------
table_name:collection_substance
ERCC: collection_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.029979467391967773 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/biosample_substance.tsv ---------
table_name:biosample_substance
ERCC: biosample_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/biosample_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.030443429946899414 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/project.tsv ---------
table_name:project
ERCC: project: Read from file: df: #rows = 60, #cols: 7

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/project.tsv: 61
df: #rows = 60, #cols: 7
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering project to database ***
df: #rows = 60, #cols: 7

A slice of df:
  id_namespace  ...            abbreviation
0   ERCC-exRNA  ...                   exRNA
1   ERCC-exRNA  ...     DERLE1LLAURPLATCOMP
2   ERCC-exRNA  ...   IGHIR1Anticoagulants1
3   ERCC-exRNA  ...          DGALA120170825
4   ERCC-exRNA  ...  IGHIR1CircadianRhythm2
5   ERCC-exRNA  ...           TTUSC1U19xZW1
6   ERCC-exRNA  ...            KJENS1VolT01
7   ERCC-exRNA  ...  IGHIR1HbContamination1
8   ERCC-exRNA  ...          MANSE1ALLERAIR
9   ERCC-exRNA  ...          KVICK1KCVSLE00

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.07003951072692871 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/anatomy.tsv ---------
table_name:anatomy
ERCC: anatomy: Read from file: df: #rows = 26, #cols: 4

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/anatomy.tsv: 27
df: #rows = 26, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.anatomy;
qt_df:                 pk
0   UBERON:0002037
1       CL:0002586
2       CL:0000082
3   UBERON:0007777
4   UBERON:0002079
5   UBERON:0002240
6   UBERON:0001384
7       CL:2000042
8       CL:0000081
9   UBERON:0000956
10  UBERON:0002481
11  UBERON:0000948
12      CL:0002620
13      CL:0000034
14  UBERON:0001049
15      CL:0000604
16  UBERON:0008930
17  UBERON:0002113
18  UBERON:0002048
19  UBERON:0000383
20  UBERON:0003244
21  UBERON:0001911
22  UBERON:0002106
23  UBERON:0002691
24  UBERON:0001890
25      CL:0000216
26  UBERON:0019249
27      CL:2000074
28  UBERON:0000087
29  UBERON:0002097
30  UBERON:0001891
31  UBERON:0001264
32      CL:0000501
33  UBERON:0000955
34  UBERON:0003903
35  UBERON:0003881
36  UBERON:0003902
37  UBERON:0019252
38  UBERON:0002101
39      CL:0000945
40      CL:0000893
41  UBERON:0013694
42  UBERON:0000922
43  UBERON:0001155
44  UBERON:0000002
45  UBERON:0001997
46  UBERON:0002367
47      CL:0002553
48  UBERON:0008933
49  UBERON:0004347
50  UBERON:0012314
51  UBERON:0002370
52  UBERON:0002107
53  UBERON:0000995
54  UBERON:0002028
55  UBERON:0002084
---- Executed query, got data.frame: qt_df: #rows = 56, #cols: 1

df_pk (at most first 10 elements): ['UBERON:0000167', 'UBERON:0000178', 'UBERON:0000363', 'UBERON:0000467', 'UBERON:0000955', 'UBERON:0000995', 'UBERON:0000998', 'UBERON:0001008', 'UBERON:0001017', 'UBERON:0001062']
qt_pk (at most first 10 elements): ['UBERON:0002037', 'CL:0002586', 'CL:0000082', 'UBERON:0007777', 'UBERON:0002079', 'UBERON:0002240', 'UBERON:0001384', 'CL:2000042', 'CL:0000081', 'UBERON:0000956']
---- Removed rows from df with matching pk
*** Entering anatomy to database ***
df: #rows = 22, #cols: 4

A slice of df:
                id  ...                                           synonyms
0   UBERON:0000167  ...                ["buccal cavity","cavity of mouth"]
1   UBERON:0000178  ...            ["portion of blood","vertebrate blood"]
2   UBERON:0000363  ...  ["lymphoreticular system","mononuclear phagocy...
3   UBERON:0000467  ...  ["body system","connected anatomical system","...
6   UBERON:0000998  ...                                  ["seminal gland"]
7   UBERON:0001008  ...  ["excretory system","systema urinaria","system...
8   UBERON:0001017  ...                ["CNS","systema nervosum centrale"]
9   UBERON:0001062  ...                                                 []
11  UBERON:0001255  ...                      ["bladder","vesica urinaria"]
12  UBERON:0001305  ...  ["follicle of ovary","follicle of ovary viewed...

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.07123517990112305 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/sample_prep_method.tsv ---------
table_name:sample_prep_method
ERCC: sample_prep_method: Read from file: df: #rows = 1, #cols: 4

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/sample_prep_method.tsv: 2
df: #rows = 1, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.sample_prep_method;
qt_df: Empty DataFrame
Columns: [pk]
Index: []
---- Executed query, got data.frame: qt_df: #rows = 0, #cols: 1

df_pk (at most first 10 elements): ['OBI:0001902']
qt_pk (at most first 10 elements): []
---- Removed rows from df with matching pk
*** Entering sample_prep_method to database ***
df: #rows = 1, #cols: 4

A slice of df:
            id  ...                             synonyms
0  OBI:0001902  ...  ["Nucleic Acid Preparation Method"]

[1 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.06892156600952148 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/assay_type.tsv ---------
table_name:assay_type
ERCC: assay_type: Read from file: df: #rows = 2, #cols: 4

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/assay_type.tsv: 3
df: #rows = 2, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.assay_type;
qt_df:               pk
0    OBI:0003306
1    OBI:0003104
2    OBI:0002984
3    OBI:0000185
4    OBI:0003300
5    OBI:0003312
6    OBI:0001631
7    OBI:0003301
8    OBI:0003033
9    OBI:0003094
10   OBI:0003311
11   OBI:0002631
12   OBI:0003297
13   OBI:0001920
14   OBI:0000716
15   OBI:0001177
16   OBI:0003314
17   OBI:0001848
18   OBI:0003313
19   OBI:0003299
20   OBI:0003089
21   OBI:0003105
22   OBI:0000626
23   OBI:0003305
24   OBI:0003304
25   OBI:0003303
26   OBI:0003034
27   OBI:0600047
28  CHMO:0000087
29   OBI:0003302
30   OBI:0001271
---- Executed query, got data.frame: qt_df: #rows = 31, #cols: 1

df_pk (at most first 10 elements): ['OBI:0000893', 'OBI:0002112']
qt_pk (at most first 10 elements): ['OBI:0003306', 'OBI:0003104', 'OBI:0002984', 'OBI:0000185', 'OBI:0003300', 'OBI:0003312', 'OBI:0001631', 'OBI:0003301', 'OBI:0003033', 'OBI:0003094']
---- Removed rows from df with matching pk
*** Entering assay_type to database ***
df: #rows = 2, #cols: 4

A slice of df:
            id  ...                                           synonyms
0  OBI:0000893  ...  ["kinetic polymerase chain reaction","Q-PCR","...
1  OBI:0002112  ...                  ["short RNA-seq","small RNA-seq"]

[2 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.07103157043457031 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/biosample_disease.tsv ---------
table_name:biosample_disease
ERCC: biosample_disease: Read from file: df: #rows = 2401, #cols: 4

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/biosample_disease.tsv: 2402
df: #rows = 2401, #cols: 4
pKeys: ['biosample_id_namespace', 'biosample_local_id', 'association_type', 'disease']
Going to write the count query
Wrote the count query
*** Entering biosample_disease to database ***
df: #rows = 2401, #cols: 4

A slice of df:
  biosample_id_namespace  ...    disease
0             ERCC-exRNA  ...  DOID:2841
1             ERCC-exRNA  ...  DOID:2841
2             ERCC-exRNA  ...  DOID:2841
3             ERCC-exRNA  ...  DOID:2841
4             ERCC-exRNA  ...  DOID:2841
5             ERCC-exRNA  ...  DOID:2841
6             ERCC-exRNA  ...  DOID:2841
7             ERCC-exRNA  ...  DOID:2841
8             ERCC-exRNA  ...  DOID:2841
9             ERCC-exRNA  ...  DOID:2841

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.102630615234375 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection_anatomy.tsv ---------
table_name:collection_anatomy
ERCC: collection_anatomy: Read from file: df: #rows = 90, #cols: 3

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection_anatomy.tsv: 91
df: #rows = 90, #cols: 3
pKeys: ['collection_id_namespace', 'collection_local_id', 'anatomy']
Going to write the count query
Wrote the count query
*** Entering collection_anatomy to database ***
df: #rows = 90, #cols: 3

A slice of df:
  collection_id_namespace  collection_local_id         anatomy
0              ERCC-exRNA  EXR-DERLE1Dj6liR-AN  UBERON:0001969
1              ERCC-exRNA  EXR-IGHIR1V7Sc5u-AN  UBERON:0004535
2              ERCC-exRNA  EXR-DGALA1ECRXVs-AN  UBERON:0001017
3              ERCC-exRNA  EXR-IGHIR1tbB6UC-AN  UBERON:0004535
4              ERCC-exRNA  EXR-TTUSC1gCrGDH-AN  UBERON:0004535
5              ERCC-exRNA  EXR-KJENS17CZMbP-AN  UBERON:0002465
6              ERCC-exRNA  EXR-IGHIR1P6qCmn-AN  UBERON:0004535
7              ERCC-exRNA  EXR-MANSE1oCqMmF-AN  UBERON:0002048
8              ERCC-exRNA  EXR-MANSE1oCqMmF-AN  UBERON:0004535
9              ERCC-exRNA  EXR-KVICK1oIp40e-AN  UBERON:0001062
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.06720328330993652 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/gene.tsv ---------
table_name:gene
ERCC: gene: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.02997112274169922 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/biosample.tsv ---------
table_name:biosample
ERCC: biosample: Read from file: df: #rows = 10362, #cols: 8

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/biosample.tsv: 10363
df: #rows = 10362, #cols: 8
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering biosample to database ***
df: #rows = 10362, #cols: 8

A slice of df:
  id_namespace  ... persistent_id
0   ERCC-exRNA  ...           NaN
1   ERCC-exRNA  ...           NaN
2   ERCC-exRNA  ...           NaN
3   ERCC-exRNA  ...           NaN
4   ERCC-exRNA  ...           NaN
5   ERCC-exRNA  ...           NaN
6   ERCC-exRNA  ...           NaN
7   ERCC-exRNA  ...           NaN
8   ERCC-exRNA  ...           NaN
9   ERCC-exRNA  ...           NaN

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.30808043479919434 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/file_describes_subject.tsv ---------
table_name:file_describes_subject
ERCC: file_describes_subject: Read from file: df: #rows = 178133, #cols: 4

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/file_describes_subject.tsv: 178134
df: #rows = 178133, #cols: 4
pKeys: ['file_id_namespace', 'file_local_id', 'subject_id_namespace', 'subject_local_id']
Going to write the count query
Wrote the count query
*** Entering file_describes_subject to database ***
df: #rows = 178133, #cols: 4

A slice of df:
  file_id_namespace  ...             subject_local_id
0        ERCC-exRNA  ...  EXR-DERLE1LLAURPLATCOMP1-DO
1        ERCC-exRNA  ...  EXR-DERLE1LLAURPLATCOMP3-DO
2        ERCC-exRNA  ...  EXR-DERLE1LLAURPLATCOMP2-DO
3        ERCC-exRNA  ...  EXR-DERLE1LLAURPLATCOMP3-DO
4        ERCC-exRNA  ...  EXR-DERLE1LLAURPLATCOMP3-DO
5        ERCC-exRNA  ...  EXR-DERLE1LLAURPLATCOMP3-DO
6        ERCC-exRNA  ...  EXR-DERLE1LLAURPLATCOMP3-DO
7        ERCC-exRNA  ...  EXR-DERLE1LLAURPLATCOMP3-DO
8        ERCC-exRNA  ...  EXR-DERLE1LLAURPLATCOMP3-DO
9        ERCC-exRNA  ...  EXR-DERLE1LLAURPLATCOMP3-DO

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 3.585702657699585 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/subject.tsv ---------
table_name:subject
ERCC: subject: Read from file: df: #rows = 7209, #cols: 10

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/subject.tsv: 7210
df: #rows = 7209, #cols: 10
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering subject to database ***
df: #rows = 7209, #cols: 10

A slice of df:
  id_namespace                     local_id  ... project_local_id persistent_id
0   ERCC-exRNA  EXR-DERLE1LLAURPLATCOMP3-DO  ...      exRNA_Atlas           NaN
1   ERCC-exRNA  EXR-DERLE1LLAURPLATCOMP1-DO  ...      exRNA_Atlas           NaN
2   ERCC-exRNA  EXR-DERLE1LLAURPLATCOMP2-DO  ...      exRNA_Atlas           NaN
3   ERCC-exRNA        EXR-IGHIR1DONOR4EE-DO  ...      exRNA_Atlas           NaN
4   ERCC-exRNA        EXR-IGHIR1DONOR3IG-DO  ...      exRNA_Atlas           NaN
5   ERCC-exRNA        EXR-IGHIR1DONOR6CO-DO  ...      exRNA_Atlas           NaN
6   ERCC-exRNA        EXR-IGHIR1DONOR5EC-DO  ...      exRNA_Atlas           NaN
7   ERCC-exRNA        EXR-IGHIR1DONOR2SL-DO  ...      exRNA_Atlas           NaN
8   ERCC-exRNA        EXR-IGHIR1DONOR1MR-DO  ...      exRNA_Atlas           NaN
9   ERCC-exRNA           EXR-DGALA1AC098-DO  ...      exRNA_Atlas           NaN

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.2621171474456787 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/file_format.tsv ---------
table_name:file_format
ERCC: file_format: Read from file: df: #rows = 3, #cols: 4

Processing C2M2 Files...:  17%|█▋        | 2/12 [00:30<02:47, 16.70s/it]#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/file_format.tsv: 4
df: #rows = 3, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.file_format;
qt_df:              pk
0   format:3004
1   format:3987
2   format:2572
3   format:3591
4   format:3590
5   format:3006
6   format:1930
7   format:3727
8   format:3752
9   format:3583
10  format:3981
11  format:2330
12  format:2331
13  format:3003
14  format:3475
---- Executed query, got data.frame: qt_df: #rows = 15, #cols: 1

df_pk (at most first 10 elements): ['format:1930', 'format:2333', 'format:3475']
qt_pk (at most first 10 elements): ['format:3004', 'format:3987', 'format:2572', 'format:3591', 'format:3590', 'format:3006', 'format:1930', 'format:3727', 'format:3752', 'format:3583']
---- Removed rows from df with matching pk
*** Entering file_format to database ***
df: #rows = 1, #cols: 4

A slice of df:
            id           name     description synonyms
1  format:2333  Binary format  Binary format.       []
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.06620550155639648 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/biosample_gene.tsv ---------
table_name:biosample_gene
ERCC: biosample_gene: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/biosample_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.030281782150268555 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/subject_substance.tsv ---------
table_name:subject_substance
ERCC: subject_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/subject_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03048253059387207 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection.tsv ---------
table_name:collection
ERCC: collection: Read from file: df: #rows = 77, #cols: 8

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection.tsv: 78
df: #rows = 77, #cols: 8
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering collection to database ***
df: #rows = 77, #cols: 8

A slice of df:
  id_namespace             local_id  persistent_id creation_time  abbreviation
0   ERCC-exRNA  EXR-DERLE1Dj6liR-AN            NaN        9/4/20  DERLE1Dj6liR
1   ERCC-exRNA  EXR-IGHIR1V7Sc5u-AN            NaN      11/27/17  IGHIR1V7Sc5u
2   ERCC-exRNA  EXR-DGALA1ECRXVs-AN            NaN       4/16/18  DGALA1ECRXVs
3   ERCC-exRNA  EXR-IGHIR1tbB6UC-AN            NaN      11/27/17  IGHIR1tbB6UC
4   ERCC-exRNA  EXR-TTUSC1gCrGDH-AN            NaN       3/26/18  TTUSC1gCrGDH
5   ERCC-exRNA  EXR-KJENS17CZMbP-AN            NaN       3/11/17  KJENS17CZMbP
6   ERCC-exRNA  EXR-IGHIR1P6qCmn-AN            NaN      11/28/17  IGHIR1P6qCmn
7   ERCC-exRNA  EXR-MANSE1oCqMmF-AN            NaN      10/20/17  MANSE1oCqMmF
8   ERCC-exRNA  EXR-KVICK1oIp40e-AN            NaN      10/17/14  KVICK1oIp40e
9   ERCC-exRNA  EXR-MTEWA1vczugX-AN            NaN        3/7/19  MTEWA1vczugX
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.06467723846435547 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/compound.tsv ---------
table_name:compound
ERCC: compound: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/compound.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03089118003845215 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/subject_in_collection.tsv ---------
table_name:subject_in_collection
ERCC: subject_in_collection: Read from file: df: #rows = 7212, #cols: 4

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/subject_in_collection.tsv: 7213
df: #rows = 7212, #cols: 4
pKeys: ['subject_id_namespace', 'subject_local_id', 'collection_id_namespace', 'collection_local_id']
Going to write the count query
Wrote the count query
*** Entering subject_in_collection to database ***
df: #rows = 7212, #cols: 4

A slice of df:
  subject_id_namespace  ...  collection_local_id
0           ERCC-exRNA  ...  EXR-DERLE1Dj6liR-AN
1           ERCC-exRNA  ...  EXR-DERLE1Dj6liR-AN
2           ERCC-exRNA  ...  EXR-DERLE1Dj6liR-AN
3           ERCC-exRNA  ...  EXR-IGHIR1V7Sc5u-AN
4           ERCC-exRNA  ...  EXR-IGHIR1V7Sc5u-AN
5           ERCC-exRNA  ...  EXR-IGHIR1V7Sc5u-AN
6           ERCC-exRNA  ...  EXR-IGHIR1V7Sc5u-AN
7           ERCC-exRNA  ...  EXR-IGHIR1V7Sc5u-AN
8           ERCC-exRNA  ...  EXR-IGHIR1V7Sc5u-AN
9           ERCC-exRNA  ...  EXR-DGALA1ECRXVs-AN

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.1723780632019043 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/project_in_project.tsv ---------
table_name:project_in_project
ERCC: project_in_project: Read from file: df: #rows = 59, #cols: 4

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/project_in_project.tsv: 60
df: #rows = 59, #cols: 4
pKeys: ['parent_project_id_namespace', 'parent_project_local_id', 'child_project_id_namespace', 'child_project_local_id']
Going to write the count query
Wrote the count query
*** Entering project_in_project to database ***
df: #rows = 59, #cols: 4

A slice of df:
  parent_project_id_namespace  ...         child_project_local_id
0                  ERCC-exRNA  ...     EXR-DERLE1LLAURPLATCOMP-ST
1                  ERCC-exRNA  ...   EXR-IGHIR1Anticoagulants1-ST
2                  ERCC-exRNA  ...          EXR-DGALA120170825-ST
3                  ERCC-exRNA  ...  EXR-IGHIR1CircadianRhythm2-ST
4                  ERCC-exRNA  ...           EXR-TTUSC1U19xZW1-ST
5                  ERCC-exRNA  ...            EXR-KJENS1VolT01-ST
6                  ERCC-exRNA  ...  EXR-IGHIR1HbContamination1-ST
7                  ERCC-exRNA  ...          EXR-MANSE1ALLERAIR-ST
8                  ERCC-exRNA  ...          EXR-KVICK1KCVSLE00-ST
9                  ERCC-exRNA  ...      EXR-MTEWA1FeedingStudy-ST

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.06455779075622559 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection_taxonomy.tsv ---------
table_name:collection_taxonomy
ERCC: collection_taxonomy: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection_taxonomy.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.030562877655029297 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/substance.tsv ---------
table_name:substance
ERCC: substance: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03111100196838379 seconds.


================================== DCC short label: GTEx =============================================
--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/dcc.tsv ---------
table_name:dcc
GTEx: dcc: Read from file: df: #rows = 1, #cols: 9

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/dcc.tsv: 2
df: #rows = 1, #cols: 9
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.dcc;
qt_df:                         pk
0  cfde_registry_dcc:exrna
1    cfde_registry_dcc:4dn
---- Executed query, got data.frame: qt_df: #rows = 2, #cols: 1

df_pk (at most first 10 elements): ['cfde_registry_dcc:gtex']
qt_pk (at most first 10 elements): ['cfde_registry_dcc:exrna', 'cfde_registry_dcc:4dn']
---- Removed rows from df with matching pk
*** Entering dcc to database ***
df: #rows = 1, #cols: 9

A slice of df:
                       id  ...               contact_email
0  cfde_registry_dcc:gtex  ...  jnedzel@broadinstitute.org

[1 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.06820940971374512 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/id_namespace.tsv ---------
table_name:id_namespace
GTEx: id_namespace: Read from file: df: #rows = 3, #cols: 4

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/id_namespace.tsv: 4
df: #rows = 3, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.id_namespace;
qt_df:                             pk
0  https://data.4dnucleome.org
1                   ERCC-exRNA
---- Executed query, got data.frame: qt_df: #rows = 2, #cols: 1

df_pk (at most first 10 elements): ['adult_gtex', 'egtex', 'gtex']
qt_pk (at most first 10 elements): ['https://data.4dnucleome.org', 'ERCC-exRNA']
---- Removed rows from df with matching pk
*** Entering id_namespace to database ***
df: #rows = 3, #cols: 4

A slice of df:
           id  ...                                    description
1  adult_gtex  ...   The ID namespace for the Adult GTEx project.
2       egtex  ...        The ID namespace for the eGTEx project.
0        gtex  ...  The ID namespace for the Global GTEx project.

[3 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.06530356407165527 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/disease.tsv ---------
table_name:disease
GTEx: disease: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.031029939651489258 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/data_type.tsv ---------
table_name:data_type
GTEx: data_type: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/data_type.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.030913114547729492 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection_disease.tsv ---------
table_name:collection_disease
GTEx: collection_disease: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03110980987548828 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/file_in_collection.tsv ---------
table_name:file_in_collection
GTEx: file_in_collection: Read from file: df: #rows = 548, #cols: 4

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/file_in_collection.tsv: 549
df: #rows = 548, #cols: 4
pKeys: ['file_id_namespace', 'file_local_id', 'collection_id_namespace', 'collection_local_id']
Going to write the count query
Wrote the count query
*** Entering file_in_collection to database ***
df: #rows = 548, #cols: 4

A slice of df:
  file_id_namespace  ...                                collection_local_id
0        adult_gtex  ...  gs://adult-gtex/additional_GTEx_datasets/v6p/c...
1        adult_gtex  ...                    gs://adult-gtex/annotations/v3/
2        adult_gtex  ...                    gs://adult-gtex/annotations/v3/
3        adult_gtex  ...                    gs://adult-gtex/annotations/v3/
4        adult_gtex  ...                    gs://adult-gtex/annotations/v3/
5        adult_gtex  ...                    gs://adult-gtex/annotations/v3/
6        adult_gtex  ...                    gs://adult-gtex/annotations/v4/
7        adult_gtex  ...                    gs://adult-gtex/annotations/v4/
8        adult_gtex  ...                    gs://adult-gtex/annotations/v4/
9        adult_gtex  ...                    gs://adult-gtex/annotations/v4/

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.08145880699157715 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/subject_role_taxonomy.tsv ---------
table_name:subject_role_taxonomy
GTEx: subject_role_taxonomy: Read from file: df: #rows = 979, #cols: 4

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/subject_role_taxonomy.tsv: 980
df: #rows = 979, #cols: 4
pKeys: ['subject_id_namespace', 'subject_local_id', 'role_id', 'taxonomy_id']
Going to write the count query
Wrote the count query
*** Entering subject_role_taxonomy to database ***
df: #rows = 979, #cols: 4

A slice of df:
  subject_id_namespace subject_local_id              role_id    taxonomy_id
0           adult_gtex       GTEX-1117F  cfde_subject_role:0  NCBI:txid9606
1           adult_gtex       GTEX-111CU  cfde_subject_role:0  NCBI:txid9606
2           adult_gtex       GTEX-111FC  cfde_subject_role:0  NCBI:txid9606
3           adult_gtex       GTEX-111VG  cfde_subject_role:0  NCBI:txid9606
4           adult_gtex       GTEX-111YS  cfde_subject_role:0  NCBI:txid9606
5           adult_gtex       GTEX-1122O  cfde_subject_role:0  NCBI:txid9606
6           adult_gtex       GTEX-1128S  cfde_subject_role:0  NCBI:txid9606
7           adult_gtex       GTEX-113IC  cfde_subject_role:0  NCBI:txid9606
8           adult_gtex       GTEX-113JC  cfde_subject_role:0  NCBI:txid9606
9           adult_gtex       GTEX-117XS  cfde_subject_role:0  NCBI:txid9606
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.07433676719665527 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/biosample_in_collection.tsv ---------
table_name:biosample_in_collection
GTEx: biosample_in_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/biosample_in_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03296542167663574 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/subject_phenotype.tsv ---------
table_name:subject_phenotype
GTEx: subject_phenotype: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/subject_phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.032263994216918945 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/phenotype_disease.tsv ---------
table_name:phenotype_disease
GTEx: phenotype_disease: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/phenotype_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.030514240264892578 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection_compound.tsv ---------
table_name:collection_compound
GTEx: collection_compound: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection_compound.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.031168460845947266 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/protein_gene.tsv ---------
table_name:protein_gene
GTEx: protein_gene: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/protein_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.031691789627075195 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/phenotype_gene.tsv ---------
table_name:phenotype_gene
GTEx: phenotype_gene: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/phenotype_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.0314478874206543 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/phenotype.tsv ---------
table_name:phenotype
GTEx: phenotype: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03241372108459473 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/subject_disease.tsv ---------
table_name:subject_disease
GTEx: subject_disease: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/subject_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03241324424743652 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection_phenotype.tsv ---------
table_name:collection_phenotype
GTEx: collection_phenotype: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection_phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03173685073852539 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/protein.tsv ---------
table_name:protein
GTEx: protein: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/protein.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03058934211730957 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/ncbi_taxonomy.tsv ---------
table_name:ncbi_taxonomy
GTEx: ncbi_taxonomy: Read from file: df: #rows = 1, #cols: 5

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/ncbi_taxonomy.tsv: 2
df: #rows = 1, #cols: 5
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.ncbi_taxonomy;
qt_df:                pk
0  NCBI:txid60711
1  NCBI:txid10090
2  NCBI:txid10036
3   NCBI:txid7955
4   NCBI:txid9031
5   NCBI:txid7227
6   NCBI:txid9606
---- Executed query, got data.frame: qt_df: #rows = 7, #cols: 1

df_pk (at most first 10 elements): ['NCBI:txid9606']
qt_pk (at most first 10 elements): ['NCBI:txid60711', 'NCBI:txid10090', 'NCBI:txid10036', 'NCBI:txid7955', 'NCBI:txid9031', 'NCBI:txid7227', 'NCBI:txid9606']
---- Removed rows from df with matching pk
*** Entering ncbi_taxonomy to database ***
df: #rows = 0, #cols: 5

A slice of df:
Empty DataFrame
Columns: [id, clade, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.06669116020202637 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection_protein.tsv ---------
table_name:collection_protein
GTEx: collection_protein: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection_protein.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03091716766357422 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/analysis_type.tsv ---------
table_name:analysis_type
GTEx: analysis_type: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/analysis_type.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.030305862426757812 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/file_describes_biosample.tsv ---------
table_name:file_describes_biosample
GTEx: file_describes_biosample: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/file_describes_biosample.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03177475929260254 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/file.tsv ---------
table_name:file
GTEx: file: Read from file: df: #rows = 548, #cols: 20

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/file.tsv: 549
df: #rows = 548, #cols: 20
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering file to database ***
df: #rows = 548, #cols: 20

A slice of df:
  id_namespace  ...                         persistent_id
0   adult_gtex  ...  2378df26-3468-5ef1-aa59-69cbd172e8df
1   adult_gtex  ...  c2e0595e-415a-5c42-a0a8-eba0d720ec6e
2   adult_gtex  ...  c888027e-9d03-5b06-af2b-9eacf480b82f
3   adult_gtex  ...  3fb110a1-c63f-590b-977c-8a8803cd5fe8
4   adult_gtex  ...  9869ed76-711a-5244-b3a1-87b3b8d9dd3d
5   adult_gtex  ...  a6af1981-4f5a-5060-a66f-da08da5e1c2e
6   adult_gtex  ...  b3d6fb0d-e969-5d9e-a3ba-7b4f5f58f342
7   adult_gtex  ...  e80e7101-3e33-520b-a3fc-9358b8b02729
8   adult_gtex  ...  10c02d38-a871-5a45-ad30-e14029d263d5
9   adult_gtex  ...  87b9ac49-878b-525e-8b68-aecb0329c110

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.1015920639038086 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection_gene.tsv ---------
table_name:collection_gene
GTEx: collection_gene: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03148794174194336 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/biosample_from_subject.tsv ---------
table_name:biosample_from_subject
GTEx: biosample_from_subject: Read from file: df: #rows = 22015, #cols: 5

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/biosample_from_subject.tsv: 22016
df: #rows = 22015, #cols: 5
pKeys: ['biosample_id_namespace', 'biosample_local_id', 'subject_id_namespace', 'subject_local_id']
Going to write the count query
Wrote the count query
*** Entering biosample_from_subject to database ***
df: #rows = 22015, #cols: 5

A slice of df:
  biosample_id_namespace  ... age_at_sampling
0             adult_gtex  ...             NaN
1             adult_gtex  ...             NaN
2             adult_gtex  ...             NaN
3             adult_gtex  ...             NaN
4             adult_gtex  ...             NaN
5             adult_gtex  ...             NaN
6             adult_gtex  ...             NaN
7             adult_gtex  ...             NaN
8             adult_gtex  ...             NaN
9             adult_gtex  ...             NaN

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.40888071060180664 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/file_describes_collection.tsv ---------
table_name:file_describes_collection
GTEx: file_describes_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/file_describes_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03265881538391113 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/subject_race.tsv ---------
table_name:subject_race
GTEx: subject_race: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/subject_race.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.031940460205078125 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection_in_collection.tsv ---------
table_name:collection_in_collection
GTEx: collection_in_collection: Read from file: df: #rows = 71, #cols: 4

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection_in_collection.tsv: 72
df: #rows = 71, #cols: 4
pKeys: ['superset_collection_id_namespace', 'superset_collection_local_id', 'subset_collection_id_namespace', 'subset_collection_local_id']
Going to write the count query
Wrote the count query
*** Entering collection_in_collection to database ***
df: #rows = 71, #cols: 4

A slice of df:
  superset_collection_id_namespace  ...                         subset_collection_local_id
0                       adult_gtex  ...      gs://adult-gtex/additional_GTEx_datasets/v6p/
1                       adult_gtex  ...  gs://adult-gtex/additional_GTEx_datasets/v6p/c...
2                       adult_gtex  ...                    gs://adult-gtex/annotations/v3/
3                       adult_gtex  ...                    gs://adult-gtex/annotations/v4/
4                       adult_gtex  ...                    gs://adult-gtex/annotations/v6/
5                       adult_gtex  ...                   gs://adult-gtex/annotations/v6p/
6                       adult_gtex  ...                    gs://adult-gtex/annotations/v7/
7                       adult_gtex  ...                    gs://adult-gtex/annotations/v8/
8                       adult_gtex  ...                       gs://adult-gtex/bulk-gex/v3/
9                       adult_gtex  ...               gs://adult-gtex/bulk-gex/v3/rna-seq/

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.07090306282043457 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection_defined_by_project.tsv ---------
table_name:collection_defined_by_project
GTEx: collection_defined_by_project: Read from file: df: #rows = 14, #cols: 4

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection_defined_by_project.tsv: 15
df: #rows = 14, #cols: 4
pKeys: ['collection_id_namespace', 'collection_local_id', 'project_id_namespace', 'project_local_id']
Going to write the count query
Wrote the count query
*** Entering collection_defined_by_project to database ***
df: #rows = 14, #cols: 4

A slice of df:
  collection_id_namespace  ... project_local_id
0              adult_gtex  ...       adult_gtex
1              adult_gtex  ...       adult_gtex
2              adult_gtex  ...       adult_gtex
3              adult_gtex  ...       adult_gtex
4              adult_gtex  ...       adult_gtex
5              adult_gtex  ...       adult_gtex
6              adult_gtex  ...       adult_gtex
7              adult_gtex  ...       adult_gtex
8              adult_gtex  ...       adult_gtex
9                   egtex  ...            egtex

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.06868338584899902 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection_substance.tsv ---------
table_name:collection_substance
GTEx: collection_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.030190706253051758 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/biosample_substance.tsv ---------
table_name:biosample_substance
GTEx: biosample_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/biosample_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03145599365234375 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/project.tsv ---------
table_name:project
GTEx: project: Read from file: df: #rows = 3, #cols: 7

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/project.tsv: 4
df: #rows = 3, #cols: 7
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering project to database ***
df: #rows = 3, #cols: 7

A slice of df:
  id_namespace    local_id  persistent_id  creation_time abbreviation
0         gtex        gtex            NaN            NaN         gtex
1   adult_gtex  adult_gtex            NaN            NaN          NaN
2        egtex       egtex            NaN            NaN        egtex
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.07032895088195801 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/anatomy.tsv ---------
table_name:anatomy
GTEx: anatomy: Read from file: df: #rows = 51, #cols: 4

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/anatomy.tsv: 52
df: #rows = 51, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.anatomy;
qt_df:                 pk
0   UBERON:0002037
1       CL:0002586
2       CL:0000082
3   UBERON:0007777
4   UBERON:0001255
..             ...
73  UBERON:0002107
74  UBERON:0000995
75  UBERON:0002028
76  UBERON:0001008
77  UBERON:0002084

[78 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 78, #cols: 1

df_pk (at most first 10 elements): ['UBERON:0000007', 'UBERON:0000458', 'UBERON:0000473', 'UBERON:0000945', 'UBERON:0000992', 'UBERON:0000995', 'UBERON:0000996', 'UBERON:0001114', 'UBERON:0001150', 'UBERON:0001157']
qt_pk (at most first 10 elements): ['UBERON:0002037', 'CL:0002586', 'CL:0000082', 'UBERON:0007777', 'UBERON:0001255', 'UBERON:0002079', 'UBERON:0002240', 'UBERON:0001384', 'CL:2000042', 'UBERON:0000467']
---- Removed rows from df with matching pk
*** Entering anatomy to database ***
df: #rows = 46, #cols: 4

A slice of df:
                id  ...                                           synonyms
0   UBERON:0000007  ...  ["glandula pituitaria","Hp","pituitary","pitui...
1   UBERON:0000458  ...                                                 []
2   UBERON:0000473  ...  ["UBERON:0002117","gonad of male genitalia","g...
3   UBERON:0000945  ...                                                 []
4   UBERON:0000992  ...  ["animal ovary","female gonad","female organis...
6   UBERON:0000996  ...                                                 []
7   UBERON:0001114  ...  ["liver right lobe","lobus hepaticus dexter","...
8   UBERON:0001150  ...                ["pancreas body","pancreatic body"]
9   UBERON:0001157  ...                              ["colon transversum"]
10  UBERON:0001159  ...                                                 []

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.07412934303283691 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/sample_prep_method.tsv ---------
table_name:sample_prep_method
GTEx: sample_prep_method: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/sample_prep_method.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03127574920654297 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/assay_type.tsv ---------
table_name:assay_type
GTEx: assay_type: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/assay_type.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.030994653701782227 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/biosample_disease.tsv ---------
table_name:biosample_disease
GTEx: biosample_disease: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/biosample_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03088665008544922 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection_anatomy.tsv ---------
table_name:collection_anatomy
GTEx: collection_anatomy: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection_anatomy.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.031786441802978516 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/gene.tsv ---------
table_name:gene
GTEx: gene: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.031557321548461914 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/biosample.tsv ---------
table_name:biosample
GTEx: biosample: Read from file: df: #rows = 22015, #cols: 8

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/biosample.tsv: 22016
df: #rows = 22015, #cols: 8
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering biosample to database ***
df: #rows = 22015, #cols: 8

A slice of df:
  id_namespace  ...             persistent_id
0   adult_gtex  ...  GTEX-1117F-0003-SM-58Q7G
1   adult_gtex  ...  GTEX-1117F-0003-SM-5DWSB
2   adult_gtex  ...  GTEX-1117F-0003-SM-6WBT7
3   adult_gtex  ...  GTEX-111CU-0003-SM-58Q95
4   adult_gtex  ...  GTEX-111CU-0003-SM-5DWTR
5   adult_gtex  ...  GTEX-111CU-0003-SM-6WBUD
6   adult_gtex  ...  GTEX-111FC-0001-SM-58Q7U
7   adult_gtex  ...  GTEX-111FC-0001-SM-5DWSO
8   adult_gtex  ...  GTEX-111FC-0001-SM-6WBTJ
9   adult_gtex  ...  GTEX-111VG-0004-SM-58Q85

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.5384521484375 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/file_describes_subject.tsv ---------
table_name:file_describes_subject
GTEx: file_describes_subject: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/file_describes_subject.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.031850337982177734 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/subject.tsv ---------
table_name:subject
GTEx: subject: Read from file: df: #rows = 979, #cols: 10

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/subject.tsv: 980
df: #rows = 979, #cols: 10
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering subject to database ***
df: #rows = 979, #cols: 10

A slice of df:
  id_namespace    local_id project_id_namespace project_local_id  persistent_id
0   adult_gtex  GTEX-1117F           adult_gtex       adult_gtex            NaN
1   adult_gtex  GTEX-111CU           adult_gtex       adult_gtex            NaN
2   adult_gtex  GTEX-111FC           adult_gtex       adult_gtex            NaN
3   adult_gtex  GTEX-111VG           adult_gtex       adult_gtex            NaN
4   adult_gtex  GTEX-111YS           adult_gtex       adult_gtex            NaN
5   adult_gtex  GTEX-1122O           adult_gtex       adult_gtex            NaN
6   adult_gtex  GTEX-1128S           adult_gtex       adult_gtex            NaN
7   adult_gtex  GTEX-113IC           adult_gtex       adult_gtex            NaN
8   adult_gtex  GTEX-113JC           adult_gtex       adult_gtex            NaN
9   adult_gtex  GTEX-117XS           adult_gtex       adult_gtex            NaN
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0915989875793457 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/file_format.tsv ---------
table_name:file_format
GTEx: file_format: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/file_format.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.032778263092041016 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/biosample_gene.tsv ---------
table_name:biosample_gene
GTEx: biosample_gene: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/biosample_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03140521049499512 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/subject_substance.tsv ---------
table_name:subject_substance
GTEx: subject_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/subject_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03220653533935547 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection.tsv ---------
table_name:collection
GTEx: collection: Read from file: df: #rows = 85, #cols: 8

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection.tsv: 86
df: #rows = 85, #cols: 8
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering collection to database ***
df: #rows = 85, #cols: 8

A slice of df:
  id_namespace  ... abbreviation
0   adult_gtex  ...          NaN
1   adult_gtex  ...          NaN
2   adult_gtex  ...          NaN
3   adult_gtex  ...          NaN
4   adult_gtex  ...          NaN
5   adult_gtex  ...          NaN
6   adult_gtex  ...          NaN
7   adult_gtex  ...          NaN
8   adult_gtex  ...          NaN
9   adult_gtex  ...          NaN

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.07424569129943848 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/compound.tsv ---------
table_name:compound
GTEx: compound: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/compound.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03092360496520996 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/subject_in_collection.tsv ---------
table_name:subject_in_collection
GTEx: subject_in_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/subject_in_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03270578384399414 seconds.

Processing C2M2 Files...:  25%|██▌       | 3/12 [00:34<01:39, 11.06s/it]--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/project_in_project.tsv ---------
table_name:project_in_project
GTEx: project_in_project: Read from file: df: #rows = 2, #cols: 4

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/project_in_project.tsv: 3
df: #rows = 2, #cols: 4
pKeys: ['parent_project_id_namespace', 'parent_project_local_id', 'child_project_id_namespace', 'child_project_local_id']
Going to write the count query
Wrote the count query
*** Entering project_in_project to database ***
df: #rows = 2, #cols: 4

A slice of df:
  parent_project_id_namespace  ... child_project_local_id
0                        gtex  ...             adult_gtex
1                        gtex  ...                  egtex

[2 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.06932997703552246 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection_taxonomy.tsv ---------
table_name:collection_taxonomy
GTEx: collection_taxonomy: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection_taxonomy.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03074955940246582 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/substance.tsv ---------
table_name:substance
GTEx: substance: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03281259536743164 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/external_CV_reference_files/HPO_MPO_Entrez_gene_IDs_to_EnsEMBL_IDs.tsv ---------
table_name:HPO_MPO_Entrez_gene_IDs_to_EnsEMBL_IDs
>>>>>>>> Time taken to ingest the metadata from this file: 4.410743713378906e-05 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/external_CV_reference_files/ensembl_genes.tsv ---------
table_name:ensembl_genes
>>>>>>>> Time taken to ingest the metadata from this file: 1.5735626220703125e-05 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/external_CV_reference_files/Interlex_data_type.2023-03-02.tsv ---------
table_name:Interlex_data_type.2023-03-02
>>>>>>>> Time taken to ingest the metadata from this file: 1.6450881958007812e-05 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/external_CV_reference_files/OBI.provisional_terms.2023-03-02.tsv ---------
table_name:OBI.provisional_terms.2023-03-02
>>>>>>>> Time taken to ingest the metadata from this file: 2.09808349609375e-05 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/external_CV_reference_files/Interlex_file_format.2022-11-01.tsv ---------
table_name:Interlex_file_format.2022-11-01
>>>>>>>> Time taken to ingest the metadata from this file: 1.9788742065429688e-05 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/external_CV_reference_files/EDAM.version_1.25.tsv ---------
table_name:EDAM.version_1.25
>>>>>>>> Time taken to ingest the metadata from this file: 1.8835067749023438e-05 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/external_CV_reference_files/ensembl_organism_name_to_ncbi_taxonomy_id.tsv ---------
table_name:ensembl_organism_name_to_ncbi_taxonomy_id
>>>>>>>> Time taken to ingest the metadata from this file: 1.9073486328125e-05 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/external_CV_reference_files/sample_pubchem_reference_data/compound.first_5000_records.max_100_synonyms_per_term.tsv ---------
table_name:compound.first_5000_records.max_100_synonyms_per_term
>>>>>>>> Time taken to ingest the metadata from this file: 2.47955322265625e-05 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/external_CV_reference_files/sample_pubchem_reference_data/substance.first_5000_records.max_100_synonyms_per_term.tsv ---------
table_name:substance.first_5000_records.max_100_synonyms_per_term
>>>>>>>> Time taken to ingest the metadata from this file: 2.4557113647460938e-05 seconds.


================================== DCC short label: GlyGen =============================================
--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/collection_compound.tsv ---------
table_name:collection_compound
GlyGen: collection_compound: Read from file: df: #rows = 517848, #cols: 3

#Lines in file ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/collection_compound.tsv: 517849
df: #rows = 517848, #cols: 3
pKeys: ['collection_id_namespace', 'collection_local_id', 'compound']
Going to write the count query
Wrote the count query
*** Entering collection_compound to database ***
df: #rows = 517848, #cols: 3

A slice of df:
        collection_id_namespace      collection_local_id  compound
0  https://www.data.glygen.org/  COL_G78482IS_GLY_000281  G78482IS
1  https://www.data.glygen.org/  COL_G56432LZ_GLY_000281  G56432LZ
2  https://www.data.glygen.org/  COL_G97770GP_GLY_000281  G97770GP
3  https://www.data.glygen.org/  COL_G60673DJ_GLY_000281  G60673DJ
4  https://www.data.glygen.org/  COL_G82363EY_GLY_000281  G82363EY
5  https://www.data.glygen.org/  COL_G19914RN_GLY_000281  G19914RN
6  https://www.data.glygen.org/  COL_G68853YV_GLY_000281  G68853YV
7  https://www.data.glygen.org/  COL_G15214PF_GLY_000281  91845490
8  https://www.data.glygen.org/  COL_G57630ZT_GLY_000281  G57630ZT
9  https://www.data.glygen.org/  COL_G97280NO_GLY_000281  G97280NO
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 7.02229642868042 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/collection_gene.tsv ---------
table_name:collection_gene
GlyGen: collection_gene: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/collection_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.037007808685302734 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/collection_phenotype.tsv ---------
table_name:collection_phenotype
GlyGen: collection_phenotype: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/collection_phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03254246711730957 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/collection_substance.tsv ---------
table_name:collection_substance
GlyGen: collection_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/collection_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03285074234008789 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/collection_in_collection.tsv ---------
table_name:collection_in_collection
GlyGen: collection_in_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/collection_in_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.0324554443359375 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/subject_disease.tsv ---------
table_name:subject_disease
GlyGen: subject_disease: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/subject_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03219318389892578 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/protein.tsv ---------
table_name:protein
GlyGen: protein: Read from file: df: #rows = 79221, #cols: 5

#Lines in file ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/protein.tsv: 79222
df: #rows = 79221, #cols: 5
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.protein;
qt_df: Empty DataFrame
Columns: [pk]
Index: []
---- Executed query, got data.frame: qt_df: #rows = 0, #cols: 1

df_pk (at most first 10 elements): ['A0A021WW64', 'A0A023GPK8', 'A0A023GRW3', 'A0A023IKK2', 'A0A024R1R8', 'A0A024RBG1', 'A0A024RCN7', 'A0A075B5I0', 'A0A075B5I2', 'A0A075B5I3']
qt_pk (at most first 10 elements): []
---- Removed rows from df with matching pk
*** Entering protein to database ***
df: #rows = 79221, #cols: 5

A slice of df:
           id  ...        organism
0  A0A021WW64  ...   NCBI:txid7227
1  A0A023GPK8  ...   NCBI:txid7227
2  A0A023GRW3  ...   NCBI:txid7227
3  A0A023IKK2  ...  NCBI:txid10116
4  A0A024R1R8  ...   NCBI:txid9606
5  A0A024RBG1  ...   NCBI:txid9606
6  A0A024RCN7  ...   NCBI:txid9606
7  A0A075B5I0  ...  NCBI:txid10090
8  A0A075B5I2  ...  NCBI:txid10090
9  A0A075B5I3  ...  NCBI:txid10090

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 30.705517768859863 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/assay_type.tsv ---------
table_name:assay_type
GlyGen: assay_type: Read from file: df: #rows = 1, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/assay_type.tsv: 2
df: #rows = 1, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.assay_type;
qt_df:               pk
0    OBI:0003306
1    OBI:0003104
2    OBI:0002984
3    OBI:0000185
4    OBI:0003300
5    OBI:0003312
6    OBI:0001631
7    OBI:0003301
8    OBI:0003033
9    OBI:0003094
10   OBI:0000893
11   OBI:0003311
12   OBI:0002631
13   OBI:0003297
14   OBI:0001920
15   OBI:0000716
16   OBI:0001177
17   OBI:0003314
18   OBI:0002112
19   OBI:0001848
20   OBI:0003313
21   OBI:0003299
22   OBI:0003089
23   OBI:0003105
24   OBI:0000626
25   OBI:0003305
26   OBI:0003304
27   OBI:0003303
28   OBI:0003034
29   OBI:0600047
30  CHMO:0000087
31   OBI:0003302
32   OBI:0001271
---- Executed query, got data.frame: qt_df: #rows = 33, #cols: 1

df_pk (at most first 10 elements): ['OBI:0001985']
qt_pk (at most first 10 elements): ['OBI:0003306', 'OBI:0003104', 'OBI:0002984', 'OBI:0000185', 'OBI:0003300', 'OBI:0003312', 'OBI:0001631', 'OBI:0003301', 'OBI:0003033', 'OBI:0003094']
---- Removed rows from df with matching pk
*** Entering assay_type to database ***
df: #rows = 1, #cols: 4

A slice of df:
            id  ... synonyms
0  OBI:0001985  ...       []

[1 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.09155893325805664 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/file_describes_collection.tsv ---------
table_name:file_describes_collection
GlyGen: file_describes_collection: Read from file: df: #rows = 159455, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/file_describes_collection.tsv: 159456
df: #rows = 159455, #cols: 4
pKeys: ['file_id_namespace', 'file_local_id', 'collection_id_namespace', 'collection_local_id']
Going to write the count query
Wrote the count query
*** Entering file_describes_collection to database ***
df: #rows = 159455, #cols: 4

A slice of df:
              file_id_namespace  ...          collection_local_id
0  https://www.data.glygen.org/  ...      COL_Q9ULV8-1_GLY_000001
1  https://www.data.glygen.org/  ...      COL_Q53R12-1_GLY_000001
2  https://www.data.glygen.org/  ...  COL_A0A075B6P5-1_GLY_000001
3  https://www.data.glygen.org/  ...      COL_O75153-1_GLY_000001
4  https://www.data.glygen.org/  ...      COL_Q17RY6-1_GLY_000001
5  https://www.data.glygen.org/  ...      COL_P62333-1_GLY_000001
6  https://www.data.glygen.org/  ...      COL_Q8IVF5-1_GLY_000001
7  https://www.data.glygen.org/  ...      COL_Q6PII5-1_GLY_000001
8  https://www.data.glygen.org/  ...      COL_Q2QL34-1_GLY_000001
9  https://www.data.glygen.org/  ...      COL_P28827-1_GLY_000001

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 2.78928542137146 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/subject_role_taxonomy.tsv ---------
table_name:subject_role_taxonomy
GlyGen: subject_role_taxonomy: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/subject_role_taxonomy.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.0355222225189209 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/subject_substance.tsv ---------
table_name:subject_substance
GlyGen: subject_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/subject_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.031071901321411133 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/file_format.tsv ---------
table_name:file_format
GlyGen: file_format: Read from file: df: #rows = 5, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/file_format.tsv: 6
df: #rows = 5, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.file_format;
qt_df:              pk
0   format:3004
1   format:3987
2   format:2572
3   format:3591
4   format:3590
5   format:3006
6   format:1930
7   format:3727
8   format:3752
9   format:3583
10  format:3981
11  format:2330
12  format:2331
13  format:3003
14  format:2333
15  format:3475
---- Executed query, got data.frame: qt_df: #rows = 16, #cols: 1

df_pk (at most first 10 elements): ['format:2330', 'format:3468', 'format:3579', 'format:3603', 'format:3752']
qt_pk (at most first 10 elements): ['format:3004', 'format:3987', 'format:2572', 'format:3591', 'format:3590', 'format:3006', 'format:1930', 'format:3727', 'format:3752', 'format:3583']
---- Removed rows from df with matching pk
*** Entering file_format to database ***
df: #rows = 3, #cols: 4

A slice of df:
            id  ...                    synonyms
1  format:3468  ...  ["Microsoft Excel format"]
2  format:3579  ...             ["JPEG","jpeg"]
3  format:3603  ...                          []

[3 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.07499217987060547 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/subject_phenotype.tsv ---------
table_name:subject_phenotype
GlyGen: subject_phenotype: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/subject_phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.030982255935668945 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/collection_defined_by_project.tsv ---------
table_name:collection_defined_by_project
GlyGen: collection_defined_by_project: Read from file: df: #rows = 158551, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/collection_defined_by_project.tsv: 158552
df: #rows = 158551, #cols: 4
pKeys: ['collection_id_namespace', 'collection_local_id', 'project_id_namespace', 'project_local_id']
Going to write the count query
Wrote the count query
*** Entering collection_defined_by_project to database ***
df: #rows = 158551, #cols: 4

A slice of df:
        collection_id_namespace  ... project_local_id
0  https://www.data.glygen.org/  ...           Portal
1  https://www.data.glygen.org/  ...           Portal
2  https://www.data.glygen.org/  ...           Portal
3  https://www.data.glygen.org/  ...           Portal
4  https://www.data.glygen.org/  ...           Portal
5  https://www.data.glygen.org/  ...           Portal
6  https://www.data.glygen.org/  ...           Portal
7  https://www.data.glygen.org/  ...           Portal
8  https://www.data.glygen.org/  ...           Portal
9  https://www.data.glygen.org/  ...           Portal

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 2.701847553253174 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/file_describes_biosample.tsv ---------
table_name:file_describes_biosample
GlyGen: file_describes_biosample: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/file_describes_biosample.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03621172904968262 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/file_describes_subject.tsv ---------
table_name:file_describes_subject
GlyGen: file_describes_subject: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/file_describes_subject.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03105902671813965 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/gene.tsv ---------
table_name:gene
GlyGen: gene: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.031675100326538086 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/compound.tsv ---------
table_name:compound
GlyGen: compound: Read from file: df: #rows = 45191, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/compound.tsv: 45192
df: #rows = 45191, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.compound;
qt_df: Empty DataFrame
Columns: [pk]
Index: []
---- Executed query, got data.frame: qt_df: #rows = 0, #cols: 1

df_pk (at most first 10 elements): ['10000009', '10008718', '10011812', '10022829', '10023700', '10053824', '10062728', '10062742', '10062744', '10074840']
qt_pk (at most first 10 elements): []
---- Removed rows from df with matching pk
*** Entering compound to database ***
df: #rows = 45191, #cols: 4

A slice of df:
         id  ...                                           synonyms
0  10000009  ...  ["WURCS=2.0/2,2,1/[a2122h-1x_1-5][a2112h-1b_1-...
1  10008718  ...  ["(GlcA)1 (GlcNAc)2", "beta-D-GlcpNAc-(1->4)-b...
2  10011812  ...  ["WURCS=2.0/5,5,4/[a2122h-1x_1-5_2*NSO/3=O/3=O...
3  10022829  ...  ["WURCS=2.0/2,2,1/[a2122h-1x_1-5_2*NCC/3=O][a2...
4  10023700  ...  ["WURCS=2.0/2,2,1/[a2122A-1x_1-5][a2122h-1b_1-...
5  10053824  ...  ["WURCS=2.0/3,3,2/[a2122A-1x_1-5][a2122h-1b_1-...
6  10062728  ...  ["Panosylpanose", "WURCS=2.0/1,6,5/[a2122h-1a_...
7  10062742  ...  ["WURCS=2.0/5,7,6/[a2122h-1a_1-5_2*NCC/3=O][a1...
8  10062744  ...  ["WURCS=2.0/2,5,4/[a2122h-1b_1-5_2*NCC/3=O][a2...
9  10074840  ...  ["beta-isomaltotriose", "Glcalpha1-6Glcalpha1-...

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 10.421114921569824 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/file.tsv ---------
table_name:file
GlyGen: file: Read from file: df: #rows = 1941, #cols: 20

#Lines in file ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/file.tsv: 1942
df: #rows = 1941, #cols: 20
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering file to database ***
df: #rows = 1941, #cols: 20

A slice of df:
                   id_namespace  ...                        persistent_id
0  https://www.data.glygen.org/  ...   https://data.glygen.org/GLY_000001
1  https://www.data.glygen.org/  ...   https://data.glygen.org/GLY_000281
2  https://www.data.glygen.org/  ...   https://data.glygen.org/GLY_000329
3  https://www.data.glygen.org/  ...  https://data.glygen.org/GLY_000038/
4  https://www.data.glygen.org/  ...   https://data.glygen.org/GLY_000040
5  https://www.data.glygen.org/  ...   https://data.glygen.org/GLY_000480
6  https://www.data.glygen.org/  ...   https://data.glygen.org/GLY_000517
7  https://www.data.glygen.org/  ...   https://data.glygen.org/GLY_000708
8  https://www.data.glygen.org/  ...   https://data.glygen.org/GLY_000004
9  https://www.data.glygen.org/  ...   https://data.glygen.org/GLY_000481

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.18300819396972656 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/collection.tsv ---------
table_name:collection
GlyGen: collection: Read from file: df: #rows = 158551, #cols: 8

#Lines in file ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/collection.tsv: 158552
df: #rows = 158551, #cols: 8
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering collection to database ***
df: #rows = 158551, #cols: 8

A slice of df:
                   id_namespace  ... abbreviation
0  https://www.data.glygen.org/  ...          NaN
1  https://www.data.glygen.org/  ...          NaN
2  https://www.data.glygen.org/  ...          NaN
3  https://www.data.glygen.org/  ...          NaN
4  https://www.data.glygen.org/  ...          NaN
5  https://www.data.glygen.org/  ...          NaN
6  https://www.data.glygen.org/  ...          NaN
7  https://www.data.glygen.org/  ...          NaN
8  https://www.data.glygen.org/  ...          NaN
9  https://www.data.glygen.org/  ...          NaN

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 3.905428409576416 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/subject_in_collection.tsv ---------
table_name:subject_in_collection
GlyGen: subject_in_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/subject_in_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.047412872314453125 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/biosample_in_collection.tsv ---------
table_name:biosample_in_collection
GlyGen: biosample_in_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/biosample_in_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.033161163330078125 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/subject_race.tsv ---------
table_name:subject_race
GlyGen: subject_race: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/subject_race.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03349018096923828 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/biosample_substance.tsv ---------
table_name:biosample_substance
GlyGen: biosample_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/biosample_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03361630439758301 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/phenotype_gene.tsv ---------
table_name:phenotype_gene
GlyGen: phenotype_gene: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/phenotype_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03324246406555176 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/analysis_type.tsv ---------
table_name:analysis_type
GlyGen: analysis_type: Read from file: df: #rows = 1, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/analysis_type.tsv: 2
df: #rows = 1, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.analysis_type;
qt_df:             pk
0  OBI:0001872
---- Executed query, got data.frame: qt_df: #rows = 1, #cols: 1

df_pk (at most first 10 elements): ['OBI:0001985']
qt_pk (at most first 10 elements): ['OBI:0001872']
---- Removed rows from df with matching pk
*** Entering analysis_type to database ***
df: #rows = 1, #cols: 4

A slice of df:
            id  ... synonyms
0  OBI:0001985  ...       []

[1 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.08602786064147949 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/collection_protein.tsv ---------
table_name:collection_protein
GlyGen: collection_protein: Read from file: df: #rows = 111181, #cols: 3

#Lines in file ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/collection_protein.tsv: 111182
df: #rows = 111181, #cols: 3
pKeys: ['collection_id_namespace', 'collection_local_id', 'protein']
Going to write the count query
Wrote the count query
*** Entering collection_protein to database ***
df: #rows = 111181, #cols: 3

A slice of df:
        collection_id_namespace          collection_local_id     protein
0  https://www.data.glygen.org/      COL_Q9ULV8-1_GLY_000001      Q9ULV8
1  https://www.data.glygen.org/      COL_Q53R12-1_GLY_000001      Q53R12
2  https://www.data.glygen.org/  COL_A0A075B6P5-1_GLY_000001  A0A075B6P5
3  https://www.data.glygen.org/      COL_O75153-1_GLY_000001      O75153
4  https://www.data.glygen.org/      COL_Q17RY6-1_GLY_000001      Q17RY6
5  https://www.data.glygen.org/      COL_P62333-1_GLY_000001      P62333
6  https://www.data.glygen.org/      COL_Q8IVF5-1_GLY_000001      Q8IVF5
7  https://www.data.glygen.org/      COL_Q6PII5-1_GLY_000001      Q6PII5
8  https://www.data.glygen.org/      COL_Q2QL34-1_GLY_000001      Q2QL34
9  https://www.data.glygen.org/      COL_P28827-1_GLY_000001      P28827
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.6683974266052246 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/biosample_disease.tsv ---------
table_name:biosample_disease
GlyGen: biosample_disease: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/biosample_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.037671566009521484 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/protein_gene.tsv ---------
table_name:protein_gene
GlyGen: protein_gene: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/protein_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.032089948654174805 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/subject.tsv ---------
table_name:subject
GlyGen: subject: Read from file: df: #rows = 0, #cols: 10

#Lines in file ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/subject.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03367424011230469 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/project_in_project.tsv ---------
table_name:project_in_project
GlyGen: project_in_project: Read from file: df: #rows = 991, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/project_in_project.tsv: 992
df: #rows = 991, #cols: 4
pKeys: ['parent_project_id_namespace', 'parent_project_local_id', 'child_project_id_namespace', 'child_project_local_id']
Going to write the count query
Wrote the count query
*** Entering project_in_project to database ***
df: #rows = 991, #cols: 4

A slice of df:
    parent_project_id_namespace  ... child_project_local_id
0  https://www.data.glygen.org/  ...                 Portal
1  https://www.data.glygen.org/  ...                  Array
2  https://www.data.glygen.org/  ...             AD10662905
3  https://www.data.glygen.org/  ...             AD10712497
4  https://www.data.glygen.org/  ...              AD4163938
5  https://www.data.glygen.org/  ...              AD3056904
6  https://www.data.glygen.org/  ...              AD1835716
7  https://www.data.glygen.org/  ...              AD1972992
8  https://www.data.glygen.org/  ...              AD8968332
9  https://www.data.glygen.org/  ...              AD8914705

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.08763289451599121 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/biosample_from_subject.tsv ---------
table_name:biosample_from_subject
GlyGen: biosample_from_subject: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/biosample_from_subject.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03214430809020996 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/biosample_gene.tsv ---------
table_name:biosample_gene
GlyGen: biosample_gene: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/biosample_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.033086538314819336 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/biosample.tsv ---------
table_name:biosample
GlyGen: biosample: Read from file: df: #rows = 0, #cols: 8

#Lines in file ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/biosample.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.032004356384277344 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/data_type.tsv ---------
table_name:data_type
GlyGen: data_type: Read from file: df: #rows = 6, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/data_type.tsv: 7
df: #rows = 6, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.data_type;
qt_df:           pk
0  data:3495
1  data:1383
2  data:2048
3  data:2082
4  data:3002
5  data:2887
6  data:2968
---- Executed query, got data.frame: qt_df: #rows = 7, #cols: 1

df_pk (at most first 10 elements): ['ILX:0793824', 'ILX:0793825', 'data:1714', 'data:2764', 'data:3110', 'data:3111']
qt_pk (at most first 10 elements): ['data:3495', 'data:1383', 'data:2048', 'data:2082', 'data:3002', 'data:2887', 'data:2968']
---- Removed rows from df with matching pk
*** Entering data_type to database ***
df: #rows = 6, #cols: 4

A slice of df:
            id  ...                                           synonyms
0  ILX:0793824  ...                                                 []
1  ILX:0793825  ...                                                 []
2    data:1714  ...                                                 []
3    data:2764  ...                                                 []
4    data:3110  ...                                                 []
5    data:3111  ...  ["Gene annotation (expression)","Gene expressi...

[6 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.07500362396240234 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/dcc.tsv ---------
table_name:dcc
GlyGen: dcc: Read from file: df: #rows = 1, #cols: 9

#Lines in file ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/dcc.tsv: 2
df: #rows = 1, #cols: 9
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.dcc;
qt_df:                         pk
0  cfde_registry_dcc:exrna
1    cfde_registry_dcc:4dn
2   cfde_registry_dcc:gtex
---- Executed query, got data.frame: qt_df: #rows = 3, #cols: 1

df_pk (at most first 10 elements): ['cfde_registry_dcc:glygen']
qt_pk (at most first 10 elements): ['cfde_registry_dcc:exrna', 'cfde_registry_dcc:4dn', 'cfde_registry_dcc:gtex']
---- Removed rows from df with matching pk
*** Entering dcc to database ***
df: #rows = 1, #cols: 9

A slice of df:
                         id  ...       contact_email
0  cfde_registry_dcc:glygen  ...  myglygen@gmail.com

[1 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.06793951988220215 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/id_namespace.tsv ---------
table_name:id_namespace
GlyGen: id_namespace: Read from file: df: #rows = 1, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/id_namespace.tsv: 2
df: #rows = 1, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.id_namespace;
qt_df:                             pk
0                        egtex
1  https://data.4dnucleome.org
2                         gtex
3                   ERCC-exRNA
4                   adult_gtex
---- Executed query, got data.frame: qt_df: #rows = 5, #cols: 1

df_pk (at most first 10 elements): ['https://www.data.glygen.org/']
qt_pk (at most first 10 elements): ['egtex', 'https://data.4dnucleome.org', 'gtex', 'ERCC-exRNA', 'adult_gtex']
---- Removed rows from df with matching pk
*** Entering id_namespace to database ***
df: #rows = 1, #cols: 4

A slice of df:
                             id  ...         description
0  https://www.data.glygen.org/  ...  The GlyGen project

[1 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.06621575355529785 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/anatomy.tsv ---------
table_name:anatomy
GlyGen: anatomy: Read from file: df: #rows = 66, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/anatomy.tsv: 67
df: #rows = 66, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.anatomy;
qt_df:                  pk
0    UBERON:0000087
1    UBERON:0009834
2    UBERON:0010414
3    UBERON:0001736
4    UBERON:0002037
..              ...
119  UBERON:0000002
120  UBERON:0001496
121  UBERON:0000473
122  UBERON:0003714
123      CL:0002620

[124 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 124, #cols: 1

df_pk (at most first 10 elements): ['UBERON:0000002', 'UBERON:0000007', 'UBERON:0000029', 'UBERON:0000059', 'UBERON:0000086', 'UBERON:0000173', 'UBERON:0000178', 'UBERON:0000305', 'UBERON:0000317', 'UBERON:0000344']
qt_pk (at most first 10 elements): ['UBERON:0000087', 'UBERON:0009834', 'UBERON:0010414', 'UBERON:0001736', 'UBERON:0002037', 'UBERON:0001157', 'UBERON:0009835', 'UBERON:0001621', 'UBERON:0002097', 'UBERON:0001017']
---- Removed rows from df with matching pk
*** Entering anatomy to database ***
df: #rows = 44, #cols: 4

A slice of df:
                id  ...                                           synonyms
2   UBERON:0000029  ...                                                 []
3   UBERON:0000059  ...                                                 []
4   UBERON:0000086  ...            ["zona pellucida - vitelline membrane"]
5   UBERON:0000173  ...                                                 []
7   UBERON:0000305  ...                                         ["amnios"]
8   UBERON:0000317  ...  ["UBERON:0003347","UBERON:0004981","colon muco...
9   UBERON:0000344  ...  ["mucosa of organ","mucosa of organ part","muc...
13  UBERON:0000947  ...  ["trunk of aortic tree","trunk of systemic art...
15  UBERON:0000965  ...  ["camera-type eye lens","eye lens","lens","len...
16  UBERON:0000966  ...  ["inner layer of eyeball","retina of camera-ty...

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.07574033737182617 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/collection_disease.tsv ---------
table_name:collection_disease
GlyGen: collection_disease: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/collection_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.031820058822631836 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/collection_taxonomy.tsv ---------
table_name:collection_taxonomy
GlyGen: collection_taxonomy: Read from file: df: #rows = 112366, #cols: 3

#Lines in file ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/collection_taxonomy.tsv: 112367
df: #rows = 112366, #cols: 3
pKeys: ['collection_id_namespace', 'collection_local_id', 'taxon']
Going to write the count query
Wrote the count query
*** Entering collection_taxonomy to database ***
df: #rows = 112366, #cols: 3

A slice of df:
        collection_id_namespace          collection_local_id          taxon
0  https://www.data.glygen.org/      COL_Q9ULV8-1_GLY_000001  NCBI:txid9606
1  https://www.data.glygen.org/      COL_Q53R12-1_GLY_000001  NCBI:txid9606
2  https://www.data.glygen.org/  COL_A0A075B6P5-1_GLY_000001  NCBI:txid9606
3  https://www.data.glygen.org/      COL_O75153-1_GLY_000001  NCBI:txid9606
4  https://www.data.glygen.org/      COL_Q17RY6-1_GLY_000001  NCBI:txid9606
5  https://www.data.glygen.org/      COL_P62333-1_GLY_000001  NCBI:txid9606
6  https://www.data.glygen.org/      COL_Q8IVF5-1_GLY_000001  NCBI:txid9606
7  https://www.data.glygen.org/      COL_Q6PII5-1_GLY_000001  NCBI:txid9606
8  https://www.data.glygen.org/      COL_Q2QL34-1_GLY_000001  NCBI:txid9606
9  https://www.data.glygen.org/      COL_P28827-1_GLY_000001  NCBI:txid9606
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.6794054508209229 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/sample_prep_method.tsv ---------
table_name:sample_prep_method
GlyGen: sample_prep_method: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/sample_prep_method.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03506803512573242 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/phenotype.tsv ---------
table_name:phenotype
Processing C2M2 Files...:  33%|███▎      | 4/12 [01:38<04:16, 32.05s/it]GlyGen: phenotype: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.034656524658203125 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/substance.tsv ---------
table_name:substance
GlyGen: substance: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03147244453430176 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/ncbi_taxonomy.tsv ---------
table_name:ncbi_taxonomy
GlyGen: ncbi_taxonomy: Read from file: df: #rows = 9, #cols: 5

#Lines in file ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/ncbi_taxonomy.tsv: 10
df: #rows = 9, #cols: 5
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.ncbi_taxonomy;
qt_df:                pk
0  NCBI:txid60711
1  NCBI:txid10090
2  NCBI:txid10036
3   NCBI:txid7955
4   NCBI:txid9031
5   NCBI:txid7227
6   NCBI:txid9606
---- Executed query, got data.frame: qt_df: #rows = 7, #cols: 1

df_pk (at most first 10 elements): ['NCBI:txid10090', 'NCBI:txid10116', 'NCBI:txid11108', 'NCBI:txid11116', 'NCBI:txid2697049', 'NCBI:txid63746', 'NCBI:txid694009', 'NCBI:txid7227', 'NCBI:txid9606']
qt_pk (at most first 10 elements): ['NCBI:txid60711', 'NCBI:txid10090', 'NCBI:txid10036', 'NCBI:txid7955', 'NCBI:txid9031', 'NCBI:txid7227', 'NCBI:txid9606']
---- Removed rows from df with matching pk
*** Entering ncbi_taxonomy to database ***
df: #rows = 6, #cols: 5

A slice of df:
                 id  ...                                           synonyms
1    NCBI:txid10116  ...                         ["rats", "Mus norvegicus"]
2    NCBI:txid11108  ...           ["HCV-H", "Hepatitis C virus isolate H"]
3    NCBI:txid11116  ...                                                 []
4  NCBI:txid2697049  ...  ["2019-nCoV", "COVID-19 virus", "HCoV-19", "Hu...
5    NCBI:txid63746  ...                   ["Hepatitis C virus strain H77"]
6   NCBI:txid694009  ...  ["HCoV-SARS", "Human coronavirus (strain SARS)...

[6 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.07497739791870117 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/project.tsv ---------
table_name:project
GlyGen: project: Read from file: df: #rows = 992, #cols: 7

#Lines in file ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/project.tsv: 993
df: #rows = 992, #cols: 7
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering project to database ***
df: #rows = 992, #cols: 7

A slice of df:
                   id_namespace  ... abbreviation
0  https://www.data.glygen.org/  ...       GlyGen
1  https://www.data.glygen.org/  ...       GlyGen
2  https://www.data.glygen.org/  ...      GGArray
3  https://www.data.glygen.org/  ...   AD10662905
4  https://www.data.glygen.org/  ...   AD10712497
5  https://www.data.glygen.org/  ...    AD4163938
6  https://www.data.glygen.org/  ...    AD3056904
7  https://www.data.glygen.org/  ...    AD1835716
8  https://www.data.glygen.org/  ...    AD1972992
9  https://www.data.glygen.org/  ...    AD8968332

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.09398722648620605 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/disease.tsv ---------
table_name:disease
GlyGen: disease: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03235125541687012 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/phenotype_disease.tsv ---------
table_name:phenotype_disease
GlyGen: phenotype_disease: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/phenotype_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03286170959472656 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/file_in_collection.tsv ---------
table_name:file_in_collection
GlyGen: file_in_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/file_in_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03348135948181152 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/collection_anatomy.tsv ---------
table_name:collection_anatomy
GlyGen: collection_anatomy: Read from file: df: #rows = 3520, #cols: 3

#Lines in file ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/collection_anatomy.tsv: 3521
df: #rows = 3520, #cols: 3
pKeys: ['collection_id_namespace', 'collection_local_id', 'anatomy']
Going to write the count query
Wrote the count query
*** Entering collection_anatomy to database ***
df: #rows = 3520, #cols: 3

A slice of df:
        collection_id_namespace      collection_local_id         anatomy
0  https://www.data.glygen.org/  COL_Q5UIP0-1_GLY_000329  UBERON:0001911
1  https://www.data.glygen.org/  COL_P04004-1_GLY_000329  UBERON:0001977
2  https://www.data.glygen.org/  COL_P04004-1_GLY_000329  UBERON:0001911
3  https://www.data.glygen.org/  COL_P04004-1_GLY_000329  UBERON:0001913
4  https://www.data.glygen.org/  COL_P04004-1_GLY_000329  UBERON:0001969
5  https://www.data.glygen.org/  COL_P05155-1_GLY_000329  UBERON:0001977
6  https://www.data.glygen.org/  COL_P05155-1_GLY_000329  UBERON:0001911
7  https://www.data.glygen.org/  COL_P05155-1_GLY_000329  UBERON:0001088
8  https://www.data.glygen.org/  COL_P05155-1_GLY_000329  UBERON:0001913
9  https://www.data.glygen.org/  COL_Q7Z7D3-1_GLY_000329  UBERON:0001911
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.11306214332580566 seconds.


================================== DCC short label: HMP =============================================
--------- ingest/c2m2s/HMP/datapackage/merged/data/subject_race.tsv ---------
table_name:subject_race
HMP: subject_race: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/subject_race.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03285646438598633 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/protein.tsv ---------
table_name:protein
HMP: protein: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/protein.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.032228708267211914 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/disease.tsv ---------
table_name:disease
HMP: disease: Read from file: df: #rows = 8, #cols: 4

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/disease.tsv: 9
df: #rows = 8, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.disease;
qt_df:               pk
0     DOID:10534
1     DOID:10652
2     DOID:10941
3      DOID:9074
4      DOID:1184
5      DOID:3073
6      DOID:1520
7     DOID:12217
8      DOID:1287
9      DOID:4905
10     DOID:9744
11      DOID:219
12    DOID:10286
13     DOID:9256
14     DOID:5844
15     DOID:2377
16     DOID:2841
17     DOID:6000
18     DOID:8577
19    DOID:14330
20  DOID:0080832
21     DOID:6713
22      DOID:409
---- Executed query, got data.frame: qt_df: #rows = 23, #cols: 1

df_pk (at most first 10 elements): ['DOID:4914', 'DOID:5295', 'DOID:8677', 'DOID:8778', 'DOID:8893', 'DOID:934', 'DOID:9778', 'DOID:9970']
qt_pk (at most first 10 elements): ['DOID:10534', 'DOID:10652', 'DOID:10941', 'DOID:9074', 'DOID:1184', 'DOID:3073', 'DOID:1520', 'DOID:12217', 'DOID:1287', 'DOID:4905']
---- Removed rows from df with matching pk
*** Entering disease to database ***
df: #rows = 8, #cols: 4

A slice of df:
          id  ...                                           synonyms
0  DOID:4914  ...                     ["Oesophageal adenocarcinoma"]
1  DOID:5295  ...  ["DOID:10759","DOID:11222","DOID:11789","DOID:...
2  DOID:8677  ...  ["ENTEROCOLITIS NECROTIZING","necrotizing ente...
3  DOID:8778  ...  ["DOID:8784","DOID:8855","DOID:8942","Crohn di...
4  DOID:8893  ...                                                 []
5   DOID:934  ...  ["DOID:1329","Viral disease","Viral Infection"...
6  DOID:9778  ...                          ["IBD","Irritable colon"]
7  DOID:9970  ...                                                 []

[8 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.07715034484863281 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/phenotype_gene.tsv ---------
table_name:phenotype_gene
HMP: phenotype_gene: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/phenotype_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03234100341796875 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/dcc.tsv ---------
table_name:dcc
HMP: dcc: Read from file: df: #rows = 1, #cols: 9

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/dcc.tsv: 2
df: #rows = 1, #cols: 9
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.dcc;
qt_df:                          pk
0  cfde_registry_dcc:glygen
1   cfde_registry_dcc:exrna
2     cfde_registry_dcc:4dn
3    cfde_registry_dcc:gtex
---- Executed query, got data.frame: qt_df: #rows = 4, #cols: 1

df_pk (at most first 10 elements): ['cfde_registry_dcc:hmp']
qt_pk (at most first 10 elements): ['cfde_registry_dcc:glygen', 'cfde_registry_dcc:exrna', 'cfde_registry_dcc:4dn', 'cfde_registry_dcc:gtex']
---- Removed rows from df with matching pk
*** Entering dcc to database ***
df: #rows = 1, #cols: 9

A slice of df:
                      id  ...             contact_email
0  cfde_registry_dcc:hmp  ...  abrady@som.umaryland.edu

[1 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.07419133186340332 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/biosample_in_collection.tsv ---------
table_name:biosample_in_collection
HMP: biosample_in_collection: Read from file: df: #rows = 58417, #cols: 4

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/biosample_in_collection.tsv: 58418
df: #rows = 58417, #cols: 4
pKeys: ['biosample_id_namespace', 'biosample_local_id', 'collection_id_namespace', 'collection_local_id']
Going to write the count query
Wrote the count query
*** Entering biosample_in_collection to database ***
df: #rows = 58417, #cols: 4

A slice of df:
        biosample_id_namespace  ...      collection_local_id
0  tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000002
1  tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000003
2  tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000004
3  tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000007
4  tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000008
5  tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000012
6  tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000014
7  tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000015
8  tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000016
9  tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000017

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9704465866088867 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/biosample_disease.tsv ---------
table_name:biosample_disease
HMP: biosample_disease: Read from file: df: #rows = 2531, #cols: 4

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/biosample_disease.tsv: 2532
df: #rows = 2531, #cols: 4
pKeys: ['biosample_id_namespace', 'biosample_local_id', 'association_type', 'disease']
Going to write the count query
Wrote the count query
*** Entering biosample_disease to database ***
df: #rows = 2531, #cols: 4

A slice of df:
        biosample_id_namespace  ...    disease
0  tag:hmpdacc.org,2022-04-04:  ...  DOID:4914
1  tag:hmpdacc.org,2022-04-04:  ...  DOID:4914
2  tag:hmpdacc.org,2022-04-04:  ...  DOID:4914
3  tag:hmpdacc.org,2022-04-04:  ...  DOID:4914
4  tag:hmpdacc.org,2022-04-04:  ...  DOID:4914
5  tag:hmpdacc.org,2022-04-04:  ...  DOID:4914
6  tag:hmpdacc.org,2022-04-04:  ...  DOID:4914
7  tag:hmpdacc.org,2022-04-04:  ...  DOID:4914
8  tag:hmpdacc.org,2022-04-04:  ...  DOID:4914
9  tag:hmpdacc.org,2022-04-04:  ...  DOID:4914

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.11239790916442871 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/biosample_from_subject.tsv ---------
table_name:biosample_from_subject
HMP: biosample_from_subject: Read from file: df: #rows = 49471, #cols: 5

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/biosample_from_subject.tsv: 49472
df: #rows = 49471, #cols: 5
pKeys: ['biosample_id_namespace', 'biosample_local_id', 'subject_id_namespace', 'subject_local_id']
Going to write the count query
Wrote the count query
*** Entering biosample_from_subject to database ***
df: #rows = 49471, #cols: 5

A slice of df:
        biosample_id_namespace  ... age_at_sampling
0  tag:hmpdacc.org,2022-04-04:  ...             NaN
1  tag:hmpdacc.org,2022-04-04:  ...             NaN
2  tag:hmpdacc.org,2022-04-04:  ...             NaN
3  tag:hmpdacc.org,2022-04-04:  ...             NaN
4  tag:hmpdacc.org,2022-04-04:  ...             NaN
5  tag:hmpdacc.org,2022-04-04:  ...             NaN
6  tag:hmpdacc.org,2022-04-04:  ...             NaN
7  tag:hmpdacc.org,2022-04-04:  ...             NaN
8  tag:hmpdacc.org,2022-04-04:  ...             NaN
9  tag:hmpdacc.org,2022-04-04:  ...             NaN

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.8833768367767334 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/subject.tsv ---------
table_name:subject
HMP: subject: Read from file: df: #rows = 7903, #cols: 10

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/subject.tsv: 7904
df: #rows = 7903, #cols: 10
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering subject to database ***
df: #rows = 7903, #cols: 10

A slice of df:
                  id_namespace       local_id  ... project_local_id persistent_id
0  tag:hmpdacc.org,2022-04-04:  HHS_158458797  ...              HHS           NaN
1  tag:hmpdacc.org,2022-04-04:  HHS_158479027  ...              HHS           NaN
2  tag:hmpdacc.org,2022-04-04:  HHS_158499257  ...              HHS           NaN
3  tag:hmpdacc.org,2022-04-04:  HHS_158742018  ...              HHS           NaN
4  tag:hmpdacc.org,2022-04-04:  HHS_158802708  ...              HHS           NaN
5  tag:hmpdacc.org,2022-04-04:  HHS_158944319  ...              HHS           NaN
6  tag:hmpdacc.org,2022-04-04:  HHS_158984779  ...              HHS           NaN
7  tag:hmpdacc.org,2022-04-04:  HHS_159247771  ...              HHS           NaN
8  tag:hmpdacc.org,2022-04-04:  HHS_159146620  ...              HHS           NaN
9  tag:hmpdacc.org,2022-04-04:  HHS_159166850  ...              HHS           NaN

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.26746344566345215 seconds.

/home/mano/DRC/DRC-Portals/database/populateC2M2FromS3.py:272: DtypeWarning: Columns (4,19) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv(table_str, delimiter='\t');
--------- ingest/c2m2s/HMP/datapackage/merged/data/anatomy.tsv ---------
table_name:anatomy
HMP: anatomy: Read from file: df: #rows = 95, #cols: 4

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/anatomy.tsv: 96
df: #rows = 95, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.anatomy;
qt_df:                  pk
0    UBERON:0000087
1    UBERON:0001199
2    UBERON:0009834
3    UBERON:0010414
4    UBERON:0001736
..              ...
163  UBERON:0001496
164  UBERON:0000473
165  UBERON:0003714
166      CL:0002620
167  UBERON:0001914

[168 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 168, #cols: 1

df_pk (at most first 10 elements): ['UBERON:0000002', 'UBERON:0000003', 'UBERON:0000004', 'UBERON:0000029', 'UBERON:0000165', 'UBERON:0000167', 'UBERON:0000178', 'UBERON:0000341', 'UBERON:0000376', 'UBERON:0000403']
qt_pk (at most first 10 elements): ['UBERON:0000087', 'UBERON:0001199', 'UBERON:0009834', 'UBERON:0010414', 'UBERON:0001736', 'UBERON:0002037', 'UBERON:0001157', 'UBERON:0009835', 'UBERON:0001621', 'UBERON:0002097']
---- Removed rows from df with matching pk
*** Entering anatomy to database ***
df: #rows = 76, #cols: 4

A slice of df:
                id  ...                                           synonyms
1   UBERON:0000003  ...                                                 []
2   UBERON:0000004  ...  ["nasal sac","nose","peripheral olfactory organ"]
4   UBERON:0000165  ...                    ["regio oralis","regio oralis"]
7   UBERON:0000341  ...                                                 []
8   UBERON:0000376  ...  ["hind limb stylopod","hind limb stylopodium",...
9   UBERON:0000403  ...                                                 []
10  UBERON:0000479  ...             ["portion of tissue","tissue portion"]
11  UBERON:0000916  ...         ["abdominopelvic region","abdominopelvis"]
14  UBERON:0000964  ...                      ["cornea of camera-type eye"]
15  UBERON:0000970  ...                                                 []

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.07578086853027344 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/collection_anatomy.tsv ---------
table_name:collection_anatomy
HMP: collection_anatomy: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/collection_anatomy.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03242826461791992 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/file.tsv ---------
table_name:file
HMP: file: Read from file: df: #rows = 251136, #cols: 20

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/file.tsv: 251137
df: #rows = 251136, #cols: 20
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering file to database ***
df: #rows = 251136, #cols: 20

A slice of df:
                  id_namespace  ...                        persistent_id
0  tag:hmpdacc.org,2022-04-04:  ...   drs://drs.hmpdacc.org/1ZkxDLC0OEDy
1  tag:hmpdacc.org,2022-04-04:  ...   drs://drs.hmpdacc.org/U58IbOCZ5jUk
2  tag:hmpdacc.org,2022-04-04:  ...  drs://drs.hmpdacc.org/1OT3AWnkIXUoY
3  tag:hmpdacc.org,2022-04-04:  ...  drs://drs.hmpdacc.org/10zrHKv3T7FtB
4  tag:hmpdacc.org,2022-04-04:  ...   drs://drs.hmpdacc.org/zPUjtQyNKYat
5  tag:hmpdacc.org,2022-04-04:  ...  drs://drs.hmpdacc.org/1IgPmzXpM2UG6
6  tag:hmpdacc.org,2022-04-04:  ...   drs://drs.hmpdacc.org/50zejhq1rY7M
7  tag:hmpdacc.org,2022-04-04:  ...   drs://drs.hmpdacc.org/D8SPdeVQefeX
8  tag:hmpdacc.org,2022-04-04:  ...  drs://drs.hmpdacc.org/11vWXRE4WNptV
9  tag:hmpdacc.org,2022-04-04:  ...   drs://drs.hmpdacc.org/T3luwCUe9ro6

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 12.656388998031616 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/file_in_collection.tsv ---------
table_name:file_in_collection
HMP: file_in_collection: Read from file: df: #rows = 36849, #cols: 4

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/file_in_collection.tsv: 36850
df: #rows = 36849, #cols: 4
pKeys: ['file_id_namespace', 'file_local_id', 'collection_id_namespace', 'collection_local_id']
Going to write the count query
Wrote the count query
*** Entering file_in_collection to database ***
df: #rows = 36849, #cols: 4

A slice of df:
             file_id_namespace  ...      collection_local_id
0  tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000002
1  tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000002
2  tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000003
3  tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000003
4  tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000004
5  tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000004
6  tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000007
7  tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000007
8  tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000008
9  tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000012

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.6820826530456543 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/project.tsv ---------
table_name:project
HMP: project: Read from file: df: #rows = 24, #cols: 7

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/project.tsv: 25
df: #rows = 24, #cols: 7
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering project to database ***
df: #rows = 24, #cols: 7

A slice of df:
                  id_namespace      local_id  ...  creation_time  abbreviation
0  tag:hmpdacc.org,2022-04-04:           HMP  ...            NaN           HMP
1  tag:hmpdacc.org,2022-04-04:          HMP1  ...            NaN          HMP1
2  tag:hmpdacc.org,2022-04-04:           HHS  ...            NaN           HHS
3  tag:hmpdacc.org,2022-04-04:          Demo  ...            NaN          Demo
4  tag:hmpdacc.org,2022-04-04:     Psoriasis  ...            NaN     Psoriasis
5  tag:hmpdacc.org,2022-04-04:        VagMic  ...            NaN        VagMic
6  tag:hmpdacc.org,2022-04-04:  CrohnDietGen  ...            NaN  CrohnDietGen
7  tag:hmpdacc.org,2022-04-04:          Acne  ...            NaN          Acne
8  tag:hmpdacc.org,2022-04-04:      UrethMic  ...            NaN      UrethMic
9  tag:hmpdacc.org,2022-04-04:       Obesity  ...            NaN       Obesity

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.07204151153564453 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/biosample.tsv ---------
table_name:biosample
HMP: biosample: Read from file: df: #rows = 51873, #cols: 8

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/biosample.tsv: 51874
df: #rows = 51873, #cols: 8
HMP: biosample table: changed column name assay_type to sample_prep_method
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering biosample to database ***
df: #rows = 51873, #cols: 8

A slice of df:
                  id_namespace   local_id  ... project_local_id persistent_id
0  tag:hmpdacc.org,2022-04-04:  SRS011105  ...              HHS           NaN
1  tag:hmpdacc.org,2022-04-04:  SRS011132  ...              HHS           NaN
2  tag:hmpdacc.org,2022-04-04:  SRS011263  ...              HHS           NaN
3  tag:hmpdacc.org,2022-04-04:  SRS011397  ...              HHS           NaN
4  tag:hmpdacc.org,2022-04-04:  SRS012291  ...              HHS           NaN
5  tag:hmpdacc.org,2022-04-04:  SRS012663  ...              HHS           NaN
6  tag:hmpdacc.org,2022-04-04:  SRS012998  ...              HHS           NaN
7  tag:hmpdacc.org,2022-04-04:  SRS013155  ...              HHS           NaN
8  tag:hmpdacc.org,2022-04-04:  SRS013269  ...              HHS           NaN
9  tag:hmpdacc.org,2022-04-04:  SRS013637  ...              HHS           NaN

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.1539955139160156 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/collection_taxonomy.tsv ---------
table_name:collection_taxonomy
HMP: collection_taxonomy: Read from file: df: #rows = 6022, #cols: 3

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/collection_taxonomy.tsv: 6023
df: #rows = 6022, #cols: 3
pKeys: ['collection_id_namespace', 'collection_local_id', 'taxon']
Going to write the count query
Wrote the count query
*** Entering collection_taxonomy to database ***
df: #rows = 6022, #cols: 3

A slice of df:
       collection_id_namespace      collection_local_id            taxon
0  tag:hmpdacc.org,2022-04-04:  2010RefGen_SAMN00000002  NCBI:txid445970
1  tag:hmpdacc.org,2022-04-04:  2010RefGen_SAMN00000003  NCBI:txid445972
2  tag:hmpdacc.org,2022-04-04:  2010RefGen_SAMN00000004  NCBI:txid449673
3  tag:hmpdacc.org,2022-04-04:  2010RefGen_SAMN00000007  NCBI:txid445974
4  tag:hmpdacc.org,2022-04-04:  2010RefGen_SAMN00000008  NCBI:txid411461
5  tag:hmpdacc.org,2022-04-04:  2010RefGen_SAMN00000012  NCBI:txid451640
6  tag:hmpdacc.org,2022-04-04:  2010RefGen_SAMN00000014  NCBI:txid470145
7  tag:hmpdacc.org,2022-04-04:  2010RefGen_SAMN00000015  NCBI:txid471870
8  tag:hmpdacc.org,2022-04-04:  2010RefGen_SAMN00000016  NCBI:txid470146
9  tag:hmpdacc.org,2022-04-04:  2010RefGen_SAMN00000017  NCBI:txid471872
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.15412616729736328 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/protein_gene.tsv ---------
table_name:protein_gene
HMP: protein_gene: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/protein_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03831934928894043 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/collection_protein.tsv ---------
table_name:collection_protein
HMP: collection_protein: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/collection_protein.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03600597381591797 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/collection_defined_by_project.tsv ---------
table_name:collection_defined_by_project
HMP: collection_defined_by_project: Read from file: df: #rows = 20146, #cols: 4

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/collection_defined_by_project.tsv: 20147
df: #rows = 20146, #cols: 4
pKeys: ['collection_id_namespace', 'collection_local_id', 'project_id_namespace', 'project_local_id']
Going to write the count query
Wrote the count query
*** Entering collection_defined_by_project to database ***
df: #rows = 20146, #cols: 4

A slice of df:
       collection_id_namespace  ... project_local_id
0  tag:hmpdacc.org,2022-04-04:  ...           RefGen
1  tag:hmpdacc.org,2022-04-04:  ...           RefGen
2  tag:hmpdacc.org,2022-04-04:  ...           RefGen
3  tag:hmpdacc.org,2022-04-04:  ...           RefGen
4  tag:hmpdacc.org,2022-04-04:  ...           RefGen
5  tag:hmpdacc.org,2022-04-04:  ...           RefGen
6  tag:hmpdacc.org,2022-04-04:  ...           RefGen
7  tag:hmpdacc.org,2022-04-04:  ...           RefGen
8  tag:hmpdacc.org,2022-04-04:  ...           RefGen
9  tag:hmpdacc.org,2022-04-04:  ...           RefGen

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.3857259750366211 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/collection_compound.tsv ---------
table_name:collection_compound
HMP: collection_compound: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/collection_compound.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.039620399475097656 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/phenotype.tsv ---------
table_name:phenotype
HMP: phenotype: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.035249948501586914 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/subject_in_collection.tsv ---------
table_name:subject_in_collection
HMP: subject_in_collection: Read from file: df: #rows = 21563, #cols: 4

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/subject_in_collection.tsv: 21564
df: #rows = 21563, #cols: 4
pKeys: ['subject_id_namespace', 'subject_local_id', 'collection_id_namespace', 'collection_local_id']
Going to write the count query
Wrote the count query
*** Entering subject_in_collection to database ***
df: #rows = 21563, #cols: 4

A slice of df:
          subject_id_namespace  ...    collection_local_id
0  tag:hmpdacc.org,2022-04-04:  ...  hmasm1_anterior_nares
1  tag:hmpdacc.org,2022-04-04:  ...  hmasm1_anterior_nares
2  tag:hmpdacc.org,2022-04-04:  ...  hmasm1_anterior_nares
3  tag:hmpdacc.org,2022-04-04:  ...  hmasm1_anterior_nares
4  tag:hmpdacc.org,2022-04-04:  ...  hmasm1_anterior_nares
5  tag:hmpdacc.org,2022-04-04:  ...  hmasm1_anterior_nares
6  tag:hmpdacc.org,2022-04-04:  ...  hmasm1_anterior_nares
7  tag:hmpdacc.org,2022-04-04:  ...  hmasm1_anterior_nares
8  tag:hmpdacc.org,2022-04-04:  ...  hmasm1_anterior_nares
9  tag:hmpdacc.org,2022-04-04:  ...  hmasm1_anterior_nares

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.40096449851989746 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/id_namespace.tsv ---------
table_name:id_namespace
HMP: id_namespace: Read from file: df: #rows = 1, #cols: 4

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/id_namespace.tsv: 2
df: #rows = 1, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.id_namespace;
qt_df:                              pk
0                         egtex
1  https://www.data.glygen.org/
2   https://data.4dnucleome.org
3                          gtex
4                    ERCC-exRNA
5                    adult_gtex
---- Executed query, got data.frame: qt_df: #rows = 6, #cols: 1

df_pk (at most first 10 elements): ['tag:hmpdacc.org,2022-04-04:']
qt_pk (at most first 10 elements): ['egtex', 'https://www.data.glygen.org/', 'https://data.4dnucleome.org', 'gtex', 'ERCC-exRNA', 'adult_gtex']
---- Removed rows from df with matching pk
*** Entering id_namespace to database ***
df: #rows = 1, #cols: 4

A slice of df:
                            id  ...                                        description
0  tag:hmpdacc.org,2022-04-04:  ...  The default identifier namespace id_namespace ...

[1 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.07552886009216309 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/subject_phenotype.tsv ---------
table_name:subject_phenotype
HMP: subject_phenotype: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/subject_phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.035646915435791016 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/substance.tsv ---------
table_name:substance
HMP: substance: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.036830902099609375 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/collection_in_collection.tsv ---------
table_name:collection_in_collection
HMP: collection_in_collection: Read from file: df: #rows = 20124, #cols: 4

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/collection_in_collection.tsv: 20125
df: #rows = 20124, #cols: 4
pKeys: ['superset_collection_id_namespace', 'superset_collection_local_id', 'subset_collection_id_namespace', 'subset_collection_local_id']
Going to write the count query
Wrote the count query
*** Entering collection_in_collection to database ***
df: #rows = 20124, #cols: 4

A slice of df:
  superset_collection_id_namespace  ... subset_collection_local_id
0      tag:hmpdacc.org,2022-04-04:  ...    2010RefGen_SAMN00000002
1      tag:hmpdacc.org,2022-04-04:  ...    2010RefGen_SAMN00000003
2      tag:hmpdacc.org,2022-04-04:  ...    2010RefGen_SAMN00000004
3      tag:hmpdacc.org,2022-04-04:  ...    2010RefGen_SAMN00000007
4      tag:hmpdacc.org,2022-04-04:  ...    2010RefGen_SAMN00000008
5      tag:hmpdacc.org,2022-04-04:  ...    2010RefGen_SAMN00000012
6      tag:hmpdacc.org,2022-04-04:  ...    2010RefGen_SAMN00000014
7      tag:hmpdacc.org,2022-04-04:  ...    2010RefGen_SAMN00000015
8      tag:hmpdacc.org,2022-04-04:  ...    2010RefGen_SAMN00000016
9      tag:hmpdacc.org,2022-04-04:  ...    2010RefGen_SAMN00000017

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.39461517333984375 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/file_describes_subject.tsv ---------
table_name:file_describes_subject
HMP: file_describes_subject: Read from file: df: #rows = 240632, #cols: 4

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/file_describes_subject.tsv: 240633
df: #rows = 240632, #cols: 4
pKeys: ['file_id_namespace', 'file_local_id', 'subject_id_namespace', 'subject_local_id']
Going to write the count query
Wrote the count query
*** Entering file_describes_subject to database ***
df: #rows = 240632, #cols: 4

A slice of df:
             file_id_namespace  ... subject_local_id
0  tag:hmpdacc.org,2022-04-04:  ...    HHS_158458797
1  tag:hmpdacc.org,2022-04-04:  ...    HHS_158479027
2  tag:hmpdacc.org,2022-04-04:  ...    HHS_158458797
3  tag:hmpdacc.org,2022-04-04:  ...    HHS_158458797
4  tag:hmpdacc.org,2022-04-04:  ...    HHS_158458797
5  tag:hmpdacc.org,2022-04-04:  ...    HHS_158458797
6  tag:hmpdacc.org,2022-04-04:  ...    HHS_158458797
7  tag:hmpdacc.org,2022-04-04:  ...    HHS_158479027
8  tag:hmpdacc.org,2022-04-04:  ...    HHS_158479027
9  tag:hmpdacc.org,2022-04-04:  ...    HHS_158479027

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 4.072204113006592 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/compound.tsv ---------
table_name:compound
HMP: compound: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/compound.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.04376983642578125 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/collection_substance.tsv ---------
table_name:collection_substance
HMP: collection_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/collection_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03677105903625488 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/biosample_gene.tsv ---------
table_name:biosample_gene
HMP: biosample_gene: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/biosample_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.037001848220825195 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/collection_disease.tsv ---------
table_name:collection_disease
HMP: collection_disease: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/collection_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03819704055786133 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/analysis_type.tsv ---------
table_name:analysis_type
HMP: analysis_type: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/analysis_type.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03836703300476074 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/phenotype_disease.tsv ---------
table_name:phenotype_disease
HMP: phenotype_disease: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/phenotype_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03760266304016113 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/gene.tsv ---------
table_name:gene
HMP: gene: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03953266143798828 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/file_describes_biosample.tsv ---------
table_name:file_describes_biosample
HMP: file_describes_biosample: Read from file: df: #rows = 289343, #cols: 4

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/file_describes_biosample.tsv: 289344
df: #rows = 289343, #cols: 4
pKeys: ['file_id_namespace', 'file_local_id', 'biosample_id_namespace', 'biosample_local_id']
Going to write the count query
Wrote the count query
*** Entering file_describes_biosample to database ***
df: #rows = 289343, #cols: 4

A slice of df:
             file_id_namespace  ... biosample_local_id
0  tag:hmpdacc.org,2022-04-04:  ...          SRS011061
1  tag:hmpdacc.org,2022-04-04:  ...          SRS011084
2  tag:hmpdacc.org,2022-04-04:  ...          SRS011086
3  tag:hmpdacc.org,2022-04-04:  ...          SRS011090
4  tag:hmpdacc.org,2022-04-04:  ...          SRS011098
5  tag:hmpdacc.org,2022-04-04:  ...          SRS011105
6  tag:hmpdacc.org,2022-04-04:  ...          SRS011111
7  tag:hmpdacc.org,2022-04-04:  ...          SRS011115
8  tag:hmpdacc.org,2022-04-04:  ...          SRS011126
9  tag:hmpdacc.org,2022-04-04:  ...          SRS011132

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 4.90203595161438 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/collection_gene.tsv ---------
table_name:collection_gene
HMP: collection_gene: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/collection_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.05180096626281738 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/subject_substance.tsv ---------
table_name:subject_substance
HMP: subject_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/subject_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.039695024490356445 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/project_in_project.tsv ---------
table_name:project_in_project
HMP: project_in_project: Read from file: df: #rows = 23, #cols: 4

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/project_in_project.tsv: 24
df: #rows = 23, #cols: 4
pKeys: ['parent_project_id_namespace', 'parent_project_local_id', 'child_project_id_namespace', 'child_project_local_id']
Going to write the count query
Wrote the count query
*** Entering project_in_project to database ***
df: #rows = 23, #cols: 4

A slice of df:
   parent_project_id_namespace  ... child_project_local_id
0  tag:hmpdacc.org,2022-04-04:  ...                   HMP1
1  tag:hmpdacc.org,2022-04-04:  ...                    HHS
2  tag:hmpdacc.org,2022-04-04:  ...                   Demo
3  tag:hmpdacc.org,2022-04-04:  ...              Psoriasis
4  tag:hmpdacc.org,2022-04-04:  ...                 VagMic
5  tag:hmpdacc.org,2022-04-04:  ...           CrohnDietGen
6  tag:hmpdacc.org,2022-04-04:  ...                 UlcCol
7  tag:hmpdacc.org,2022-04-04:  ...               UrethMic
8  tag:hmpdacc.org,2022-04-04:  ...                Obesity
9  tag:hmpdacc.org,2022-04-04:  ...            CrohnStrFun

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.08903717994689941 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/ncbi_taxonomy.tsv ---------
table_name:ncbi_taxonomy
HMP: ncbi_taxonomy: Read from file: df: #rows = 2313, #cols: 5

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/ncbi_taxonomy.tsv: 2314
df: #rows = 2313, #cols: 5
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.ncbi_taxonomy;
qt_df:                   pk
0     NCBI:txid63746
1     NCBI:txid60711
2     NCBI:txid10090
3     NCBI:txid11108
4     NCBI:txid10036
5      NCBI:txid7955
6      NCBI:txid9031
7     NCBI:txid11116
8    NCBI:txid694009
9      NCBI:txid7227
10    NCBI:txid10116
11     NCBI:txid9606
12  NCBI:txid2697049
---- Executed query, got data.frame: qt_df: #rows = 13, #cols: 1

df_pk (at most first 10 elements): ['NCBI:txid1000568', 'NCBI:txid1000569', 'NCBI:txid1000570', 'NCBI:txid1000588', 'NCBI:txid1000589', 'NCBI:txid1000590', 'NCBI:txid1002339', 'NCBI:txid1002364', 'NCBI:txid1002365', 'NCBI:txid1002366']
qt_pk (at most first 10 elements): ['NCBI:txid63746', 'NCBI:txid60711', 'NCBI:txid10090', 'NCBI:txid11108', 'NCBI:txid10036', 'NCBI:txid7955', 'NCBI:txid9031', 'NCBI:txid11116', 'NCBI:txid694009', 'NCBI:txid7227']
---- Removed rows from df with matching pk
*** Entering ncbi_taxonomy to database ***
df: #rows = 2312, #cols: 5

A slice of df:
                 id  ...                                           synonyms
0  NCBI:txid1000568  ...                                                 []
1  NCBI:txid1000569  ...                                                 []
2  NCBI:txid1000570  ...  ["Streptococcus anginosus ATCC 12395", "Strept...
3  NCBI:txid1000588  ...          ["Streptococcus mitis bv. 2 strain SK95"]
4  NCBI:txid1000589  ...  ["Streptococcus dysgalactiae subsp. equisimili...
5  NCBI:txid1000590  ...  ["Staphylococcus epidermidis str. 14.1.R1.SE",...
6  NCBI:txid1002339  ...                                                 []
7  NCBI:txid1002364  ...  ["Hafnia alvei str. ATCC 51873", "Hafnia alvei...
8  NCBI:txid1002365  ...  ["Lactobacillus rhamnosus BCRC 14029", "Lactob...
9  NCBI:txid1002366  ...  ["Listeria innocua str. ATCC 33091", "Listeria...

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.15463042259216309 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/file_format.tsv ---------
table_name:file_format
HMP: file_format: Read from file: df: #rows = 15, #cols: 4

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/file_format.tsv: 16
df: #rows = 15, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.file_format;
qt_df:              pk
0   format:3603
1   format:3004
2   format:3579
3   format:3987
4   format:2572
5   format:3591
6   format:3590
7   format:3006
8   format:1930
9   format:3468
10  format:3727
11  format:3752
12  format:3583
13  format:3981
14  format:2330
15  format:2331
16  format:3003
17  format:2333
18  format:3475
---- Executed query, got data.frame: qt_df: #rows = 19, #cols: 1

df_pk (at most first 10 elements): ['format:1919', 'format:1929', 'format:1930', 'format:1936', 'format:1975', 'format:2330', 'format:2572', 'format:3244', 'format:3464', 'format:3468']
qt_pk (at most first 10 elements): ['format:3603', 'format:3004', 'format:3579', 'format:3987', 'format:2572', 'format:3591', 'format:3590', 'format:3006', 'format:1930', 'format:3468']
---- Removed rows from df with matching pk
*** Entering file_format to database ***
df: #rows = 10, #cols: 4

A slice of df:
             id  ...                                  synonyms
0   format:1919  ...                                        []
1   format:1929  ...  ["FASTA sequence format","FASTA format"]
3   format:1936  ...                               ["GenBank"]
4   format:1975  ...                                        []
7   format:3244  ...                                        []
8   format:3464  ...            ["JavaScript Object Notation"]
11  format:3508  ...                                        []
12  format:3654  ...                                        []
13  format:3712  ...                                        []
14  format:3746  ...  ["BIological Observation Matrix format"]

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.07593917846679688 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/subject_disease.tsv ---------
table_name:subject_disease
HMP: subject_disease: Read from file: df: #rows = 492, #cols: 4

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/subject_disease.tsv: 493
df: #rows = 492, #cols: 4
pKeys: ['subject_id_namespace', 'subject_local_id', 'association_type', 'disease']
Going to write the count query
Wrote the count query
*** Entering subject_disease to database ***
df: #rows = 492, #cols: 4

A slice of df:
          subject_id_namespace  ...    disease
0  tag:hmpdacc.org,2022-04-04:  ...  DOID:4914
1  tag:hmpdacc.org,2022-04-04:  ...  DOID:4914
2  tag:hmpdacc.org,2022-04-04:  ...  DOID:4914
3  tag:hmpdacc.org,2022-04-04:  ...  DOID:4914
4  tag:hmpdacc.org,2022-04-04:  ...  DOID:4914
5  tag:hmpdacc.org,2022-04-04:  ...  DOID:4914
6  tag:hmpdacc.org,2022-04-04:  ...  DOID:4914
7  tag:hmpdacc.org,2022-04-04:  ...  DOID:4914
8  tag:hmpdacc.org,2022-04-04:  ...  DOID:4914
9  tag:hmpdacc.org,2022-04-04:  ...  DOID:4914

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.07702088356018066 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/file_describes_collection.tsv ---------
table_name:file_describes_collection
HMP: file_describes_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/file_describes_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03640151023864746 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/data_type.tsv ---------
table_name:data_type
HMP: data_type: Read from file: df: #rows = 16, #cols: 4

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/data_type.tsv: 17
df: #rows = 16, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.data_type;
qt_df:              pk
0     data:3111
1     data:1714
2     data:3495
3   ILX:0793824
4     data:1383
5     data:3110
6     data:2764
7     data:2048
8     data:2082
9     data:3002
10    data:2887
11    data:2968
12  ILX:0793825
---- Executed query, got data.frame: qt_df: #rows = 13, #cols: 1

df_pk (at most first 10 elements): ['data:0907', 'data:0925', 'data:0943', 'data:0945', 'data:1255', 'data:1270', 'data:1916', 'data:2048', 'data:2082', 'data:2600']
qt_pk (at most first 10 elements): ['data:3111', 'data:1714', 'data:3495', 'ILX:0793824', 'data:1383', 'data:3110', 'data:2764', 'data:2048', 'data:2082', 'data:3002']
Processing C2M2 Files...:  42%|████▏     | 5/12 [02:09<03:41, 31.62s/it]---- Removed rows from df with matching pk
*** Entering data_type to database ***
df: #rows = 13, #cols: 4

A slice of df:
           id  ...                                           synonyms
0   data:0907  ...  ["Protein classification data","Protein family...
1   data:0925  ...              ["Contigs","SO:0000353","SO:0001248"]
2   data:0943  ...                      ["Mass spectrometry spectra"]
3   data:0945  ...  ["Peptide spectrum match","'Protein identifica...
4   data:1255  ...  ["Feature record","Sequence features report","...
5   data:1270  ...                         ["Sequence feature table"]
6   data:1916  ...                                                 []
9   data:2600  ...                              ["Network","Pathway"]
10  data:2603  ...  ["Non-coding RNA quantification data","Transcr...
11  data:2976  ...  ["Protein sequences","Amino acid sequence","Am...

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.08147668838500977 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/assay_type.tsv ---------
table_name:assay_type
HMP: assay_type: Read from file: df: #rows = 12, #cols: 4

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/assay_type.tsv: 13
df: #rows = 12, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.assay_type;
qt_df:               pk
0    OBI:0003306
1    OBI:0003104
2    OBI:0002984
3    OBI:0000185
4    OBI:0003300
5    OBI:0003312
6    OBI:0001631
7    OBI:0003301
8    OBI:0003033
9    OBI:0003094
10   OBI:0000893
11   OBI:0003311
12   OBI:0002631
13   OBI:0003297
14   OBI:0001920
15   OBI:0000716
16   OBI:0001177
17   OBI:0003314
18   OBI:0002112
19   OBI:0001848
20   OBI:0003313
21   OBI:0001985
22   OBI:0003299
23   OBI:0003089
24   OBI:0003105
25   OBI:0000626
26   OBI:0003305
27   OBI:0003304
28   OBI:0003303
29   OBI:0003034
30   OBI:0600047
31  CHMO:0000087
32   OBI:0003302
33   OBI:0001271
---- Executed query, got data.frame: qt_df: #rows = 34, #cols: 1

df_pk (at most first 10 elements): ['OBI:0000366', 'OBI:0000615', 'OBI:0001271', 'OBI:0002117', 'OBI:0002118', 'OBI:0002145', 'OBI:0002623', 'OBI:0002760', 'OBI:0002761', 'OBI:0002763']
qt_pk (at most first 10 elements): ['OBI:0003306', 'OBI:0003104', 'OBI:0002984', 'OBI:0000185', 'OBI:0003300', 'OBI:0003312', 'OBI:0001631', 'OBI:0003301', 'OBI:0003033', 'OBI:0003094']
---- Removed rows from df with matching pk
*** Entering assay_type to database ***
df: #rows = 11, #cols: 4

A slice of df:
             id  ...                                  synonyms
0   OBI:0000366  ...  ["metabolite assay","metabolomic assay"]
1   OBI:0000615  ...                    ["proteomic analysis"]
3   OBI:0002117  ...                                   ["WGS"]
4   OBI:0002118  ...                                   ["WES"]
5   OBI:0002145  ...                                        []
6   OBI:0002623  ...                                   ["WMS"]
7   OBI:0002760  ...                                        []
8   OBI:0002761  ...                       ["lipidomic assay"]
9   OBI:0002763  ...             ["16S rRNA sequencing assay"]
10  OBI:0002766  ...                                        []

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.07417726516723633 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/collection.tsv ---------
table_name:collection
HMP: collection: Read from file: df: #rows = 20146, #cols: 8

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/collection.tsv: 20147
df: #rows = 20146, #cols: 8
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering collection to database ***
df: #rows = 20146, #cols: 8

A slice of df:
                  id_namespace  ...             abbreviation
0  tag:hmpdacc.org,2022-04-04:  ...               2010RefGen
1  tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000002
2  tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000003
3  tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000004
4  tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000007
5  tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000008
6  tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000012
7  tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000014
8  tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000015
9  tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000016

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.6216657161712646 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/subject_role_taxonomy.tsv ---------
table_name:subject_role_taxonomy
HMP: subject_role_taxonomy: Read from file: df: #rows = 7903, #cols: 4

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/subject_role_taxonomy.tsv: 7904
df: #rows = 7903, #cols: 4
pKeys: ['subject_id_namespace', 'subject_local_id', 'role_id', 'taxonomy_id']
Going to write the count query
Wrote the count query
*** Entering subject_role_taxonomy to database ***
df: #rows = 7903, #cols: 4

A slice of df:
          subject_id_namespace  ...    taxonomy_id
0  tag:hmpdacc.org,2022-04-04:  ...  NCBI:txid9606
1  tag:hmpdacc.org,2022-04-04:  ...  NCBI:txid9606
2  tag:hmpdacc.org,2022-04-04:  ...  NCBI:txid9606
3  tag:hmpdacc.org,2022-04-04:  ...  NCBI:txid9606
4  tag:hmpdacc.org,2022-04-04:  ...  NCBI:txid9606
5  tag:hmpdacc.org,2022-04-04:  ...  NCBI:txid9606
6  tag:hmpdacc.org,2022-04-04:  ...  NCBI:txid9606
7  tag:hmpdacc.org,2022-04-04:  ...  NCBI:txid9606
8  tag:hmpdacc.org,2022-04-04:  ...  NCBI:txid9606
9  tag:hmpdacc.org,2022-04-04:  ...  NCBI:txid9606

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.19604253768920898 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/biosample_substance.tsv ---------
table_name:biosample_substance
HMP: biosample_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/biosample_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.037117958068847656 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/collection_phenotype.tsv ---------
table_name:collection_phenotype
HMP: collection_phenotype: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/HMP/datapackage/merged/data/collection_phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03650307655334473 seconds.


================================== DCC short label: HuBMAP =============================================
--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/dcc.tsv ---------
table_name:dcc
HuBMAP: dcc: Read from file: df: #rows = 1, #cols: 9

#Lines in file ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/dcc.tsv: 2
df: #rows = 1, #cols: 9
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.dcc;
qt_df:                          pk
0  cfde_registry_dcc:glygen
1   cfde_registry_dcc:exrna
2     cfde_registry_dcc:4dn
3     cfde_registry_dcc:hmp
4    cfde_registry_dcc:gtex
---- Executed query, got data.frame: qt_df: #rows = 5, #cols: 1

df_pk (at most first 10 elements): ['cfde_registry_dcc:hubmap']
qt_pk (at most first 10 elements): ['cfde_registry_dcc:glygen', 'cfde_registry_dcc:exrna', 'cfde_registry_dcc:4dn', 'cfde_registry_dcc:hmp', 'cfde_registry_dcc:gtex']
---- Removed rows from df with matching pk
*** Entering dcc to database ***
df: #rows = 1, #cols: 9

A slice of df:
                         id  ...                          contact_email
0  cfde_registry_dcc:hubmap  ...  cfde-submissions@hubmapconsortium.org

[1 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.08381056785583496 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/collection.tsv ---------
table_name:collection
HuBMAP: collection: Read from file: df: #rows = 1185, #cols: 8

#Lines in file ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/collection.tsv: 1186
df: #rows = 1185, #cols: 8
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering collection to database ***
df: #rows = 1185, #cols: 8

A slice of df:
                     id_namespace  ... abbreviation
0  tag:hubmapconsortium.org,2023:  ...          NaN
1  tag:hubmapconsortium.org,2023:  ...          NaN
2  tag:hubmapconsortium.org,2023:  ...          NaN
3  tag:hubmapconsortium.org,2023:  ...          NaN
4  tag:hubmapconsortium.org,2023:  ...          NaN
5  tag:hubmapconsortium.org,2023:  ...          NaN
6  tag:hubmapconsortium.org,2023:  ...          NaN
7  tag:hubmapconsortium.org,2023:  ...          NaN
8  tag:hubmapconsortium.org,2023:  ...          NaN
9  tag:hubmapconsortium.org,2023:  ...          NaN

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.10377669334411621 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/subject.tsv ---------
table_name:subject
HuBMAP: subject: Read from file: df: #rows = 153, #cols: 10

#Lines in file ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/subject.tsv: 154
df: #rows = 153, #cols: 10
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering subject to database ***
df: #rows = 153, #cols: 10

A slice of df:
                     id_namespace  ... persistent_id
0  tag:hubmapconsortium.org,2023:  ...           NaN
1  tag:hubmapconsortium.org,2023:  ...           NaN
2  tag:hubmapconsortium.org,2023:  ...           NaN
3  tag:hubmapconsortium.org,2023:  ...           NaN
4  tag:hubmapconsortium.org,2023:  ...           NaN
5  tag:hubmapconsortium.org,2023:  ...           NaN
6  tag:hubmapconsortium.org,2023:  ...           NaN
7  tag:hubmapconsortium.org,2023:  ...           NaN
8  tag:hubmapconsortium.org,2023:  ...           NaN
9  tag:hubmapconsortium.org,2023:  ...           NaN

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0798804759979248 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/file_format.tsv ---------
table_name:file_format
HuBMAP: file_format: Read from file: df: #rows = 14, #cols: 4

#Lines in file ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/file_format.tsv: 15
df: #rows = 14, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.file_format;
qt_df:              pk
0   format:3654
1   format:3603
2   format:3004
3   format:3464
4   format:3579
5   format:1936
6   format:3987
7   format:1975
8   format:3712
9   format:2572
10  format:3591
11  format:3590
12  format:3006
13  format:1930
14  format:3468
15  format:3244
16  format:3727
17  format:3752
18  format:1919
19  format:3583
20  format:1929
21  format:3981
22  format:3746
23  format:2330
24  format:3508
25  format:2331
26  format:3003
27  format:2333
28  format:3475
---- Executed query, got data.frame: qt_df: #rows = 29, #cols: 1

df_pk (at most first 10 elements): ['format:2330', 'format:2332', 'format:3464', 'format:3475', 'format:3508', 'format:3579', 'format:3591', 'format:3620', 'format:3727', 'format:3752']
qt_pk (at most first 10 elements): ['format:3654', 'format:3603', 'format:3004', 'format:3464', 'format:3579', 'format:1936', 'format:3987', 'format:1975', 'format:3712', 'format:2572']
---- Removed rows from df with matching pk
*** Entering file_format to database ***
df: #rows = 5, #cols: 4

A slice of df:
             id  ...                        synonyms
1   format:2332  ...  ["eXtensible Markup Language"]
7   format:3620  ...                              []
10  format:3839  ...                              []
11  format:3873  ...                              []
13  format:3989  ...                     ["GNU Zip"]

[5 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0765693187713623 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/subject_substance.tsv ---------
table_name:subject_substance
HuBMAP: subject_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/subject_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.036322593688964844 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/biosample_in_collection.tsv ---------
table_name:biosample_in_collection
HuBMAP: biosample_in_collection: Read from file: df: #rows = 1185, #cols: 4

#Lines in file ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/biosample_in_collection.tsv: 1186
df: #rows = 1185, #cols: 4
pKeys: ['biosample_id_namespace', 'biosample_local_id', 'collection_id_namespace', 'collection_local_id']
Going to write the count query
Wrote the count query
*** Entering biosample_in_collection to database ***
df: #rows = 1185, #cols: 4

A slice of df:
           biosample_id_namespace  ... collection_local_id
0  tag:hubmapconsortium.org,2023:  ...     HBM679.NNNK.283
1  tag:hubmapconsortium.org,2023:  ...     HBM987.XGTH.368
2  tag:hubmapconsortium.org,2023:  ...     HBM569.NBHZ.832
3  tag:hubmapconsortium.org,2023:  ...     HBM297.MZZX.824
4  tag:hubmapconsortium.org,2023:  ...     HBM784.HQQK.452
5  tag:hubmapconsortium.org,2023:  ...     HBM467.RVKV.883
6  tag:hubmapconsortium.org,2023:  ...     HBM878.JDXQ.275
7  tag:hubmapconsortium.org,2023:  ...     HBM674.JTXW.676
8  tag:hubmapconsortium.org,2023:  ...     HBM325.KXJK.373
9  tag:hubmapconsortium.org,2023:  ...     HBM494.CRGT.577

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.09209799766540527 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/collection_disease.tsv ---------
table_name:collection_disease
HuBMAP: collection_disease: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/collection_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03632831573486328 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/file_describes_collection.tsv ---------
table_name:file_describes_collection
HuBMAP: file_describes_collection: Read from file: df: #rows = 1523, #cols: 4

#Lines in file ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/file_describes_collection.tsv: 1524
df: #rows = 1523, #cols: 4
pKeys: ['file_id_namespace', 'file_local_id', 'collection_id_namespace', 'collection_local_id']
Going to write the count query
Wrote the count query
*** Entering file_describes_collection to database ***
df: #rows = 1523, #cols: 4

A slice of df:
                file_id_namespace  ... collection_local_id
0  tag:hubmapconsortium.org,2023:  ...     HBM679.NNNK.283
1  tag:hubmapconsortium.org,2023:  ...     HBM987.XGTH.368
2  tag:hubmapconsortium.org,2023:  ...     HBM569.NBHZ.832
3  tag:hubmapconsortium.org,2023:  ...     HBM297.MZZX.824
4  tag:hubmapconsortium.org,2023:  ...     HBM784.HQQK.452
5  tag:hubmapconsortium.org,2023:  ...     HBM467.RVKV.883
6  tag:hubmapconsortium.org,2023:  ...     HBM878.JDXQ.275
7  tag:hubmapconsortium.org,2023:  ...     HBM674.JTXW.676
8  tag:hubmapconsortium.org,2023:  ...     HBM325.KXJK.373
9  tag:hubmapconsortium.org,2023:  ...     HBM494.CRGT.577

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.10468864440917969 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/ncbi_taxonomy.tsv ---------
table_name:ncbi_taxonomy
HuBMAP: ncbi_taxonomy: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/ncbi_taxonomy.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03713393211364746 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/collection_substance.tsv ---------
table_name:collection_substance
HuBMAP: collection_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/collection_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.0365140438079834 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/subject_in_collection.tsv ---------
table_name:subject_in_collection
HuBMAP: subject_in_collection: Read from file: df: #rows = 1174, #cols: 4

#Lines in file ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/subject_in_collection.tsv: 1175
df: #rows = 1174, #cols: 4
pKeys: ['subject_id_namespace', 'subject_local_id', 'collection_id_namespace', 'collection_local_id']
Going to write the count query
Wrote the count query
*** Entering subject_in_collection to database ***
df: #rows = 1174, #cols: 4

A slice of df:
             subject_id_namespace  ... collection_local_id
0  tag:hubmapconsortium.org,2023:  ...     HBM679.NNNK.283
1  tag:hubmapconsortium.org,2023:  ...     HBM987.XGTH.368
2  tag:hubmapconsortium.org,2023:  ...     HBM569.NBHZ.832
3  tag:hubmapconsortium.org,2023:  ...     HBM297.MZZX.824
4  tag:hubmapconsortium.org,2023:  ...     HBM784.HQQK.452
5  tag:hubmapconsortium.org,2023:  ...     HBM467.RVKV.883
6  tag:hubmapconsortium.org,2023:  ...     HBM878.JDXQ.275
7  tag:hubmapconsortium.org,2023:  ...     HBM674.JTXW.676
8  tag:hubmapconsortium.org,2023:  ...     HBM325.KXJK.373
9  tag:hubmapconsortium.org,2023:  ...     HBM494.CRGT.577

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.09892582893371582 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/subject_race.tsv ---------
table_name:subject_race
HuBMAP: subject_race: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/subject_race.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03980708122253418 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/collection_compound.tsv ---------
table_name:collection_compound
HuBMAP: collection_compound: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/collection_compound.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03604292869567871 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/biosample_from_subject.tsv ---------
table_name:biosample_from_subject
HuBMAP: biosample_from_subject: Read from file: df: #rows = 511, #cols: 5

#Lines in file ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/biosample_from_subject.tsv: 512
df: #rows = 511, #cols: 5
pKeys: ['biosample_id_namespace', 'biosample_local_id', 'subject_id_namespace', 'subject_local_id']
Going to write the count query
Wrote the count query
*** Entering biosample_from_subject to database ***
df: #rows = 511, #cols: 5

A slice of df:
           biosample_id_namespace  ... age_at_sampling
0  tag:hubmapconsortium.org,2023:  ...             NaN
1  tag:hubmapconsortium.org,2023:  ...             NaN
2  tag:hubmapconsortium.org,2023:  ...             NaN
3  tag:hubmapconsortium.org,2023:  ...             NaN
4  tag:hubmapconsortium.org,2023:  ...             NaN
5  tag:hubmapconsortium.org,2023:  ...             NaN
6  tag:hubmapconsortium.org,2023:  ...             NaN
7  tag:hubmapconsortium.org,2023:  ...             NaN
8  tag:hubmapconsortium.org,2023:  ...             NaN
9  tag:hubmapconsortium.org,2023:  ...             NaN

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.09122824668884277 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/substance.tsv ---------
table_name:substance
HuBMAP: substance: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03734445571899414 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/file_describes_subject.tsv ---------
table_name:file_describes_subject
HuBMAP: file_describes_subject: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/file_describes_subject.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03606557846069336 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/collection_in_collection.tsv ---------
table_name:collection_in_collection
HuBMAP: collection_in_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/collection_in_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03739213943481445 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/id_namespace.tsv ---------
table_name:id_namespace
HuBMAP: id_namespace: Read from file: df: #rows = 1, #cols: 4

#Lines in file ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/id_namespace.tsv: 2
df: #rows = 1, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.id_namespace;
qt_df:                              pk
0                         egtex
1  https://www.data.glygen.org/
2   https://data.4dnucleome.org
3                          gtex
4                    ERCC-exRNA
5   tag:hmpdacc.org,2022-04-04:
6                    adult_gtex
---- Executed query, got data.frame: qt_df: #rows = 7, #cols: 1

df_pk (at most first 10 elements): ['tag:hubmapconsortium.org,2023:']
qt_pk (at most first 10 elements): ['egtex', 'https://www.data.glygen.org/', 'https://data.4dnucleome.org', 'gtex', 'ERCC-exRNA', 'tag:hmpdacc.org,2022-04-04:', 'adult_gtex']
---- Removed rows from df with matching pk
*** Entering id_namespace to database ***
df: #rows = 1, #cols: 4

A slice of df:
                               id  ...                       description
0  tag:hubmapconsortium.org,2023:  ...  Human BioMolecular Atlas Program

[1 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.08398699760437012 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/biosample_substance.tsv ---------
table_name:biosample_substance
HuBMAP: biosample_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/biosample_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.03833484649658203 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/project.tsv ---------
table_name:project
HuBMAP: project: Read from file: df: #rows = 10, #cols: 7

#Lines in file ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/project.tsv: 11
df: #rows = 10, #cols: 7
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering project to database ***
df: #rows = 10, #cols: 7

A slice of df:
                     id_namespace  ...                               abbreviation
0  tag:hubmapconsortium.org,2023:  ...                                     HuBMAP
1  tag:hubmapconsortium.org,2023:  ...                               Stanford_TMC
2  tag:hubmapconsortium.org,2023:  ...                  University_of_Florida_TMC
3  tag:hubmapconsortium.org,2023:  ...                             Vanderbilt_TMC
4  tag:hubmapconsortium.org,2023:  ...                               Stanford_RTI
5  tag:hubmapconsortium.org,2023:  ...     University_of_California_San_Diego_TMC
6  tag:hubmapconsortium.org,2023:  ...                       General_Electric_RTI
7  tag:hubmapconsortium.org,2023:  ...                                 Purdue_TTD
8  tag:hubmapconsortium.org,2023:  ...                        Broad_Institute_RTI
9  tag:hubmapconsortium.org,2023:  ...  TTD_Pacific_Northwest_National_Laboratory

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.08066844940185547 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/phenotype_gene.tsv ---------
table_name:phenotype_gene
HuBMAP: phenotype_gene: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/phenotype_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.0362086296081543 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/file_in_collection.tsv ---------
table_name:file_in_collection
HuBMAP: file_in_collection: Read from file: df: #rows = 9417470, #cols: 4

#Lines in file ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/file_in_collection.tsv: 9417471
df: #rows = 9417470, #cols: 4
pKeys: ['file_id_namespace', 'file_local_id', 'collection_id_namespace', 'collection_local_id']
Going to write the count query
Wrote the count query
*** Entering file_in_collection to database ***
df: #rows = 9417470, #cols: 4

A slice of df:
                file_id_namespace  ... collection_local_id
0  tag:hubmapconsortium.org,2023:  ...     HBM679.NNNK.283
1  tag:hubmapconsortium.org,2023:  ...     HBM679.NNNK.283
2  tag:hubmapconsortium.org,2023:  ...     HBM679.NNNK.283
3  tag:hubmapconsortium.org,2023:  ...     HBM679.NNNK.283
4  tag:hubmapconsortium.org,2023:  ...     HBM679.NNNK.283
5  tag:hubmapconsortium.org,2023:  ...     HBM679.NNNK.283
6  tag:hubmapconsortium.org,2023:  ...     HBM679.NNNK.283
7  tag:hubmapconsortium.org,2023:  ...     HBM679.NNNK.283
8  tag:hubmapconsortium.org,2023:  ...     HBM679.NNNK.283
9  tag:hubmapconsortium.org,2023:  ...     HBM679.NNNK.283

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 294.3313338756561 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/file_describes_biosample.tsv ---------
table_name:file_describes_biosample
HuBMAP: file_describes_biosample: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/file_describes_biosample.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.22004079818725586 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/file.tsv ---------
table_name:file
HuBMAP: file: Read from file: df: #rows = 9417470, #cols: 20

#Lines in file ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/file.tsv: 9417471
df: #rows = 9417470, #cols: 20
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering file to database ***
df: #rows = 9417470, #cols: 20

A slice of df:
                     id_namespace  ...                                      persistent_id
0  tag:hubmapconsortium.org,2023:  ...  drs://hubmap-drs.hubmapconsortium.org/v1/objec...
1  tag:hubmapconsortium.org,2023:  ...  drs://hubmap-drs.hubmapconsortium.org/v1/objec...
2  tag:hubmapconsortium.org,2023:  ...  drs://hubmap-drs.hubmapconsortium.org/v1/objec...
3  tag:hubmapconsortium.org,2023:  ...  drs://hubmap-drs.hubmapconsortium.org/v1/objec...
4  tag:hubmapconsortium.org,2023:  ...  drs://hubmap-drs.hubmapconsortium.org/v1/objec...
5  tag:hubmapconsortium.org,2023:  ...  drs://hubmap-drs.hubmapconsortium.org/v1/objec...
6  tag:hubmapconsortium.org,2023:  ...  drs://hubmap-drs.hubmapconsortium.org/v1/objec...
7  tag:hubmapconsortium.org,2023:  ...  drs://hubmap-drs.hubmapconsortium.org/v1/objec...
8  tag:hubmapconsortium.org,2023:  ...  drs://hubmap-drs.hubmapconsortium.org/v1/objec...
9  tag:hubmapconsortium.org,2023:  ...  drs://hubmap-drs.hubmapconsortium.org/v1/objec...

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 643.1109566688538 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/collection_anatomy.tsv ---------
table_name:collection_anatomy
HuBMAP: collection_anatomy: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/collection_anatomy.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 1.003258466720581 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/phenotype.tsv ---------
table_name:phenotype
HuBMAP: phenotype: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.32263970375061035 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/protein_gene.tsv ---------
table_name:protein_gene
HuBMAP: protein_gene: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/protein_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.32504940032958984 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/data_type.tsv ---------
table_name:data_type
HuBMAP: data_type: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/data_type.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.32357072830200195 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/anatomy.tsv ---------
table_name:anatomy
HuBMAP: anatomy: Read from file: df: #rows = 12, #cols: 4

#Lines in file ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/anatomy.tsv: 13
df: #rows = 12, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.anatomy;
qt_df:                  pk
0    UBERON:0000087
1    UBERON:0001199
2    UBERON:0007311
3    UBERON:0001728
4    UBERON:0001736
..              ...
239  UBERON:0001496
240  UBERON:0000473
241  UBERON:0013069
242  UBERON:0008337
243  UBERON:0001474

[244 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 244, #cols: 1

df_pk (at most first 10 elements): ['UBERON:0000029', 'UBERON:0000059', 'UBERON:0000178', 'UBERON:0000948', 'UBERON:0000995', 'UBERON:0002097', 'UBERON:0002106', 'UBERON:0002108', 'UBERON:0002167', 'UBERON:0002370']
qt_pk (at most first 10 elements): ['UBERON:0000087', 'UBERON:0001199', 'UBERON:0007311', 'UBERON:0001728', 'UBERON:0001736', 'UBERON:0002037', 'UBERON:0009835', 'UBERON:0001621', 'UBERON:0002097', 'UBERON:0001017']
---- Removed rows from df with matching pk
*** Entering anatomy to database ***
df: #rows = 3, #cols: 4

A slice of df:
                id  ... synonyms
8   UBERON:0002167  ...       []
10  UBERON:0004538  ...       []
11  UBERON:0004539  ...       []

[3 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.37435460090637207 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/biosample_disease.tsv ---------
table_name:biosample_disease
HuBMAP: biosample_disease: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/biosample_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.32231664657592773 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/sample_prep_method.tsv ---------
table_name:sample_prep_method
HuBMAP: sample_prep_method: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/sample_prep_method.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.32246923446655273 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/biosample.tsv ---------
table_name:biosample
HuBMAP: biosample: Read from file: df: #rows = 522, #cols: 8

#Lines in file ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/biosample.tsv: 523
df: #rows = 522, #cols: 8
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering biosample to database ***
df: #rows = 522, #cols: 8

A slice of df:
                     id_namespace  ...                                      persistent_id
0  tag:hubmapconsortium.org,2023:  ...  https://portal.hubmapconsortium.org/browse/sam...
1  tag:hubmapconsortium.org,2023:  ...  https://portal.hubmapconsortium.org/browse/sam...
2  tag:hubmapconsortium.org,2023:  ...  https://portal.hubmapconsortium.org/browse/sam...
3  tag:hubmapconsortium.org,2023:  ...  https://portal.hubmapconsortium.org/browse/sam...
4  tag:hubmapconsortium.org,2023:  ...  https://portal.hubmapconsortium.org/browse/sam...
5  tag:hubmapconsortium.org,2023:  ...  https://portal.hubmapconsortium.org/browse/sam...
6  tag:hubmapconsortium.org,2023:  ...  https://portal.hubmapconsortium.org/browse/sam...
7  tag:hubmapconsortium.org,2023:  ...  https://portal.hubmapconsortium.org/browse/sam...
8  tag:hubmapconsortium.org,2023:  ...  https://portal.hubmapconsortium.org/browse/sam...
9  tag:hubmapconsortium.org,2023:  ...  https://portal.hubmapconsortium.org/browse/sam...

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.3840067386627197 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/collection_phenotype.tsv ---------
table_name:collection_phenotype
HuBMAP: collection_phenotype: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/collection_phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3187215328216553 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/disease.tsv ---------
table_name:disease
HuBMAP: disease: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3212087154388428 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/compound.tsv ---------
table_name:compound
HuBMAP: compound: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/compound.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.32152795791625977 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/collection_taxonomy.tsv ---------
table_name:collection_taxonomy
HuBMAP: collection_taxonomy: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/collection_taxonomy.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3225860595703125 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/subject_disease.tsv ---------
table_name:subject_disease
HuBMAP: subject_disease: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/subject_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.32131099700927734 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/assay_type.tsv ---------
table_name:assay_type
HuBMAP: assay_type: Read from file: df: #rows = 16, #cols: 4

#Lines in file ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/assay_type.tsv: 17
df: #rows = 16, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.assay_type;
qt_df:               pk
0    OBI:0003306
1    OBI:0002766
2    OBI:0003104
3    OBI:0002984
4    OBI:0000185
5    OBI:0003300
6    OBI:0002760
7    OBI:0003312
8    OBI:0002117
9    OBI:0001631
10   OBI:0002761
11   OBI:0003301
12   OBI:0003033
13   OBI:0003094
14   OBI:0000893
15   OBI:0003311
16   OBI:0002631
17   OBI:0003297
18   OBI:0001920
19   OBI:0002768
20   OBI:0000716
21   OBI:0001177
22   OBI:0003314
23   OBI:0002112
24   OBI:0002118
25   OBI:0001848
26   OBI:0002623
27   OBI:0003313
28   OBI:0001985
29   OBI:0000366
30   OBI:0000615
31   OBI:0003299
32   OBI:0003089
33   OBI:0003105
34   OBI:0002763
35   OBI:0000626
36   OBI:0003305
37   OBI:0003304
38   OBI:0003303
39   OBI:0002145
40   OBI:0003034
41   OBI:0600047
42  CHMO:0000087
43   OBI:0003302
44   OBI:0001271
---- Executed query, got data.frame: qt_df: #rows = 45, #cols: 1

df_pk (at most first 10 elements): ['OBI:0000470', 'OBI:0001271', 'OBI:0001977', 'OBI:0002117', 'OBI:0003087', 'OBI:0003089', 'OBI:0003092', 'OBI:0003093', 'OBI:0003097', 'OBI:0003098']
qt_pk (at most first 10 elements): ['OBI:0003306', 'OBI:0002766', 'OBI:0003104', 'OBI:0002984', 'OBI:0000185', 'OBI:0003300', 'OBI:0002760', 'OBI:0003312', 'OBI:0002117', 'OBI:0001631']
---- Removed rows from df with matching pk
Processing C2M2 Files...:  50%|█████     | 6/12 [17:59<34:22, 343.68s/it]*** Entering assay_type to database ***
df: #rows = 13, #cols: 4

A slice of df:
             id  ...                          synonyms
0   OBI:0000470  ...                                []
2   OBI:0001977  ...                                []
4   OBI:0003087  ...  ["intrinsic fluorescence assay"]
6   OBI:0003092  ...                                []
7   OBI:0003093  ...                         ["CODEX"]
8   OBI:0003097  ...                         ["LC-MS"]
9   OBI:0003098  ...                                []
10  OBI:0003099  ...                     ["MALDI-IMS"]
11  OBI:0003100  ...                          ["MIBI"]
12  OBI:0003101  ...                      ["NanoDESI"]

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.37203240394592285 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/phenotype_disease.tsv ---------
table_name:phenotype_disease
HuBMAP: phenotype_disease: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/phenotype_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.32036924362182617 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/protein.tsv ---------
table_name:protein
HuBMAP: protein: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/protein.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.32061100006103516 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/project_in_project.tsv ---------
table_name:project_in_project
HuBMAP: project_in_project: Read from file: df: #rows = 9, #cols: 4

#Lines in file ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/project_in_project.tsv: 10
df: #rows = 9, #cols: 4
pKeys: ['parent_project_id_namespace', 'parent_project_local_id', 'child_project_id_namespace', 'child_project_local_id']
Going to write the count query
Wrote the count query
*** Entering project_in_project to database ***
df: #rows = 9, #cols: 4

A slice of df:
      parent_project_id_namespace  ...                     child_project_local_id
0  tag:hubmapconsortium.org,2023:  ...                               Stanford TMC
1  tag:hubmapconsortium.org,2023:  ...                  University of Florida TMC
2  tag:hubmapconsortium.org,2023:  ...                             Vanderbilt TMC
3  tag:hubmapconsortium.org,2023:  ...                               Stanford RTI
4  tag:hubmapconsortium.org,2023:  ...     University of California San Diego TMC
5  tag:hubmapconsortium.org,2023:  ...                       General Electric RTI
6  tag:hubmapconsortium.org,2023:  ...                                 Purdue TTD
7  tag:hubmapconsortium.org,2023:  ...                        Broad Institute RTI
8  tag:hubmapconsortium.org,2023:  ...  TTD Pacific Northwest National Laboratory

[9 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.3688685894012451 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/collection_gene.tsv ---------
table_name:collection_gene
HuBMAP: collection_gene: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/collection_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3209989070892334 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/subject_role_taxonomy.tsv ---------
table_name:subject_role_taxonomy
HuBMAP: subject_role_taxonomy: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/subject_role_taxonomy.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.32415342330932617 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/subject_phenotype.tsv ---------
table_name:subject_phenotype
HuBMAP: subject_phenotype: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/subject_phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.32672595977783203 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/gene.tsv ---------
table_name:gene
HuBMAP: gene: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.32593393325805664 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/analysis_type.tsv ---------
table_name:analysis_type
HuBMAP: analysis_type: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/analysis_type.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3213932514190674 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/biosample_gene.tsv ---------
table_name:biosample_gene
HuBMAP: biosample_gene: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/biosample_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.32390785217285156 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/collection_protein.tsv ---------
table_name:collection_protein
HuBMAP: collection_protein: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/collection_protein.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3240535259246826 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/collection_defined_by_project.tsv ---------
table_name:collection_defined_by_project
HuBMAP: collection_defined_by_project: Read from file: df: #rows = 1185, #cols: 4

#Lines in file ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/collection_defined_by_project.tsv: 1186
df: #rows = 1185, #cols: 4
pKeys: ['collection_id_namespace', 'collection_local_id', 'project_id_namespace', 'project_local_id']
Going to write the count query
Wrote the count query
*** Entering collection_defined_by_project to database ***
df: #rows = 1185, #cols: 4

A slice of df:
          collection_id_namespace  ...                        project_local_id
0  tag:hubmapconsortium.org,2023:  ...                            Stanford TMC
1  tag:hubmapconsortium.org,2023:  ...               University of Florida TMC
2  tag:hubmapconsortium.org,2023:  ...                            Stanford TMC
3  tag:hubmapconsortium.org,2023:  ...                            Stanford TMC
4  tag:hubmapconsortium.org,2023:  ...                          Vanderbilt TMC
5  tag:hubmapconsortium.org,2023:  ...                            Stanford RTI
6  tag:hubmapconsortium.org,2023:  ...                            Stanford TMC
7  tag:hubmapconsortium.org,2023:  ...  University of California San Diego TMC
8  tag:hubmapconsortium.org,2023:  ...                            Stanford TMC
9  tag:hubmapconsortium.org,2023:  ...                          Vanderbilt TMC

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.3910789489746094 seconds.


================================== DCC short label: IDG =============================================
--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/analysis_type.tsv ---------
table_name:analysis_type
IDG: analysis_type: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/analysis_type.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.32427430152893066 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/protein_gene.tsv ---------
table_name:protein_gene
IDG: protein_gene: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/protein_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3260982036590576 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/biosample_from_subject.tsv ---------
table_name:biosample_from_subject
IDG: biosample_from_subject: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/biosample_from_subject.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.32703065872192383 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/disease.tsv ---------
table_name:disease
IDG: disease: Read from file: df: #rows = 1899, #cols: 4

#Lines in file ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/disease.tsv: 1900
df: #rows = 1899, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.disease;
qt_df:               pk
0     DOID:10534
1     DOID:10652
2     DOID:10941
3      DOID:4914
4      DOID:9970
5      DOID:9074
6      DOID:8893
7      DOID:1184
8      DOID:8778
9      DOID:9778
10     DOID:3073
11     DOID:1520
12     DOID:8677
13    DOID:12217
14     DOID:1287
15     DOID:4905
16     DOID:9744
17      DOID:219
18      DOID:934
19    DOID:10286
20     DOID:9256
21     DOID:5844
22     DOID:2377
23     DOID:2841
24     DOID:6000
25     DOID:8577
26    DOID:14330
27  DOID:0080832
28     DOID:6713
29     DOID:5295
30      DOID:409
---- Executed query, got data.frame: qt_df: #rows = 31, #cols: 1

df_pk (at most first 10 elements): ['DOID:10003', 'DOID:10016', 'DOID:10017', 'DOID:1002', 'DOID:10033', 'DOID:10041', 'DOID:10112', 'DOID:10124', 'DOID:10126', 'DOID:10140']
qt_pk (at most first 10 elements): ['DOID:10534', 'DOID:10652', 'DOID:10941', 'DOID:4914', 'DOID:9970', 'DOID:9074', 'DOID:8893', 'DOID:1184', 'DOID:8778', 'DOID:9778']
---- Removed rows from df with matching pk
*** Entering disease to database ***
df: #rows = 1870, #cols: 4

A slice of df:
           id  ...                                           synonyms
0  DOID:10003  ...  ["DOID:11053","DOID:12112","DOID:12114","centr...
1  DOID:10016  ...  ["MEN type IIB","MEN2B","mucosal neuroma syndr...
2  DOID:10017  ...  ["MEN type I","Wermer syndrome","Wermer's synd...
3   DOID:1002  ...                                                 []
4  DOID:10033  ...  ["Ciliary muscle paresis","Cycloplegic paralys...
5  DOID:10041  ...  ["familial atypical multiple mole-melanoma","F...
6  DOID:10112  ...  ["African sleeping sickness","African trypanos...
7  DOID:10124  ...                                      ["DOID:2284"]
8  DOID:10126  ...                                 ["conical cornea"]
9  DOID:10140  ...      ["dry eye disease","Tear film insufficiency"]

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.4249858856201172 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection.tsv ---------
table_name:collection
IDG: collection: Read from file: df: #rows = 74743, #cols: 8

#Lines in file ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection.tsv: 74744
df: #rows = 74743, #cols: 8
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering collection to database ***
df: #rows = 74743, #cols: 8

A slice of df:
                       id_namespace  ... abbreviation
0  https://www.druggablegenome.net/  ...          NaN
1  https://www.druggablegenome.net/  ...          NaN
2  https://www.druggablegenome.net/  ...          NaN
3  https://www.druggablegenome.net/  ...          NaN
4  https://www.druggablegenome.net/  ...          NaN
5  https://www.druggablegenome.net/  ...          NaN
6  https://www.druggablegenome.net/  ...          NaN
7  https://www.druggablegenome.net/  ...          NaN
8  https://www.druggablegenome.net/  ...          NaN
9  https://www.druggablegenome.net/  ...          NaN

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 2.3511404991149902 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/gene.tsv ---------
table_name:gene
IDG: gene: Read from file: df: #rows = 19634, #cols: 5

#Lines in file ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/gene.tsv: 19635
df: #rows = 19634, #cols: 5
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.gene;
qt_df: Empty DataFrame
Columns: [pk]
Index: []
---- Executed query, got data.frame: qt_df: #rows = 0, #cols: 1

df_pk (at most first 10 elements): ['ENSG00000000003', 'ENSG00000000005', 'ENSG00000000419', 'ENSG00000000457', 'ENSG00000000460', 'ENSG00000000938', 'ENSG00000000971', 'ENSG00000001036', 'ENSG00000001084', 'ENSG00000001167']
qt_pk (at most first 10 elements): []
---- Removed rows from df with matching pk
*** Entering gene to database ***
df: #rows = 19634, #cols: 5

A slice of df:
                id  ...       organism
0  ENSG00000000003  ...  NCBI:txid9606
1  ENSG00000000005  ...  NCBI:txid9606
2  ENSG00000000419  ...  NCBI:txid9606
3  ENSG00000000457  ...  NCBI:txid9606
4  ENSG00000000460  ...  NCBI:txid9606
5  ENSG00000000938  ...  NCBI:txid9606
6  ENSG00000000971  ...  NCBI:txid9606
7  ENSG00000001036  ...  NCBI:txid9606
8  ENSG00000001084  ...  NCBI:txid9606
9  ENSG00000001167  ...  NCBI:txid9606

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 2.78489089012146 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/file_describes_collection.tsv ---------
table_name:file_describes_collection
IDG: file_describes_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/file_describes_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3253459930419922 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/subject_race.tsv ---------
table_name:subject_race
IDG: subject_race: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/subject_race.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3268735408782959 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/project_in_project.tsv ---------
table_name:project_in_project
IDG: project_in_project: Read from file: df: #rows = 5, #cols: 4

#Lines in file ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/project_in_project.tsv: 6
df: #rows = 5, #cols: 4
pKeys: ['parent_project_id_namespace', 'parent_project_local_id', 'child_project_id_namespace', 'child_project_local_id']
Going to write the count query
Wrote the count query
*** Entering project_in_project to database ***
df: #rows = 5, #cols: 4

A slice of df:
        parent_project_id_namespace  ... child_project_local_id
0  https://www.druggablegenome.net/  ...            Harmonizome
1  https://www.druggablegenome.net/  ...           Drugmonizome
2  https://www.druggablegenome.net/  ...      idg_tcrd_diseases
3  https://www.druggablegenome.net/  ...  idg_drugcentral_drugs
4  https://www.druggablegenome.net/  ...       idg_tcrd_targets

[5 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.3719055652618408 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/subject_substance.tsv ---------
table_name:subject_substance
IDG: subject_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/subject_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.32533884048461914 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/id_namespace.tsv ---------
table_name:id_namespace
IDG: id_namespace: Read from file: df: #rows = 4, #cols: 4

#Lines in file ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/id_namespace.tsv: 5
df: #rows = 4, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.id_namespace;
qt_df:                                pk
0                           egtex
1    https://www.data.glygen.org/
2     https://data.4dnucleome.org
3                            gtex
4                      ERCC-exRNA
5     tag:hmpdacc.org,2022-04-04:
6                      adult_gtex
7  tag:hubmapconsortium.org,2023:
---- Executed query, got data.frame: qt_df: #rows = 8, #cols: 1

df_pk (at most first 10 elements): ['https://druggablegenome.net/cfde_idg_drugcentral_drugs', 'https://druggablegenome.net/cfde_idg_tcrd_diseases', 'https://druggablegenome.net/cfde_idg_tcrd_targets', 'https://www.druggablegenome.net/']
qt_pk (at most first 10 elements): ['egtex', 'https://www.data.glygen.org/', 'https://data.4dnucleome.org', 'gtex', 'ERCC-exRNA', 'tag:hmpdacc.org,2022-04-04:', 'adult_gtex', 'tag:hubmapconsortium.org,2023:']
---- Removed rows from df with matching pk
*** Entering id_namespace to database ***
df: #rows = 4, #cols: 4

A slice of df:
                                                  id  ...                                        description
2  https://druggablegenome.net/cfde_idg_drugcentr...  ...  IDG DrugCentral.org, online reference for appr...
1  https://druggablegenome.net/cfde_idg_tcrd_dise...  ...  IDG Target Central Resource Database (TCRD) Di...
3  https://druggablegenome.net/cfde_idg_tcrd_targets  ...  IDG Target Central Resource Database (TCRD) Ta...
0                   https://www.druggablegenome.net/  ...  The goal of IDG is to improve our understandin...

[4 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.38057684898376465 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/file_format.tsv ---------
table_name:file_format
IDG: file_format: Read from file: df: #rows = 4, #cols: 4

#Lines in file ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/file_format.tsv: 5
df: #rows = 4, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.file_format;
qt_df:              pk
0   format:3654
1   format:3603
2   format:3004
3   format:3464
4   format:3579
5   format:1936
6   format:3987
7   format:2332
8   format:1975
9   format:3712
10  format:2572
11  format:3591
12  format:3590
13  format:3873
14  format:3006
15  format:1930
16  format:3468
17  format:3244
18  format:3727
19  format:3752
20  format:1919
21  format:3583
22  format:1929
23  format:3981
24  format:3746
25  format:3989
26  format:2330
27  format:3508
28  format:2331
29  format:3003
30  format:3839
31  format:3620
32  format:2333
33  format:3475
---- Executed query, got data.frame: qt_df: #rows = 34, #cols: 1

df_pk (at most first 10 elements): ['format:2330', 'format:3464', 'format:3475', 'format:3989']
qt_pk (at most first 10 elements): ['format:3654', 'format:3603', 'format:3004', 'format:3464', 'format:3579', 'format:1936', 'format:3987', 'format:2332', 'format:1975', 'format:3712']
---- Removed rows from df with matching pk
*** Entering file_format to database ***
df: #rows = 0, #cols: 4

A slice of df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.37000560760498047 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/ncbi_taxonomy.tsv ---------
table_name:ncbi_taxonomy
IDG: ncbi_taxonomy: Read from file: df: #rows = 1, #cols: 5

#Lines in file ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/ncbi_taxonomy.tsv: 2
df: #rows = 1, #cols: 5
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.ncbi_taxonomy;
qt_df:                     pk
0     NCBI:txid1095745
1     NCBI:txid1739397
2      NCBI:txid742723
3     NCBI:txid1715193
4      NCBI:txid469585
...                ...
2320   NCBI:txid742726
2321  NCBI:txid1715207
2322  NCBI:txid1161416
2323   NCBI:txid765081
2324   NCBI:txid999422

[2325 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 2325, #cols: 1

df_pk (at most first 10 elements): ['NCBI:txid9606']
qt_pk (at most first 10 elements): ['NCBI:txid1095745', 'NCBI:txid1739397', 'NCBI:txid742723', 'NCBI:txid1715193', 'NCBI:txid469585', 'NCBI:txid1581186', 'NCBI:txid762963', 'NCBI:txid1542093', 'NCBI:txid1134801', 'NCBI:txid525378']
---- Removed rows from df with matching pk
*** Entering ncbi_taxonomy to database ***
df: #rows = 0, #cols: 5

A slice of df:
Empty DataFrame
Columns: [id, clade, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.36847758293151855 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/project.tsv ---------
table_name:project
IDG: project: Read from file: df: #rows = 6, #cols: 7

#Lines in file ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/project.tsv: 7
df: #rows = 6, #cols: 7
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering project to database ***
df: #rows = 6, #cols: 7

A slice of df:
                                        id_namespace  ... abbreviation
0                   https://www.druggablegenome.net/  ...          NaN
1                   https://www.druggablegenome.net/  ...          IDG
2                   https://www.druggablegenome.net/  ...          NaN
3  https://druggablegenome.net/cfde_idg_tcrd_dise...  ...       tgtpgs
4  https://druggablegenome.net/cfde_idg_drugcentr...  ...       drgpgs
5  https://druggablegenome.net/cfde_idg_tcrd_targets  ...       tgtpgs

[6 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.3768491744995117 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection_taxonomy.tsv ---------
table_name:collection_taxonomy
IDG: collection_taxonomy: Read from file: df: #rows = 18479, #cols: 3

#Lines in file ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection_taxonomy.tsv: 18480
df: #rows = 18479, #cols: 3
pKeys: ['collection_id_namespace', 'collection_local_id', 'taxon']
Going to write the count query
Wrote the count query
*** Entering collection_taxonomy to database ***
df: #rows = 18479, #cols: 3

A slice of df:
            collection_id_namespace     collection_local_id          taxon
0  https://www.druggablegenome.net/     GABPB1_associations  NCBI:txid9606
1  https://www.druggablegenome.net/      NR2C2_associations  NCBI:txid9606
2  https://www.druggablegenome.net/       FSHR_associations  NCBI:txid9606
3  https://www.druggablegenome.net/  C17orf107_associations  NCBI:txid9606
4  https://www.druggablegenome.net/      BEND7_associations  NCBI:txid9606
5  https://www.druggablegenome.net/    TNFAIP1_associations  NCBI:txid9606
6  https://www.druggablegenome.net/      SCRN1_associations  NCBI:txid9606
7  https://www.druggablegenome.net/      ITFG2_associations  NCBI:txid9606
8  https://www.druggablegenome.net/      DCAF5_associations  NCBI:txid9606
9  https://www.druggablegenome.net/       WNT6_associations  NCBI:txid9606
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.6096880435943604 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/subject_in_collection.tsv ---------
table_name:subject_in_collection
IDG: subject_in_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/subject_in_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.32280874252319336 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/assay_type.tsv ---------
table_name:assay_type
IDG: assay_type: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/assay_type.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3301429748535156 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/subject_role_taxonomy.tsv ---------
table_name:subject_role_taxonomy
IDG: subject_role_taxonomy: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/subject_role_taxonomy.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.32505059242248535 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/biosample_in_collection.tsv ---------
table_name:biosample_in_collection
IDG: biosample_in_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/biosample_in_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3238861560821533 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/substance.tsv ---------
table_name:substance
IDG: substance: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3228495121002197 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/phenotype_disease.tsv ---------
table_name:phenotype_disease
IDG: phenotype_disease: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/phenotype_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.32447171211242676 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/file_in_collection.tsv ---------
table_name:file_in_collection
IDG: file_in_collection: Read from file: df: #rows = 74743, #cols: 4

#Lines in file ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/file_in_collection.tsv: 74744
df: #rows = 74743, #cols: 4
pKeys: ['file_id_namespace', 'file_local_id', 'collection_id_namespace', 'collection_local_id']
Going to write the count query
Wrote the count query
*** Entering file_in_collection to database ***
df: #rows = 74743, #cols: 4

A slice of df:
                  file_id_namespace  ...        collection_local_id
0  https://www.druggablegenome.net/  ...        GABPB1_associations
1  https://www.druggablegenome.net/  ...         NR2C2_associations
2  https://www.druggablegenome.net/  ...          FSHR_associations
3  https://www.druggablegenome.net/  ...          RMRP_associations
4  https://www.druggablegenome.net/  ...  LOC100129894_associations
5  https://www.druggablegenome.net/  ...      HMGB1P21_associations
6  https://www.druggablegenome.net/  ...     C17orf107_associations
7  https://www.druggablegenome.net/  ...     LOC650024_associations
8  https://www.druggablegenome.net/  ...  LOC100130924_associations
9  https://www.druggablegenome.net/  ...      MIR143HG_associations

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.7068016529083252 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection_in_collection.tsv ---------
table_name:collection_in_collection
IDG: collection_in_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection_in_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3318808078765869 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection_compound.tsv ---------
table_name:collection_compound
IDG: collection_compound: Read from file: df: #rows = 16604, #cols: 3

#Lines in file ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection_compound.tsv: 16605
df: #rows = 16604, #cols: 3
pKeys: ['collection_id_namespace', 'collection_local_id', 'compound']
Going to write the count query
Wrote the count query
*** Entering collection_compound to database ***
df: #rows = 16604, #cols: 3

A slice of df:
            collection_id_namespace  ...  compound
0  https://www.druggablegenome.net/  ...   1069140
1  https://www.druggablegenome.net/  ...   6102686
2  https://www.druggablegenome.net/  ...  24748050
3  https://www.druggablegenome.net/  ...  16131215
4  https://www.druggablegenome.net/  ...      1103
5  https://www.druggablegenome.net/  ...      5960
6  https://www.druggablegenome.net/  ...      6057
7  https://www.druggablegenome.net/  ...    439174
8  https://www.druggablegenome.net/  ...     33032
9  https://www.druggablegenome.net/  ...       586

[10 rows x 3 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.6193075180053711 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/data_type.tsv ---------
table_name:data_type
IDG: data_type: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/data_type.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3259904384613037 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/dcc.tsv ---------
table_name:dcc
IDG: dcc: Read from file: df: #rows = 1, #cols: 9

/home/mano/DRC/DRC-Portals/database/populateC2M2FromS3.py:272: DtypeWarning: Columns (12) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv(table_str, delimiter='\t');
#Lines in file ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/dcc.tsv: 2
df: #rows = 1, #cols: 9
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.dcc;
qt_df:                          pk
0  cfde_registry_dcc:glygen
1   cfde_registry_dcc:exrna
2     cfde_registry_dcc:4dn
3     cfde_registry_dcc:hmp
4  cfde_registry_dcc:hubmap
5    cfde_registry_dcc:gtex
---- Executed query, got data.frame: qt_df: #rows = 6, #cols: 1

df_pk (at most first 10 elements): ['cfde_registry_dcc:idg']
qt_pk (at most first 10 elements): ['cfde_registry_dcc:glygen', 'cfde_registry_dcc:exrna', 'cfde_registry_dcc:4dn', 'cfde_registry_dcc:hmp', 'cfde_registry_dcc:hubmap', 'cfde_registry_dcc:gtex']
---- Removed rows from df with matching pk
*** Entering dcc to database ***
df: #rows = 1, #cols: 9

A slice of df:
                      id  ...         contact_email
0  cfde_registry_dcc:idg  ...  JJYang@salud.unm.edu

[1 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.377086877822876 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/phenotype.tsv ---------
table_name:phenotype
IDG: phenotype: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3235504627227783 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/file_describes_biosample.tsv ---------
table_name:file_describes_biosample
IDG: file_describes_biosample: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/file_describes_biosample.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.32297205924987793 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection_anatomy.tsv ---------
table_name:collection_anatomy
IDG: collection_anatomy: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection_anatomy.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.32427358627319336 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/biosample_substance.tsv ---------
table_name:biosample_substance
IDG: biosample_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/biosample_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3249650001525879 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/biosample.tsv ---------
table_name:biosample
IDG: biosample: Read from file: df: #rows = 0, #cols: 8

#Lines in file ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/biosample.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.34685492515563965 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/biosample_disease.tsv ---------
table_name:biosample_disease
IDG: biosample_disease: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/biosample_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3227558135986328 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/file.tsv ---------
table_name:file
IDG: file: Read from file: df: #rows = 75893, #cols: 20

#Lines in file ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/file.tsv: 75894
df: #rows = 75893, #cols: 20
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering file to database ***
df: #rows = 75893, #cols: 20

A slice of df:
                       id_namespace  ...                                      persistent_id
0  https://www.druggablegenome.net/  ...  https://kmc-idg.s3.us-east-2.amazonaws.com/ism...
1  https://www.druggablegenome.net/  ...  https://kmc-idg.s3.us-east-2.amazonaws.com/ism...
2  https://www.druggablegenome.net/  ...  https://kmc-idg.s3.us-east-2.amazonaws.com/ism...
3  https://www.druggablegenome.net/  ...  https://kmc-idg.s3.us-east-2.amazonaws.com/ism...
4  https://www.druggablegenome.net/  ...  https://kmc-idg.s3.us-east-2.amazonaws.com/ism...
5  https://www.druggablegenome.net/  ...  https://kmc-idg.s3.us-east-2.amazonaws.com/ism...
6  https://www.druggablegenome.net/  ...  https://kmc-idg.s3.us-east-2.amazonaws.com/ism...
7  https://www.druggablegenome.net/  ...  https://kmc-idg.s3.us-east-2.amazonaws.com/ism...
8  https://www.druggablegenome.net/  ...  https://kmc-idg.s3.us-east-2.amazonaws.com/ism...
9  https://www.druggablegenome.net/  ...  https://kmc-idg.s3.us-east-2.amazonaws.com/ism...

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 4.243682384490967 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/protein.tsv ---------
table_name:protein
IDG: protein: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/protein.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.34856486320495605 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/anatomy.tsv ---------
table_name:anatomy
IDG: anatomy: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/anatomy.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.34908342361450195 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection_defined_by_project.tsv ---------
table_name:collection_defined_by_project
IDG: collection_defined_by_project: Read from file: df: #rows = 74743, #cols: 4

#Lines in file ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection_defined_by_project.tsv: 74744
df: #rows = 74743, #cols: 4
pKeys: ['collection_id_namespace', 'collection_local_id', 'project_id_namespace', 'project_local_id']
Going to write the count query
Wrote the count query
*** Entering collection_defined_by_project to database ***
df: #rows = 74743, #cols: 4

A slice of df:
            collection_id_namespace  ... project_local_id
0  https://www.druggablegenome.net/  ...      Harmonizome
1  https://www.druggablegenome.net/  ...      Harmonizome
2  https://www.druggablegenome.net/  ...      Harmonizome
3  https://www.druggablegenome.net/  ...      Harmonizome
4  https://www.druggablegenome.net/  ...      Harmonizome
5  https://www.druggablegenome.net/  ...      Harmonizome
6  https://www.druggablegenome.net/  ...      Harmonizome
7  https://www.druggablegenome.net/  ...      Harmonizome
8  https://www.druggablegenome.net/  ...      Harmonizome
9  https://www.druggablegenome.net/  ...      Harmonizome

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.9888420104980469 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/subject.tsv ---------
table_name:subject
IDG: subject: Read from file: df: #rows = 0, #cols: 10

#Lines in file ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/subject.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3496592044830322 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection_protein.tsv ---------
table_name:collection_protein
IDG: collection_protein: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection_protein.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.35048961639404297 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/file_describes_subject.tsv ---------
table_name:file_describes_subject
IDG: file_describes_subject: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/file_describes_subject.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.350078821182251 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection_disease.tsv ---------
table_name:collection_disease
IDG: collection_disease: Read from file: df: #rows = 1899, #cols: 3

#Lines in file ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection_disease.tsv: 1900
df: #rows = 1899, #cols: 3
pKeys: ['collection_id_namespace', 'collection_local_id', 'disease']
Going to write the count query
Wrote the count query
*** Entering collection_disease to database ***
df: #rows = 1899, #cols: 3

A slice of df:
                             collection_id_namespace  ...  disease
0  https://druggablegenome.net/cfde_idg_tcrd_dise...  ...  DOID:15
1  https://druggablegenome.net/cfde_idg_tcrd_dise...  ...  DOID:17
2  https://druggablegenome.net/cfde_idg_tcrd_dise...  ...  DOID:28
3  https://druggablegenome.net/cfde_idg_tcrd_dise...  ...  DOID:37
4  https://druggablegenome.net/cfde_idg_tcrd_dise...  ...  DOID:47
5  https://druggablegenome.net/cfde_idg_tcrd_dise...  ...  DOID:48
6  https://druggablegenome.net/cfde_idg_tcrd_dise...  ...  DOID:50
7  https://druggablegenome.net/cfde_idg_tcrd_dise...  ...  DOID:57
8  https://druggablegenome.net/cfde_idg_tcrd_dise...  ...  DOID:65
9  https://druggablegenome.net/cfde_idg_tcrd_dise...  ...  DOID:66

[10 rows x 3 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.45152783393859863 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/sample_prep_method.tsv ---------
table_name:sample_prep_method
IDG: sample_prep_method: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/sample_prep_method.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3654601573944092 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/phenotype_gene.tsv ---------
table_name:phenotype_gene
IDG: phenotype_gene: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/phenotype_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.350797176361084 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/biosample_gene.tsv ---------
table_name:biosample_gene
IDG: biosample_gene: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/biosample_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3470122814178467 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection_substance.tsv ---------
table_name:collection_substance
IDG: collection_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3501131534576416 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection_phenotype.tsv ---------
table_name:collection_phenotype
IDG: collection_phenotype: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection_phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.40883874893188477 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection_gene.tsv ---------
table_name:collection_gene
IDG: collection_gene: Read from file: df: #rows = 37774, #cols: 3

#Lines in file ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection_gene.tsv: 37775
df: #rows = 37774, #cols: 3
pKeys: ['collection_id_namespace', 'collection_local_id', 'gene']
Going to write the count query
Wrote the count query
*** Entering collection_gene to database ***
df: #rows = 37774, #cols: 3

A slice of df:
            collection_id_namespace     collection_local_id             gene
0  https://www.druggablegenome.net/     GABPB1_associations  ENSG00000104064
1  https://www.druggablegenome.net/      NR2C2_associations  ENSG00000177463
2  https://www.druggablegenome.net/       FSHR_associations  ENSG00000170820
3  https://www.druggablegenome.net/  C17orf107_associations  ENSG00000205710
4  https://www.druggablegenome.net/      BEND7_associations  ENSG00000165626
5  https://www.druggablegenome.net/    TNFAIP1_associations  ENSG00000109079
6  https://www.druggablegenome.net/      SCRN1_associations  ENSG00000136193
7  https://www.druggablegenome.net/      ITFG2_associations  ENSG00000111203
8  https://www.druggablegenome.net/      DCAF5_associations  ENSG00000139990
9  https://www.druggablegenome.net/       WNT6_associations  ENSG00000115596
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9300796985626221 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/compound.tsv ---------
table_name:compound
IDG: compound: Read from file: df: #rows = 12962, #cols: 4

#Lines in file ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/compound.tsv: 12963
df: #rows = 12962, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.compound;
qt_df:              pk
0      G21286VC
1      G66231VJ
2      G55943II
3      G30268KJ
4      G76631VS
...         ...
45186  G94172VX
45187  G38602GT
45188  91846918
45189  G28852XW
45190  G04679CK

[45191 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 45191, #cols: 1

df_pk (at most first 10 elements): ['6', '11', '19', '38', '44', '49', '51', '58', '70', '72']
qt_pk (at most first 10 elements): ['G21286VC', 'G66231VJ', 'G55943II', 'G30268KJ', 'G76631VS', 'G42138LH', 'G10602EW', 'G84227HS', 'G72207TE', 'G19073EP']
---- Removed rows from df with matching pk
*** Entering compound to database ***
df: #rows = 12920, #cols: 4

Processing C2M2 Files...:  58%|█████▊    | 7/12 [18:35<20:15, 243.15s/it]A slice of df:
       id  ...                                           synonyms
9825    6  ...  ["1-chloro-2,4-dinitrobenzene", "2,4-Dinitroch...
534    11  ...  ["1,2-dichloroethane", "Ethylene dichloride", ...
3329   19  ...  ["2,3-Dihydroxybenzoic acid", "303-38-8", "Pyr...
5650   38  ...  ["2-dehydropantoate", "ketopantoic acid", "4-h...
6107   44  ...  ["tartronate", "hydroxypropanedioate", "hydrox...
7919   49  ...  ["3-Methyl-2-oxobutanoic acid", "759-05-7", "3...
8110   51  ...  ["2-ketoglutaric acid", "2-Oxopentanedioic aci...
9702   58  ...  ["2-oxobutanoic acid", "2-oxobutyric acid", "2...
11256  70  ...  ["4-methyl-2-oxopentanoic acid", "4-Methyl-2-o...
11578  72  ...  ["3,4-DIHYDROXYBENZOIC ACID", "protocatechuic ...

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 5.131365060806274 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/subject_phenotype.tsv ---------
table_name:subject_phenotype
IDG: subject_phenotype: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/subject_phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3252546787261963 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/subject_disease.tsv ---------
table_name:subject_disease
IDG: subject_disease: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/subject_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.32776951789855957 seconds.


================================== DCC short label: Kids%20First =============================================
--------- ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/collection.tsv ---------
table_name:collection
Kids%20First: collection: Read from file: df: #rows = 0, #cols: 8

#Lines in file ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.32538866996765137 seconds.

--------- ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/anatomy.tsv ---------
table_name:anatomy
Kids%20First: anatomy: Read from file: df: #rows = 18, #cols: 4

#Lines in file ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/anatomy.tsv: 19
df: #rows = 18, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.anatomy;
qt_df:                  pk
0    UBERON:0000087
1    UBERON:0001199
2    UBERON:0007311
3    UBERON:0001728
4    UBERON:0001736
..              ...
242  UBERON:0001496
243  UBERON:0000473
244  UBERON:0013069
245  UBERON:0008337
246  UBERON:0001474

[247 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 247, #cols: 1

df_pk (at most first 10 elements): ['UBERON:0000178', 'UBERON:0000479', 'UBERON:0000955', 'UBERON:0000988', 'UBERON:0001003', 'UBERON:0001017', 'UBERON:0001037', 'UBERON:0001836', 'UBERON:0002048', 'UBERON:0002363']
qt_pk (at most first 10 elements): ['UBERON:0000087', 'UBERON:0001199', 'UBERON:0007311', 'UBERON:0001728', 'UBERON:0001736', 'UBERON:0002037', 'UBERON:0009835', 'UBERON:0001621', 'UBERON:0002097', 'UBERON:0001017']
---- Removed rows from df with matching pk
*** Entering anatomy to database ***
df: #rows = 7, #cols: 4

A slice of df:
                id  ...                                           synonyms
3   UBERON:0000988  ...                ["pons of Varolius","pons Varolii"]
4   UBERON:0001003  ...        ["epidermis","skin","vertebrate epidermis"]
6   UBERON:0001037  ...                                           ["hair"]
9   UBERON:0002363  ...         ["dura mater of neuraxis","pachymeninges"]
14  UBERON:0003728  ...                      ["mediastinal part of chest"]
16  UBERON:0010011  ...  ["basal ganglia","basal ganglia set","basal nu...
17  UBERON:0016435  ...                                                 []

[7 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.3796043395996094 seconds.

--------- ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/file_in_collection.tsv ---------
table_name:file_in_collection
Kids%20First: file_in_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/file_in_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.323270320892334 seconds.

--------- ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/file.tsv ---------
table_name:file
Kids%20First: file: Read from file: df: #rows = 290423, #cols: 20

#Lines in file ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/file.tsv: 290424
df: #rows = 290423, #cols: 20
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering file to database ***
df: #rows = 290423, #cols: 20

A slice of df:
  id_namespace  ...                                      persistent_id
0   kidsfirst:  ...  drs://data.kidsfirstdrc.org/e0f8bb06-a2d5-40ad...
1   kidsfirst:  ...                                                NaN
2   kidsfirst:  ...  drs://data.kidsfirstdrc.org/6e5ae75a-268b-47fb...
3   kidsfirst:  ...  drs://data.kidsfirstdrc.org/ff168eff-387d-460b...
4   kidsfirst:  ...                                                NaN
5   kidsfirst:  ...                                                NaN
6   kidsfirst:  ...  drs://data.kidsfirstdrc.org/d5c43836-bc0d-4acd...
7   kidsfirst:  ...                                                NaN
8   kidsfirst:  ...                                                NaN
9   kidsfirst:  ...                                                NaN

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 15.088650465011597 seconds.

--------- ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/gene.tsv ---------
table_name:gene
Kids%20First: gene: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.35774731636047363 seconds.

--------- ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/subject_role_taxonomy.tsv ---------
table_name:subject_role_taxonomy
Kids%20First: subject_role_taxonomy: Read from file: df: #rows = 29662, #cols: 4

#Lines in file ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/subject_role_taxonomy.tsv: 29663
df: #rows = 29662, #cols: 4
pKeys: ['subject_id_namespace', 'subject_local_id', 'role_id', 'taxonomy_id']
Going to write the count query
Wrote the count query
*** Entering subject_role_taxonomy to database ***
df: #rows = 29662, #cols: 4

A slice of df:
  subject_id_namespace subject_local_id              role_id    taxonomy_id
0           kidsfirst:      PT_0001K4K1  cfde_subject_role:0  NCBI:txid9606
1           kidsfirst:      PT_0021ZCHS  cfde_subject_role:0  NCBI:txid9606
2           kidsfirst:      PT_002MFVY5  cfde_subject_role:0  NCBI:txid9606
3           kidsfirst:      PT_004FDKPF  cfde_subject_role:0  NCBI:txid9606
4           kidsfirst:      PT_004KEANN  cfde_subject_role:0  NCBI:txid9606
5           kidsfirst:      PT_0059H2XT  cfde_subject_role:0  NCBI:txid9606
6           kidsfirst:      PT_005B7CZ4  cfde_subject_role:0  NCBI:txid9606
7           kidsfirst:      PT_005X8BR9  cfde_subject_role:0  NCBI:txid9606
8           kidsfirst:      PT_00606X3B  cfde_subject_role:0  NCBI:txid9606
9           kidsfirst:      PT_0068CEXW  cfde_subject_role:0  NCBI:txid9606
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.7620220184326172 seconds.

--------- ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/file_format.tsv ---------
table_name:file_format
Kids%20First: file_format: Read from file: df: #rows = 12, #cols: 4

#Lines in file ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/file_format.tsv: 13
df: #rows = 12, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.file_format;
qt_df:              pk
0   format:3654
1   format:3603
2   format:3004
3   format:3464
4   format:3579
5   format:1936
6   format:3987
7   format:2332
8   format:1975
9   format:3712
10  format:2572
11  format:3591
12  format:3590
13  format:3873
14  format:3006
15  format:1930
16  format:3468
17  format:3244
18  format:3727
19  format:3752
20  format:1919
21  format:3583
22  format:1929
23  format:3981
24  format:3746
25  format:3989
26  format:2330
27  format:3508
28  format:2331
29  format:3003
30  format:3839
31  format:3620
32  format:2333
33  format:3475
---- Executed query, got data.frame: qt_df: #rows = 34, #cols: 1

df_pk (at most first 10 elements): ['format:1930', 'format:2331', 'format:2572', 'format:3008', 'format:3016', 'format:3327', 'format:3462', 'format:3475', 'format:3508', 'format:3578']
qt_pk (at most first 10 elements): ['format:3654', 'format:3603', 'format:3004', 'format:3464', 'format:3579', 'format:1936', 'format:3987', 'format:2332', 'format:1975', 'format:3712']
---- Removed rows from df with matching pk
*** Entering file_format to database ***
df: #rows = 6, #cols: 4

A slice of df:
             id  ... synonyms
3   format:3008  ...       []
4   format:3016  ...       []
5   format:3327  ...       []
6   format:3462  ...       []
9   format:3578  ...       []
11  format:3829  ...       []

[6 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.3779747486114502 seconds.

--------- ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/project.tsv ---------
table_name:project
Kids%20First: project: Read from file: df: #rows = 40, #cols: 7

#Lines in file ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/project.tsv: 41
df: #rows = 40, #cols: 7
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering project to database ***
df: #rows = 40, #cols: 7

A slice of df:
  id_namespace     local_id  persistent_id  creation_time abbreviation
0   kidsfirst:          drc            NaN            NaN        KFDRC
1   kidsfirst:  SD_ZXJFFMEF            NaN            NaN  SD_ZXJFFMEF
2   kidsfirst:  SD_ZFGDG5YS            NaN            NaN  SD_ZFGDG5YS
3   kidsfirst:  SD_Z6MWD3H0            NaN            NaN  SD_Z6MWD3H0
4   kidsfirst:  SD_Z0D9N23X            NaN            NaN  SD_Z0D9N23X
5   kidsfirst:  SD_YNSSAPHE            NaN            NaN  SD_YNSSAPHE
6   kidsfirst:  SD_YGVA0E1C            NaN            NaN  SD_YGVA0E1C
7   kidsfirst:  SD_W6FWTD8A            NaN            NaN  SD_W6FWTD8A
8   kidsfirst:  SD_W0V965XZ            NaN            NaN  SD_W0V965XZ
9   kidsfirst:  SD_VTTSHWV4            NaN            NaN  SD_VTTSHWV4
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.3715367317199707 seconds.

--------- ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/phenotype_disease.tsv ---------
table_name:phenotype_disease
Kids%20First: phenotype_disease: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/phenotype_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3227713108062744 seconds.

--------- ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/ncbi_taxonomy.tsv ---------
table_name:ncbi_taxonomy
Kids%20First: ncbi_taxonomy: Read from file: df: #rows = 1, #cols: 5

#Lines in file ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/ncbi_taxonomy.tsv: 2
df: #rows = 1, #cols: 5
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.ncbi_taxonomy;
qt_df:                     pk
0     NCBI:txid1095745
1     NCBI:txid1739397
2      NCBI:txid742723
3     NCBI:txid1715193
4      NCBI:txid469585
...                ...
2320   NCBI:txid742726
2321  NCBI:txid1715207
2322  NCBI:txid1161416
2323   NCBI:txid765081
2324   NCBI:txid999422

[2325 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 2325, #cols: 1

df_pk (at most first 10 elements): ['NCBI:txid9606']
qt_pk (at most first 10 elements): ['NCBI:txid1095745', 'NCBI:txid1739397', 'NCBI:txid742723', 'NCBI:txid1715193', 'NCBI:txid469585', 'NCBI:txid1581186', 'NCBI:txid762963', 'NCBI:txid1542093', 'NCBI:txid1134801', 'NCBI:txid525378']
---- Removed rows from df with matching pk
*** Entering ncbi_taxonomy to database ***
df: #rows = 0, #cols: 5

A slice of df:
Empty DataFrame
Columns: [id, clade, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.37529873847961426 seconds.

--------- ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/phenotype.tsv ---------
table_name:phenotype
Kids%20First: phenotype: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.32314276695251465 seconds.

--------- ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/substance.tsv ---------
table_name:substance
Kids%20First: substance: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.32450389862060547 seconds.

--------- ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/project_in_project.tsv ---------
table_name:project_in_project
Kids%20First: project_in_project: Read from file: df: #rows = 39, #cols: 4

#Lines in file ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/project_in_project.tsv: 40
df: #rows = 39, #cols: 4
pKeys: ['parent_project_id_namespace', 'parent_project_local_id', 'child_project_id_namespace', 'child_project_local_id']
Going to write the count query
Wrote the count query
*** Entering project_in_project to database ***
df: #rows = 39, #cols: 4

A slice of df:
  parent_project_id_namespace  ... child_project_local_id
0                  kidsfirst:  ...            SD_ZXJFFMEF
1                  kidsfirst:  ...            SD_ZFGDG5YS
2                  kidsfirst:  ...            SD_Z6MWD3H0
3                  kidsfirst:  ...            SD_Z0D9N23X
4                  kidsfirst:  ...            SD_YNSSAPHE
5                  kidsfirst:  ...            SD_YGVA0E1C
6                  kidsfirst:  ...            SD_W6FWTD8A
7                  kidsfirst:  ...            SD_W0V965XZ
8                  kidsfirst:  ...            SD_VTTSHWV4
9                  kidsfirst:  ...            SD_RM8AFW0R

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.37796568870544434 seconds.

--------- ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/subject.tsv ---------
table_name:subject
Kids%20First: subject: Read from file: df: #rows = 29662, #cols: 10

#Lines in file ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/subject.tsv: 29663
df: #rows = 29662, #cols: 10
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering subject to database ***
df: #rows = 29662, #cols: 10

A slice of df:
  id_namespace     local_id  ... project_local_id persistent_id
0   kidsfirst:  PT_0001K4K1  ...      SD_Z6MWD3H0           NaN
1   kidsfirst:  PT_0021ZCHS  ...      SD_RM8AFW0R           NaN
2   kidsfirst:  PT_002MFVY5  ...      SD_ZFGDG5YS           NaN
3   kidsfirst:  PT_004FDKPF  ...      SD_46SK55A3           NaN
4   kidsfirst:  PT_004KEANN  ...      SD_AQ9KVN5P           NaN
5   kidsfirst:  PT_0059H2XT  ...      SD_DZTB5HRR           NaN
6   kidsfirst:  PT_005B7CZ4  ...      SD_PREASA7S           NaN
7   kidsfirst:  PT_005X8BR9  ...      SD_Z6MWD3H0           NaN
8   kidsfirst:  PT_00606X3B  ...      SD_DZTB5HRR           NaN
9   kidsfirst:  PT_0068CEXW  ...      SD_VTTSHWV4           NaN

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.0435264110565186 seconds.

--------- ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/analysis_type.tsv ---------
table_name:analysis_type
Kids%20First: analysis_type: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/analysis_type.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3241279125213623 seconds.

--------- ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/biosample.tsv ---------
table_name:biosample
Kids%20First: biosample: Read from file: df: #rows = 37260, #cols: 8

#Lines in file ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/biosample.tsv: 37261
df: #rows = 37260, #cols: 8
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering biosample to database ***
df: #rows = 37260, #cols: 8

A slice of df:
  id_namespace     local_id  ... project_local_id persistent_id
0   kidsfirst:  BS_002W6DYW  ...      SD_Q2F7XA29           NaN
1   kidsfirst:  BS_003293HH  ...      SD_JWS3V24D           NaN
2   kidsfirst:  BS_003TNG75  ...      SD_AQ9KVN5P           NaN
3   kidsfirst:  BS_004ND16X  ...      SD_VTTSHWV4           NaN
4   kidsfirst:  BS_005FNP7J  ...      SD_YGVA0E1C           NaN
5   kidsfirst:  BS_005J6HQQ  ...      SD_NMVV8A1Y           NaN
6   kidsfirst:  BS_006HP8CE  ...      SD_YNSSAPHE           NaN
7   kidsfirst:  BS_00747N6Y  ...      SD_JWS3V24D           NaN
8   kidsfirst:  BS_007JTNB8  ...      SD_BHJXBDQK           NaN
9   kidsfirst:  BS_008JZQQT  ...      SD_B8X3C1MX           NaN

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.122809648513794 seconds.

--------- ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/protein_gene.tsv ---------
table_name:protein_gene
Kids%20First: protein_gene: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/protein_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.32541751861572266 seconds.

--------- ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/subject_race.tsv ---------
table_name:subject_race
Kids%20First: subject_race: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/subject_race.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.32734060287475586 seconds.

--------- ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/collection_phenotype.tsv ---------
table_name:collection_phenotype
Kids%20First: collection_phenotype: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/collection_phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.327716588973999 seconds.

--------- ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/assay_type.tsv ---------
table_name:assay_type
Kids%20First: assay_type: Read from file: df: #rows = 3, #cols: 4

#Lines in file ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/assay_type.tsv: 4
df: #rows = 3, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.assay_type;
qt_df:               pk
0    OBI:0003306
1    OBI:0002766
2    OBI:0003104
3    OBI:0002984
4    OBI:0000185
5    OBI:0003300
6    OBI:0003087
7    OBI:0002760
8    OBI:0003312
9    OBI:0003093
10   OBI:0002117
11   OBI:0001631
12   OBI:0003099
13   OBI:0002761
14   OBI:0003301
15   OBI:0003033
16   OBI:0003094
17   OBI:0003097
18   OBI:0001977
19   OBI:0000893
20   OBI:0003311
21   OBI:0002631
22   OBI:0003297
23   OBI:0001920
24   OBI:0003101
25   OBI:0002768
26   OBI:0003092
27   OBI:0000716
28   OBI:0001177
29   OBI:0003314
30   OBI:0002112
31   OBI:0003108
32   OBI:0002118
33   OBI:0001848
34   OBI:0002623
35   OBI:0003313
36   OBI:0001985
37   OBI:0000366
38   OBI:0000615
39   OBI:0003100
40   OBI:0003299
41   OBI:0003089
42   OBI:0003105
43   OBI:0002763
44   OBI:0003107
45   OBI:0000470
46   OBI:0000626
47   OBI:0003305
48   OBI:0003304
49   OBI:0003303
50   OBI:0003103
51   OBI:0002145
52   OBI:0003034
53   OBI:0600047
54  CHMO:0000087
55   OBI:0003302
56   OBI:0001271
57   OBI:0003098
---- Executed query, got data.frame: qt_df: #rows = 58, #cols: 1

df_pk (at most first 10 elements): ['OBI:0001177', 'OBI:0002117', 'OBI:0002118']
qt_pk (at most first 10 elements): ['OBI:0003306', 'OBI:0002766', 'OBI:0003104', 'OBI:0002984', 'OBI:0000185', 'OBI:0003300', 'OBI:0003087', 'OBI:0002760', 'OBI:0003312', 'OBI:0003093']
---- Removed rows from df with matching pk
*** Entering assay_type to database ***
df: #rows = 0, #cols: 4

A slice of df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.37282752990722656 seconds.

--------- ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/collection_anatomy.tsv ---------
table_name:collection_anatomy
Kids%20First: collection_anatomy: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/collection_anatomy.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3246896266937256 seconds.

--------- ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/dcc.tsv ---------
table_name:dcc
Kids%20First: dcc: Read from file: df: #rows = 1, #cols: 9

#Lines in file ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/dcc.tsv: 2
df: #rows = 1, #cols: 9
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.dcc;
qt_df:                          pk
0  cfde_registry_dcc:glygen
1   cfde_registry_dcc:exrna
2     cfde_registry_dcc:4dn
3     cfde_registry_dcc:hmp
4  cfde_registry_dcc:hubmap
5    cfde_registry_dcc:gtex
6     cfde_registry_dcc:idg
---- Executed query, got data.frame: qt_df: #rows = 7, #cols: 1

df_pk (at most first 10 elements): ['cfde_registry_dcc:kidsfirst']
qt_pk (at most first 10 elements): ['cfde_registry_dcc:glygen', 'cfde_registry_dcc:exrna', 'cfde_registry_dcc:4dn', 'cfde_registry_dcc:hmp', 'cfde_registry_dcc:hubmap', 'cfde_registry_dcc:gtex', 'cfde_registry_dcc:idg']
---- Removed rows from df with matching pk
*** Entering dcc to database ***
df: #rows = 1, #cols: 9

A slice of df:
                            id  ...             contact_email
0  cfde_registry_dcc:kidsfirst  ...  support@kidsfirstdrc.org

[1 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.3810079097747803 seconds.

--------- ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/collection_gene.tsv ---------
table_name:collection_gene
Kids%20First: collection_gene: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/collection_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.32416796684265137 seconds.

--------- ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/collection_compound.tsv ---------
table_name:collection_compound
Kids%20First: collection_compound: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/collection_compound.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.32536983489990234 seconds.

--------- ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/biosample_gene.tsv ---------
table_name:biosample_gene
Kids%20First: biosample_gene: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/biosample_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3254358768463135 seconds.

--------- ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/biosample_in_collection.tsv ---------
table_name:biosample_in_collection
Kids%20First: biosample_in_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/biosample_in_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3255159854888916 seconds.

--------- ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/biosample_from_subject.tsv ---------
table_name:biosample_from_subject
Kids%20First: biosample_from_subject: Read from file: df: #rows = 37260, #cols: 5

#Lines in file ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/biosample_from_subject.tsv: 37261
df: #rows = 37260, #cols: 5
pKeys: ['biosample_id_namespace', 'biosample_local_id', 'subject_id_namespace', 'subject_local_id']
Going to write the count query
Wrote the count query
*** Entering biosample_from_subject to database ***
df: #rows = 37260, #cols: 5

A slice of df:
  biosample_id_namespace biosample_local_id  ... subject_local_id age_at_sampling
0             kidsfirst:        BS_002W6DYW  ...      PT_GXMWD7AP             NaN
1             kidsfirst:        BS_003293HH  ...      PT_5SCGPJSY             NaN
2             kidsfirst:        BS_003TNG75  ...      PT_GB30TJ9P             NaN
3             kidsfirst:        BS_004ND16X  ...      PT_R1JJ4TZ5             NaN
4             kidsfirst:        BS_005FNP7J  ...      PT_B31DYVKP             NaN
5             kidsfirst:        BS_005J6HQQ  ...      PT_VW44AQA8             NaN
6             kidsfirst:        BS_006HP8CE  ...      PT_RDCCES07             NaN
7             kidsfirst:        BS_00747N6Y  ...      PT_WM3WDZHD             NaN
8             kidsfirst:        BS_007JTNB8  ...      PT_1MW98VR1            5.13
9             kidsfirst:        BS_008JZQQT  ...      PT_GRE9TDA2             NaN

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9728918075561523 seconds.

--------- ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/collection_protein.tsv ---------
table_name:collection_protein
Kids%20First: collection_protein: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/collection_protein.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3259084224700928 seconds.

--------- ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/sample_prep_method.tsv ---------
table_name:sample_prep_method
Kids%20First: sample_prep_method: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/sample_prep_method.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3253316879272461 seconds.

--------- ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/subject_phenotype.tsv ---------
table_name:subject_phenotype
Kids%20First: subject_phenotype: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/subject_phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3265531063079834 seconds.

--------- ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/collection_substance.tsv ---------
table_name:collection_substance
Kids%20First: collection_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/collection_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3275880813598633 seconds.

--------- ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/data_type.tsv ---------
table_name:data_type
Kids%20First: data_type: Read from file: df: #rows = 9, #cols: 4

#Lines in file ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/data_type.tsv: 10
df: #rows = 9, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.data_type;
qt_df:              pk
0     data:0907
1     data:1916
2     data:3111
3     data:0945
4     data:1270
5     data:1714
6     data:3495
7   ILX:0793824
8     data:1383
9     data:3110
10    data:2603
11    data:2600
12    data:3494
13    data:2764
14    data:2048
15    data:0943
16    data:3028
17    data:1255
18    data:2082
19    data:3002
20    data:3917
21    data:2887
22    data:2976
23    data:2968
24    data:0925
25  ILX:0793825
---- Executed query, got data.frame: qt_df: #rows = 26, #cols: 1

df_pk (at most first 10 elements): ['data:0006', 'data:1383', 'data:1916', 'data:2603', 'data:3112', 'data:3210', 'data:3494', 'data:3498', 'data:3914']
qt_pk (at most first 10 elements): ['data:0907', 'data:1916', 'data:3111', 'data:0945', 'data:1270', 'data:1714', 'data:3495', 'ILX:0793824', 'data:1383', 'data:3110']
---- Removed rows from df with matching pk
*** Entering data_type to database ***
df: #rows = 5, #cols: 4

A slice of df:
          id  ...                                           synonyms
0  data:0006  ...                 ["Data record","Data set","Datum"]
4  data:3112  ...  ["Normalised microarray data","Gene expression...
5  data:3210  ...                                                 []
7  data:3498  ...                       ["Gene sequence variations"]
8  data:3914  ...  ["Quality control metrics","QC metrics","QC re...

[5 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.3783609867095947 seconds.

--------- ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/file_describes_subject.tsv ---------
table_name:file_describes_subject
Kids%20First: file_describes_subject: Read from file: df: #rows = 318413, #cols: 4

#Lines in file ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/file_describes_subject.tsv: 318414
df: #rows = 318413, #cols: 4
pKeys: ['file_id_namespace', 'file_local_id', 'subject_id_namespace', 'subject_local_id']
Going to write the count query
Wrote the count query
*** Entering file_describes_subject to database ***
df: #rows = 318413, #cols: 4

A slice of df:
  file_id_namespace file_local_id subject_id_namespace subject_local_id
0        kidsfirst:   GF_0003WJQG           kidsfirst:      PT_X7DXSNZ6
1        kidsfirst:   GF_00065FWM           kidsfirst:      PT_4347ZBEX
2        kidsfirst:   GF_000HXXN3           kidsfirst:      PT_RG8C4JW7
3        kidsfirst:   GF_000TDT79           kidsfirst:      PT_8N9AXZN8
4        kidsfirst:   GF_000VDK42           kidsfirst:      PT_PR4YBBH3
5        kidsfirst:   GF_00190T19           kidsfirst:      PT_PWVX2F69
6        kidsfirst:   GF_001CSF26           kidsfirst:      PT_3W4P4R21
7        kidsfirst:   GF_001JWT9N           kidsfirst:      PT_G16VK7FR
8        kidsfirst:   GF_001ZPJT1           kidsfirst:      PT_D5KHK0SS
9        kidsfirst:   GF_0023JGW9           kidsfirst:      PT_MTE126WM
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 5.3840882778167725 seconds.

--------- ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/collection_taxonomy.tsv ---------
table_name:collection_taxonomy
Kids%20First: collection_taxonomy: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/collection_taxonomy.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3343045711517334 seconds.

--------- ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/disease.tsv ---------
table_name:disease
Kids%20First: disease: Read from file: df: #rows = 28, #cols: 4

#Lines in file ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/disease.tsv: 29
df: #rows = 28, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.disease;
qt_df:               pk
0      DOID:4977
1      DOID:6683
2     DOID:13941
3      DOID:8947
4     DOID:11840
...          ...
1896   DOID:9553
1897  DOID:12895
1898   DOID:3491
1899   DOID:8838
1900   DOID:2468

[1901 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 1901, #cols: 1

df_pk (at most first 10 elements): ['DOID:0050545', 'DOID:0050567', 'DOID:0050668', 'DOID:0050834', 'DOID:0060250', 'DOID:0080074', 'DOID:0080145', 'DOID:0080171', 'DOID:0080173', 'DOID:0080600']
qt_pk (at most first 10 elements): ['DOID:4977', 'DOID:6683', 'DOID:13941', 'DOID:8947', 'DOID:11840', 'DOID:14447', 'DOID:11054', 'DOID:1791', 'DOID:13810', 'DOID:10780']
---- Removed rows from df with matching pk
*** Entering disease to database ***
df: #rows = 14, #cols: 4

A slice of df:
             id  ...                                           synonyms
0  DOID:0050545  ...                   ["heterotaxia","situs ambiguus"]
1  DOID:0050567  ...                                                 []
2  DOID:0050668  ...                                           ["ARBD"]
3  DOID:0050834  ...                             ["CHARGE association"]
4  DOID:0060250  ...                                                 []
5  DOID:0080074  ...                                                 []
6  DOID:0080145  ...  ["DOID:7933","childhood precursor T-lymphoblas...
7  DOID:0080171  ...  ["esophageal atresia and/or tracheoesophageal ...
8  DOID:0080173  ...                   ["exstrophy-epispadias complex"]
9  DOID:0080600  ...  ["2019 Novel Coronavirus (2019-nCoV)","2019-nC...

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.38219785690307617 seconds.

--------- ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/collection_disease.tsv ---------
table_name:collection_disease
Kids%20First: collection_disease: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/collection_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3251957893371582 seconds.

--------- ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/collection_in_collection.tsv ---------
table_name:collection_in_collection
Kids%20First: collection_in_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/collection_in_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3292827606201172 seconds.

--------- ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/file_describes_biosample.tsv ---------
table_name:file_describes_biosample
Kids%20First: file_describes_biosample: Read from file: df: #rows = 409927, #cols: 4

#Lines in file ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/file_describes_biosample.tsv: 409928
df: #rows = 409927, #cols: 4
pKeys: ['file_id_namespace', 'file_local_id', 'biosample_id_namespace', 'biosample_local_id']
Going to write the count query
Wrote the count query
*** Entering file_describes_biosample to database ***
df: #rows = 409927, #cols: 4

A slice of df:
  file_id_namespace file_local_id biosample_id_namespace biosample_local_id
0        kidsfirst:   GF_ACG5S1T6             kidsfirst:        BS_002W6DYW
1        kidsfirst:   GF_QQXTF4SK             kidsfirst:        BS_002W6DYW
2        kidsfirst:   GF_9VJAGRFA             kidsfirst:        BS_003293HH
3        kidsfirst:   GF_AH4QVKHC             kidsfirst:        BS_003293HH
4        kidsfirst:   GF_E3WB2K85             kidsfirst:        BS_003293HH
5        kidsfirst:   GF_HQMM45X2             kidsfirst:        BS_003293HH
6        kidsfirst:   GF_NHBS3J60             kidsfirst:        BS_003293HH
7        kidsfirst:   GF_STVTVGG1             kidsfirst:        BS_003293HH
8        kidsfirst:   GF_WVRJAK9K             kidsfirst:        BS_003293HH
9        kidsfirst:   GF_786GBJXS             kidsfirst:        BS_003TNG75
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 7.23793625831604 seconds.

--------- ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/compound.tsv ---------
table_name:compound
Kids%20First: compound: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/compound.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.34391260147094727 seconds.

--------- ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/phenotype_gene.tsv ---------
table_name:phenotype_gene
Kids%20First: phenotype_gene: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/phenotype_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.32894158363342285 seconds.

--------- ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/subject_disease.tsv ---------
table_name:subject_disease
Kids%20First: subject_disease: Read from file: df: #rows = 37247, #cols: 4

#Lines in file ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/subject_disease.tsv: 37248
df: #rows = 37247, #cols: 4
pKeys: ['subject_id_namespace', 'subject_local_id', 'association_type', 'disease']
Going to write the count query
Wrote the count query
*** Entering subject_disease to database ***
df: #rows = 37247, #cols: 4

A slice of df:
  subject_id_namespace  ...       disease
0           kidsfirst:  ...    DOID:14250
1           kidsfirst:  ...      DOID:162
2           kidsfirst:  ...  DOID:0060250
3           kidsfirst:  ...      DOID:162
4           kidsfirst:  ...     DOID:3827
5           kidsfirst:  ...      DOID:162
6           kidsfirst:  ...  DOID:0080145
7           kidsfirst:  ...     DOID:5656
8           kidsfirst:  ...     DOID:1682
9           kidsfirst:  ...    DOID:14250

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9145653247833252 seconds.

--------- ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/biosample_disease.tsv ---------
table_name:biosample_disease
Processing C2M2 Files...:  67%|██████▋   | 8/12 [19:24<12:05, 181.32s/it]/home/mano/DRC/DRC-Portals/database/populateC2M2FromS3.py:272: DtypeWarning: Columns (15) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv(table_str, delimiter='\t');
Kids%20First: biosample_disease: Read from file: df: #rows = 50647, #cols: 4

#Lines in file ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/biosample_disease.tsv: 50648
df: #rows = 50647, #cols: 4
pKeys: ['biosample_id_namespace', 'biosample_local_id', 'association_type', 'disease']
Going to write the count query
Wrote the count query
*** Entering biosample_disease to database ***
df: #rows = 50647, #cols: 4

A slice of df:
  biosample_id_namespace  ...       disease
0             kidsfirst:  ...      DOID:331
1             kidsfirst:  ...      DOID:162
2             kidsfirst:  ...  DOID:0080145
3             kidsfirst:  ...      DOID:162
4             kidsfirst:  ...      DOID:255
5             kidsfirst:  ...      DOID:162
6             kidsfirst:  ...     DOID:3369
7             kidsfirst:  ...       DOID:18
8             kidsfirst:  ...      DOID:769
9             kidsfirst:  ...      DOID:162

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.0879809856414795 seconds.

--------- ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/subject_substance.tsv ---------
table_name:subject_substance
Kids%20First: subject_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/subject_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3250243663787842 seconds.

--------- ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/id_namespace.tsv ---------
table_name:id_namespace
Kids%20First: id_namespace: Read from file: df: #rows = 1, #cols: 4

#Lines in file ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/id_namespace.tsv: 2
df: #rows = 1, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.id_namespace;
qt_df:                                                    pk
0   https://druggablegenome.net/cfde_idg_drugcentr...
1                                               egtex
2                    https://www.druggablegenome.net/
3                        https://www.data.glygen.org/
4                         https://data.4dnucleome.org
5   https://druggablegenome.net/cfde_idg_tcrd_dise...
6                                                gtex
7   https://druggablegenome.net/cfde_idg_tcrd_targets
8                                          ERCC-exRNA
9                         tag:hmpdacc.org,2022-04-04:
10                                         adult_gtex
11                     tag:hubmapconsortium.org,2023:
---- Executed query, got data.frame: qt_df: #rows = 12, #cols: 1

df_pk (at most first 10 elements): ['kidsfirst:']
qt_pk (at most first 10 elements): ['https://druggablegenome.net/cfde_idg_drugcentral_drugs', 'egtex', 'https://www.druggablegenome.net/', 'https://www.data.glygen.org/', 'https://data.4dnucleome.org', 'https://druggablegenome.net/cfde_idg_tcrd_diseases', 'gtex', 'https://druggablegenome.net/cfde_idg_tcrd_targets', 'ERCC-exRNA', 'tag:hmpdacc.org,2022-04-04:']
---- Removed rows from df with matching pk
*** Entering id_namespace to database ***
df: #rows = 1, #cols: 4

A slice of df:
           id  ...                                        description
0  kidsfirst:  ...  A large-scale data resource to help researcher...

[1 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.38013625144958496 seconds.

--------- ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/biosample_substance.tsv ---------
table_name:biosample_substance
Kids%20First: biosample_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/biosample_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3243563175201416 seconds.

--------- ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/protein.tsv ---------
table_name:protein
Kids%20First: protein: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/protein.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3285534381866455 seconds.

--------- ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/collection_defined_by_project.tsv ---------
table_name:collection_defined_by_project
Kids%20First: collection_defined_by_project: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/collection_defined_by_project.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3274202346801758 seconds.

--------- ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/subject_in_collection.tsv ---------
table_name:subject_in_collection
Kids%20First: subject_in_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/subject_in_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3272271156311035 seconds.

--------- ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/file_describes_collection.tsv ---------
table_name:file_describes_collection
Kids%20First: file_describes_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/Kids%20First/datapackage/frictionless_validation/data/file_describes_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.32860827445983887 seconds.


================================== DCC short label: LINCS =============================================
--------- ingest/c2m2s/LINCS/datapackage/analysis_type.tsv ---------
table_name:analysis_type
LINCS: analysis_type: Read from file: df: #rows = 1, #cols: 4

#Lines in file ingest/c2m2s/LINCS/datapackage/analysis_type.tsv: 2
df: #rows = 1, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.analysis_type;
qt_df:             pk
0  OBI:0001985
1  OBI:0001872
---- Executed query, got data.frame: qt_df: #rows = 2, #cols: 1

df_pk (at most first 10 elements): ['OBI:0000679']
qt_pk (at most first 10 elements): ['OBI:0001985', 'OBI:0001872']
---- Removed rows from df with matching pk
*** Entering analysis_type to database ***
df: #rows = 1, #cols: 4

A slice of df:
            id  ... synonyms
0  OBI:0000679  ...       []

[1 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.38633012771606445 seconds.

--------- ingest/c2m2s/LINCS/datapackage/file.tsv ---------
table_name:file
LINCS: file: Read from file: df: #rows = 1495871, #cols: 20

#Lines in file ingest/c2m2s/LINCS/datapackage/file.tsv: 1495872
df: #rows = 1495871, #cols: 20
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering file to database ***
df: #rows = 1495871, #cols: 20

A slice of df:
                    id_namespace  ...                                      persistent_id
0  https://www.lincsproject.org/  ...  drs://drs.lincs-dcic.org/ad5426c19f2d8844e5506...
1  https://www.lincsproject.org/  ...  drs://drs.lincs-dcic.org/d599b0067e6f82930100d...
2  https://www.lincsproject.org/  ...  drs://drs.lincs-dcic.org/ab8cecde46b8ad5584607...
3  https://www.lincsproject.org/  ...  drs://drs.lincs-dcic.org/492e3c4aef6122256ffd9...
4  https://www.lincsproject.org/  ...  drs://drs.lincs-dcic.org/3823c1ba8ea2244fdfd93...
5  https://www.lincsproject.org/  ...  drs://drs.lincs-dcic.org/6abf832ca7f912f12fb03...
6  https://www.lincsproject.org/  ...  drs://drs.lincs-dcic.org/980e696c1a30842b8ef5e...
7  https://www.lincsproject.org/  ...  drs://drs.lincs-dcic.org/c532c0711823feb38e3b2...
8  https://www.lincsproject.org/  ...  drs://drs.lincs-dcic.org/ffe08e05aa7320f349d17...
9  https://www.lincsproject.org/  ...  drs://drs.lincs-dcic.org/3547a9c006247ec0f1f04...

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 96.65616059303284 seconds.

--------- ingest/c2m2s/LINCS/datapackage/project.tsv ---------
table_name:project
LINCS: project: Read from file: df: #rows = 17, #cols: 7

#Lines in file ingest/c2m2s/LINCS/datapackage/project.tsv: 18
df: #rows = 17, #cols: 7
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering project to database ***
df: #rows = 17, #cols: 7

A slice of df:
                    id_namespace  ... abbreviation
0  https://www.lincsproject.org/  ...        LINCS
1  https://www.lincsproject.org/  ...          NaN
2  https://www.lincsproject.org/  ...          NaN
3  https://www.lincsproject.org/  ...          NaN
4  https://www.lincsproject.org/  ...          NaN
5  https://www.lincsproject.org/  ...          NaN
6  https://www.lincsproject.org/  ...          NaN
7  https://www.lincsproject.org/  ...        CMAP2
8  https://www.lincsproject.org/  ...    LINCSProt
9  https://www.lincsproject.org/  ...        CMAP1

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.5235562324523926 seconds.

--------- ingest/c2m2s/LINCS/datapackage/project_in_project.tsv ---------
table_name:project_in_project
LINCS: project_in_project: Read from file: df: #rows = 16, #cols: 4

#Lines in file ingest/c2m2s/LINCS/datapackage/project_in_project.tsv: 17
df: #rows = 16, #cols: 4
pKeys: ['parent_project_id_namespace', 'parent_project_local_id', 'child_project_id_namespace', 'child_project_local_id']
Going to write the count query
Wrote the count query
*** Entering project_in_project to database ***
df: #rows = 16, #cols: 4

A slice of df:
     parent_project_id_namespace  ... child_project_local_id
0  https://www.lincsproject.org/  ...          LINCS phase 2
1  https://www.lincsproject.org/  ...          LINCS phase 1
2  https://www.lincsproject.org/  ...               External
3  https://www.lincsproject.org/  ...   LINCS MCF10A project
4  https://www.lincsproject.org/  ...    LINCS joint project
5  https://www.lincsproject.org/  ...     LINCS trans-center
6  https://www.lincsproject.org/  ...           L1000-Phase2
7  https://www.lincsproject.org/  ...       LINCS Proteomics
8  https://www.lincsproject.org/  ...           L1000-Phase1
9  https://www.lincsproject.org/  ...            L1000-PCCSE

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.3709681034088135 seconds.

--------- ingest/c2m2s/LINCS/datapackage/file_describes_subject.tsv ---------
table_name:file_describes_subject
LINCS: file_describes_subject: Read from file: df: #rows = 1466498, #cols: 4

#Lines in file ingest/c2m2s/LINCS/datapackage/file_describes_subject.tsv: 1466499
df: #rows = 1466498, #cols: 4
pKeys: ['file_id_namespace', 'file_local_id', 'subject_id_namespace', 'subject_local_id']
Going to write the count query
Wrote the count query
*** Entering file_describes_subject to database ***
df: #rows = 1466498, #cols: 4

A slice of df:
               file_id_namespace  ... subject_local_id
0  https://www.lincsproject.org/  ...         LCL-1431
1  https://www.lincsproject.org/  ...         LCL-1431
2  https://www.lincsproject.org/  ...         LCL-1461
3  https://www.lincsproject.org/  ...         LCL-1315
4  https://www.lincsproject.org/  ...         LCL-1475
5  https://www.lincsproject.org/  ...         LCL-1476
6  https://www.lincsproject.org/  ...         LCL-1460
7  https://www.lincsproject.org/  ...         LCL-2085
8  https://www.lincsproject.org/  ...         LCL-1476
9  https://www.lincsproject.org/  ...         LCL-1476

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 35.70238518714905 seconds.

--------- ingest/c2m2s/LINCS/datapackage/file_describes_biosample.tsv ---------
table_name:file_describes_biosample
LINCS: file_describes_biosample: Read from file: df: #rows = 1467229, #cols: 4

#Lines in file ingest/c2m2s/LINCS/datapackage/file_describes_biosample.tsv: 1467230
df: #rows = 1467229, #cols: 4
pKeys: ['file_id_namespace', 'file_local_id', 'biosample_id_namespace', 'biosample_local_id']
Going to write the count query
Wrote the count query
*** Entering file_describes_biosample to database ***
df: #rows = 1467229, #cols: 4

A slice of df:
               file_id_namespace  ... biosample_local_id
0  https://www.lincsproject.org/  ...  LDG-1192:LCL-1431
1  https://www.lincsproject.org/  ...  LDG-1191:LCL-1431
2  https://www.lincsproject.org/  ...  LDG-1199:LCL-1461
3  https://www.lincsproject.org/  ...  LDG-1199:LCL-1315
4  https://www.lincsproject.org/  ...  LDG-1199:LCL-1475
5  https://www.lincsproject.org/  ...  LDG-1199:LCL-1476
6  https://www.lincsproject.org/  ...  LDG-1199:LCL-1460
7  https://www.lincsproject.org/  ...  LDG-1199:LCL-2085
8  https://www.lincsproject.org/  ...  LDG-1265:LCL-1476
9  https://www.lincsproject.org/  ...  LDG-1266:LCL-1476

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 38.14998412132263 seconds.

--------- ingest/c2m2s/LINCS/datapackage/biosample_gene.tsv ---------
table_name:biosample_gene
LINCS: biosample_gene: Read from file: df: #rows = 361735, #cols: 3

#Lines in file ingest/c2m2s/LINCS/datapackage/biosample_gene.tsv: 361736
df: #rows = 361735, #cols: 3
pKeys: ['biosample_id_namespace', 'biosample_local_id', 'gene']
Going to write the count query
Wrote the count query
*** Entering biosample_gene to database ***
df: #rows = 361735, #cols: 3

A slice of df:
          biosample_id_namespace  ...             gene
0  https://www.lincsproject.org/  ...  ENSG00000002330
1  https://www.lincsproject.org/  ...  ENSG00000003402
2  https://www.lincsproject.org/  ...  ENSG00000147853
3  https://www.lincsproject.org/  ...  ENSG00000112245
4  https://www.lincsproject.org/  ...  ENSG00000159322
5  https://www.lincsproject.org/  ...  ENSG00000123545
6  https://www.lincsproject.org/  ...  ENSG00000147853
7  https://www.lincsproject.org/  ...  ENSG00000177888
8  https://www.lincsproject.org/  ...  ENSG00000172071
9  https://www.lincsproject.org/  ...  ENSG00000112137

[10 rows x 3 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 7.750046014785767 seconds.

--------- ingest/c2m2s/LINCS/datapackage/biosample_from_subject.tsv ---------
table_name:biosample_from_subject
LINCS: biosample_from_subject: Read from file: df: #rows = 1466796, #cols: 5

#Lines in file ingest/c2m2s/LINCS/datapackage/biosample_from_subject.tsv: 1466797
df: #rows = 1466796, #cols: 5
pKeys: ['biosample_id_namespace', 'biosample_local_id', 'subject_id_namespace', 'subject_local_id']
Going to write the count query
Wrote the count query
*** Entering biosample_from_subject to database ***
df: #rows = 1466796, #cols: 5

/home/mano/DRC/DRC-Portals/database/populateC2M2FromS3.py:272: DtypeWarning: Columns (5) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv(table_str, delimiter='\t');
A slice of df:
          biosample_id_namespace  ... age_at_sampling
0  https://www.lincsproject.org/  ...             NaN
1  https://www.lincsproject.org/  ...             NaN
2  https://www.lincsproject.org/  ...             NaN
3  https://www.lincsproject.org/  ...             NaN
4  https://www.lincsproject.org/  ...             NaN
5  https://www.lincsproject.org/  ...             NaN
6  https://www.lincsproject.org/  ...             NaN
7  https://www.lincsproject.org/  ...             NaN
8  https://www.lincsproject.org/  ...             NaN
9  https://www.lincsproject.org/  ...             NaN

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 37.585639238357544 seconds.

--------- ingest/c2m2s/LINCS/datapackage/biosample_substance.tsv ---------
table_name:biosample_substance
LINCS: biosample_substance: Read from file: df: #rows = 860285, #cols: 3

#Lines in file ingest/c2m2s/LINCS/datapackage/biosample_substance.tsv: 860286
df: #rows = 860285, #cols: 3
pKeys: ['biosample_id_namespace', 'biosample_local_id', 'substance']
Going to write the count query
Wrote the count query
*** Entering biosample_substance to database ***
df: #rows = 860285, #cols: 3

A slice of df:
          biosample_id_namespace  ...  substance
0  https://www.lincsproject.org/  ...  375174554
1  https://www.lincsproject.org/  ...  375174554
2  https://www.lincsproject.org/  ...  375174554
3  https://www.lincsproject.org/  ...  375174554
4  https://www.lincsproject.org/  ...  375174554
5  https://www.lincsproject.org/  ...  375174554
6  https://www.lincsproject.org/  ...  375174554
7  https://www.lincsproject.org/  ...  375174554
8  https://www.lincsproject.org/  ...  375174554
9  https://www.lincsproject.org/  ...  375174554

[10 rows x 3 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 19.68804621696472 seconds.

--------- ingest/c2m2s/LINCS/datapackage/biosample_disease.tsv ---------
table_name:biosample_disease
LINCS: biosample_disease: Read from file: df: #rows = 1211094, #cols: 4

#Lines in file ingest/c2m2s/LINCS/datapackage/biosample_disease.tsv: 1211095
df: #rows = 1211094, #cols: 4
pKeys: ['biosample_id_namespace', 'biosample_local_id', 'association_type', 'disease']
Going to write the count query
Wrote the count query
*** Entering biosample_disease to database ***
df: #rows = 1211094, #cols: 4

A slice of df:
          biosample_id_namespace  ...    disease
0  https://www.lincsproject.org/  ...  DOID:1240
1  https://www.lincsproject.org/  ...  DOID:1240
2  https://www.lincsproject.org/  ...  DOID:1240
3  https://www.lincsproject.org/  ...  DOID:1240
4  https://www.lincsproject.org/  ...  DOID:1240
5  https://www.lincsproject.org/  ...  DOID:1240
6  https://www.lincsproject.org/  ...  DOID:1240
7  https://www.lincsproject.org/  ...  DOID:1240
8  https://www.lincsproject.org/  ...  DOID:1240
9  https://www.lincsproject.org/  ...  DOID:1240

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 29.62661075592041 seconds.

--------- ingest/c2m2s/LINCS/datapackage/biosample.tsv ---------
table_name:biosample
LINCS: biosample: Read from file: df: #rows = 1466796, #cols: 8

#Lines in file ingest/c2m2s/LINCS/datapackage/biosample.tsv: 1466797
df: #rows = 1466796, #cols: 8
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering biosample to database ***
df: #rows = 1466796, #cols: 8

A slice of df:
                    id_namespace  ... persistent_id
0  https://www.lincsproject.org/  ...           NaN
1  https://www.lincsproject.org/  ...           NaN
2  https://www.lincsproject.org/  ...           NaN
3  https://www.lincsproject.org/  ...           NaN
4  https://www.lincsproject.org/  ...           NaN
5  https://www.lincsproject.org/  ...           NaN
6  https://www.lincsproject.org/  ...           NaN
7  https://www.lincsproject.org/  ...           NaN
8  https://www.lincsproject.org/  ...           NaN
9  https://www.lincsproject.org/  ...           NaN

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 45.94595980644226 seconds.

--------- ingest/c2m2s/LINCS/datapackage/gene.tsv ---------
table_name:gene
LINCS: gene: Read from file: df: #rows = 7443, #cols: 5

#Lines in file ingest/c2m2s/LINCS/datapackage/gene.tsv: 7444
df: #rows = 7443, #cols: 5
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.gene;
qt_df:                     pk
0      ENSG00000005007
1      ENSG00000158769
2      ENSG00000079805
3      ENSG00000164611
4      ENSG00000204525
...                ...
19629  ENSG00000255524
19630  ENSG00000171396
19631  ENSG00000141456
19632  ENSG00000134444
19633  ENSG00000170178

[19634 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 19634, #cols: 1

df_pk (at most first 10 elements): ['ENSG00000000003', 'ENSG00000000457', 'ENSG00000000938', 'ENSG00000000971', 'ENSG00000001084', 'ENSG00000001617', 'ENSG00000001626', 'ENSG00000001630', 'ENSG00000002330', 'ENSG00000002549']
qt_pk (at most first 10 elements): ['ENSG00000005007', 'ENSG00000158769', 'ENSG00000079805', 'ENSG00000164611', 'ENSG00000204525', 'ENSG00000112245', 'ENSG00000137975', 'ENSG00000035115', 'ENSG00000182111', 'ENSG00000108381']
---- Removed rows from df with matching pk
*** Entering gene to database ***
df: #rows = 39, #cols: 5

A slice of df:
                   id  ...       organism
6668  ENSG00000196230  ...  NCBI:txid9606
6957  ENSG00000203499  ...  NCBI:txid9606
6975  ENSG00000204228  ...  NCBI:txid9606
6986  ENSG00000204308  ...  NCBI:txid9606
6995  ENSG00000204386  ...  NCBI:txid9606
6998  ENSG00000204392  ...  NCBI:txid9606
7004  ENSG00000204463  ...  NCBI:txid9606
7016  ENSG00000204580  ...  NCBI:txid9606
7017  ENSG00000204655  ...  NCBI:txid9606
7103  ENSG00000213676  ...  NCBI:txid9606

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.1104252338409424 seconds.

--------- ingest/c2m2s/LINCS/datapackage/substance.tsv ---------
table_name:substance
LINCS: substance: Read from file: df: #rows = 29437, #cols: 5

#Lines in file ingest/c2m2s/LINCS/datapackage/substance.tsv: 29438
df: #rows = 29437, #cols: 5
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.substance;
qt_df: Empty DataFrame
Columns: [pk]
Index: []
---- Executed query, got data.frame: qt_df: #rows = 0, #cols: 1

df_pk (at most first 10 elements): ['85248499', '85248500', '85248502', '85281160', '85281172', '85787080', '85787083', '85787089', '85787096', '85787100']
qt_pk (at most first 10 elements): []
---- Removed rows from df with matching pk
*** Entering substance to database ***
df: #rows = 29437, #cols: 5

A slice of df:
             id  ...  compound
23228  85248499  ...   1604254
23229  85248500  ...   1993104
23230  85248502  ...  22693263
23231  85281160  ...    576989
23232  85281172  ...   3473393
23233  85787080  ...   5377914
23234  85787083  ...   6708558
23235  85787089  ...  54676535
23236  85787096  ...   6708584
23237  85787100  ...    637213

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 5.065198659896851 seconds.

--------- ingest/c2m2s/LINCS/datapackage/sample_prep_method.tsv ---------
table_name:sample_prep_method
LINCS: sample_prep_method: Read from file: df: #rows = 2, #cols: 4

#Lines in file ingest/c2m2s/LINCS/datapackage/sample_prep_method.tsv: 3
df: #rows = 2, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.sample_prep_method;
qt_df:             pk
0  OBI:0001902
---- Executed query, got data.frame: qt_df: #rows = 1, #cols: 1

df_pk (at most first 10 elements): ['OBI:0600005', 'OBI:0600024']
qt_pk (at most first 10 elements): ['OBI:0001902']
---- Removed rows from df with matching pk
*** Entering sample_prep_method to database ***
df: #rows = 2, #cols: 4

A slice of df:
            id  ... synonyms
0  OBI:0600005  ...       []
1  OBI:0600024  ...       []

[2 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.3837738037109375 seconds.

--------- ingest/c2m2s/LINCS/datapackage/protein.tsv ---------
table_name:protein
LINCS: protein: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/LINCS/datapackage/protein.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.33345794677734375 seconds.

--------- ingest/c2m2s/LINCS/datapackage/phenotype.tsv ---------
table_name:phenotype
LINCS: phenotype: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/LINCS/datapackage/phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3289456367492676 seconds.

--------- ingest/c2m2s/LINCS/datapackage/ncbi_taxonomy.tsv ---------
table_name:ncbi_taxonomy
LINCS: ncbi_taxonomy: Read from file: df: #rows = 1, #cols: 5

#Lines in file ingest/c2m2s/LINCS/datapackage/ncbi_taxonomy.tsv: 2
df: #rows = 1, #cols: 5
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.ncbi_taxonomy;
qt_df:                     pk
0     NCBI:txid1095745
1     NCBI:txid1739397
2      NCBI:txid742723
3     NCBI:txid1715193
4      NCBI:txid469585
...                ...
2320   NCBI:txid742726
2321  NCBI:txid1715207
2322  NCBI:txid1161416
2323   NCBI:txid765081
2324   NCBI:txid999422

[2325 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 2325, #cols: 1

df_pk (at most first 10 elements): ['NCBI:txid9606']
qt_pk (at most first 10 elements): ['NCBI:txid1095745', 'NCBI:txid1739397', 'NCBI:txid742723', 'NCBI:txid1715193', 'NCBI:txid469585', 'NCBI:txid1581186', 'NCBI:txid762963', 'NCBI:txid1542093', 'NCBI:txid1134801', 'NCBI:txid525378']
---- Removed rows from df with matching pk
*** Entering ncbi_taxonomy to database ***
df: #rows = 0, #cols: 5

A slice of df:
Empty DataFrame
Columns: [id, clade, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.3711128234863281 seconds.

--------- ingest/c2m2s/LINCS/datapackage/file_format.tsv ---------
table_name:file_format
LINCS: file_format: Read from file: df: #rows = 4, #cols: 4

#Lines in file ingest/c2m2s/LINCS/datapackage/file_format.tsv: 5
df: #rows = 4, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.file_format;
qt_df:              pk
0   format:3654
1   format:3603
2   format:3004
3   format:3578
4   format:3464
5   format:3579
6   format:3327
7   format:1936
8   format:3987
9   format:2332
10  format:1975
11  format:3712
12  format:2572
13  format:3591
14  format:3590
15  format:3873
16  format:3006
17  format:3462
18  format:1930
19  format:3468
20  format:3244
21  format:3727
22  format:3752
23  format:1919
24  format:3829
25  format:3583
26  format:1929
27  format:3981
28  format:3746
29  format:3989
30  format:2330
31  format:3508
32  format:2331
33  format:3003
34  format:3016
35  format:3839
36  format:3008
37  format:3620
38  format:2333
39  format:3475
---- Executed query, got data.frame: qt_df: #rows = 40, #cols: 1

df_pk (at most first 10 elements): ['format:3475', 'format:3752', 'format:3981', 'format:3989']
qt_pk (at most first 10 elements): ['format:3654', 'format:3603', 'format:3004', 'format:3578', 'format:3464', 'format:3579', 'format:3327', 'format:1936', 'format:3987', 'format:2332']
---- Removed rows from df with matching pk
*** Entering file_format to database ***
df: #rows = 0, #cols: 4

A slice of df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.38189005851745605 seconds.

--------- ingest/c2m2s/LINCS/datapackage/disease.tsv ---------
table_name:disease
LINCS: disease: Read from file: df: #rows = 29, #cols: 4

#Lines in file ingest/c2m2s/LINCS/datapackage/disease.tsv: 30
df: #rows = 29, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.disease;
qt_df:               pk
0      DOID:4977
1      DOID:6683
2     DOID:13941
3      DOID:8947
4     DOID:11840
...          ...
1910   DOID:9553
1911  DOID:12895
1912   DOID:3491
1913   DOID:8838
1914   DOID:2468

[1915 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 1915, #cols: 1

df_pk (at most first 10 elements): ['DOID:0060058', 'DOID:0070004', 'DOID:10286', 'DOID:1107', 'DOID:1240', 'DOID:1324', 'DOID:1520', 'DOID:1909', 'DOID:2526', 'DOID:2999']
qt_pk (at most first 10 elements): ['DOID:4977', 'DOID:6683', 'DOID:13941', 'DOID:8947', 'DOID:11840', 'DOID:14447', 'DOID:11054', 'DOID:1791', 'DOID:13810', 'DOID:10780']
---- Removed rows from df with matching pk
*** Entering disease to database ***
df: #rows = 7, #cols: 4

A slice of df:
              id  ...                                           synonyms
0   DOID:0060058  ...         ["DOID:1033","DOID:353","lymphoid cancer"]
1   DOID:0070004  ...                                                 []
8      DOID:2526  ...                                                 []
16     DOID:3605  ...  ["cystadenocarcinoma of ovary","cystadenocarci...
18     DOID:3702  ...  ["adenocarcinoma cervix uteri","adenocarcinoma...
22     DOID:4006  ...  ["bladder transitional cell carcinoma","transi...
23     DOID:4007  ...                   ["carcinoma of urinary bladder"]

[7 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.38955020904541016 seconds.

--------- ingest/c2m2s/LINCS/datapackage/data_type.tsv ---------
table_name:data_type
LINCS: data_type: Read from file: df: #rows = 8, #cols: 4

#Lines in file ingest/c2m2s/LINCS/datapackage/data_type.tsv: 9
df: #rows = 8, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.data_type;
qt_df:              pk
0     data:3112
1     data:0907
2     data:0006
3     data:1916
4     data:3210
5     data:3111
6     data:0945
7     data:1270
8     data:1714
9     data:3495
10  ILX:0793824
11    data:1383
12    data:3110
13    data:2603
14    data:2600
15    data:3494
16    data:2764
17    data:2048
18    data:0943
19    data:3028
20    data:1255
21    data:2082
22    data:3002
23    data:3914
24    data:3498
25    data:3917
26    data:2887
27    data:2976
28    data:2968
29    data:0925
30  ILX:0793825
---- Executed query, got data.frame: qt_df: #rows = 31, #cols: 1

df_pk (at most first 10 elements): ['data:0928', 'data:1566', 'data:2536', 'data:2603', 'data:2968', 'data:3002', 'data:3112', 'data:3917']
qt_pk (at most first 10 elements): ['data:3112', 'data:0907', 'data:0006', 'data:1916', 'data:3210', 'data:3111', 'data:0945', 'data:1270', 'data:1714', 'data:3495']
---- Removed rows from df with matching pk
*** Entering data_type to database ***
df: #rows = 3, #cols: 4

A slice of df:
          id  ...                             synonyms
0  data:0928  ...          ["Gene expression pattern"]
1  data:1566  ...  ["Protein-drug interaction report"]
2  data:2536  ...                                   []

[3 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.38570475578308105 seconds.

--------- ingest/c2m2s/LINCS/datapackage/compound.tsv ---------
table_name:compound
LINCS: compound: Read from file: df: #rows = 29315, #cols: 4

#Lines in file ingest/c2m2s/LINCS/datapackage/compound.tsv: 29316
df: #rows = 29315, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.compound;
qt_df:              pk
0      G21286VC
1      44665680
2      G55943II
3      11955614
4       5289593
...         ...
58106  G92927TC
58107  91857021
58108  91846918
58109  24812758
58110  G04679CK

[58111 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 58111, #cols: 1

df_pk (at most first 10 elements): ['86', '119', '137', '177', '187', '200', '204', '237', '243', '244']
qt_pk (at most first 10 elements): ['G21286VC', '44665680', 'G55943II', '11955614', '5289593', 'G10602EW', 'G84227HS', '25017411', 'G72207TE', 'G63954IW']
---- Removed rows from df with matching pk
*** Entering compound to database ***
df: #rows = 26578, #cols: 4

A slice of df:
        id  ...                                           synonyms
1252   177  ...  ["acetaldehyde", "ethanal", "75-07-0", "acetic...
1369   200  ...  ["1H-imidazole-4-carboxamide, 5-amino-1-(5-O-p...
2641   370  ...  ["Gallic acid", "3,4,5-Trihydroxybenzoic acid"...
8943   450  ...  ["13-methyl-6,7,8,9,11,12,14,15,16,17-decahydr...
8963   453  ...  ["Hexitol", "hexane-1,2,3,4,5,6-hexol", "hexan...
9024   462  ...  ["DL-Palmitoyl Carnitine", "palmitoyl carnitin...
9053   464  ...  ["Hippuric acid", "2-Benzamidoacetic acid", "4...
9260   476  ...  ["Phosphomevalonic acid", "1189-94-2", "Phosph...
28945  833  ...  ["DL-Citrulline", "627-77-0", "2-Amino-5-ureid...
29010  913  ...  ["2-(Methylamino)-1-phenylethanol", "6589-55-5...

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 18.23983860015869 seconds.

--------- ingest/c2m2s/LINCS/datapackage/assay_type.tsv ---------
table_name:assay_type
LINCS: assay_type: Read from file: df: #rows = 27, #cols: 4

#Lines in file ingest/c2m2s/LINCS/datapackage/assay_type.tsv: 28
df: #rows = 27, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.assay_type;
qt_df:               pk
0    OBI:0003094
1    OBI:0002760
2    OBI:0003306
3    OBI:0003097
4    OBI:0001920
5    OBI:0002145
6    OBI:0002112
7    OBI:0003034
8    OBI:0003108
9    OBI:0003101
10   OBI:0002118
11   OBI:0003100
12   OBI:0002766
13   OBI:0003312
14   OBI:0003301
15   OBI:0003093
16   OBI:0002117
17   OBI:0003104
18   OBI:0001848
19   OBI:0001977
20   OBI:0003299
21   OBI:0003089
22   OBI:0002768
23   OBI:0002984
24   OBI:0003105
25   OBI:0002763
26   OBI:0003092
27   OBI:0003107
28   OBI:0002623
29   OBI:0003033
30   OBI:0000470
31   OBI:0000626
32   OBI:0003313
33   OBI:0001985
34   OBI:0000185
35   OBI:0003305
36   OBI:0000893
37   OBI:0003304
38   OBI:0000716
39   OBI:0600047
40   OBI:0003303
41   OBI:0000366
42   OBI:0001177
43   OBI:0003311
44   OBI:0001631
45   OBI:0000615
46   OBI:0003103
47   OBI:0003300
48   OBI:0002631
49  CHMO:0000087
50   OBI:0003099
51   OBI:0003314
52   OBI:0003302
53   OBI:0001271
54   OBI:0003098
55   OBI:0003087
56   OBI:0002761
57   OBI:0003297
---- Executed query, got data.frame: qt_df: #rows = 58, #cols: 1

df_pk (at most first 10 elements): ['OBI:0000661', 'OBI:0000893', 'OBI:0001271', 'OBI:0001501', 'OBI:0002039', 'OBI:0002946', 'OBI:0002947', 'OBI:0002948', 'OBI:0002949', 'OBI:0002950']
qt_pk (at most first 10 elements): ['OBI:0003094', 'OBI:0002760', 'OBI:0003306', 'OBI:0003097', 'OBI:0001920', 'OBI:0002145', 'OBI:0002112', 'OBI:0003034', 'OBI:0003108', 'OBI:0003101']
---- Removed rows from df with matching pk
*** Entering assay_type to database ***
df: #rows = 25, #cols: 4

A slice of df:
             id  ...                                         synonyms
0   OBI:0000661  ...                                        ["ELISA"]
3   OBI:0001501  ...                                               []
4   OBI:0002039  ...                    ["ATAC-seq","ATAC-seq assay"]
5   OBI:0002946  ...                                               []
6   OBI:0002947  ...  ["fluroescence imaging-based cell count assay"]
7   OBI:0002948  ...                                               []
8   OBI:0002949  ...                                               []
9   OBI:0002950  ...                                               []
10  OBI:0002951  ...                                               []
11  OBI:0002952  ...                                               []

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.39362454414367676 seconds.

--------- ingest/c2m2s/LINCS/datapackage/anatomy.tsv ---------
table_name:anatomy
LINCS: anatomy: Read from file: df: #rows = 60, #cols: 4

#Lines in file ingest/c2m2s/LINCS/datapackage/anatomy.tsv: 61
df: #rows = 60, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.anatomy;
qt_df:                  pk
0    UBERON:0000087
1    UBERON:0001199
2    UBERON:0016435
3    UBERON:0007311
4    UBERON:0001728
..              ...
249  UBERON:0001496
250  UBERON:0000473
251  UBERON:0013069
252  UBERON:0008337
253  UBERON:0001474

[254 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 254, #cols: 1

df_pk (at most first 10 elements): ['UBERON:0000002', 'UBERON:0000007', 'UBERON:0000029', 'UBERON:0000056', 'UBERON:0000059', 'UBERON:0000160', 'UBERON:0000178', 'UBERON:0000310', 'UBERON:0000358', 'UBERON:0000473']
qt_pk (at most first 10 elements): ['UBERON:0000087', 'UBERON:0001199', 'UBERON:0016435', 'UBERON:0007311', 'UBERON:0001728', 'UBERON:0001736', 'UBERON:0002037', 'UBERON:0009835', 'UBERON:0001621', 'UBERON:0002097']
---- Removed rows from df with matching pk
*** Entering anatomy to database ***
df: #rows = 25, #cols: 4

A slice of df:
                id  ...                                       synonyms
3   UBERON:0000056  ...                                             []
5   UBERON:0000160  ...                                      ["bowel"]
7   UBERON:0000310  ...     ["mammary part of chest","mammary region"]
8   UBERON:0000358  ...                                             []
10  UBERON:0000483  ...  ["epithelial tissue","portion of epithelium"]
15  UBERON:0000974  ...                                             []
21  UBERON:0001013  ...            ["fat","fat tissue","fatty tissue"]
22  UBERON:0001016  ...                        ["neurological system"]
24  UBERON:0001021  ...                  ["nerves","peripheral nerve"]
26  UBERON:0001044  ...                             ["salivary gland"]

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.38091611862182617 seconds.

--------- ingest/c2m2s/LINCS/datapackage/protein_gene.tsv ---------
table_name:protein_gene
LINCS: protein_gene: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/LINCS/datapackage/protein_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3248171806335449 seconds.

--------- ingest/c2m2s/LINCS/datapackage/phenotype_gene.tsv ---------
table_name:phenotype_gene
LINCS: phenotype_gene: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/LINCS/datapackage/phenotype_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.32726287841796875 seconds.

--------- ingest/c2m2s/LINCS/datapackage/phenotype_disease.tsv ---------
table_name:phenotype_disease
LINCS: phenotype_disease: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/LINCS/datapackage/phenotype_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.32752466201782227 seconds.

--------- ingest/c2m2s/LINCS/datapackage/subject.tsv ---------
table_name:subject
LINCS: subject: Read from file: df: #rows = 1966, #cols: 10

#Lines in file ingest/c2m2s/LINCS/datapackage/subject.tsv: 1967
df: #rows = 1966, #cols: 10
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering subject to database ***
df: #rows = 1966, #cols: 10

A slice of df:
                    id_namespace local_id  ... project_local_id persistent_id
0  https://www.lincsproject.org/     CD34  ...            LINCS           NaN
1  https://www.lincsproject.org/     HL60  ...            LINCS           NaN
2  https://www.lincsproject.org/      PC3  ...            LINCS           NaN
3  https://www.lincsproject.org/     U937  ...            LINCS           NaN
4  https://www.lincsproject.org/     MCF7  ...            LINCS           NaN
5  https://www.lincsproject.org/     A375  ...            LINCS           NaN
6  https://www.lincsproject.org/  HEK293T  ...            LINCS           NaN
7  https://www.lincsproject.org/     HA1E  ...            LINCS           NaN
8  https://www.lincsproject.org/   HCC515  ...            LINCS           NaN
9  https://www.lincsproject.org/     VCAP  ...            LINCS           NaN

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.43757033348083496 seconds.

--------- ingest/c2m2s/LINCS/datapackage/subject_substance.tsv ---------
table_name:subject_substance
LINCS: subject_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/LINCS/datapackage/subject_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3260993957519531 seconds.

--------- ingest/c2m2s/LINCS/datapackage/subject_race.tsv ---------
table_name:subject_race
LINCS: subject_race: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/LINCS/datapackage/subject_race.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.33339667320251465 seconds.

--------- ingest/c2m2s/LINCS/datapackage/subject_role_taxonomy.tsv ---------
table_name:subject_role_taxonomy
LINCS: subject_role_taxonomy: Read from file: df: #rows = 1966, #cols: 4

#Lines in file ingest/c2m2s/LINCS/datapackage/subject_role_taxonomy.tsv: 1967
df: #rows = 1966, #cols: 4
pKeys: ['subject_id_namespace', 'subject_local_id', 'role_id', 'taxonomy_id']
Going to write the count query
Wrote the count query
*** Entering subject_role_taxonomy to database ***
df: #rows = 1966, #cols: 4

A slice of df:
            subject_id_namespace  ...    taxonomy_id
0  https://www.lincsproject.org/  ...  NCBI:txid9606
1  https://www.lincsproject.org/  ...  NCBI:txid9606
2  https://www.lincsproject.org/  ...  NCBI:txid9606
3  https://www.lincsproject.org/  ...  NCBI:txid9606
4  https://www.lincsproject.org/  ...  NCBI:txid9606
5  https://www.lincsproject.org/  ...  NCBI:txid9606
6  https://www.lincsproject.org/  ...  NCBI:txid9606
7  https://www.lincsproject.org/  ...  NCBI:txid9606
8  https://www.lincsproject.org/  ...  NCBI:txid9606
9  https://www.lincsproject.org/  ...  NCBI:txid9606

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.4130527973175049 seconds.

--------- ingest/c2m2s/LINCS/datapackage/subject_phenotype.tsv ---------
table_name:subject_phenotype
LINCS: subject_phenotype: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/LINCS/datapackage/subject_phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3274853229522705 seconds.

--------- ingest/c2m2s/LINCS/datapackage/subject_in_collection.tsv ---------
table_name:subject_in_collection
LINCS: subject_in_collection: Read from file: df: #rows = 12002, #cols: 4

#Lines in file ingest/c2m2s/LINCS/datapackage/subject_in_collection.tsv: 12003
df: #rows = 12002, #cols: 4
pKeys: ['subject_id_namespace', 'subject_local_id', 'collection_id_namespace', 'collection_local_id']
Going to write the count query
Wrote the count query
*** Entering subject_in_collection to database ***
df: #rows = 12002, #cols: 4

A slice of df:
            subject_id_namespace  ... collection_local_id
0  https://www.lincsproject.org/  ...            LDG-1251
1  https://www.lincsproject.org/  ...            LDG-1251
2  https://www.lincsproject.org/  ...            LDG-1104
3  https://www.lincsproject.org/  ...            LDG-1074
4  https://www.lincsproject.org/  ...            LDG-1215
5  https://www.lincsproject.org/  ...            LDG-1215
6  https://www.lincsproject.org/  ...            LDG-1215
7  https://www.lincsproject.org/  ...            LDG-1215
8  https://www.lincsproject.org/  ...            LDG-1215
9  https://www.lincsproject.org/  ...            LDG-1215

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.5612227916717529 seconds.

--------- ingest/c2m2s/LINCS/datapackage/subject_disease.tsv ---------
table_name:subject_disease
LINCS: subject_disease: Read from file: df: #rows = 197, #cols: 4

#Lines in file ingest/c2m2s/LINCS/datapackage/subject_disease.tsv: 198
df: #rows = 197, #cols: 4
pKeys: ['subject_id_namespace', 'subject_local_id', 'association_type', 'disease']
Going to write the count query
Wrote the count query
*** Entering subject_disease to database ***
df: #rows = 197, #cols: 4

A slice of df:
            subject_id_namespace  ...       disease
0  https://www.lincsproject.org/  ...     DOID:1240
1  https://www.lincsproject.org/  ...     DOID:2526
2  https://www.lincsproject.org/  ...  DOID:0060058
3  https://www.lincsproject.org/  ...     DOID:3459
4  https://www.lincsproject.org/  ...     DOID:1909
5  https://www.lincsproject.org/  ...     DOID:1324
6  https://www.lincsproject.org/  ...     DOID:2526
7  https://www.lincsproject.org/  ...      DOID:305
8  https://www.lincsproject.org/  ...     DOID:1520
9  https://www.lincsproject.org/  ...     DOID:1324

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.38278865814208984 seconds.

--------- ingest/c2m2s/LINCS/datapackage/primary_dcc_contact.tsv ---------
table_name:primary_dcc_contact
>>>>>>>> Time taken to ingest the metadata from this file: 3.814697265625e-05 seconds.

--------- ingest/c2m2s/LINCS/datapackage/id_namespace.tsv ---------
table_name:id_namespace
LINCS: id_namespace: Read from file: df: #rows = 1, #cols: 4

#Lines in file ingest/c2m2s/LINCS/datapackage/id_namespace.tsv: 2
df: #rows = 1, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.id_namespace;
qt_df:                                                    pk
0   https://druggablegenome.net/cfde_idg_drugcentr...
1                                               egtex
2                    https://www.druggablegenome.net/
3                        https://www.data.glygen.org/
4                         https://data.4dnucleome.org
5   https://druggablegenome.net/cfde_idg_tcrd_dise...
6                                                gtex
7   https://druggablegenome.net/cfde_idg_tcrd_targets
8                                          ERCC-exRNA
9                         tag:hmpdacc.org,2022-04-04:
10                                         adult_gtex
11                                         kidsfirst:
12                     tag:hubmapconsortium.org,2023:
---- Executed query, got data.frame: qt_df: #rows = 13, #cols: 1

df_pk (at most first 10 elements): ['https://www.lincsproject.org/']
qt_pk (at most first 10 elements): ['https://druggablegenome.net/cfde_idg_drugcentral_drugs', 'egtex', 'https://www.druggablegenome.net/', 'https://www.data.glygen.org/', 'https://data.4dnucleome.org', 'https://druggablegenome.net/cfde_idg_tcrd_diseases', 'gtex', 'https://druggablegenome.net/cfde_idg_tcrd_targets', 'ERCC-exRNA', 'tag:hmpdacc.org,2022-04-04:']
---- Removed rows from df with matching pk
*** Entering id_namespace to database ***
df: #rows = 1, #cols: 4

A slice of df:
                              id  ...                                        description
0  https://www.lincsproject.org/  ...  A library that catalogs changes that occur whe...

[1 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.3778097629547119 seconds.

--------- ingest/c2m2s/LINCS/datapackage/file_in_collection.tsv ---------
table_name:file_in_collection
LINCS: file_in_collection: Read from file: df: #rows = 465, #cols: 4

#Lines in file ingest/c2m2s/LINCS/datapackage/file_in_collection.tsv: 466
df: #rows = 465, #cols: 4
pKeys: ['file_id_namespace', 'file_local_id', 'collection_id_namespace', 'collection_local_id']
Going to write the count query
Wrote the count query
*** Entering file_in_collection to database ***
df: #rows = 465, #cols: 4

A slice of df:
               file_id_namespace  ... collection_local_id
0  https://www.lincsproject.org/  ...            LDG-1397
1  https://www.lincsproject.org/  ...            LDG-1107
2  https://www.lincsproject.org/  ...            LDG-1399
3  https://www.lincsproject.org/  ...            LDG-1187
4  https://www.lincsproject.org/  ...            LDG-1251
5  https://www.lincsproject.org/  ...            LDG-1042
6  https://www.lincsproject.org/  ...            LDG-1104
7  https://www.lincsproject.org/  ...            LDG-1096
8  https://www.lincsproject.org/  ...            LDG-1148
9  https://www.lincsproject.org/  ...            LDG-1160

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.3902261257171631 seconds.

--------- ingest/c2m2s/LINCS/datapackage/file_describes_collection.tsv ---------
table_name:file_describes_collection
LINCS: file_describes_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/LINCS/datapackage/file_describes_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.32503199577331543 seconds.

--------- ingest/c2m2s/LINCS/datapackage/dcc.tsv ---------
table_name:dcc
LINCS: dcc: Read from file: df: #rows = 1, #cols: 9

#Lines in file ingest/c2m2s/LINCS/datapackage/dcc.tsv: 2
df: #rows = 1, #cols: 9
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.dcc;
qt_df:                             pk
0     cfde_registry_dcc:glygen
1      cfde_registry_dcc:exrna
2  cfde_registry_dcc:kidsfirst
3        cfde_registry_dcc:4dn
4        cfde_registry_dcc:hmp
5     cfde_registry_dcc:hubmap
6       cfde_registry_dcc:gtex
7        cfde_registry_dcc:idg
---- Executed query, got data.frame: qt_df: #rows = 8, #cols: 1

df_pk (at most first 10 elements): ['cfde_registry_dcc:lincs']
qt_pk (at most first 10 elements): ['cfde_registry_dcc:glygen', 'cfde_registry_dcc:exrna', 'cfde_registry_dcc:kidsfirst', 'cfde_registry_dcc:4dn', 'cfde_registry_dcc:hmp', 'cfde_registry_dcc:hubmap', 'cfde_registry_dcc:gtex', 'cfde_registry_dcc:idg']
---- Removed rows from df with matching pk
*** Entering dcc to database ***
df: #rows = 1, #cols: 9

A slice of df:
                        id  ...        contact_email
0  cfde_registry_dcc:lincs  ...  avi.maayan@mssm.edu

[1 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.3796572685241699 seconds.

--------- ingest/c2m2s/LINCS/datapackage/collection.tsv ---------
table_name:collection
LINCS: collection: Read from file: df: #rows = 409, #cols: 8

#Lines in file ingest/c2m2s/LINCS/datapackage/collection.tsv: 410
df: #rows = 409, #cols: 8
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering collection to database ***
df: #rows = 409, #cols: 8

A slice of df:
                    id_namespace  ... abbreviation
0  https://www.lincsproject.org/  ...          NaN
1  https://www.lincsproject.org/  ...          NaN
2  https://www.lincsproject.org/  ...          NaN
3  https://www.lincsproject.org/  ...          NaN
4  https://www.lincsproject.org/  ...          NaN
5  https://www.lincsproject.org/  ...          NaN
6  https://www.lincsproject.org/  ...          NaN
7  https://www.lincsproject.org/  ...          NaN
8  https://www.lincsproject.org/  ...          NaN
9  https://www.lincsproject.org/  ...          NaN

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.3921647071838379 seconds.

--------- ingest/c2m2s/LINCS/datapackage/collection_taxonomy.tsv ---------
table_name:collection_taxonomy
LINCS: collection_taxonomy: Read from file: df: #rows = 409, #cols: 3

#Lines in file ingest/c2m2s/LINCS/datapackage/collection_taxonomy.tsv: 410
df: #rows = 409, #cols: 3
pKeys: ['collection_id_namespace', 'collection_local_id', 'taxon']
Going to write the count query
Wrote the count query
*** Entering collection_taxonomy to database ***
df: #rows = 409, #cols: 3

A slice of df:
         collection_id_namespace collection_local_id          taxon
0  https://www.lincsproject.org/            LDG-1397  NCBI:txid9606
1  https://www.lincsproject.org/            LDG-1107  NCBI:txid9606
2  https://www.lincsproject.org/            LDG-1399  NCBI:txid9606
3  https://www.lincsproject.org/            LDG-1187  NCBI:txid9606
4  https://www.lincsproject.org/            LDG-1251  NCBI:txid9606
5  https://www.lincsproject.org/            LDG-1042  NCBI:txid9606
6  https://www.lincsproject.org/            LDG-1104  NCBI:txid9606
7  https://www.lincsproject.org/            LDG-1096  NCBI:txid9606
8  https://www.lincsproject.org/            LDG-1148  NCBI:txid9606
9  https://www.lincsproject.org/            LDG-1160  NCBI:txid9606
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.3777456283569336 seconds.

--------- ingest/c2m2s/LINCS/datapackage/collection_substance.tsv ---------
table_name:collection_substance
LINCS: collection_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/LINCS/datapackage/collection_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3244762420654297 seconds.

--------- ingest/c2m2s/LINCS/datapackage/collection_protein.tsv ---------
table_name:collection_protein
LINCS: collection_protein: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/LINCS/datapackage/collection_protein.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.32812070846557617 seconds.

--------- ingest/c2m2s/LINCS/datapackage/collection_phenotype.tsv ---------
table_name:collection_phenotype
LINCS: collection_phenotype: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/LINCS/datapackage/collection_phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3289012908935547 seconds.

--------- ingest/c2m2s/LINCS/datapackage/collection_in_collection.tsv ---------
table_name:collection_in_collection
LINCS: collection_in_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/LINCS/datapackage/collection_in_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3270752429962158 seconds.

--------- ingest/c2m2s/LINCS/datapackage/collection_gene.tsv ---------
table_name:collection_gene
LINCS: collection_gene: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/LINCS/datapackage/collection_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3264293670654297 seconds.

Processing C2M2 Files...:  75%|███████▌  | 9/12 [25:15<11:43, 234.49s/it]--------- ingest/c2m2s/LINCS/datapackage/collection_disease.tsv ---------
table_name:collection_disease
LINCS: collection_disease: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/LINCS/datapackage/collection_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.33037734031677246 seconds.

--------- ingest/c2m2s/LINCS/datapackage/collection_defined_by_project.tsv ---------
table_name:collection_defined_by_project
LINCS: collection_defined_by_project: Read from file: df: #rows = 409, #cols: 4

#Lines in file ingest/c2m2s/LINCS/datapackage/collection_defined_by_project.tsv: 410
df: #rows = 409, #cols: 4
pKeys: ['collection_id_namespace', 'collection_local_id', 'project_id_namespace', 'project_local_id']
Going to write the count query
Wrote the count query
*** Entering collection_defined_by_project to database ***
df: #rows = 409, #cols: 4

A slice of df:
         collection_id_namespace  ... project_local_id
0  https://www.lincsproject.org/  ...    LINCS phase 2
1  https://www.lincsproject.org/  ...    LINCS phase 1
2  https://www.lincsproject.org/  ...    LINCS phase 2
3  https://www.lincsproject.org/  ...    LINCS phase 1
4  https://www.lincsproject.org/  ...    LINCS phase 2
5  https://www.lincsproject.org/  ...    LINCS phase 1
6  https://www.lincsproject.org/  ...    LINCS phase 1
7  https://www.lincsproject.org/  ...    LINCS phase 1
8  https://www.lincsproject.org/  ...    LINCS phase 1
9  https://www.lincsproject.org/  ...    LINCS phase 1

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.3927154541015625 seconds.

--------- ingest/c2m2s/LINCS/datapackage/collection_compound.tsv ---------
table_name:collection_compound
LINCS: collection_compound: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/LINCS/datapackage/collection_compound.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.325441837310791 seconds.

--------- ingest/c2m2s/LINCS/datapackage/collection_anatomy.tsv ---------
table_name:collection_anatomy
LINCS: collection_anatomy: Read from file: df: #rows = 179, #cols: 3

#Lines in file ingest/c2m2s/LINCS/datapackage/collection_anatomy.tsv: 180
df: #rows = 179, #cols: 3
pKeys: ['collection_id_namespace', 'collection_local_id', 'anatomy']
Going to write the count query
Wrote the count query
*** Entering collection_anatomy to database ***
df: #rows = 179, #cols: 3

A slice of df:
         collection_id_namespace collection_local_id         anatomy
0  https://www.lincsproject.org/            LDG-1251  UBERON:0000178
1  https://www.lincsproject.org/            LDG-1104  UBERON:0002048
2  https://www.lincsproject.org/            LDG-1074  UBERON:0002097
3  https://www.lincsproject.org/            LDG-1215  UBERON:0002097
4  https://www.lincsproject.org/            LDG-1120  UBERON:0000310
5  https://www.lincsproject.org/            LDG-1252  UBERON:0000310
6  https://www.lincsproject.org/            LDG-1253  UBERON:0000310
7  https://www.lincsproject.org/            LDG-1254  UBERON:0000310
8  https://www.lincsproject.org/            LDG-1415  UBERON:0000310
9  https://www.lincsproject.org/            LDG-1416  UBERON:0000310
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.3745901584625244 seconds.

--------- ingest/c2m2s/LINCS/datapackage/biosample_in_collection.tsv ---------
table_name:biosample_in_collection
LINCS: biosample_in_collection: Read from file: df: #rows = 12002, #cols: 4

#Lines in file ingest/c2m2s/LINCS/datapackage/biosample_in_collection.tsv: 12003
df: #rows = 12002, #cols: 4
pKeys: ['biosample_id_namespace', 'biosample_local_id', 'collection_id_namespace', 'collection_local_id']
Going to write the count query
Wrote the count query
*** Entering biosample_in_collection to database ***
df: #rows = 12002, #cols: 4

A slice of df:
          biosample_id_namespace  ... collection_local_id
0  https://www.lincsproject.org/  ...            LDG-1251
1  https://www.lincsproject.org/  ...            LDG-1251
2  https://www.lincsproject.org/  ...            LDG-1104
3  https://www.lincsproject.org/  ...            LDG-1074
4  https://www.lincsproject.org/  ...            LDG-1215
5  https://www.lincsproject.org/  ...            LDG-1215
6  https://www.lincsproject.org/  ...            LDG-1215
7  https://www.lincsproject.org/  ...            LDG-1215
8  https://www.lincsproject.org/  ...            LDG-1215
9  https://www.lincsproject.org/  ...            LDG-1215

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.5655326843261719 seconds.

--------- ingest/c2m2s/LINCS/datapackage/__MACOSX/._analysis_type.tsv ---------
>>>>>>>> Time taken to ingest the metadata from this file: 1.52587890625e-05 seconds.

--------- ingest/c2m2s/LINCS/datapackage/__MACOSX/._project.tsv ---------
>>>>>>>> Time taken to ingest the metadata from this file: 1.6450881958007812e-05 seconds.


================================== DCC short label: Metabolomics =============================================
--------- ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/subject_race.tsv ---------
table_name:subject_race
Metabolomics: subject_race: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/subject_race.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3239116668701172 seconds.

--------- ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/subject_substance.tsv ---------
table_name:subject_substance
Metabolomics: subject_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/subject_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3287174701690674 seconds.

--------- ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/analysis_type.tsv ---------
table_name:analysis_type
Metabolomics: analysis_type: Read from file: df: #rows = 3, #cols: 4

#Lines in file ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/analysis_type.tsv: 4
df: #rows = 3, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.analysis_type;
qt_df:             pk
0  OBI:0000679
1  OBI:0001985
2  OBI:0001872
---- Executed query, got data.frame: qt_df: #rows = 3, #cols: 1

df_pk (at most first 10 elements): ['OBI:0000726', 'OBI:0200085', 'OBI:0200199']
qt_pk (at most first 10 elements): ['OBI:0000679', 'OBI:0001985', 'OBI:0001872']
---- Removed rows from df with matching pk
*** Entering analysis_type to database ***
df: #rows = 3, #cols: 4

A slice of df:
            id  ... synonyms
0  OBI:0000726  ...       []
1  OBI:0200085  ...       []
2  OBI:0200199  ...       []

[3 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.3820686340332031 seconds.

--------- ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/anatomy.tsv ---------
table_name:anatomy
Metabolomics: anatomy: Read from file: df: #rows = 108, #cols: 4

#Lines in file ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/anatomy.tsv: 109
df: #rows = 108, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.anatomy;
qt_df:                  pk
0    UBERON:0001474
1    UBERON:0001013
2    UBERON:0000087
3    UBERON:0001199
4    UBERON:0016435
..              ...
274  UBERON:0001496
275  UBERON:0000473
276  UBERON:0000056
277  UBERON:0013069
278  UBERON:0008337

[279 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 279, #cols: 1

df_pk (at most first 10 elements): ['UBERON:0000006', 'UBERON:0000033', 'UBERON:0000038', 'UBERON:0000044', 'UBERON:0000160', 'UBERON:0000173', 'UBERON:0000178', 'UBERON:0000310', 'UBERON:0000358', 'UBERON:0000403']
qt_pk (at most first 10 elements): ['UBERON:0001474', 'UBERON:0001013', 'UBERON:0000087', 'UBERON:0001199', 'UBERON:0016435', 'UBERON:0007311', 'UBERON:0001728', 'UBERON:0001736', 'UBERON:0002037', 'UBERON:0009835']
---- Removed rows from df with matching pk
*** Entering anatomy to database ***
df: #rows = 50, #cols: 4

A slice of df:
                id  ...                                           synonyms
0   UBERON:0000006  ...           ["pancreatic insula","pancreatic islet"]
1   UBERON:0000033  ...                                  ["head (volume)"]
2   UBERON:0000038  ...  ["liquor follicularis","liquor folliculi","ova...
3   UBERON:0000044  ...  ["UBERON:0026602","dorsal root ganglion","gang...
13  UBERON:0000913  ...             ["intercellular fluid","tissue fluid"]
29  UBERON:0001089  ...                                                 []
30  UBERON:0001134  ...                                ["skeletal muscle"]
35  UBERON:0001268  ...                                                 []
37  UBERON:0001322  ...                                                 []
38  UBERON:0001344  ...  ["epithelial tissue of vagina","vagina epithel...

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.38431644439697266 seconds.

--------- ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/assay_type.tsv ---------
table_name:assay_type
Metabolomics: assay_type: Read from file: df: #rows = 4, #cols: 4

#Lines in file ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/assay_type.tsv: 5
df: #rows = 4, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.assay_type;
qt_df:              pk
0   OBI:0003094
1   OBI:0001501
2   OBI:0002760
3   OBI:0003306
4   OBI:0003097
..          ...
78  OBI:0001271
79  OBI:0003098
80  OBI:0003087
81  OBI:0002761
82  OBI:0003297

[83 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 83, #cols: 1

df_pk (at most first 10 elements): ['OBI:0000470', 'OBI:0000623', 'OBI:0003097', 'OBI:0003110']
qt_pk (at most first 10 elements): ['OBI:0003094', 'OBI:0001501', 'OBI:0002760', 'OBI:0003306', 'OBI:0003097', 'OBI:0001920', 'OBI:0002963', 'OBI:0002145', 'OBI:0002112', 'OBI:0003034']
---- Removed rows from df with matching pk
*** Entering assay_type to database ***
df: #rows = 2, #cols: 4

A slice of df:
            id  ...                                     synonyms
1  OBI:0000623  ...  ["Nuclear magnetic resonance spectroscopy"]
3  OBI:0003110  ...                                    ["GC-MS"]

[2 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.38196611404418945 seconds.

--------- ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/compound.tsv ---------
table_name:compound
Metabolomics: compound: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/compound.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.32569408416748047 seconds.

--------- ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/data_type.tsv ---------
table_name:data_type
Metabolomics: data_type: Read from file: df: #rows = 2, #cols: 4

#Lines in file ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/data_type.tsv: 3
df: #rows = 2, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.data_type;
qt_df:              pk
0     data:3112
1     data:0907
2     data:0006
3     data:1916
4     data:3210
5     data:3111
6     data:0945
7     data:1270
8     data:1714
9     data:2536
10    data:3495
11  ILX:0793824
12    data:1566
13    data:1383
14    data:3110
15    data:2603
16    data:2600
17    data:3494
18    data:2764
19    data:2048
20    data:0943
21    data:0928
22    data:3028
23    data:1255
24    data:2082
25    data:3002
26    data:3914
27    data:3498
28    data:3917
29    data:2887
30    data:2976
31    data:2968
32    data:0925
33  ILX:0793825
---- Executed query, got data.frame: qt_df: #rows = 34, #cols: 1

df_pk (at most first 10 elements): ['data:2536', 'data:3488']
qt_pk (at most first 10 elements): ['data:3112', 'data:0907', 'data:0006', 'data:1916', 'data:3210', 'data:3111', 'data:0945', 'data:1270', 'data:1714', 'data:2536']
---- Removed rows from df with matching pk
*** Entering data_type to database ***
df: #rows = 1, #cols: 4

A slice of df:
          id  ...         synonyms
1  data:3488  ...  ["NMR spectra"]

[1 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.38100504875183105 seconds.

--------- ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/disease.tsv ---------
table_name:disease
Metabolomics: disease: Read from file: df: #rows = 126, #cols: 4

#Lines in file ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/disease.tsv: 127
df: #rows = 126, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.disease;
qt_df:               pk
0      DOID:4977
1      DOID:6683
2     DOID:13941
3      DOID:8947
4     DOID:11840
...          ...
1917   DOID:9553
1918  DOID:12895
1919   DOID:3491
1920   DOID:8838
1921   DOID:2468

[1922 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 1922, #cols: 1

df_pk (at most first 10 elements): ['DOID:0014667', 'DOID:0040085', 'DOID:0050117', 'DOID:0050476', 'DOID:0050589', 'DOID:0050700', 'DOID:0050741', 'DOID:0050753', 'DOID:0050830', 'DOID:0050847']
qt_pk (at most first 10 elements): ['DOID:4977', 'DOID:6683', 'DOID:13941', 'DOID:8947', 'DOID:11840', 'DOID:14447', 'DOID:4006', 'DOID:11054', 'DOID:1791', 'DOID:13810']
---- Removed rows from df with matching pk
*** Entering disease to database ***
df: #rows = 28, #cols: 4

A slice of df:
             id  ...                                           synonyms
0  DOID:0014667  ...                              ["metabolic disease"]
1  DOID:0040085  ...                                                 []
2  DOID:0050117  ...  ["DOID:10115","DOID:11078","DOID:1304","DOID:1...
3  DOID:0050476  ...  ["3-methylglutaconicaciduria type 2","3-methyl...
4  DOID:0050589  ...                                                 []
5  DOID:0050700  ...                               ["Cardiomyopathies"]
6  DOID:0050741  ...                                     ["alcoholism"]
7  DOID:0050753  ...                                                 []
8  DOID:0050830  ...                                                 []
9  DOID:0050847  ...                                                 []

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.38396167755126953 seconds.

--------- ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/file_format.tsv ---------
table_name:file_format
Metabolomics: file_format: Read from file: df: #rows = 9, #cols: 4

#Lines in file ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/file_format.tsv: 10
df: #rows = 9, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.file_format;
qt_df:              pk
0   format:3654
1   format:3603
2   format:3004
3   format:3578
4   format:3464
5   format:3579
6   format:3327
7   format:1936
8   format:3987
9   format:2332
10  format:1975
11  format:3712
12  format:2572
13  format:3591
14  format:3590
15  format:3873
16  format:3006
17  format:3462
18  format:1930
19  format:3468
20  format:3244
21  format:3727
22  format:3752
23  format:1919
24  format:3829
25  format:3583
26  format:1929
27  format:3981
28  format:3746
29  format:3989
30  format:2330
31  format:3508
32  format:2331
33  format:3003
34  format:3016
35  format:3839
36  format:3008
37  format:3620
38  format:2333
39  format:3475
---- Executed query, got data.frame: qt_df: #rows = 40, #cols: 1

df_pk (at most first 10 elements): ['format:2330', 'format:2333', 'format:3506', 'format:3508', 'format:3620', 'format:3752', 'format:3981', 'format:3987', 'format:3989']
qt_pk (at most first 10 elements): ['format:3654', 'format:3603', 'format:3004', 'format:3578', 'format:3464', 'format:3579', 'format:3327', 'format:1936', 'format:3987', 'format:2332']
---- Removed rows from df with matching pk
*** Entering file_format to database ***
df: #rows = 1, #cols: 4

A slice of df:
            id  name             description                         synonyms
2  format:3506  docx  Microsoft Word format.  ["Microsoft Word format","doc"]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.37937140464782715 seconds.

--------- ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/gene.tsv ---------
table_name:gene
Metabolomics: gene: Read from file: df: #rows = 5624, #cols: 5

#Lines in file ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/gene.tsv: 5625
df: #rows = 5624, #cols: 5
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.gene;
qt_df:                     pk
0      ENSG00000005007
1      ENSG00000158769
2      ENSG00000079805
3      ENSG00000164611
4      ENSG00000204525
...                ...
19668  ENSG00000255524
19669  ENSG00000171396
19670  ENSG00000141456
19671  ENSG00000134444
19672  ENSG00000170178

[19673 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 19673, #cols: 1

df_pk (at most first 10 elements): ['ENSG00000000419', 'ENSG00000000971', 'ENSG00000001084', 'ENSG00000001497', 'ENSG00000001626', 'ENSG00000001631', 'ENSG00000002016', 'ENSG00000002330', 'ENSG00000002586', 'ENSG00000002587']
qt_pk (at most first 10 elements): ['ENSG00000005007', 'ENSG00000158769', 'ENSG00000079805', 'ENSG00000164611', 'ENSG00000204525', 'ENSG00000112245', 'ENSG00000137975', 'ENSG00000035115', 'ENSG00000182111', 'ENSG00000108381']
---- Removed rows from df with matching pk
*** Entering gene to database ***
df: #rows = 643, #cols: 5

A slice of df:
                   id  ...       organism
4126  ENSG00000182974  ...  NCBI:txid9606
4281  ENSG00000186645  ...  NCBI:txid9606
4463  ENSG00000197061  ...  NCBI:txid9606
4472  ENSG00000197238  ...  NCBI:txid9606
4640  ENSG00000204364  ...  NCBI:txid9606
4651  ENSG00000204539  ...  NCBI:txid9606
4658  ENSG00000204700  ...  NCBI:txid9606
4688  ENSG00000206206  ...  NCBI:txid9606
4689  ENSG00000206208  ...  NCBI:txid9606
4690  ENSG00000206237  ...  NCBI:txid9606

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.0144367218017578 seconds.

--------- ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/phenotype_disease.tsv ---------
table_name:phenotype_disease
Metabolomics: phenotype_disease: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/phenotype_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.36410093307495117 seconds.

--------- ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/phenotype_gene.tsv ---------
table_name:phenotype_gene
Metabolomics: phenotype_gene: Read from file: df: #rows = 18640, #cols: 2

#Lines in file ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/phenotype_gene.tsv: 18641
df: #rows = 18640, #cols: 2
pKeys: ['phenotype', 'gene']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', phenotype, gene) as pk FROM c2m2.phenotype_gene;
qt_df: Empty DataFrame
Columns: [pk]
Index: []
---- Executed query, got data.frame: qt_df: #rows = 0, #cols: 1

df_pk (at most first 10 elements): ['HP:0000047___ENSG00000002587', 'HP:0000047___ENSG00000004487', 'HP:0000047___ENSG00000004848', 'HP:0000047___ENSG00000004961', 'HP:0000047___ENSG00000005073', 'HP:0000047___ENSG00000005339', 'HP:0000047___ENSG00000005961', 'HP:0000047___ENSG00000006451', 'HP:0000047___ENSG00000006695', 'HP:0000047___ENSG00000007372']
qt_pk (at most first 10 elements): []
---- Removed rows from df with matching pk
*** Entering phenotype_gene to database ***
df: #rows = 18640, #cols: 2

A slice of df:
      phenotype             gene
527  HP:0000047  ENSG00000002587
597  HP:0000047  ENSG00000004487
385  HP:0000047  ENSG00000004848
107  HP:0000047  ENSG00000004961
368  HP:0000047  ENSG00000005073
244  HP:0000047  ENSG00000005339
169  HP:0000047  ENSG00000005961
374  HP:0000047  ENSG00000006451
155  HP:0000047  ENSG00000006695
470  HP:0000047  ENSG00000007372
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 2.5455806255340576 seconds.

--------- ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/phenotype.tsv ---------
table_name:phenotype
Metabolomics: phenotype: Read from file: df: #rows = 65, #cols: 4

#Lines in file ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/phenotype.tsv: 66
df: #rows = 65, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.phenotype;
qt_df: Empty DataFrame
Columns: [pk]
Index: []
---- Executed query, got data.frame: qt_df: #rows = 0, #cols: 1

df_pk (at most first 10 elements): ['HP:0000047', 'HP:0000670', 'HP:0000716', 'HP:0000717', 'HP:0000726', 'HP:0000739', 'HP:0000822', 'HP:0000939', 'HP:0000964', 'HP:0001047']
qt_pk (at most first 10 elements): []
---- Removed rows from df with matching pk
*** Entering phenotype to database ***
df: #rows = 65, #cols: 4

A slice of df:
           id  ...                                           synonyms
0  HP:0000047  ...                                     ["Hypospadia"]
1  HP:0000670  ...  ["HP:0006295","HP:0006306","Caries","Cariosity...
2  HP:0000716  ...                      ["Depression","Depressivity"]
3  HP:0000717  ...                                         ["Autism"]
4  HP:0000726  ...  ["HP:0002274","HP:0007122","HP:0007150","HP:00...
5  HP:0000739  ...  ["Anxiety","Anxiousness","Excessive, persisten...
6  HP:0000822  ...  ["HP:0004949","HP:0005126","Arterial hypertens...
7  HP:0000939  ...                                     ["HP:0002774"]
8  HP:0000964  ...                            ["HP:0001481","Eczema"]
9  HP:0001047  ...  ["HP:0007533","HP:0007564","Atopic dermatitis,...

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.385922908782959 seconds.

--------- ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/protein_gene.tsv ---------
table_name:protein_gene
Metabolomics: protein_gene: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/protein_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3259727954864502 seconds.

--------- ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/protein.tsv ---------
table_name:protein
Metabolomics: protein: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/protein.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3297538757324219 seconds.

--------- ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/sample_prep_method.tsv ---------
table_name:sample_prep_method
Metabolomics: sample_prep_method: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/sample_prep_method.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.32578444480895996 seconds.

--------- ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/substance.tsv ---------
table_name:substance
Metabolomics: substance: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3265690803527832 seconds.

--------- ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/biosample.tsv ---------
table_name:biosample
Metabolomics: biosample: Read from file: df: #rows = 268273, #cols: 8

#Lines in file ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/biosample.tsv: 268274
df: #rows = 268273, #cols: 8
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering biosample to database ***
df: #rows = 268273, #cols: 8

A slice of df:
                             id_namespace  ...                                      persistent_id
0  https://www.metabolomicsworkbench.org/  ...  https://www.metabolomicsworkbench.org/data/DRC...
1  https://www.metabolomicsworkbench.org/  ...  https://www.metabolomicsworkbench.org/data/DRC...
2  https://www.metabolomicsworkbench.org/  ...  https://www.metabolomicsworkbench.org/data/DRC...
3  https://www.metabolomicsworkbench.org/  ...  https://www.metabolomicsworkbench.org/data/DRC...
4  https://www.metabolomicsworkbench.org/  ...  https://www.metabolomicsworkbench.org/data/DRC...
5  https://www.metabolomicsworkbench.org/  ...  https://www.metabolomicsworkbench.org/data/DRC...
6  https://www.metabolomicsworkbench.org/  ...  https://www.metabolomicsworkbench.org/data/DRC...
7  https://www.metabolomicsworkbench.org/  ...  https://www.metabolomicsworkbench.org/data/DRC...
8  https://www.metabolomicsworkbench.org/  ...  https://www.metabolomicsworkbench.org/data/DRC...
9  https://www.metabolomicsworkbench.org/  ...  https://www.metabolomicsworkbench.org/data/DRC...

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 7.319875240325928 seconds.

--------- ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/biosample_disease.tsv ---------
table_name:biosample_disease
Metabolomics: biosample_disease: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/biosample_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3527235984802246 seconds.

--------- ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/biosample_from_subject.tsv ---------
table_name:biosample_from_subject
Metabolomics: biosample_from_subject: Read from file: df: #rows = 268273, #cols: 5

#Lines in file ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/biosample_from_subject.tsv: 268274
df: #rows = 268273, #cols: 5
pKeys: ['biosample_id_namespace', 'biosample_local_id', 'subject_id_namespace', 'subject_local_id']
Going to write the count query
Wrote the count query
*** Entering biosample_from_subject to database ***
df: #rows = 268273, #cols: 5

A slice of df:
                   biosample_id_namespace  ... age_at_sampling
0  https://www.metabolomicsworkbench.org/  ...             NaN
1  https://www.metabolomicsworkbench.org/  ...             NaN
2  https://www.metabolomicsworkbench.org/  ...             NaN
3  https://www.metabolomicsworkbench.org/  ...             NaN
4  https://www.metabolomicsworkbench.org/  ...             NaN
5  https://www.metabolomicsworkbench.org/  ...             NaN
6  https://www.metabolomicsworkbench.org/  ...             NaN
7  https://www.metabolomicsworkbench.org/  ...             NaN
8  https://www.metabolomicsworkbench.org/  ...             NaN
9  https://www.metabolomicsworkbench.org/  ...             NaN

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 5.1709887981414795 seconds.

--------- ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/biosample_gene.tsv ---------
table_name:biosample_gene
Metabolomics: biosample_gene: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/biosample_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3331565856933594 seconds.

--------- ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/biosample_in_collection.tsv ---------
table_name:biosample_in_collection
Metabolomics: biosample_in_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/biosample_in_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.32959556579589844 seconds.

--------- ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/biosample_substance.tsv ---------
table_name:biosample_substance
Metabolomics: biosample_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/biosample_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.33064889907836914 seconds.

--------- ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/collection.tsv ---------
table_name:collection
Metabolomics: collection: Read from file: df: #rows = 0, #cols: 8

#Lines in file ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3299264907836914 seconds.

--------- ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/collection_anatomy.tsv ---------
table_name:collection_anatomy
Metabolomics: collection_anatomy: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/collection_anatomy.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3299119472503662 seconds.

--------- ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/collection_compound.tsv ---------
table_name:collection_compound
Metabolomics: collection_compound: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/collection_compound.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3293571472167969 seconds.

--------- ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/collection_defined_by_project.tsv ---------
table_name:collection_defined_by_project
Metabolomics: collection_defined_by_project: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/collection_defined_by_project.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.329831600189209 seconds.

--------- ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/collection_disease.tsv ---------
table_name:collection_disease
Metabolomics: collection_disease: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/collection_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3287825584411621 seconds.

--------- ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/collection_gene.tsv ---------
table_name:collection_gene
Metabolomics: collection_gene: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/collection_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.32851433753967285 seconds.

--------- ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/collection_in_collection.tsv ---------
table_name:collection_in_collection
Metabolomics: collection_in_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/collection_in_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.327862024307251 seconds.

--------- ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/collection_phenotype.tsv ---------
table_name:collection_phenotype
Metabolomics: collection_phenotype: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/collection_phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3277602195739746 seconds.

--------- ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/collection_protein.tsv ---------
table_name:collection_protein
Metabolomics: collection_protein: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/collection_protein.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.34270739555358887 seconds.

--------- ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/collection_substance.tsv ---------
table_name:collection_substance
Metabolomics: collection_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/collection_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.32833313941955566 seconds.

--------- ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/collection_taxonomy.tsv ---------
table_name:collection_taxonomy
Metabolomics: collection_taxonomy: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/collection_taxonomy.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3304634094238281 seconds.

--------- ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/dcc.tsv ---------
table_name:dcc
Metabolomics: dcc: Read from file: df: #rows = 1, #cols: 9

#Lines in file ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/dcc.tsv: 2
df: #rows = 1, #cols: 9
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.dcc;
qt_df:                             pk
0     cfde_registry_dcc:glygen
1      cfde_registry_dcc:exrna
2  cfde_registry_dcc:kidsfirst
3        cfde_registry_dcc:4dn
4        cfde_registry_dcc:hmp
5     cfde_registry_dcc:hubmap
6       cfde_registry_dcc:gtex
7        cfde_registry_dcc:idg
8      cfde_registry_dcc:lincs
---- Executed query, got data.frame: qt_df: #rows = 9, #cols: 1

df_pk (at most first 10 elements): ['cfde_registry_dcc:metabolomics']
qt_pk (at most first 10 elements): ['cfde_registry_dcc:glygen', 'cfde_registry_dcc:exrna', 'cfde_registry_dcc:kidsfirst', 'cfde_registry_dcc:4dn', 'cfde_registry_dcc:hmp', 'cfde_registry_dcc:hubmap', 'cfde_registry_dcc:gtex', 'cfde_registry_dcc:idg', 'cfde_registry_dcc:lincs']
---- Removed rows from df with matching pk
*** Entering dcc to database ***
df: #rows = 1, #cols: 9

A slice of df:
                               id  ...     contact_email
0  cfde_registry_dcc:metabolomics  ...  mmaurya@ucsd.edu

[1 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.382519006729126 seconds.

--------- ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/file.tsv ---------
table_name:file
Metabolomics: file: Read from file: df: #rows = 4178, #cols: 20

#Lines in file ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/file.tsv: 4179
df: #rows = 4178, #cols: 20
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering file to database ***
df: #rows = 4178, #cols: 20

A slice of df:
                             id_namespace  ... persistent_id
0  https://www.metabolomicsworkbench.org/  ...           NaN
1  https://www.metabolomicsworkbench.org/  ...           NaN
2  https://www.metabolomicsworkbench.org/  ...           NaN
3  https://www.metabolomicsworkbench.org/  ...           NaN
4  https://www.metabolomicsworkbench.org/  ...           NaN
5  https://www.metabolomicsworkbench.org/  ...           NaN
6  https://www.metabolomicsworkbench.org/  ...           NaN
7  https://www.metabolomicsworkbench.org/  ...           NaN
8  https://www.metabolomicsworkbench.org/  ...           NaN
9  https://www.metabolomicsworkbench.org/  ...           NaN

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.6344552040100098 seconds.

--------- ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/file_describes_biosample.tsv ---------
table_name:file_describes_biosample
Metabolomics: file_describes_biosample: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/file_describes_biosample.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.33721208572387695 seconds.

--------- ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/file_describes_collection.tsv ---------
table_name:file_describes_collection
Metabolomics: file_describes_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/file_describes_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3299081325531006 seconds.

--------- ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/file_describes_subject.tsv ---------
table_name:file_describes_subject
Metabolomics: file_describes_subject: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/file_describes_subject.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3279695510864258 seconds.

--------- ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/file_in_collection.tsv ---------
table_name:file_in_collection
Metabolomics: file_in_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/file_in_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3290863037109375 seconds.

--------- ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/id_namespace.tsv ---------
table_name:id_namespace
Metabolomics: id_namespace: Read from file: df: #rows = 1, #cols: 4

#Lines in file ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/id_namespace.tsv: 2
df: #rows = 1, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.id_namespace;
qt_df:                                                    pk
0   https://druggablegenome.net/cfde_idg_drugcentr...
1                                               egtex
2                       https://www.lincsproject.org/
3                    https://www.druggablegenome.net/
4                        https://www.data.glygen.org/
5                         https://data.4dnucleome.org
6   https://druggablegenome.net/cfde_idg_tcrd_dise...
7                                                gtex
8   https://druggablegenome.net/cfde_idg_tcrd_targets
9                                          ERCC-exRNA
10                        tag:hmpdacc.org,2022-04-04:
11                                         adult_gtex
12                                         kidsfirst:
13                     tag:hubmapconsortium.org,2023:
---- Executed query, got data.frame: qt_df: #rows = 14, #cols: 1

df_pk (at most first 10 elements): ['https://www.metabolomicsworkbench.org/']
qt_pk (at most first 10 elements): ['https://druggablegenome.net/cfde_idg_drugcentral_drugs', 'egtex', 'https://www.lincsproject.org/', 'https://www.druggablegenome.net/', 'https://www.data.glygen.org/', 'https://data.4dnucleome.org', 'https://druggablegenome.net/cfde_idg_tcrd_diseases', 'gtex', 'https://druggablegenome.net/cfde_idg_tcrd_targets', 'ERCC-exRNA']
---- Removed rows from df with matching pk
*** Entering id_namespace to database ***
df: #rows = 1, #cols: 4

A slice of df:
                                       id  ...                                        description
0  https://www.metabolomicsworkbench.org/  ...  The Metabolomics Workbench is the NIH Common F...

[1 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.38760852813720703 seconds.

--------- ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/ncbi_taxonomy.tsv ---------
table_name:ncbi_taxonomy
Metabolomics: ncbi_taxonomy: Read from file: df: #rows = 153, #cols: 5

#Lines in file ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/ncbi_taxonomy.tsv: 154
df: #rows = 153, #cols: 5
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.ncbi_taxonomy;
qt_df:                     pk
0     NCBI:txid1095745
1     NCBI:txid1739397
2      NCBI:txid742723
3     NCBI:txid1715193
4      NCBI:txid469585
...                ...
2320   NCBI:txid742726
2321  NCBI:txid1715207
2322  NCBI:txid1161416
2323   NCBI:txid765081
2324   NCBI:txid999422

[2325 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 2325, #cols: 1

df_pk (at most first 10 elements): ['NCBI:txid10009', 'NCBI:txid10029', 'NCBI:txid10036', 'NCBI:txid1006131', 'NCBI:txid10090', 'NCBI:txid10116', 'NCBI:txid10149', 'NCBI:txid1093657', 'NCBI:txid110662', 'NCBI:txid1129']
qt_pk (at most first 10 elements): ['NCBI:txid1095745', 'NCBI:txid1739397', 'NCBI:txid742723', 'NCBI:txid1715193', 'NCBI:txid469585', 'NCBI:txid1581186', 'NCBI:txid762963', 'NCBI:txid1542093', 'NCBI:txid1134801', 'NCBI:txid525378']
---- Removed rows from df with matching pk
*** Entering ncbi_taxonomy to database ***
df: #rows = 137, #cols: 5

A slice of df:
                  id  ...                                           synonyms
0     NCBI:txid10009  ...                                   ["red squirrel"]
1     NCBI:txid10029  ...  ["Chinese hamsters", "Cricetulus aureus", "Cri...
3   NCBI:txid1006131  ...                                                 []
6     NCBI:txid10149  ...  ["carpincho", "Hydrochaeris hydrochaeris", "Hy...
7   NCBI:txid1093657  ...                                                 []
8    NCBI:txid110662  ...             ["Parasynechococcus africanus CC9605"]
9      NCBI:txid1129  ...                                      ["Anacystis"]
10     NCBI:txid1140  ...  ["Anacystis nidulans R2", "Synechococcus leopo...
11     NCBI:txid1148  ...  ["Aphanocapsa sp. (strain N-1)", "Aphanocapsa ...
14   NCBI:txid129788  ...  ["Japanese littleneck", "Ruditapes (Venerupis)...

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.39122986793518066 seconds.

--------- ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/project.tsv ---------
table_name:project
Metabolomics: project: Read from file: df: #rows = 1668, #cols: 7

#Lines in file ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/project.tsv: 1669
df: #rows = 1668, #cols: 7
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering project to database ***
df: #rows = 1668, #cols: 7

A slice of df:
                             id_namespace  local_id  ... creation_time  abbreviation
0  https://www.metabolomicsworkbench.org/  PPR00001  ...           NaN   AllProjects
1  https://www.metabolomicsworkbench.org/  PR000001  ...           NaN           NaN
2  https://www.metabolomicsworkbench.org/  PR000002  ...           NaN           NaN
3  https://www.metabolomicsworkbench.org/  PR000003  ...           NaN           NaN
4  https://www.metabolomicsworkbench.org/  PR000004  ...           NaN           NaN
5  https://www.metabolomicsworkbench.org/  PR000005  ...           NaN           NaN
6  https://www.metabolomicsworkbench.org/  PR000006  ...           NaN           NaN
7  https://www.metabolomicsworkbench.org/  PR000008  ...           NaN           NaN
8  https://www.metabolomicsworkbench.org/  PR000009  ...           NaN           NaN
9  https://www.metabolomicsworkbench.org/  PR000010  ...           NaN           NaN

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.45040011405944824 seconds.

--------- ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/project_in_project.tsv ---------
table_name:project_in_project
Metabolomics: project_in_project: Read from file: df: #rows = 1667, #cols: 4

#Lines in file ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/project_in_project.tsv: 1668
df: #rows = 1667, #cols: 4
pKeys: ['parent_project_id_namespace', 'parent_project_local_id', 'child_project_id_namespace', 'child_project_local_id']
Going to write the count query
Wrote the count query
*** Entering project_in_project to database ***
df: #rows = 1667, #cols: 4

A slice of df:
              parent_project_id_namespace  ... child_project_local_id
0  https://www.metabolomicsworkbench.org/  ...               PR000001
1  https://www.metabolomicsworkbench.org/  ...               PR000002
2  https://www.metabolomicsworkbench.org/  ...               PR000003
3  https://www.metabolomicsworkbench.org/  ...               PR000004
4  https://www.metabolomicsworkbench.org/  ...               PR000005
5  https://www.metabolomicsworkbench.org/  ...               PR000006
6  https://www.metabolomicsworkbench.org/  ...               PR000008
7  https://www.metabolomicsworkbench.org/  ...               PR000009
8  https://www.metabolomicsworkbench.org/  ...               PR000010
9  https://www.metabolomicsworkbench.org/  ...               PR000011

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.4126448631286621 seconds.

--------- ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/subject.tsv ---------
table_name:subject
Metabolomics: subject: Read from file: df: #rows = 2702, #cols: 10

#Lines in file ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/subject.tsv: 2703
df: #rows = 2702, #cols: 10
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering subject to database ***
df: #rows = 2702, #cols: 10

A slice of df:
                             id_namespace  ... persistent_id
0  https://www.metabolomicsworkbench.org/  ...           NaN
1  https://www.metabolomicsworkbench.org/  ...           NaN
2  https://www.metabolomicsworkbench.org/  ...           NaN
3  https://www.metabolomicsworkbench.org/  ...           NaN
4  https://www.metabolomicsworkbench.org/  ...           NaN
5  https://www.metabolomicsworkbench.org/  ...           NaN
6  https://www.metabolomicsworkbench.org/  ...           NaN
7  https://www.metabolomicsworkbench.org/  ...           NaN
8  https://www.metabolomicsworkbench.org/  ...           NaN
9  https://www.metabolomicsworkbench.org/  ...           NaN

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.44934940338134766 seconds.

--------- ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/subject_disease.tsv ---------
table_name:subject_disease
Metabolomics: subject_disease: Read from file: df: #rows = 1224, #cols: 4

#Lines in file ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/subject_disease.tsv: 1225
df: #rows = 1224, #cols: 4
Processing C2M2 Files...:  83%|████████▎ | 10/12 [25:49<05:45, 172.62s/it]pKeys: ['subject_id_namespace', 'subject_local_id', 'association_type', 'disease']
Going to write the count query
Wrote the count query
*** Entering subject_disease to database ***
df: #rows = 1224, #cols: 4

A slice of df:
                     subject_id_namespace  ...     disease
0  https://www.metabolomicsworkbench.org/  ...    DOID:104
1  https://www.metabolomicsworkbench.org/  ...    DOID:162
2  https://www.metabolomicsworkbench.org/  ...   DOID:8398
3  https://www.metabolomicsworkbench.org/  ...   DOID:8398
4  https://www.metabolomicsworkbench.org/  ...    DOID:162
5  https://www.metabolomicsworkbench.org/  ...  DOID:10652
6  https://www.metabolomicsworkbench.org/  ...  DOID:10652
7  https://www.metabolomicsworkbench.org/  ...   DOID:9351
8  https://www.metabolomicsworkbench.org/  ...    DOID:557
9  https://www.metabolomicsworkbench.org/  ...    DOID:162

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.40297889709472656 seconds.

--------- ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/subject_in_collection.tsv ---------
table_name:subject_in_collection
Metabolomics: subject_in_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/subject_in_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.33107709884643555 seconds.

--------- ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/subject_phenotype.tsv ---------
table_name:subject_phenotype
Metabolomics: subject_phenotype: Read from file: df: #rows = 306, #cols: 4

#Lines in file ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/subject_phenotype.tsv: 307
df: #rows = 306, #cols: 4
pKeys: ['subject_id_namespace', 'subject_local_id', 'association_type', 'phenotype']
Going to write the count query
Wrote the count query
*** Entering subject_phenotype to database ***
df: #rows = 306, #cols: 4

A slice of df:
                     subject_id_namespace  ...   phenotype
0  https://www.metabolomicsworkbench.org/  ...  HP:0002758
1  https://www.metabolomicsworkbench.org/  ...  HP:0002758
2  https://www.metabolomicsworkbench.org/  ...  HP:0001596
3  https://www.metabolomicsworkbench.org/  ...  HP:0001513
4  https://www.metabolomicsworkbench.org/  ...  HP:0004387
5  https://www.metabolomicsworkbench.org/  ...  HP:0004387
6  https://www.metabolomicsworkbench.org/  ...  HP:0000822
7  https://www.metabolomicsworkbench.org/  ...  HP:0001943
8  https://www.metabolomicsworkbench.org/  ...  HP:0003560
9  https://www.metabolomicsworkbench.org/  ...  HP:0003765

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.387300968170166 seconds.

--------- ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/subject_role_taxonomy.tsv ---------
table_name:subject_role_taxonomy
Metabolomics: subject_role_taxonomy: Read from file: df: #rows = 2589, #cols: 4

#Lines in file ingest/c2m2s/Metabolomics/datapackage/MW-sub-20240310_1013/data/subject_role_taxonomy.tsv: 2590
df: #rows = 2589, #cols: 4
pKeys: ['subject_id_namespace', 'subject_local_id', 'role_id', 'taxonomy_id']
Going to write the count query
Wrote the count query
*** Entering subject_role_taxonomy to database ***
df: #rows = 2589, #cols: 4

A slice of df:
                     subject_id_namespace  ...     taxonomy_id
0  https://www.metabolomicsworkbench.org/  ...   NCBI:txid3702
1  https://www.metabolomicsworkbench.org/  ...   NCBI:txid9606
2  https://www.metabolomicsworkbench.org/  ...  NCBI:txid10090
3  https://www.metabolomicsworkbench.org/  ...   NCBI:txid9606
4  https://www.metabolomicsworkbench.org/  ...  NCBI:txid10090
5  https://www.metabolomicsworkbench.org/  ...  NCBI:txid29760
6  https://www.metabolomicsworkbench.org/  ...  NCBI:txid39947
7  https://www.metabolomicsworkbench.org/  ...   NCBI:txid9606
8  https://www.metabolomicsworkbench.org/  ...   NCBI:txid9606
9  https://www.metabolomicsworkbench.org/  ...   NCBI:txid9606

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.4228968620300293 seconds.


================================== DCC short label: MoTrPAC =============================================
--------- ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/dcc.tsv ---------
table_name:dcc
MoTrPAC: dcc: Read from file: df: #rows = 1, #cols: 9

#Lines in file ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/dcc.tsv: 2
df: #rows = 1, #cols: 9
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.dcc;
qt_df:                                pk
0        cfde_registry_dcc:glygen
1         cfde_registry_dcc:exrna
2     cfde_registry_dcc:kidsfirst
3           cfde_registry_dcc:4dn
4           cfde_registry_dcc:hmp
5  cfde_registry_dcc:metabolomics
6        cfde_registry_dcc:hubmap
7          cfde_registry_dcc:gtex
8           cfde_registry_dcc:idg
9         cfde_registry_dcc:lincs
---- Executed query, got data.frame: qt_df: #rows = 10, #cols: 1

df_pk (at most first 10 elements): ['cfde_registry_dcc:motrpac']
qt_pk (at most first 10 elements): ['cfde_registry_dcc:glygen', 'cfde_registry_dcc:exrna', 'cfde_registry_dcc:kidsfirst', 'cfde_registry_dcc:4dn', 'cfde_registry_dcc:hmp', 'cfde_registry_dcc:metabolomics', 'cfde_registry_dcc:hubmap', 'cfde_registry_dcc:gtex', 'cfde_registry_dcc:idg', 'cfde_registry_dcc:lincs']
---- Removed rows from df with matching pk
*** Entering dcc to database ***
df: #rows = 1, #cols: 9

A slice of df:
                          id  ...       contact_email
0  cfde_registry_dcc:motrpac  ...  jzhen@stanford.edu

[1 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.3922598361968994 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/id_namespace.tsv ---------
table_name:id_namespace
MoTrPAC: id_namespace: Read from file: df: #rows = 1, #cols: 4

#Lines in file ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/id_namespace.tsv: 2
df: #rows = 1, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.id_namespace;
qt_df:                                                    pk
0              https://www.metabolomicsworkbench.org/
1   https://druggablegenome.net/cfde_idg_drugcentr...
2                                               egtex
3                       https://www.lincsproject.org/
4                    https://www.druggablegenome.net/
5                        https://www.data.glygen.org/
6                         https://data.4dnucleome.org
7   https://druggablegenome.net/cfde_idg_tcrd_dise...
8                                                gtex
9   https://druggablegenome.net/cfde_idg_tcrd_targets
10                                         ERCC-exRNA
11                        tag:hmpdacc.org,2022-04-04:
12                                         adult_gtex
13                                         kidsfirst:
14                     tag:hubmapconsortium.org,2023:
---- Executed query, got data.frame: qt_df: #rows = 15, #cols: 1

df_pk (at most first 10 elements): ['tag:motrpac-data.org,2023:']
qt_pk (at most first 10 elements): ['https://www.metabolomicsworkbench.org/', 'https://druggablegenome.net/cfde_idg_drugcentral_drugs', 'egtex', 'https://www.lincsproject.org/', 'https://www.druggablegenome.net/', 'https://www.data.glygen.org/', 'https://data.4dnucleome.org', 'https://druggablegenome.net/cfde_idg_tcrd_diseases', 'gtex', 'https://druggablegenome.net/cfde_idg_tcrd_targets']
---- Removed rows from df with matching pk
*** Entering id_namespace to database ***
df: #rows = 1, #cols: 4

A slice of df:
                           id  ...                                        description
0  tag:motrpac-data.org,2023:  ...  A tag-URI-based C2M2 Identifier for MoTrPAC's ...

[1 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.38336849212646484 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/disease.tsv ---------
table_name:disease
MoTrPAC: disease: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3262362480163574 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/data_type.tsv ---------
table_name:data_type
MoTrPAC: data_type: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/data_type.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.32737135887145996 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/collection_disease.tsv ---------
table_name:collection_disease
MoTrPAC: collection_disease: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/collection_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3292679786682129 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/file_in_collection.tsv ---------
table_name:file_in_collection
MoTrPAC: file_in_collection: Read from file: df: #rows = 18980, #cols: 4

#Lines in file ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/file_in_collection.tsv: 18981
df: #rows = 18980, #cols: 4
pKeys: ['file_id_namespace', 'file_local_id', 'collection_id_namespace', 'collection_local_id']
Going to write the count query
Wrote the count query
*** Entering file_in_collection to database ***
df: #rows = 18980, #cols: 4

A slice of df:
            file_id_namespace  ...            collection_local_id
0  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-epigenomics
1  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-epigenomics
2  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-epigenomics
3  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-epigenomics
4  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-epigenomics
5  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-epigenomics
6  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-epigenomics
7  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-epigenomics
8  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-epigenomics
9  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-epigenomics

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.736231803894043 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/subject_role_taxonomy.tsv ---------
table_name:subject_role_taxonomy
MoTrPAC: subject_role_taxonomy: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/subject_role_taxonomy.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3286733627319336 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/biosample_in_collection.tsv ---------
table_name:biosample_in_collection
MoTrPAC: biosample_in_collection: Read from file: df: #rows = 5563, #cols: 4

#Lines in file ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/biosample_in_collection.tsv: 5564
df: #rows = 5563, #cols: 4
pKeys: ['biosample_id_namespace', 'biosample_local_id', 'collection_id_namespace', 'collection_local_id']
Going to write the count query
Wrote the count query
*** Entering biosample_in_collection to database ***
df: #rows = 5563, #cols: 4

A slice of df:
       biosample_id_namespace  ...                collection_local_id
0  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-transcriptomics
1  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-transcriptomics
2  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-transcriptomics
3  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-transcriptomics
4  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-transcriptomics
5  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-transcriptomics
6  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-transcriptomics
7  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-transcriptomics
8  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-transcriptomics
9  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-transcriptomics

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.47620105743408203 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/subject_phenotype.tsv ---------
table_name:subject_phenotype
MoTrPAC: subject_phenotype: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/subject_phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.33467936515808105 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/phenotype_disease.tsv ---------
table_name:phenotype_disease
MoTrPAC: phenotype_disease: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/phenotype_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.33433985710144043 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/collection_compound.tsv ---------
table_name:collection_compound
MoTrPAC: collection_compound: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/collection_compound.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.330441951751709 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/protein_gene.tsv ---------
table_name:protein_gene
MoTrPAC: protein_gene: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/protein_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.32945990562438965 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/phenotype_gene.tsv ---------
table_name:phenotype_gene
MoTrPAC: phenotype_gene: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/phenotype_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3273344039916992 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/phenotype.tsv ---------
table_name:phenotype
MoTrPAC: phenotype: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3310859203338623 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/subject_disease.tsv ---------
table_name:subject_disease
MoTrPAC: subject_disease: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/subject_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3284752368927002 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/collection_phenotype.tsv ---------
table_name:collection_phenotype
MoTrPAC: collection_phenotype: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/collection_phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.32827234268188477 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/protein.tsv ---------
table_name:protein
MoTrPAC: protein: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/protein.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3281724452972412 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/ncbi_taxonomy.tsv ---------
table_name:ncbi_taxonomy
MoTrPAC: ncbi_taxonomy: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/ncbi_taxonomy.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3273162841796875 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/collection_protein.tsv ---------
table_name:collection_protein
MoTrPAC: collection_protein: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/collection_protein.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3252429962158203 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/analysis_type.tsv ---------
table_name:analysis_type
MoTrPAC: analysis_type: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/analysis_type.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.33077573776245117 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/file_describes_biosample.tsv ---------
table_name:file_describes_biosample
MoTrPAC: file_describes_biosample: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/file_describes_biosample.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.32938599586486816 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/file.tsv ---------
table_name:file
MoTrPAC: file: Read from file: df: #rows = 18980, #cols: 20

#Lines in file ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/file.tsv: 18981
df: #rows = 18980, #cols: 20
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering file to database ***
df: #rows = 18980, #cols: 20

A slice of df:
                 id_namespace  ...                         persistent_id
0  tag:motrpac-data.org,2023:  ...  22e49e3b-ef4b-53b8-b486-325a7f6f7f9c
1  tag:motrpac-data.org,2023:  ...  81410bd0-3087-5e9f-97b1-6fe65af51efa
2  tag:motrpac-data.org,2023:  ...  11436d17-5262-5d5d-8acc-379152f9a416
3  tag:motrpac-data.org,2023:  ...  3f175d9c-3446-561a-b176-61ed6d2d18bb
4  tag:motrpac-data.org,2023:  ...  dfaa3feb-27bd-532e-9d35-60c4ab05c455
5  tag:motrpac-data.org,2023:  ...  c00c773d-805f-51e1-a1a5-90c77b2dc908
6  tag:motrpac-data.org,2023:  ...  67186dde-092c-5ee4-a540-fdae10a9c8cc
7  tag:motrpac-data.org,2023:  ...  6c07cca3-bb2d-5912-9a03-dd3e0c9db7ee
8  tag:motrpac-data.org,2023:  ...  aabe09fb-15c8-58e5-ac16-57f94dee4c88
9  tag:motrpac-data.org,2023:  ...  cbda5d6b-3875-587c-9b0b-21adc09a814d

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.3027210235595703 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/collection_gene.tsv ---------
table_name:collection_gene
MoTrPAC: collection_gene: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/collection_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3278348445892334 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/biosample_from_subject.tsv ---------
table_name:biosample_from_subject
MoTrPAC: biosample_from_subject: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/biosample_from_subject.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.32766246795654297 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/file_describes_collection.tsv ---------
table_name:file_describes_collection
MoTrPAC: file_describes_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/file_describes_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.32914161682128906 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/subject_race.tsv ---------
table_name:subject_race
MoTrPAC: subject_race: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/subject_race.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.32697343826293945 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/collection_in_collection.tsv ---------
table_name:collection_in_collection
MoTrPAC: collection_in_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/collection_in_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3292832374572754 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/collection_defined_by_project.tsv ---------
table_name:collection_defined_by_project
MoTrPAC: collection_defined_by_project: Read from file: df: #rows = 7, #cols: 4

#Lines in file ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/collection_defined_by_project.tsv: 8
df: #rows = 7, #cols: 4
pKeys: ['collection_id_namespace', 'collection_local_id', 'project_id_namespace', 'project_local_id']
Going to write the count query
Wrote the count query
*** Entering collection_defined_by_project to database ***
df: #rows = 7, #cols: 4

A slice of df:
      collection_id_namespace  ... project_local_id
0  tag:motrpac-data.org,2023:  ...          motrpac
1  tag:motrpac-data.org,2023:  ...          motrpac
2  tag:motrpac-data.org,2023:  ...          motrpac
3  tag:motrpac-data.org,2023:  ...          motrpac
4  tag:motrpac-data.org,2023:  ...          motrpac
5  tag:motrpac-data.org,2023:  ...          motrpac
6  tag:motrpac-data.org,2023:  ...          motrpac

[7 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.38045287132263184 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/collection_substance.tsv ---------
table_name:collection_substance
MoTrPAC: collection_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/collection_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.32671546936035156 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/biosample_substance.tsv ---------
table_name:biosample_substance
MoTrPAC: biosample_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/biosample_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.33133816719055176 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/project.tsv ---------
table_name:project
MoTrPAC: project: Read from file: df: #rows = 1, #cols: 7

#Lines in file ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/project.tsv: 2
df: #rows = 1, #cols: 7
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering project to database ***
df: #rows = 1, #cols: 7

A slice of df:
                 id_namespace local_id  ...  creation_time  abbreviation
0  tag:motrpac-data.org,2023:  motrpac  ...            NaN       MoTrPAC

[1 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.3833186626434326 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/anatomy.tsv ---------
table_name:anatomy
MoTrPAC: anatomy: Read from file: df: #rows = 19, #cols: 4

#Lines in file ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/anatomy.tsv: 20
df: #rows = 19, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.anatomy;
qt_df:                  pk
0    UBERON:0001474
1    UBERON:0001013
2    UBERON:0000087
3    UBERON:0001199
4    UBERON:0016435
..              ...
324  UBERON:0001496
325  UBERON:0000473
326  UBERON:0000056
327  UBERON:0013069
328  UBERON:0008337

[329 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 329, #cols: 1

df_pk (at most first 10 elements): ['UBERON:0000178', 'UBERON:0000473', 'UBERON:0000948', 'UBERON:0000956', 'UBERON:0000992', 'UBERON:0001155', 'UBERON:0001347', 'UBERON:0001348', 'UBERON:0001379', 'UBERON:0001388']
qt_pk (at most first 10 elements): ['UBERON:0001474', 'UBERON:0001013', 'UBERON:0000087', 'UBERON:0001199', 'UBERON:0016435', 'UBERON:0007311', 'UBERON:0001728', 'UBERON:0001736', 'UBERON:0002037', 'UBERON:0009835']
---- Removed rows from df with matching pk
*** Entering anatomy to database ***
df: #rows = 0, #cols: 4

A slice of df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.38204216957092285 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/sample_prep_method.tsv ---------
table_name:sample_prep_method
MoTrPAC: sample_prep_method: Read from file: df: #rows = 6, #cols: 4

#Lines in file ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/sample_prep_method.tsv: 7
df: #rows = 6, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.sample_prep_method;
qt_df:             pk
0  OBI:0600005
1  OBI:0001902
2  OBI:0600024
---- Executed query, got data.frame: qt_df: #rows = 3, #cols: 1

df_pk (at most first 10 elements): ['OBI:0000366', 'OBI:0000615', 'OBI:0001862', 'OBI:0002773', 'OBI:0003089', 'OBI:0003090']
qt_pk (at most first 10 elements): ['OBI:0600005', 'OBI:0001902', 'OBI:0600024']
---- Removed rows from df with matching pk
*** Entering sample_prep_method to database ***
df: #rows = 6, #cols: 4

A slice of df:
            id  ...                                           synonyms
0  OBI:0000366  ...           ["metabolite assay","metabolomic assay"]
1  OBI:0000615  ...                             ["proteomic analysis"]
2  OBI:0001862  ...  ["reduced representation bisulfite-seq","RRBS"...
3  OBI:0002773  ...                               ["IA","immunoassay"]
4  OBI:0003089  ...                                  ["bulk ATAC-seq"]
5  OBI:0003090  ...                                                 []

[6 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.38964366912841797 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/assay_type.tsv ---------
table_name:assay_type
MoTrPAC: assay_type: Read from file: df: #rows = 6, #cols: 4

#Lines in file ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/assay_type.tsv: 7
df: #rows = 6, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.assay_type;
qt_df:              pk
0   OBI:0003094
1   OBI:0001501
2   OBI:0002760
3   OBI:0003306
4   OBI:0003097
..          ...
80  OBI:0001271
81  OBI:0003098
82  OBI:0003087
83  OBI:0002761
84  OBI:0003297

[85 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 85, #cols: 1

df_pk (at most first 10 elements): ['OBI:0000366', 'OBI:0000615', 'OBI:0001862', 'OBI:0002773', 'OBI:0003089', 'OBI:0003090']
qt_pk (at most first 10 elements): ['OBI:0003094', 'OBI:0001501', 'OBI:0002760', 'OBI:0003306', 'OBI:0003097', 'OBI:0001920', 'OBI:0002963', 'OBI:0002145', 'OBI:0002112', 'OBI:0003034']
---- Removed rows from df with matching pk
*** Entering assay_type to database ***
df: #rows = 3, #cols: 4

A slice of df:
            id  ...                                           synonyms
2  OBI:0001862  ...  ["reduced representation bisulfite-seq","RRBS"...
3  OBI:0002773  ...                               ["IA","immunoassay"]
5  OBI:0003090  ...                                                 []

[3 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.3817574977874756 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/biosample_disease.tsv ---------
table_name:biosample_disease
MoTrPAC: biosample_disease: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/biosample_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.32596826553344727 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/collection_anatomy.tsv ---------
table_name:collection_anatomy
MoTrPAC: collection_anatomy: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/collection_anatomy.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3294682502746582 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/gene.tsv ---------
table_name:gene
MoTrPAC: gene: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.32845282554626465 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/biosample.tsv ---------
table_name:biosample
MoTrPAC: biosample: Read from file: df: #rows = 6156, #cols: 8

#Lines in file ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/biosample.tsv: 6157
df: #rows = 6156, #cols: 8
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering biosample to database ***
df: #rows = 6156, #cols: 8

A slice of df:
                 id_namespace     local_id  ... project_local_id persistent_id
0  tag:motrpac-data.org,2023:  90217016002  ...          motrpac           NaN
1  tag:motrpac-data.org,2023:  90217016003  ...          motrpac           NaN
2  tag:motrpac-data.org,2023:  90217016004  ...          motrpac           NaN
3  tag:motrpac-data.org,2023:  90218016002  ...          motrpac           NaN
4  tag:motrpac-data.org,2023:  90218016003  ...          motrpac           NaN
5  tag:motrpac-data.org,2023:  90218016004  ...          motrpac           NaN
6  tag:motrpac-data.org,2023:  90218016005  ...          motrpac           NaN
7  tag:motrpac-data.org,2023:  90220016005  ...          motrpac           NaN
8  tag:motrpac-data.org,2023:  90222016002  ...          motrpac           NaN
9  tag:motrpac-data.org,2023:  90222016003  ...          motrpac           NaN

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.6510562896728516 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/file_describes_subject.tsv ---------
table_name:file_describes_subject
MoTrPAC: file_describes_subject: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/file_describes_subject.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3269214630126953 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/subject.tsv ---------
table_name:subject
MoTrPAC: subject: Read from file: df: #rows = 60, #cols: 10

#Lines in file ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/subject.tsv: 61
df: #rows = 60, #cols: 10
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering subject to database ***
df: #rows = 60, #cols: 10

Processing C2M2 Files...:  92%|█████████▏| 11/12 [26:10<02:06, 126.06s/it]A slice of df:
                 id_namespace  local_id  ... project_local_id persistent_id
0  tag:motrpac-data.org,2023:  10023259  ...          motrpac           NaN
1  tag:motrpac-data.org,2023:  10024735  ...          motrpac           NaN
2  tag:motrpac-data.org,2023:  10025626  ...          motrpac           NaN
3  tag:motrpac-data.org,2023:  10025707  ...          motrpac           NaN
4  tag:motrpac-data.org,2023:  10025979  ...          motrpac           NaN
5  tag:motrpac-data.org,2023:  10026193  ...          motrpac           NaN
6  tag:motrpac-data.org,2023:  10026355  ...          motrpac           NaN
7  tag:motrpac-data.org,2023:  10026789  ...          motrpac           NaN
8  tag:motrpac-data.org,2023:  10027327  ...          motrpac           NaN
9  tag:motrpac-data.org,2023:  10027599  ...          motrpac           NaN

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.3900268077850342 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/file_format.tsv ---------
table_name:file_format
MoTrPAC: file_format: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/file_format.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.32552194595336914 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/biosample_gene.tsv ---------
table_name:biosample_gene
MoTrPAC: biosample_gene: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/biosample_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.33729982376098633 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/subject_substance.tsv ---------
table_name:subject_substance
MoTrPAC: subject_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/subject_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3298478126525879 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/collection.tsv ---------
table_name:collection
MoTrPAC: collection: Read from file: df: #rows = 7, #cols: 8

#Lines in file ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/collection.tsv: 8
df: #rows = 7, #cols: 8
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering collection to database ***
df: #rows = 7, #cols: 8

A slice of df:
                 id_namespace  ... abbreviation
0  tag:motrpac-data.org,2023:  ...          NaN
1  tag:motrpac-data.org,2023:  ...          NaN
2  tag:motrpac-data.org,2023:  ...          NaN
3  tag:motrpac-data.org,2023:  ...          NaN
4  tag:motrpac-data.org,2023:  ...          NaN
5  tag:motrpac-data.org,2023:  ...          NaN
6  tag:motrpac-data.org,2023:  ...          NaN

[7 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.3847043514251709 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/compound.tsv ---------
table_name:compound
MoTrPAC: compound: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/compound.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.32646679878234863 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/subject_in_collection.tsv ---------
table_name:subject_in_collection
MoTrPAC: subject_in_collection: Read from file: df: #rows = 60, #cols: 4

#Lines in file ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/subject_in_collection.tsv: 61
df: #rows = 60, #cols: 4
pKeys: ['subject_id_namespace', 'subject_local_id', 'collection_id_namespace', 'collection_local_id']
Going to write the count query
Wrote the count query
*** Entering subject_in_collection to database ***
df: #rows = 60, #cols: 4

A slice of df:
         subject_id_namespace  ...                collection_local_id
0  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-transcriptomics
1  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-transcriptomics
2  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-transcriptomics
3  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-transcriptomics
4  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-transcriptomics
5  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-transcriptomics
6  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-transcriptomics
7  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-transcriptomics
8  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-transcriptomics
9  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-transcriptomics

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.3828585147857666 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/project_in_project.tsv ---------
table_name:project_in_project
MoTrPAC: project_in_project: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/project_in_project.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.32611966133117676 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/collection_taxonomy.tsv ---------
table_name:collection_taxonomy
MoTrPAC: collection_taxonomy: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/collection_taxonomy.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3289470672607422 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/substance.tsv ---------
table_name:substance
MoTrPAC: substance: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/MoTrPAC/datapackage/submit_03_15_2024/data/substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3296639919281006 seconds.


================================== DCC short label: SPARC =============================================
--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/dcc.tsv ---------
table_name:dcc
SPARC: dcc: Read from file: df: #rows = 1, #cols: 9

#Lines in file ingest/c2m2s/SPARC/datapackage/submission_output/data/dcc.tsv: 2
df: #rows = 1, #cols: 9
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.dcc;
qt_df:                                 pk
0         cfde_registry_dcc:glygen
1          cfde_registry_dcc:exrna
2      cfde_registry_dcc:kidsfirst
3            cfde_registry_dcc:4dn
4            cfde_registry_dcc:hmp
5   cfde_registry_dcc:metabolomics
6        cfde_registry_dcc:motrpac
7         cfde_registry_dcc:hubmap
8           cfde_registry_dcc:gtex
9            cfde_registry_dcc:idg
10         cfde_registry_dcc:lincs
---- Executed query, got data.frame: qt_df: #rows = 11, #cols: 1

df_pk (at most first 10 elements): ['cfde_registry_dcc:sparc']
qt_pk (at most first 10 elements): ['cfde_registry_dcc:glygen', 'cfde_registry_dcc:exrna', 'cfde_registry_dcc:kidsfirst', 'cfde_registry_dcc:4dn', 'cfde_registry_dcc:hmp', 'cfde_registry_dcc:metabolomics', 'cfde_registry_dcc:motrpac', 'cfde_registry_dcc:hubmap', 'cfde_registry_dcc:gtex', 'cfde_registry_dcc:idg']
---- Removed rows from df with matching pk
*** Entering dcc to database ***
df: #rows = 1, #cols: 9

A slice of df:
                        id  ...             contact_email
0  cfde_registry_dcc:sparc  ...  jeffrey.grethe@gmail.com

[1 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.3838965892791748 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/id_namespace.tsv ---------
table_name:id_namespace
SPARC: id_namespace: Read from file: df: #rows = 6, #cols: 4

#Lines in file ingest/c2m2s/SPARC/datapackage/submission_output/data/id_namespace.tsv: 7
df: #rows = 6, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.id_namespace;
qt_df:                                                    pk
0              https://www.metabolomicsworkbench.org/
1                          tag:motrpac-data.org,2023:
2   https://druggablegenome.net/cfde_idg_drugcentr...
3                                               egtex
4                       https://www.lincsproject.org/
5                    https://www.druggablegenome.net/
6                        https://www.data.glygen.org/
7                         https://data.4dnucleome.org
8   https://druggablegenome.net/cfde_idg_tcrd_dise...
9                                                gtex
10  https://druggablegenome.net/cfde_idg_tcrd_targets
11                                         ERCC-exRNA
12                        tag:hmpdacc.org,2022-04-04:
13                                         adult_gtex
14                                         kidsfirst:
15                     tag:hubmapconsortium.org,2023:
---- Executed query, got data.frame: qt_df: #rows = 16, #cols: 1

df_pk (at most first 10 elements): ['SPARC.collection:', 'SPARC.file:', 'SPARC.project:', 'SPARC.sample:', 'SPARC.subject:', 'SPARC:']
qt_pk (at most first 10 elements): ['https://www.metabolomicsworkbench.org/', 'tag:motrpac-data.org,2023:', 'https://druggablegenome.net/cfde_idg_drugcentral_drugs', 'egtex', 'https://www.lincsproject.org/', 'https://www.druggablegenome.net/', 'https://www.data.glygen.org/', 'https://data.4dnucleome.org', 'https://druggablegenome.net/cfde_idg_tcrd_diseases', 'gtex']
---- Removed rows from df with matching pk
*** Entering id_namespace to database ***
df: #rows = 6, #cols: 4

A slice of df:
                  id  ...                                        description
3  SPARC.collection:  ...  The identifier namespace for C2M2 collection r...
1        SPARC.file:  ...  The identifier namespace for C2M2 file records...
2     SPARC.project:  ...  The identifier namespace for C2M2 project reco...
5      SPARC.sample:  ...  The identifier namespace for C2M2 sample recor...
4     SPARC.subject:  ...  The identifier namespace for C2M2 subject reco...
0             SPARC:  ...  The default identifier namespace for C2M2 enti...

[6 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.38253164291381836 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/disease.tsv ---------
table_name:disease
SPARC: disease: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/SPARC/datapackage/submission_output/data/disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.32602500915527344 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/data_type.tsv ---------
table_name:data_type
SPARC: data_type: Read from file: df: #rows = 6, #cols: 4

#Lines in file ingest/c2m2s/SPARC/datapackage/submission_output/data/data_type.tsv: 7
df: #rows = 6, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.data_type;
qt_df:              pk
0     data:3112
1     data:0907
2     data:0006
3     data:1916
4     data:3210
5     data:3488
6     data:3111
7     data:0945
8     data:1270
9     data:1714
10    data:2536
11    data:3495
12  ILX:0793824
13    data:1566
14    data:1383
15    data:3110
16    data:2603
17    data:2600
18    data:3494
19    data:2764
20    data:2048
21    data:0943
22    data:0928
23    data:3028
24    data:1255
25    data:2082
26    data:3002
27    data:3914
28    data:3498
29    data:3917
30    data:2887
31    data:2976
32    data:2968
33    data:0925
34  ILX:0793825
---- Executed query, got data.frame: qt_df: #rows = 35, #cols: 1

df_pk (at most first 10 elements): ['data:0006', 'data:0928', 'data:2044', 'data:2968', 'data:3108', 'data:3869']
qt_pk (at most first 10 elements): ['data:3112', 'data:0907', 'data:0006', 'data:1916', 'data:3210', 'data:3488', 'data:3111', 'data:0945', 'data:1270', 'data:1714']
---- Removed rows from df with matching pk
*** Entering data_type to database ***
df: #rows = 3, #cols: 4

A slice of df:
          id  ... synonyms
5  data:2044  ...       []
1  data:3108  ...       []
2  data:3869  ...       []

[3 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.38640904426574707 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/collection_disease.tsv ---------
table_name:collection_disease
SPARC: collection_disease: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/SPARC/datapackage/submission_output/data/collection_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3263397216796875 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/file_in_collection.tsv ---------
table_name:file_in_collection
SPARC: file_in_collection: Read from file: df: #rows = 94970, #cols: 4

#Lines in file ingest/c2m2s/SPARC/datapackage/submission_output/data/file_in_collection.tsv: 94971
df: #rows = 94970, #cols: 4
pKeys: ['file_id_namespace', 'file_local_id', 'collection_id_namespace', 'collection_local_id']
Going to write the count query
Wrote the count query
*** Entering file_in_collection to database ***
df: #rows = 94970, #cols: 4

A slice of df:
  file_id_namespace  ...                             collection_local_id
0       SPARC.file:  ...  N:dataset:6f7e029d-684e-4603-9dea-ec82a53c5a75
1       SPARC.file:  ...  N:dataset:a59a7c4c-0978-4bbe-8d92-93218b5c7b31
2       SPARC.file:  ...  N:dataset:7067a6f5-8df2-4ef8-953a-4d0bfafe6555
3       SPARC.file:  ...  N:dataset:7067a6f5-8df2-4ef8-953a-4d0bfafe6555
4       SPARC.file:  ...  N:dataset:9472e802-7896-4adf-a34b-1e9af1bf2cbe
5       SPARC.file:  ...  N:dataset:c46429b9-6db2-40ad-86e5-36ed759a1ee7
6       SPARC.file:  ...  N:dataset:9dd891fc-6d47-4821-95a0-fc7ff2aeee41
7       SPARC.file:  ...  N:dataset:199eb37d-5f1d-4848-98a5-ab105dae48ea
8       SPARC.file:  ...  N:dataset:e1f838d8-09d4-4648-a977-08d6358a390c
9       SPARC.file:  ...  N:dataset:834e182d-b52c-4389-ad09-6ec9467f3b55

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 2.037236452102661 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/subject_role_taxonomy.tsv ---------
table_name:subject_role_taxonomy
SPARC: subject_role_taxonomy: Read from file: df: #rows = 3444, #cols: 4

#Lines in file ingest/c2m2s/SPARC/datapackage/submission_output/data/subject_role_taxonomy.tsv: 3445
df: #rows = 3444, #cols: 4
pKeys: ['subject_id_namespace', 'subject_local_id', 'role_id', 'taxonomy_id']
Going to write the count query
Wrote the count query
*** Entering subject_role_taxonomy to database ***
df: #rows = 3444, #cols: 4

A slice of df:
  subject_id_namespace  ...    taxonomy_id
0       SPARC.subject:  ...  NCBI:txid9940
1       SPARC.subject:  ...  NCBI:txid9825
2       SPARC.subject:  ...  NCBI:txid9825
3       SPARC.subject:  ...  NCBI:txid9825
4       SPARC.subject:  ...  NCBI:txid9825
5       SPARC.subject:  ...  NCBI:txid9825
6       SPARC.subject:  ...  NCBI:txid9825
7       SPARC.subject:  ...  NCBI:txid9825
8       SPARC.subject:  ...  NCBI:txid9825
9       SPARC.subject:  ...  NCBI:txid9825

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.4471249580383301 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/biosample_in_collection.tsv ---------
table_name:biosample_in_collection
SPARC: biosample_in_collection: Read from file: df: #rows = 5218, #cols: 4

#Lines in file ingest/c2m2s/SPARC/datapackage/submission_output/data/biosample_in_collection.tsv: 5219
df: #rows = 5218, #cols: 4
pKeys: ['biosample_id_namespace', 'biosample_local_id', 'collection_id_namespace', 'collection_local_id']
Going to write the count query
Wrote the count query
*** Entering biosample_in_collection to database ***
df: #rows = 5218, #cols: 4

A slice of df:
  biosample_id_namespace  ...                             collection_local_id
0          SPARC.sample:  ...  N:dataset:36b1a054-d05c-46ea-ade1-84cfe2a15a6c
1          SPARC.sample:  ...  N:dataset:36b1a054-d05c-46ea-ade1-84cfe2a15a6c
2          SPARC.sample:  ...  N:dataset:e70a0529-3f7d-41dd-beee-26d024540f2f
3          SPARC.sample:  ...  N:dataset:e70a0529-3f7d-41dd-beee-26d024540f2f
4          SPARC.sample:  ...  N:dataset:e70a0529-3f7d-41dd-beee-26d024540f2f
5          SPARC.sample:  ...  N:dataset:e70a0529-3f7d-41dd-beee-26d024540f2f
6          SPARC.sample:  ...  N:dataset:e70a0529-3f7d-41dd-beee-26d024540f2f
7          SPARC.sample:  ...  N:dataset:e70a0529-3f7d-41dd-beee-26d024540f2f
8          SPARC.sample:  ...  N:dataset:e70a0529-3f7d-41dd-beee-26d024540f2f
9          SPARC.sample:  ...  N:dataset:e70a0529-3f7d-41dd-beee-26d024540f2f

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.4867215156555176 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/subject_phenotype.tsv ---------
table_name:subject_phenotype
SPARC: subject_phenotype: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/SPARC/datapackage/submission_output/data/subject_phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3278954029083252 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/phenotype_disease.tsv ---------
table_name:phenotype_disease
SPARC: phenotype_disease: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/SPARC/datapackage/submission_output/data/phenotype_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3280818462371826 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/collection_compound.tsv ---------
table_name:collection_compound
SPARC: collection_compound: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/SPARC/datapackage/submission_output/data/collection_compound.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3296241760253906 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/protein_gene.tsv ---------
table_name:protein_gene
SPARC: protein_gene: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/SPARC/datapackage/submission_output/data/protein_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.33127260208129883 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/phenotype_gene.tsv ---------
table_name:phenotype_gene
SPARC: phenotype_gene: Read from file: df: #rows = 0, #cols: 2

#Lines in file ingest/c2m2s/SPARC/datapackage/submission_output/data/phenotype_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.32877516746520996 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/phenotype.tsv ---------
table_name:phenotype
SPARC: phenotype: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/SPARC/datapackage/submission_output/data/phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3304474353790283 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/subject_disease.tsv ---------
table_name:subject_disease
SPARC: subject_disease: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/SPARC/datapackage/submission_output/data/subject_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3284628391265869 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/collection_phenotype.tsv ---------
table_name:collection_phenotype
SPARC: collection_phenotype: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/SPARC/datapackage/submission_output/data/collection_phenotype.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3323814868927002 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/protein.tsv ---------
table_name:protein
SPARC: protein: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/SPARC/datapackage/submission_output/data/protein.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3339223861694336 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/ncbi_taxonomy.tsv ---------
table_name:ncbi_taxonomy
SPARC: ncbi_taxonomy: Read from file: df: #rows = 11, #cols: 5

#Lines in file ingest/c2m2s/SPARC/datapackage/submission_output/data/ncbi_taxonomy.tsv: 12
df: #rows = 11, #cols: 5
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.ncbi_taxonomy;
qt_df:                     pk
0        NCBI:txid5823
1       NCBI:txid99755
2     NCBI:txid1095745
3     NCBI:txid1739397
4      NCBI:txid742723
...                ...
2457   NCBI:txid742726
2458  NCBI:txid1715207
2459  NCBI:txid1161416
2460   NCBI:txid765081
2461   NCBI:txid999422

[2462 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 2462, #cols: 1

df_pk (at most first 10 elements): ['NCBI:txid10090', 'NCBI:txid10114', 'NCBI:txid10116', 'NCBI:txid40674', 'NCBI:txid9606', 'NCBI:txid9615', 'NCBI:txid9669', 'NCBI:txid9685', 'NCBI:txid9823', 'NCBI:txid9825']
qt_pk (at most first 10 elements): ['NCBI:txid5823', 'NCBI:txid99755', 'NCBI:txid1095745', 'NCBI:txid1739397', 'NCBI:txid742723', 'NCBI:txid1715193', 'NCBI:txid469585', 'NCBI:txid1581186', 'NCBI:txid762963', 'NCBI:txid1542093']
---- Removed rows from df with matching pk
*** Entering ncbi_taxonomy to database ***
df: #rows = 4, #cols: 5

A slice of df:
               id  ... synonyms
9  NCBI:txid10114  ...       []
8  NCBI:txid40674  ...       []
7   NCBI:txid9669  ...       []
4   NCBI:txid9825  ...       []

[4 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.3919053077697754 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/collection_protein.tsv ---------
table_name:collection_protein
SPARC: collection_protein: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/SPARC/datapackage/submission_output/data/collection_protein.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.33418965339660645 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/analysis_type.tsv ---------
table_name:analysis_type
SPARC: analysis_type: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/SPARC/datapackage/submission_output/data/analysis_type.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3292827606201172 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/file_describes_biosample.tsv ---------
table_name:file_describes_biosample
SPARC: file_describes_biosample: Read from file: df: #rows = 94970, #cols: 4

#Lines in file ingest/c2m2s/SPARC/datapackage/submission_output/data/file_describes_biosample.tsv: 94971
df: #rows = 94970, #cols: 4
pKeys: ['file_id_namespace', 'file_local_id', 'biosample_id_namespace', 'biosample_local_id']
Going to write the count query
Wrote the count query
*** Entering file_describes_biosample to database ***
df: #rows = 94970, #cols: 4

/home/mano/DRC/DRC-Portals/database/populateC2M2FromS3.py:272: DtypeWarning: Columns (19) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv(table_str, delimiter='\t');
A slice of df:
  file_id_namespace  ...                                 biosample_local_id
0       SPARC.file:  ...  N:dataset:6f7e029d-684e-4603-9dea-ec82a53c5a75...
1       SPARC.file:  ...  N:dataset:a59a7c4c-0978-4bbe-8d92-93218b5c7b31...
2       SPARC.file:  ...  N:dataset:7067a6f5-8df2-4ef8-953a-4d0bfafe6555...
3       SPARC.file:  ...  N:dataset:7067a6f5-8df2-4ef8-953a-4d0bfafe6555...
4       SPARC.file:  ...  N:dataset:9472e802-7896-4adf-a34b-1e9af1bf2cbe...
5       SPARC.file:  ...  N:dataset:c46429b9-6db2-40ad-86e5-36ed759a1ee7...
6       SPARC.file:  ...  N:dataset:9dd891fc-6d47-4821-95a0-fc7ff2aeee41...
7       SPARC.file:  ...  N:dataset:199eb37d-5f1d-4848-98a5-ab105dae48ea...
8       SPARC.file:  ...  N:dataset:e1f838d8-09d4-4648-a977-08d6358a390c...
9       SPARC.file:  ...  N:dataset:834e182d-b52c-4389-ad09-6ec9467f3b55...

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 2.2033779621124268 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/file.tsv ---------
table_name:file
SPARC: file: Read from file: df: #rows = 94970, #cols: 20

#Lines in file ingest/c2m2s/SPARC/datapackage/submission_output/data/file.tsv: 94971
df: #rows = 94970, #cols: 20
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering file to database ***
df: #rows = 94970, #cols: 20

A slice of df:
  id_namespace  ...                                      persistent_id
0  SPARC.file:  ...  https://discover.pennsieve.io/package/N:packag...
1  SPARC.file:  ...  https://discover.pennsieve.io/package/N:packag...
2  SPARC.file:  ...  https://discover.pennsieve.io/package/N:packag...
3  SPARC.file:  ...  https://discover.pennsieve.io/package/N:packag...
4  SPARC.file:  ...  https://discover.pennsieve.io/package/N:packag...
5  SPARC.file:  ...  https://discover.pennsieve.io/package/N:packag...
6  SPARC.file:  ...  https://discover.pennsieve.io/package/N:packag...
7  SPARC.file:  ...  https://discover.pennsieve.io/package/N:packag...
8  SPARC.file:  ...  https://discover.pennsieve.io/package/N:packag...
9  SPARC.file:  ...  https://discover.pennsieve.io/package/N:packag...

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 5.777426481246948 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/collection_gene.tsv ---------
table_name:collection_gene
SPARC: collection_gene: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/SPARC/datapackage/submission_output/data/collection_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3579905033111572 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/biosample_from_subject.tsv ---------
table_name:biosample_from_subject
SPARC: biosample_from_subject: Read from file: df: #rows = 5218, #cols: 5

#Lines in file ingest/c2m2s/SPARC/datapackage/submission_output/data/biosample_from_subject.tsv: 5219
df: #rows = 5218, #cols: 5
pKeys: ['biosample_id_namespace', 'biosample_local_id', 'subject_id_namespace', 'subject_local_id']
Going to write the count query
Wrote the count query
*** Entering biosample_from_subject to database ***
df: #rows = 5218, #cols: 5

A slice of df:
  biosample_id_namespace  ... age_at_sampling
0          SPARC.sample:  ...             NaN
1          SPARC.sample:  ...             NaN
2          SPARC.sample:  ...             NaN
3          SPARC.sample:  ...             NaN
4          SPARC.sample:  ...             NaN
5          SPARC.sample:  ...             NaN
6          SPARC.sample:  ...             NaN
7          SPARC.sample:  ...             NaN
8          SPARC.sample:  ...             NaN
9          SPARC.sample:  ...             NaN

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.5106551647186279 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/file_describes_collection.tsv ---------
table_name:file_describes_collection
SPARC: file_describes_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/SPARC/datapackage/submission_output/data/file_describes_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3371922969818115 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/subject_race.tsv ---------
table_name:subject_race
SPARC: subject_race: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/SPARC/datapackage/submission_output/data/subject_race.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3318305015563965 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/collection_in_collection.tsv ---------
table_name:collection_in_collection
SPARC: collection_in_collection: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/SPARC/datapackage/submission_output/data/collection_in_collection.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.33185911178588867 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/collection_defined_by_project.tsv ---------
table_name:collection_defined_by_project
SPARC: collection_defined_by_project: Read from file: df: #rows = 255, #cols: 4

#Lines in file ingest/c2m2s/SPARC/datapackage/submission_output/data/collection_defined_by_project.tsv: 256
df: #rows = 255, #cols: 4
pKeys: ['collection_id_namespace', 'collection_local_id', 'project_id_namespace', 'project_local_id']
Going to write the count query
Wrote the count query
*** Entering collection_defined_by_project to database ***
df: #rows = 255, #cols: 4

A slice of df:
  collection_id_namespace  ... project_local_id
0       SPARC.collection:  ...      OT2OD025342
1       SPARC.collection:  ...      OT2OD023848
2       SPARC.collection:  ...      OT2OD023848
3       SPARC.collection:  ...      OT2OD023848
4       SPARC.collection:  ...      OT2OD023848
5       SPARC.collection:  ...      OT2OD023848
6       SPARC.collection:  ...      OT2OD023848
7       SPARC.collection:  ...      OT2OD023848
8       SPARC.collection:  ...      OT2OD023848
9       SPARC.collection:  ...      OT2OD023848

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.38886213302612305 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/collection_substance.tsv ---------
table_name:collection_substance
SPARC: collection_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/SPARC/datapackage/submission_output/data/collection_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3284139633178711 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/biosample_substance.tsv ---------
table_name:biosample_substance
SPARC: biosample_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/SPARC/datapackage/submission_output/data/biosample_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.331310510635376 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/project.tsv ---------
table_name:project
SPARC: project: Read from file: df: #rows = 46, #cols: 7

#Lines in file ingest/c2m2s/SPARC/datapackage/submission_output/data/project.tsv: 47
df: #rows = 46, #cols: 7
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering project to database ***
df: #rows = 46, #cols: 7

A slice of df:
     id_namespace     local_id  ... creation_time       abbreviation
0          SPARC:        SPARC  ...    2017-09-21              SPARC
1  SPARC.project:  OT2OD025342  ...           NaN  SPARC_OT2OD025342
2  SPARC.project:  OT2OD023848  ...           NaN  SPARC_OT2OD023848
3  SPARC.project:  OT2OD025340  ...           NaN  SPARC_OT2OD025340
4  SPARC.project:  OT3OD025349  ...           NaN  SPARC_OT3OD025349
5  SPARC.project:  OT2OD024899  ...           NaN  SPARC_OT2OD024899
6  SPARC.project:  OT2OD023864  ...           NaN  SPARC_OT2OD023864
7  SPARC.project:  OT2OD023847  ...           NaN  SPARC_OT2OD023847
8  SPARC.project:  OT2OD023853  ...           NaN  SPARC_OT2OD023853
9  SPARC.project:  OT2OD023854  ...           NaN  SPARC_OT2OD023854

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.39286136627197266 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/anatomy.tsv ---------
table_name:anatomy
SPARC: anatomy: Read from file: df: #rows = 43, #cols: 4

#Lines in file ingest/c2m2s/SPARC/datapackage/submission_output/data/anatomy.tsv: 44
df: #rows = 43, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.anatomy;
qt_df:                  pk
0    UBERON:0001474
1    UBERON:0001013
2    UBERON:0000087
3    UBERON:0001199
4    UBERON:0016435
..              ...
324  UBERON:0001496
325  UBERON:0000473
326  UBERON:0000056
327  UBERON:0013069
328  UBERON:0008337

[329 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 329, #cols: 1

df_pk (at most first 10 elements): ['UBERON:0000010', 'UBERON:0000044', 'UBERON:0000045', 'UBERON:0000057', 'UBERON:0000160', 'UBERON:0000178', 'UBERON:0000945', 'UBERON:0000948', 'UBERON:0001003', 'UBERON:0001013']
qt_pk (at most first 10 elements): ['UBERON:0001474', 'UBERON:0001013', 'UBERON:0000087', 'UBERON:0001199', 'UBERON:0016435', 'UBERON:0007311', 'UBERON:0001728', 'UBERON:0001736', 'UBERON:0002037', 'UBERON:0009835']
---- Removed rows from df with matching pk
*** Entering anatomy to database ***
df: #rows = 23, #cols: 4

A slice of df:
                id  ... synonyms
1   UBERON:0000010  ...       []
36  UBERON:0000045  ...       []
34  UBERON:0000057  ...       []
22  UBERON:0001018  ...       []
38  UBERON:0001103  ...       []
15  UBERON:0001649  ...       []
39  UBERON:0001737  ...       []
30  UBERON:0001759  ...       []
24  UBERON:0001884  ...       []
35  UBERON:0001989  ...       []

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.38833069801330566 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/assay_type.tsv ---------
table_name:assay_type
SPARC: assay_type: Read from file: df: #rows = 10, #cols: 4

#Lines in file ingest/c2m2s/SPARC/datapackage/submission_output/data/assay_type.tsv: 11
df: #rows = 10, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.assay_type;
qt_df:              pk
0   OBI:0003094
1   OBI:0003090
2   OBI:0001501
3   OBI:0002760
4   OBI:0003306
..          ...
83  OBI:0003098
84  OBI:0002773
85  OBI:0003087
86  OBI:0002761
87  OBI:0003297

[88 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 88, #cols: 1

df_pk (at most first 10 elements): ['OBI:0000185', 'OBI:0000424', 'OBI:0000454', 'OBI:0001271', 'OBI:0001980', 'OBI:0001986', 'OBI:0002119', 'OBI:0002174', 'OBI:0002176', 'OBI:0002985']
qt_pk (at most first 10 elements): ['OBI:0003094', 'OBI:0003090', 'OBI:0001501', 'OBI:0002760', 'OBI:0003306', 'OBI:0003097', 'OBI:0001920', 'OBI:0002963', 'OBI:0002145', 'OBI:0002112']
---- Removed rows from df with matching pk
*** Entering assay_type to database ***
df: #rows = 8, #cols: 4

A slice of df:
            id  ... synonyms
5  OBI:0000424  ...       []
6  OBI:0000454  ...       []
3  OBI:0001980  ...       []
9  OBI:0001986  ...       []
0  OBI:0002119  ...       []
8  OBI:0002174  ...       []
2  OBI:0002176  ...       []
4  OBI:0002985  ...       []

[8 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.3882918357849121 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/biosample_disease.tsv ---------
table_name:biosample_disease
SPARC: biosample_disease: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/SPARC/datapackage/submission_output/data/biosample_disease.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3283271789550781 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/collection_anatomy.tsv ---------
table_name:collection_anatomy
SPARC: collection_anatomy: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/SPARC/datapackage/submission_output/data/collection_anatomy.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3340737819671631 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/gene.tsv ---------
table_name:gene
SPARC: gene: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/SPARC/datapackage/submission_output/data/gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.32915234565734863 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/biosample.tsv ---------
table_name:biosample
SPARC: biosample: Read from file: df: #rows = 5218, #cols: 8

#Lines in file ingest/c2m2s/SPARC/datapackage/submission_output/data/biosample.tsv: 5219
df: #rows = 5218, #cols: 8
SPARC: biosample table: changed column name assay_type to sample_prep_method
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering biosample to database ***
df: #rows = 5218, #cols: 8

A slice of df:
    id_namespace  ... persistent_id
0  SPARC.sample:  ...           NaN
1  SPARC.sample:  ...           NaN
2  SPARC.sample:  ...           NaN
3  SPARC.sample:  ...           NaN
4  SPARC.sample:  ...           NaN
5  SPARC.sample:  ...           NaN
6  SPARC.sample:  ...           NaN
7  SPARC.sample:  ...           NaN
8  SPARC.sample:  ...           NaN
9  SPARC.sample:  ...           NaN

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.5560908317565918 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/file_describes_subject.tsv ---------
table_name:file_describes_subject
SPARC: file_describes_subject: Read from file: df: #rows = 94970, #cols: 4

#Lines in file ingest/c2m2s/SPARC/datapackage/submission_output/data/file_describes_subject.tsv: 94971
df: #rows = 94970, #cols: 4
pKeys: ['file_id_namespace', 'file_local_id', 'subject_id_namespace', 'subject_local_id']
Going to write the count query
Wrote the count query
*** Entering file_describes_subject to database ***
df: #rows = 94970, #cols: 4

A slice of df:
  file_id_namespace  ...                                   subject_local_id
0       SPARC.file:  ...  N:dataset:6f7e029d-684e-4603-9dea-ec82a53c5a75...
1       SPARC.file:  ...  N:dataset:a59a7c4c-0978-4bbe-8d92-93218b5c7b31...
2       SPARC.file:  ...  N:dataset:7067a6f5-8df2-4ef8-953a-4d0bfafe6555...
3       SPARC.file:  ...  N:dataset:7067a6f5-8df2-4ef8-953a-4d0bfafe6555...
4       SPARC.file:  ...  N:dataset:9472e802-7896-4adf-a34b-1e9af1bf2cbe...
5       SPARC.file:  ...  N:dataset:c46429b9-6db2-40ad-86e5-36ed759a1ee7...
6       SPARC.file:  ...   N:dataset:9dd891fc-6d47-4821-95a0-fc7ff2aeee41_0
7       SPARC.file:  ...  N:dataset:199eb37d-5f1d-4848-98a5-ab105dae48ea...
8       SPARC.file:  ...  N:dataset:e1f838d8-09d4-4648-a977-08d6358a390c...
9       SPARC.file:  ...  N:dataset:834e182d-b52c-4389-ad09-6ec9467f3b55...

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 2.07529354095459 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/subject.tsv ---------
table_name:subject
SPARC: subject: Read from file: df: #rows = 3445, #cols: 10

#Lines in file ingest/c2m2s/SPARC/datapackage/submission_output/data/subject.tsv: 3446
df: #rows = 3445, #cols: 10
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering subject to database ***
df: #rows = 3445, #cols: 10

A slice of df:
     id_namespace  ... persistent_id
0  SPARC.subject:  ...           NaN
1  SPARC.subject:  ...           NaN
2  SPARC.subject:  ...           NaN
3  SPARC.subject:  ...           NaN
4  SPARC.subject:  ...           NaN
5  SPARC.subject:  ...           NaN
6  SPARC.subject:  ...           NaN
7  SPARC.subject:  ...           NaN
8  SPARC.subject:  ...           NaN
9  SPARC.subject:  ...           NaN

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.48267507553100586 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/file_format.tsv ---------
table_name:file_format
SPARC: file_format: Read from file: df: #rows = 25, #cols: 4

#Lines in file ingest/c2m2s/SPARC/datapackage/submission_output/data/file_format.tsv: 26
df: #rows = 25, #cols: 4
pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.file_format;
qt_df:              pk
0   format:3654
1   format:3603
2   format:3004
3   format:3578
4   format:3506
5   format:3464
6   format:3579
7   format:3327
8   format:1936
9   format:3987
10  format:2332
11  format:1975
12  format:3712
13  format:2572
14  format:3591
15  format:3590
16  format:3873
17  format:3006
18  format:3462
19  format:1930
20  format:3468
21  format:3244
22  format:3727
23  format:3752
24  format:1919
25  format:3829
26  format:3583
27  format:1929
28  format:3981
29  format:3746
30  format:3989
31  format:2330
32  format:3508
33  format:2331
34  format:3003
35  format:3016
36  format:3839
37  format:3008
38  format:3620
39  format:2333
40  format:3475
---- Executed query, got data.frame: qt_df: #rows = 41, #cols: 1

df_pk (at most first 10 elements): ['format:1915', 'format:1930', 'format:1964', 'format:2330', 'format:2331', 'format:2332', 'format:2333', 'format:2572', 'format:3464', 'format:3507']
qt_pk (at most first 10 elements): ['format:3654', 'format:3603', 'format:3004', 'format:3578', 'format:3506', 'format:3464', 'format:3579', 'format:3327', 'format:1936', 'format:3987']
---- Removed rows from df with matching pk
*** Entering file_format to database ***
df: #rows = 14, #cols: 4

A slice of df:
             id  ... synonyms
22  format:1915  ...       []
11  format:1964  ...       []
8   format:3507  ...       []
5   format:3547  ...       []
20  format:3554  ...       []
24  format:3604  ...       []
16  format:3626  ...       []
7   format:3751  ...       []
1   format:3990  ...       []
13  format:3996  ...       []

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.3874216079711914 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/biosample_gene.tsv ---------
table_name:biosample_gene
SPARC: biosample_gene: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/SPARC/datapackage/submission_output/data/biosample_gene.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3360307216644287 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/primary_dcc_contact.tsv ---------
table_name:primary_dcc_contact
>>>>>>>> Time taken to ingest the metadata from this file: 3.647804260253906e-05 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/subject_substance.tsv ---------
table_name:subject_substance
SPARC: subject_substance: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/SPARC/datapackage/submission_output/data/subject_substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.33124637603759766 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/collection.tsv ---------
table_name:collection
SPARC: collection: Read from file: df: #rows = 255, #cols: 8

#Lines in file ingest/c2m2s/SPARC/datapackage/submission_output/data/collection.tsv: 256
df: #rows = 255, #cols: 8
pKeys: ['id_namespace', 'local_id']
Going to write the count query
Wrote the count query
*** Entering collection to database ***
df: #rows = 255, #cols: 8

A slice of df:
        id_namespace  ... abbreviation
0  SPARC.collection:  ...    0khe_2os4
1  SPARC.collection:  ...    0kpx_xh0x
2  SPARC.collection:  ...    0y4e_eskx
3  SPARC.collection:  ...    14qt_e5f0
4  SPARC.collection:  ...    1h3s_thms
5  SPARC.collection:  ...    1uno_tynt
6  SPARC.collection:  ...    1upo_xvkt
7  SPARC.collection:  ...    23je_ute3
8  SPARC.collection:  ...    36ua_upkq
9  SPARC.collection:  ...    3g8i_abjh

[10 rows x 5 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.39662718772888184 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/compound.tsv ---------
table_name:compound
SPARC: compound: Read from file: df: #rows = 0, #cols: 4

#Lines in file ingest/c2m2s/SPARC/datapackage/submission_output/data/compound.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.3288106918334961 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/subject_in_collection.tsv ---------
table_name:subject_in_collection
SPARC: subject_in_collection: Read from file: df: #rows = 3445, #cols: 4

#Lines in file ingest/c2m2s/SPARC/datapackage/submission_output/data/subject_in_collection.tsv: 3446
df: #rows = 3445, #cols: 4
pKeys: ['subject_id_namespace', 'subject_local_id', 'collection_id_namespace', 'collection_local_id']
Going to write the count query
Wrote the count query
*** Entering subject_in_collection to database ***
df: #rows = 3445, #cols: 4

A slice of df:
  subject_id_namespace  ...                             collection_local_id
0       SPARC.subject:  ...  N:dataset:36b1a054-d05c-46ea-ade1-84cfe2a15a6c
1       SPARC.subject:  ...  N:dataset:36b1a054-d05c-46ea-ade1-84cfe2a15a6c
2       SPARC.subject:  ...  N:dataset:e70a0529-3f7d-41dd-beee-26d024540f2f
3       SPARC.subject:  ...  N:dataset:e70a0529-3f7d-41dd-beee-26d024540f2f
4       SPARC.subject:  ...  N:dataset:e70a0529-3f7d-41dd-beee-26d024540f2f
5       SPARC.subject:  ...  N:dataset:e70a0529-3f7d-41dd-beee-26d024540f2f
6       SPARC.subject:  ...  N:dataset:e70a0529-3f7d-41dd-beee-26d024540f2f
7       SPARC.subject:  ...  N:dataset:80a485bf-0d9d-425d-9f51-94b59f842ede
8       SPARC.subject:  ...  N:dataset:80a485bf-0d9d-425d-9f51-94b59f842ede
9       SPARC.subject:  ...  N:dataset:80a485bf-0d9d-425d-9f51-94b59f842ede

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.46137118339538574 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/project_in_project.tsv ---------
table_name:project_in_project
SPARC: project_in_project: Read from file: df: #rows = 45, #cols: 4

#Lines in file ingest/c2m2s/SPARC/datapackage/submission_output/data/project_in_project.tsv: 46
df: #rows = 45, #cols: 4
pKeys: ['parent_project_id_namespace', 'parent_project_local_id', 'child_project_id_namespace', 'child_project_local_id']
Going to write the count query
Wrote the count query
*** Entering project_in_project to database ***
df: #rows = 45, #cols: 4

Processing C2M2 Files...: 100%|██████████| 12/12 [26:40<00:00, 96.89s/it] Processing C2M2 Files...: 100%|██████████| 12/12 [26:40<00:00, 133.37s/it]
A slice of df:
  parent_project_id_namespace  ... child_project_local_id
0                      SPARC:  ...            OT2OD025342
1                      SPARC:  ...            OT2OD023848
2                      SPARC:  ...            OT2OD025340
3                      SPARC:  ...            OT3OD025349
4                      SPARC:  ...            OT2OD024899
5                      SPARC:  ...            OT2OD023864
6                      SPARC:  ...            OT2OD023847
7                      SPARC:  ...            OT2OD023853
8                      SPARC:  ...            OT2OD023854
9                      SPARC:  ...           OT2OD0204899

[10 rows x 4 columns]
Data inserted successfully!
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.3945474624633789 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/collection_taxonomy.tsv ---------
table_name:collection_taxonomy
SPARC: collection_taxonomy: Read from file: df: #rows = 0, #cols: 3

#Lines in file ingest/c2m2s/SPARC/datapackage/submission_output/data/collection_taxonomy.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.32822632789611816 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/substance.tsv ---------
table_name:substance
SPARC: substance: Read from file: df: #rows = 0, #cols: 5

#Lines in file ingest/c2m2s/SPARC/datapackage/submission_output/data/substance.tsv: 1
>>>>>>>> Time taken to ingest the metadata from this file: 0.326749324798584 seconds.

>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Time taken to ingest the metadata from the files: 1600.403463602066 seconds.

 ----------- Adding foreign key constraint for table file ----------
ALTER TABLE c2m2.file ADD CONSTRAINT  fk_file_id_namespace_1 FOREIGN KEY (id_namespace) REFERENCES c2m2.id_namespace (id);
ALTER TABLE c2m2.file ADD CONSTRAINT  fk_file_project_2 FOREIGN KEY (project_id_namespace, project_local_id) REFERENCES c2m2.project (id_namespace, local_id);
ALTER TABLE c2m2.file ADD CONSTRAINT  fk_file_file_format_3 FOREIGN KEY (file_format) REFERENCES c2m2.file_format (id);
ALTER TABLE c2m2.file ADD CONSTRAINT  fk_file_file_format_4 FOREIGN KEY (compression_format) REFERENCES c2m2.file_format (id);
ALTER TABLE c2m2.file ADD CONSTRAINT  fk_file_data_type_5 FOREIGN KEY (data_type) REFERENCES c2m2.data_type (id);
ALTER TABLE c2m2.file ADD CONSTRAINT  fk_file_assay_type_6 FOREIGN KEY (assay_type) REFERENCES c2m2.assay_type (id);
ALTER TABLE c2m2.file ADD CONSTRAINT  fk_file_analysis_type_7 FOREIGN KEY (analysis_type) REFERENCES c2m2.analysis_type (id);
ALTER TABLE c2m2.file ADD CONSTRAINT  fk_file_collection_8 FOREIGN KEY (bundle_collection_id_namespace, bundle_collection_local_id) REFERENCES c2m2.collection (id_namespace, local_id);
 ----------- Adding foreign key constraint for table biosample ----------
ALTER TABLE c2m2.biosample ADD CONSTRAINT  fk_biosample_id_namespace_1 FOREIGN KEY (id_namespace) REFERENCES c2m2.id_namespace (id);
ALTER TABLE c2m2.biosample ADD CONSTRAINT  fk_biosample_project_2 FOREIGN KEY (project_id_namespace, project_local_id) REFERENCES c2m2.project (id_namespace, local_id);
ALTER TABLE c2m2.biosample ADD CONSTRAINT  fk_biosample_sample_prep_method_3 FOREIGN KEY (sample_prep_method) REFERENCES c2m2.sample_prep_method (id);
ALTER TABLE c2m2.biosample ADD CONSTRAINT  fk_biosample_anatomy_4 FOREIGN KEY (anatomy) REFERENCES c2m2.anatomy (id);
 ----------- Adding foreign key constraint for table subject ----------
ALTER TABLE c2m2.subject ADD CONSTRAINT  fk_subject_id_namespace_1 FOREIGN KEY (id_namespace) REFERENCES c2m2.id_namespace (id);
ALTER TABLE c2m2.subject ADD CONSTRAINT  fk_subject_project_2 FOREIGN KEY (project_id_namespace, project_local_id) REFERENCES c2m2.project (id_namespace, local_id);
 ----------- Adding foreign key constraint for table dcc ----------
ALTER TABLE c2m2.dcc ADD CONSTRAINT  fk_dcc_project_1 FOREIGN KEY (project_id_namespace, project_local_id) REFERENCES c2m2.project (id_namespace, local_id);
 ----------- Adding foreign key constraint for table project ----------
ALTER TABLE c2m2.project ADD CONSTRAINT  fk_project_id_namespace_1 FOREIGN KEY (id_namespace) REFERENCES c2m2.id_namespace (id);
 ----------- Adding foreign key constraint for table project_in_project ----------
ALTER TABLE c2m2.project_in_project ADD CONSTRAINT  fk_project_in_project_project_1 FOREIGN KEY (parent_project_id_namespace, parent_project_local_id) REFERENCES c2m2.project (id_namespace, local_id);
ALTER TABLE c2m2.project_in_project ADD CONSTRAINT  fk_project_in_project_project_2 FOREIGN KEY (child_project_id_namespace, child_project_local_id) REFERENCES c2m2.project (id_namespace, local_id);
 ----------- Adding foreign key constraint for table collection ----------
ALTER TABLE c2m2.collection ADD CONSTRAINT  fk_collection_id_namespace_1 FOREIGN KEY (id_namespace) REFERENCES c2m2.id_namespace (id);
 ----------- Adding foreign key constraint for table collection_in_collection ----------
ALTER TABLE c2m2.collection_in_collection ADD CONSTRAINT  fk_collection_in_collection_collection_1 FOREIGN KEY (superset_collection_id_namespace, superset_collection_local_id) REFERENCES c2m2.collection (id_namespace, local_id);
ALTER TABLE c2m2.collection_in_collection ADD CONSTRAINT  fk_collection_in_collection_collection_2 FOREIGN KEY (subset_collection_id_namespace, subset_collection_local_id) REFERENCES c2m2.collection (id_namespace, local_id);
 ----------- Adding foreign key constraint for table file_describes_collection ----------
ALTER TABLE c2m2.file_describes_collection ADD CONSTRAINT  fk_file_describes_collection_file_1 FOREIGN KEY (file_id_namespace, file_local_id) REFERENCES c2m2.file (id_namespace, local_id);
ALTER TABLE c2m2.file_describes_collection ADD CONSTRAINT  fk_file_describes_collection_collection_2 FOREIGN KEY (collection_id_namespace, collection_local_id) REFERENCES c2m2.collection (id_namespace, local_id);
 ----------- Adding foreign key constraint for table collection_defined_by_project ----------
ALTER TABLE c2m2.collection_defined_by_project ADD CONSTRAINT  fk_collection_defined_by_project_collection_1 FOREIGN KEY (collection_id_namespace, collection_local_id) REFERENCES c2m2.collection (id_namespace, local_id);
ALTER TABLE c2m2.collection_defined_by_project ADD CONSTRAINT  fk_collection_defined_by_project_project_2 FOREIGN KEY (project_id_namespace, project_local_id) REFERENCES c2m2.project (id_namespace, local_id);
 ----------- Adding foreign key constraint for table file_in_collection ----------
ALTER TABLE c2m2.file_in_collection ADD CONSTRAINT  fk_file_in_collection_file_1 FOREIGN KEY (file_id_namespace, file_local_id) REFERENCES c2m2.file (id_namespace, local_id);
ALTER TABLE c2m2.file_in_collection ADD CONSTRAINT  fk_file_in_collection_collection_2 FOREIGN KEY (collection_id_namespace, collection_local_id) REFERENCES c2m2.collection (id_namespace, local_id);
 ----------- Adding foreign key constraint for table biosample_in_collection ----------
ALTER TABLE c2m2.biosample_in_collection ADD CONSTRAINT  fk_biosample_in_collection_biosample_1 FOREIGN KEY (biosample_id_namespace, biosample_local_id) REFERENCES c2m2.biosample (id_namespace, local_id);
ALTER TABLE c2m2.biosample_in_collection ADD CONSTRAINT  fk_biosample_in_collection_collection_2 FOREIGN KEY (collection_id_namespace, collection_local_id) REFERENCES c2m2.collection (id_namespace, local_id);
 ----------- Adding foreign key constraint for table subject_in_collection ----------
ALTER TABLE c2m2.subject_in_collection ADD CONSTRAINT  fk_subject_in_collection_subject_1 FOREIGN KEY (subject_id_namespace, subject_local_id) REFERENCES c2m2.subject (id_namespace, local_id);
ALTER TABLE c2m2.subject_in_collection ADD CONSTRAINT  fk_subject_in_collection_collection_2 FOREIGN KEY (collection_id_namespace, collection_local_id) REFERENCES c2m2.collection (id_namespace, local_id);
 ----------- Adding foreign key constraint for table file_describes_biosample ----------
ALTER TABLE c2m2.file_describes_biosample ADD CONSTRAINT  fk_file_describes_biosample_file_1 FOREIGN KEY (file_id_namespace, file_local_id) REFERENCES c2m2.file (id_namespace, local_id);
ALTER TABLE c2m2.file_describes_biosample ADD CONSTRAINT  fk_file_describes_biosample_biosample_2 FOREIGN KEY (biosample_id_namespace, biosample_local_id) REFERENCES c2m2.biosample (id_namespace, local_id);
 ----------- Adding foreign key constraint for table file_describes_subject ----------
ALTER TABLE c2m2.file_describes_subject ADD CONSTRAINT  fk_file_describes_subject_file_1 FOREIGN KEY (file_id_namespace, file_local_id) REFERENCES c2m2.file (id_namespace, local_id);
ALTER TABLE c2m2.file_describes_subject ADD CONSTRAINT  fk_file_describes_subject_subject_2 FOREIGN KEY (subject_id_namespace, subject_local_id) REFERENCES c2m2.subject (id_namespace, local_id);
 ----------- Adding foreign key constraint for table biosample_from_subject ----------
ALTER TABLE c2m2.biosample_from_subject ADD CONSTRAINT  fk_biosample_from_subject_biosample_1 FOREIGN KEY (biosample_id_namespace, biosample_local_id) REFERENCES c2m2.biosample (id_namespace, local_id);
ALTER TABLE c2m2.biosample_from_subject ADD CONSTRAINT  fk_biosample_from_subject_subject_2 FOREIGN KEY (subject_id_namespace, subject_local_id) REFERENCES c2m2.subject (id_namespace, local_id);
 ----------- Adding foreign key constraint for table biosample_disease ----------
ALTER TABLE c2m2.biosample_disease ADD CONSTRAINT  fk_biosample_disease_biosample_1 FOREIGN KEY (biosample_id_namespace, biosample_local_id) REFERENCES c2m2.biosample (id_namespace, local_id);
ALTER TABLE c2m2.biosample_disease ADD CONSTRAINT  fk_biosample_disease_disease_2 FOREIGN KEY (disease) REFERENCES c2m2.disease (id);
 ----------- Adding foreign key constraint for table subject_disease ----------
ALTER TABLE c2m2.subject_disease ADD CONSTRAINT  fk_subject_disease_subject_1 FOREIGN KEY (subject_id_namespace, subject_local_id) REFERENCES c2m2.subject (id_namespace, local_id);
ALTER TABLE c2m2.subject_disease ADD CONSTRAINT  fk_subject_disease_disease_2 FOREIGN KEY (disease) REFERENCES c2m2.disease (id);
 ----------- Adding foreign key constraint for table collection_disease ----------
ALTER TABLE c2m2.collection_disease ADD CONSTRAINT  fk_collection_disease_collection_1 FOREIGN KEY (collection_id_namespace, collection_local_id) REFERENCES c2m2.collection (id_namespace, local_id);
ALTER TABLE c2m2.collection_disease ADD CONSTRAINT  fk_collection_disease_disease_2 FOREIGN KEY (disease) REFERENCES c2m2.disease (id);
 ----------- Adding foreign key constraint for table collection_phenotype ----------
ALTER TABLE c2m2.collection_phenotype ADD CONSTRAINT  fk_collection_phenotype_collection_1 FOREIGN KEY (collection_id_namespace, collection_local_id) REFERENCES c2m2.collection (id_namespace, local_id);
ALTER TABLE c2m2.collection_phenotype ADD CONSTRAINT  fk_collection_phenotype_phenotype_2 FOREIGN KEY (phenotype) REFERENCES c2m2.phenotype (id);
 ----------- Adding foreign key constraint for table collection_gene ----------
ALTER TABLE c2m2.collection_gene ADD CONSTRAINT  fk_collection_gene_collection_1 FOREIGN KEY (collection_id_namespace, collection_local_id) REFERENCES c2m2.collection (id_namespace, local_id);
ALTER TABLE c2m2.collection_gene ADD CONSTRAINT  fk_collection_gene_gene_2 FOREIGN KEY (gene) REFERENCES c2m2.gene (id);
 ----------- Adding foreign key constraint for table collection_compound ----------
ALTER TABLE c2m2.collection_compound ADD CONSTRAINT  fk_collection_compound_collection_1 FOREIGN KEY (collection_id_namespace, collection_local_id) REFERENCES c2m2.collection (id_namespace, local_id);
ALTER TABLE c2m2.collection_compound ADD CONSTRAINT  fk_collection_compound_compound_2 FOREIGN KEY (compound) REFERENCES c2m2.compound (id);
 ----------- Adding foreign key constraint for table collection_substance ----------
ALTER TABLE c2m2.collection_substance ADD CONSTRAINT  fk_collection_substance_collection_1 FOREIGN KEY (collection_id_namespace, collection_local_id) REFERENCES c2m2.collection (id_namespace, local_id);
ALTER TABLE c2m2.collection_substance ADD CONSTRAINT  fk_collection_substance_substance_2 FOREIGN KEY (substance) REFERENCES c2m2.substance (id);
 ----------- Adding foreign key constraint for table collection_taxonomy ----------
ALTER TABLE c2m2.collection_taxonomy ADD CONSTRAINT  fk_collection_taxonomy_collection_1 FOREIGN KEY (collection_id_namespace, collection_local_id) REFERENCES c2m2.collection (id_namespace, local_id);
ALTER TABLE c2m2.collection_taxonomy ADD CONSTRAINT  fk_collection_taxonomy_ncbi_taxonomy_2 FOREIGN KEY (taxon) REFERENCES c2m2.ncbi_taxonomy (id);
 ----------- Adding foreign key constraint for table collection_anatomy ----------
ALTER TABLE c2m2.collection_anatomy ADD CONSTRAINT  fk_collection_anatomy_collection_1 FOREIGN KEY (collection_id_namespace, collection_local_id) REFERENCES c2m2.collection (id_namespace, local_id);
ALTER TABLE c2m2.collection_anatomy ADD CONSTRAINT  fk_collection_anatomy_anatomy_2 FOREIGN KEY (anatomy) REFERENCES c2m2.anatomy (id);
 ----------- Adding foreign key constraint for table collection_protein ----------
ALTER TABLE c2m2.collection_protein ADD CONSTRAINT  fk_collection_protein_collection_1 FOREIGN KEY (collection_id_namespace, collection_local_id) REFERENCES c2m2.collection (id_namespace, local_id);
ALTER TABLE c2m2.collection_protein ADD CONSTRAINT  fk_collection_protein_protein_2 FOREIGN KEY (protein) REFERENCES c2m2.protein (id);
 ----------- Adding foreign key constraint for table subject_phenotype ----------
ALTER TABLE c2m2.subject_phenotype ADD CONSTRAINT  fk_subject_phenotype_subject_1 FOREIGN KEY (subject_id_namespace, subject_local_id) REFERENCES c2m2.subject (id_namespace, local_id);
ALTER TABLE c2m2.subject_phenotype ADD CONSTRAINT  fk_subject_phenotype_phenotype_2 FOREIGN KEY (phenotype) REFERENCES c2m2.phenotype (id);
 ----------- Adding foreign key constraint for table biosample_substance ----------
ALTER TABLE c2m2.biosample_substance ADD CONSTRAINT  fk_biosample_substance_biosample_1 FOREIGN KEY (biosample_id_namespace, biosample_local_id) REFERENCES c2m2.biosample (id_namespace, local_id);
ALTER TABLE c2m2.biosample_substance ADD CONSTRAINT  fk_biosample_substance_substance_2 FOREIGN KEY (substance) REFERENCES c2m2.substance (id);
 ----------- Adding foreign key constraint for table subject_substance ----------
ALTER TABLE c2m2.subject_substance ADD CONSTRAINT  fk_subject_substance_subject_1 FOREIGN KEY (subject_id_namespace, subject_local_id) REFERENCES c2m2.subject (id_namespace, local_id);
ALTER TABLE c2m2.subject_substance ADD CONSTRAINT  fk_subject_substance_substance_2 FOREIGN KEY (substance) REFERENCES c2m2.substance (id);
 ----------- Adding foreign key constraint for table biosample_gene ----------
ALTER TABLE c2m2.biosample_gene ADD CONSTRAINT  fk_biosample_gene_biosample_1 FOREIGN KEY (biosample_id_namespace, biosample_local_id) REFERENCES c2m2.biosample (id_namespace, local_id);
ALTER TABLE c2m2.biosample_gene ADD CONSTRAINT  fk_biosample_gene_gene_2 FOREIGN KEY (gene) REFERENCES c2m2.gene (id);
 ----------- Adding foreign key constraint for table phenotype_gene ----------
ALTER TABLE c2m2.phenotype_gene ADD CONSTRAINT  fk_phenotype_gene_phenotype_1 FOREIGN KEY (phenotype) REFERENCES c2m2.phenotype (id);
ALTER TABLE c2m2.phenotype_gene ADD CONSTRAINT  fk_phenotype_gene_gene_2 FOREIGN KEY (gene) REFERENCES c2m2.gene (id);
 ----------- Adding foreign key constraint for table phenotype_disease ----------
ALTER TABLE c2m2.phenotype_disease ADD CONSTRAINT  fk_phenotype_disease_phenotype_1 FOREIGN KEY (phenotype) REFERENCES c2m2.phenotype (id);
ALTER TABLE c2m2.phenotype_disease ADD CONSTRAINT  fk_phenotype_disease_disease_2 FOREIGN KEY (disease) REFERENCES c2m2.disease (id);
 ----------- Adding foreign key constraint for table subject_race ----------
ALTER TABLE c2m2.subject_race ADD CONSTRAINT  fk_subject_race_subject_1 FOREIGN KEY (subject_id_namespace, subject_local_id) REFERENCES c2m2.subject (id_namespace, local_id);
 ----------- Adding foreign key constraint for table subject_role_taxonomy ----------
ALTER TABLE c2m2.subject_role_taxonomy ADD CONSTRAINT  fk_subject_role_taxonomy_subject_1 FOREIGN KEY (subject_id_namespace, subject_local_id) REFERENCES c2m2.subject (id_namespace, local_id);
ALTER TABLE c2m2.subject_role_taxonomy ADD CONSTRAINT  fk_subject_role_taxonomy_ncbi_taxonomy_2 FOREIGN KEY (taxonomy_id) REFERENCES c2m2.ncbi_taxonomy (id);
 ----------- Adding foreign key constraint for table assay_type ----------
 ----------- Adding foreign key constraint for table analysis_type ----------
 ----------- Adding foreign key constraint for table ncbi_taxonomy ----------
 ----------- Adding foreign key constraint for table anatomy ----------
 ----------- Adding foreign key constraint for table file_format ----------
 ----------- Adding foreign key constraint for table data_type ----------
 ----------- Adding foreign key constraint for table disease ----------
 ----------- Adding foreign key constraint for table phenotype ----------
 ----------- Adding foreign key constraint for table compound ----------
 ----------- Adding foreign key constraint for table substance ----------
ALTER TABLE c2m2.substance ADD CONSTRAINT  fk_substance_compound_1 FOREIGN KEY (compound) REFERENCES c2m2.compound (id);
 ----------- Adding foreign key constraint for table gene ----------
ALTER TABLE c2m2.gene ADD CONSTRAINT  fk_gene_ncbi_taxonomy_1 FOREIGN KEY (organism) REFERENCES c2m2.ncbi_taxonomy (id);
 ----------- Adding foreign key constraint for table protein ----------
ALTER TABLE c2m2.protein ADD CONSTRAINT  fk_protein_ncbi_taxonomy_1 FOREIGN KEY (organism) REFERENCES c2m2.ncbi_taxonomy (id);
 ----------- Adding foreign key constraint for table protein_gene ----------
ALTER TABLE c2m2.protein_gene ADD CONSTRAINT  fk_protein_gene_protein_1 FOREIGN KEY (protein) REFERENCES c2m2.protein (id);
ALTER TABLE c2m2.protein_gene ADD CONSTRAINT  fk_protein_gene_gene_2 FOREIGN KEY (gene) REFERENCES c2m2.gene (id);
 ----------- Adding foreign key constraint for table sample_prep_method ----------
 ----------- Adding foreign key constraint for table id_namespace ----------
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Time taken to add foreign constraints: 70.09884119033813 seconds.

>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Total time taken: 1670.6404917240143 seconds.

********** C2M2 metadata ingestion completed: schema_name: c2m2.
