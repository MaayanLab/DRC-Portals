------------ dcc_short_labels:['4DN', 'ERCC', 'GTEx', 'GlyGen', 'HMP', 'HuBMAP', 'IDG', 'KidsFirst', 'LINCS', 'MW', 'MoTrPAC', 'SPARC']
********** No arguments specified: will use schema_name: c2m2, and ingest from all DCCs.
DROP SCHEMA IF EXISTS c2m2 CASCADE;
Creating c2m2
=================== table_name: file ===========================
---- Column name: id_namespace: information read ----
---- Column name: local_id: information read ----
---- Column name: project_id_namespace: information read ----
---- Column name: project_local_id: information read ----
---- Column name: persistent_id: information read ----
---- Column name: creation_time: information read ----
---- Column name: size_in_bytes: information read ----
---- Column name: uncompressed_size_in_bytes: information read ----
---- Column name: sha256: information read ----
---- Column name: md5: information read ----
---- Column name: filename: information read ----
---- Column name: file_format: information read ----
---- Column name: compression_format: information read ----
---- Column name: data_type: information read ----
---- Column name: assay_type: information read ----
---- Column name: analysis_type: information read ----
---- Column name: mime_type: information read ----
---- Column name: bundle_collection_id_namespace: information read ----
---- Column name: bundle_collection_local_id: information read ----
---- Column name: dbgap_study_id: information read ----
create_table_query:
CREATE TABLE c2m2.file (
id_namespace VARCHAR NOT NULL, 
local_id VARCHAR NOT NULL, 
project_id_namespace VARCHAR NOT NULL, 
project_local_id VARCHAR NOT NULL, 
persistent_id VARCHAR DEFAULT '', 
creation_time VARCHAR DEFAULT '', 
size_in_bytes VARCHAR DEFAULT '', 
uncompressed_size_in_bytes VARCHAR DEFAULT '', 
sha256 VARCHAR DEFAULT '', 
md5 VARCHAR DEFAULT '', 
filename VARCHAR NOT NULL, 
file_format VARCHAR DEFAULT '', 
compression_format VARCHAR DEFAULT '', 
data_type VARCHAR DEFAULT '', 
assay_type VARCHAR DEFAULT '', 
analysis_type VARCHAR DEFAULT '', 
mime_type VARCHAR DEFAULT '', 
bundle_collection_id_namespace VARCHAR DEFAULT '', 
bundle_collection_local_id VARCHAR DEFAULT '', 
dbgap_study_id VARCHAR DEFAULT '',
PRIMARY KEY(id_namespace, local_id)
);
=================== table_name: biosample ===========================
---- Column name: id_namespace: information read ----
---- Column name: local_id: information read ----
---- Column name: project_id_namespace: information read ----
---- Column name: project_local_id: information read ----
---- Column name: persistent_id: information read ----
---- Column name: creation_time: information read ----
---- Column name: sample_prep_method: information read ----
---- Column name: anatomy: information read ----
create_table_query:
CREATE TABLE c2m2.biosample (
id_namespace VARCHAR NOT NULL, 
local_id VARCHAR NOT NULL, 
project_id_namespace VARCHAR NOT NULL, 
project_local_id VARCHAR NOT NULL, 
persistent_id VARCHAR DEFAULT '', 
creation_time VARCHAR DEFAULT '', 
sample_prep_method VARCHAR DEFAULT '', 
anatomy VARCHAR DEFAULT '',
PRIMARY KEY(id_namespace, local_id)
);
=================== table_name: subject ===========================
---- Column name: id_namespace: information read ----
---- Column name: local_id: information read ----
---- Column name: project_id_namespace: information read ----
---- Column name: project_local_id: information read ----
---- Column name: persistent_id: information read ----
---- Column name: creation_time: information read ----
---- Column name: granularity: information read ----
---- Column name: sex: information read ----
---- Column name: ethnicity: information read ----
---- Column name: age_at_enrollment: information read ----
create_table_query:
CREATE TABLE c2m2.subject (
id_namespace VARCHAR NOT NULL, 
local_id VARCHAR NOT NULL, 
project_id_namespace VARCHAR NOT NULL, 
project_local_id VARCHAR NOT NULL, 
persistent_id VARCHAR DEFAULT '', 
creation_time VARCHAR DEFAULT '', 
granularity VARCHAR NOT NULL, 
sex VARCHAR DEFAULT '', 
ethnicity VARCHAR DEFAULT '', 
age_at_enrollment VARCHAR DEFAULT '',
PRIMARY KEY(id_namespace, local_id)
);
=================== table_name: dcc ===========================
---- Column name: id: information read ----
---- Column name: dcc_name: information read ----
---- Column name: dcc_abbreviation: information read ----
---- Column name: dcc_description: information read ----
---- Column name: contact_email: information read ----
---- Column name: contact_name: information read ----
---- Column name: dcc_url: information read ----
---- Column name: project_id_namespace: information read ----
---- Column name: project_local_id: information read ----
create_table_query:
CREATE TABLE c2m2.dcc (
id VARCHAR NOT NULL, 
dcc_name VARCHAR NOT NULL, 
dcc_abbreviation VARCHAR NOT NULL, 
dcc_description VARCHAR DEFAULT '', 
contact_email VARCHAR NOT NULL, 
contact_name VARCHAR NOT NULL, 
dcc_url VARCHAR NOT NULL, 
project_id_namespace VARCHAR NOT NULL, 
project_local_id VARCHAR NOT NULL,
PRIMARY KEY(id)
);
=================== table_name: project ===========================
---- Column name: id_namespace: information read ----
---- Column name: local_id: information read ----
---- Column name: persistent_id: information read ----
---- Column name: creation_time: information read ----
---- Column name: abbreviation: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
create_table_query:
CREATE TABLE c2m2.project (
id_namespace VARCHAR NOT NULL, 
local_id VARCHAR NOT NULL, 
persistent_id VARCHAR DEFAULT '', 
creation_time VARCHAR DEFAULT '', 
abbreviation VARCHAR DEFAULT '', 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '',
PRIMARY KEY(id_namespace, local_id)
);
=================== table_name: project_in_project ===========================
---- Column name: parent_project_id_namespace: information read ----
---- Column name: parent_project_local_id: information read ----
---- Column name: child_project_id_namespace: information read ----
---- Column name: child_project_local_id: information read ----
create_table_query:
CREATE TABLE c2m2.project_in_project (
parent_project_id_namespace VARCHAR NOT NULL, 
parent_project_local_id VARCHAR NOT NULL, 
child_project_id_namespace VARCHAR NOT NULL, 
child_project_local_id VARCHAR NOT NULL,
PRIMARY KEY(parent_project_id_namespace, parent_project_local_id, child_project_id_namespace, child_project_local_id)
);
=================== table_name: collection ===========================
---- Column name: id_namespace: information read ----
---- Column name: local_id: information read ----
---- Column name: persistent_id: information read ----
---- Column name: creation_time: information read ----
---- Column name: abbreviation: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
---- Column name: has_time_series_data: information read ----
create_table_query:
CREATE TABLE c2m2.collection (
id_namespace VARCHAR NOT NULL, 
local_id VARCHAR NOT NULL, 
persistent_id VARCHAR DEFAULT '', 
creation_time VARCHAR DEFAULT '', 
abbreviation VARCHAR DEFAULT '', 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '', 
has_time_series_data VARCHAR DEFAULT '',
PRIMARY KEY(id_namespace, local_id)
);
=================== table_name: collection_in_collection ===========================
---- Column name: superset_collection_id_namespace: information read ----
---- Column name: superset_collection_local_id: information read ----
---- Column name: subset_collection_id_namespace: information read ----
---- Column name: subset_collection_local_id: information read ----
create_table_query:
CREATE TABLE c2m2.collection_in_collection (
superset_collection_id_namespace VARCHAR NOT NULL, 
superset_collection_local_id VARCHAR NOT NULL, 
subset_collection_id_namespace VARCHAR NOT NULL, 
subset_collection_local_id VARCHAR NOT NULL,
PRIMARY KEY(superset_collection_id_namespace, superset_collection_local_id, subset_collection_id_namespace, subset_collection_local_id)
);
=================== table_name: file_describes_collection ===========================
---- Column name: file_id_namespace: information read ----
---- Column name: file_local_id: information read ----
---- Column name: collection_id_namespace: information read ----
---- Column name: collection_local_id: information read ----
create_table_query:
CREATE TABLE c2m2.file_describes_collection (
file_id_namespace VARCHAR NOT NULL, 
file_local_id VARCHAR NOT NULL, 
collection_id_namespace VARCHAR NOT NULL, 
collection_local_id VARCHAR NOT NULL,
PRIMARY KEY(file_id_namespace, file_local_id, collection_id_namespace, collection_local_id)
);
=================== table_name: collection_defined_by_project ===========================
---- Column name: collection_id_namespace: information read ----
---- Column name: collection_local_id: information read ----
---- Column name: project_id_namespace: information read ----
---- Column name: project_local_id: information read ----
create_table_query:
CREATE TABLE c2m2.collection_defined_by_project (
collection_id_namespace VARCHAR NOT NULL, 
collection_local_id VARCHAR NOT NULL, 
project_id_namespace VARCHAR NOT NULL, 
project_local_id VARCHAR NOT NULL,
PRIMARY KEY(collection_id_namespace, collection_local_id, project_id_namespace, project_local_id)
);
=================== table_name: file_in_collection ===========================
---- Column name: file_id_namespace: information read ----
---- Column name: file_local_id: information read ----
---- Column name: collection_id_namespace: information read ----
---- Column name: collection_local_id: information read ----
create_table_query:
CREATE TABLE c2m2.file_in_collection (
file_id_namespace VARCHAR NOT NULL, 
file_local_id VARCHAR NOT NULL, 
collection_id_namespace VARCHAR NOT NULL, 
collection_local_id VARCHAR NOT NULL,
PRIMARY KEY(file_id_namespace, file_local_id, collection_id_namespace, collection_local_id)
);
=================== table_name: biosample_in_collection ===========================
---- Column name: biosample_id_namespace: information read ----
---- Column name: biosample_local_id: information read ----
---- Column name: collection_id_namespace: information read ----
---- Column name: collection_local_id: information read ----
create_table_query:
CREATE TABLE c2m2.biosample_in_collection (
biosample_id_namespace VARCHAR NOT NULL, 
biosample_local_id VARCHAR NOT NULL, 
collection_id_namespace VARCHAR NOT NULL, 
collection_local_id VARCHAR NOT NULL,
PRIMARY KEY(biosample_id_namespace, biosample_local_id, collection_id_namespace, collection_local_id)
);
=================== table_name: subject_in_collection ===========================
---- Column name: subject_id_namespace: information read ----
---- Column name: subject_local_id: information read ----
---- Column name: collection_id_namespace: information read ----
---- Column name: collection_local_id: information read ----
create_table_query:
CREATE TABLE c2m2.subject_in_collection (
subject_id_namespace VARCHAR NOT NULL, 
subject_local_id VARCHAR NOT NULL, 
collection_id_namespace VARCHAR NOT NULL, 
collection_local_id VARCHAR NOT NULL,
PRIMARY KEY(subject_id_namespace, subject_local_id, collection_id_namespace, collection_local_id)
);
=================== table_name: file_describes_biosample ===========================
---- Column name: file_id_namespace: information read ----
---- Column name: file_local_id: information read ----
---- Column name: biosample_id_namespace: information read ----
---- Column name: biosample_local_id: information read ----
create_table_query:
CREATE TABLE c2m2.file_describes_biosample (
file_id_namespace VARCHAR NOT NULL, 
file_local_id VARCHAR NOT NULL, 
biosample_id_namespace VARCHAR NOT NULL, 
biosample_local_id VARCHAR NOT NULL,
PRIMARY KEY(file_id_namespace, file_local_id, biosample_id_namespace, biosample_local_id)
);
=================== table_name: file_describes_subject ===========================
---- Column name: file_id_namespace: information read ----
---- Column name: file_local_id: information read ----
---- Column name: subject_id_namespace: information read ----
---- Column name: subject_local_id: information read ----
create_table_query:
CREATE TABLE c2m2.file_describes_subject (
file_id_namespace VARCHAR NOT NULL, 
file_local_id VARCHAR NOT NULL, 
subject_id_namespace VARCHAR NOT NULL, 
subject_local_id VARCHAR NOT NULL,
PRIMARY KEY(file_id_namespace, file_local_id, subject_id_namespace, subject_local_id)
);
=================== table_name: biosample_from_subject ===========================
---- Column name: biosample_id_namespace: information read ----
---- Column name: biosample_local_id: information read ----
---- Column name: subject_id_namespace: information read ----
---- Column name: subject_local_id: information read ----
---- Column name: age_at_sampling: information read ----
create_table_query:
CREATE TABLE c2m2.biosample_from_subject (
biosample_id_namespace VARCHAR NOT NULL, 
biosample_local_id VARCHAR NOT NULL, 
subject_id_namespace VARCHAR NOT NULL, 
subject_local_id VARCHAR NOT NULL, 
age_at_sampling VARCHAR DEFAULT '',
PRIMARY KEY(biosample_id_namespace, biosample_local_id, subject_id_namespace, subject_local_id)
);
=================== table_name: biosample_disease ===========================
---- Column name: biosample_id_namespace: information read ----
---- Column name: biosample_local_id: information read ----
---- Column name: association_type: information read ----
---- Column name: disease: information read ----
create_table_query:
CREATE TABLE c2m2.biosample_disease (
biosample_id_namespace VARCHAR NOT NULL, 
biosample_local_id VARCHAR NOT NULL, 
association_type VARCHAR NOT NULL, 
disease VARCHAR NOT NULL,
PRIMARY KEY(biosample_id_namespace, biosample_local_id, association_type, disease)
);
=================== table_name: subject_disease ===========================
---- Column name: subject_id_namespace: information read ----
---- Column name: subject_local_id: information read ----
---- Column name: association_type: information read ----
---- Column name: disease: information read ----
create_table_query:
CREATE TABLE c2m2.subject_disease (
subject_id_namespace VARCHAR NOT NULL, 
subject_local_id VARCHAR NOT NULL, 
association_type VARCHAR NOT NULL, 
disease VARCHAR NOT NULL,
PRIMARY KEY(subject_id_namespace, subject_local_id, association_type, disease)
);
=================== table_name: collection_disease ===========================
---- Column name: collection_id_namespace: information read ----
---- Column name: collection_local_id: information read ----
---- Column name: disease: information read ----
create_table_query:
CREATE TABLE c2m2.collection_disease (
collection_id_namespace VARCHAR NOT NULL, 
collection_local_id VARCHAR NOT NULL, 
disease VARCHAR NOT NULL,
PRIMARY KEY(collection_id_namespace, collection_local_id, disease)
);
=================== table_name: collection_phenotype ===========================
---- Column name: collection_id_namespace: information read ----
---- Column name: collection_local_id: information read ----
---- Column name: phenotype: information read ----
create_table_query:
CREATE TABLE c2m2.collection_phenotype (
collection_id_namespace VARCHAR NOT NULL, 
collection_local_id VARCHAR NOT NULL, 
phenotype VARCHAR NOT NULL,
PRIMARY KEY(collection_id_namespace, collection_local_id, phenotype)
);
=================== table_name: collection_gene ===========================
---- Column name: collection_id_namespace: information read ----
---- Column name: collection_local_id: information read ----
---- Column name: gene: information read ----
create_table_query:
CREATE TABLE c2m2.collection_gene (
collection_id_namespace VARCHAR NOT NULL, 
collection_local_id VARCHAR NOT NULL, 
gene VARCHAR NOT NULL,
PRIMARY KEY(collection_id_namespace, collection_local_id, gene)
);
=================== table_name: collection_compound ===========================
---- Column name: collection_id_namespace: information read ----
---- Column name: collection_local_id: information read ----
---- Column name: compound: information read ----
create_table_query:
CREATE TABLE c2m2.collection_compound (
collection_id_namespace VARCHAR NOT NULL, 
collection_local_id VARCHAR NOT NULL, 
compound VARCHAR NOT NULL,
PRIMARY KEY(collection_id_namespace, collection_local_id, compound)
);
=================== table_name: collection_substance ===========================
---- Column name: collection_id_namespace: information read ----
---- Column name: collection_local_id: information read ----
---- Column name: substance: information read ----
create_table_query:
CREATE TABLE c2m2.collection_substance (
collection_id_namespace VARCHAR NOT NULL, 
collection_local_id VARCHAR NOT NULL, 
substance VARCHAR NOT NULL,
PRIMARY KEY(collection_id_namespace, collection_local_id, substance)
);
=================== table_name: collection_taxonomy ===========================
---- Column name: collection_id_namespace: information read ----
---- Column name: collection_local_id: information read ----
---- Column name: taxon: information read ----
create_table_query:
CREATE TABLE c2m2.collection_taxonomy (
collection_id_namespace VARCHAR NOT NULL, 
collection_local_id VARCHAR NOT NULL, 
taxon VARCHAR NOT NULL,
PRIMARY KEY(collection_id_namespace, collection_local_id, taxon)
);
=================== table_name: collection_anatomy ===========================
---- Column name: collection_id_namespace: information read ----
---- Column name: collection_local_id: information read ----
---- Column name: anatomy: information read ----
create_table_query:
CREATE TABLE c2m2.collection_anatomy (
collection_id_namespace VARCHAR NOT NULL, 
collection_local_id VARCHAR NOT NULL, 
anatomy VARCHAR NOT NULL,
PRIMARY KEY(collection_id_namespace, collection_local_id, anatomy)
);
=================== table_name: collection_protein ===========================
---- Column name: collection_id_namespace: information read ----
---- Column name: collection_local_id: information read ----
---- Column name: protein: information read ----
create_table_query:
CREATE TABLE c2m2.collection_protein (
collection_id_namespace VARCHAR NOT NULL, 
collection_local_id VARCHAR NOT NULL, 
protein VARCHAR NOT NULL,
PRIMARY KEY(collection_id_namespace, collection_local_id, protein)
);
=================== table_name: subject_phenotype ===========================
---- Column name: subject_id_namespace: information read ----
---- Column name: subject_local_id: information read ----
---- Column name: association_type: information read ----
---- Column name: phenotype: information read ----
create_table_query:
CREATE TABLE c2m2.subject_phenotype (
subject_id_namespace VARCHAR NOT NULL, 
subject_local_id VARCHAR NOT NULL, 
association_type VARCHAR NOT NULL, 
phenotype VARCHAR NOT NULL,
PRIMARY KEY(subject_id_namespace, subject_local_id, association_type, phenotype)
);
=================== table_name: biosample_substance ===========================
---- Column name: biosample_id_namespace: information read ----
---- Column name: biosample_local_id: information read ----
---- Column name: substance: information read ----
create_table_query:
CREATE TABLE c2m2.biosample_substance (
biosample_id_namespace VARCHAR NOT NULL, 
biosample_local_id VARCHAR NOT NULL, 
substance VARCHAR NOT NULL,
PRIMARY KEY(biosample_id_namespace, biosample_local_id, substance)
);
=================== table_name: subject_substance ===========================
---- Column name: subject_id_namespace: information read ----
---- Column name: subject_local_id: information read ----
---- Column name: substance: information read ----
create_table_query:
CREATE TABLE c2m2.subject_substance (
subject_id_namespace VARCHAR NOT NULL, 
subject_local_id VARCHAR NOT NULL, 
substance VARCHAR NOT NULL,
PRIMARY KEY(subject_id_namespace, subject_local_id, substance)
);
=================== table_name: biosample_gene ===========================
---- Column name: biosample_id_namespace: information read ----
---- Column name: biosample_local_id: information read ----
---- Column name: gene: information read ----
create_table_query:
CREATE TABLE c2m2.biosample_gene (
biosample_id_namespace VARCHAR NOT NULL, 
biosample_local_id VARCHAR NOT NULL, 
gene VARCHAR NOT NULL,
PRIMARY KEY(biosample_id_namespace, biosample_local_id, gene)
);
=================== table_name: phenotype_gene ===========================
---- Column name: phenotype: information read ----
---- Column name: gene: information read ----
create_table_query:
CREATE TABLE c2m2.phenotype_gene (
phenotype VARCHAR NOT NULL, 
gene VARCHAR NOT NULL,
PRIMARY KEY(phenotype, gene)
);
=================== table_name: phenotype_disease ===========================
---- Column name: phenotype: information read ----
---- Column name: disease: information read ----
create_table_query:
CREATE TABLE c2m2.phenotype_disease (
phenotype VARCHAR NOT NULL, 
disease VARCHAR NOT NULL,
PRIMARY KEY(phenotype, disease)
);
=================== table_name: subject_race ===========================
---- Column name: subject_id_namespace: information read ----
---- Column name: subject_local_id: information read ----
---- Column name: race: information read ----
create_table_query:
CREATE TABLE c2m2.subject_race (
subject_id_namespace VARCHAR NOT NULL, 
subject_local_id VARCHAR NOT NULL, 
race VARCHAR DEFAULT '',
PRIMARY KEY(subject_id_namespace, subject_local_id, race)
);
=================== table_name: subject_role_taxonomy ===========================
---- Column name: subject_id_namespace: information read ----
---- Column name: subject_local_id: information read ----
---- Column name: role_id: information read ----
---- Column name: taxonomy_id: information read ----
create_table_query:
CREATE TABLE c2m2.subject_role_taxonomy (
subject_id_namespace VARCHAR NOT NULL, 
subject_local_id VARCHAR NOT NULL, 
role_id VARCHAR NOT NULL, 
taxonomy_id VARCHAR NOT NULL,
PRIMARY KEY(subject_id_namespace, subject_local_id, role_id, taxonomy_id)
);
=================== table_name: assay_type ===========================
---- Column name: id: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
---- Column name: synonyms: information read ----
create_table_query:
CREATE TABLE c2m2.assay_type (
id VARCHAR NOT NULL, 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '', 
synonyms VARCHAR DEFAULT '',
PRIMARY KEY(id)
);
=================== table_name: analysis_type ===========================
---- Column name: id: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
---- Column name: synonyms: information read ----
create_table_query:
CREATE TABLE c2m2.analysis_type (
id VARCHAR NOT NULL, 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '', 
synonyms VARCHAR DEFAULT '',
PRIMARY KEY(id)
);
=================== table_name: ncbi_taxonomy ===========================
---- Column name: id: information read ----
---- Column name: clade: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
---- Column name: synonyms: information read ----
create_table_query:
CREATE TABLE c2m2.ncbi_taxonomy (
id VARCHAR NOT NULL, 
clade VARCHAR NOT NULL, 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '', 
synonyms VARCHAR DEFAULT '',
PRIMARY KEY(id)
);
=================== table_name: anatomy ===========================
---- Column name: id: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
---- Column name: synonyms: information read ----
create_table_query:
CREATE TABLE c2m2.anatomy (
id VARCHAR NOT NULL, 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '', 
synonyms VARCHAR DEFAULT '',
PRIMARY KEY(id)
);
=================== table_name: file_format ===========================
---- Column name: id: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
---- Column name: synonyms: information read ----
create_table_query:
CREATE TABLE c2m2.file_format (
id VARCHAR NOT NULL, 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '', 
synonyms VARCHAR DEFAULT '',
PRIMARY KEY(id)
);
=================== table_name: data_type ===========================
---- Column name: id: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
---- Column name: synonyms: information read ----
create_table_query:
CREATE TABLE c2m2.data_type (
id VARCHAR NOT NULL, 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '', 
synonyms VARCHAR DEFAULT '',
PRIMARY KEY(id)
);
=================== table_name: disease ===========================
---- Column name: id: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
---- Column name: synonyms: information read ----
create_table_query:
CREATE TABLE c2m2.disease (
id VARCHAR NOT NULL, 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '', 
synonyms VARCHAR DEFAULT '',
PRIMARY KEY(id)
);
=================== table_name: phenotype ===========================
---- Column name: id: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
---- Column name: synonyms: information read ----
create_table_query:
CREATE TABLE c2m2.phenotype (
id VARCHAR NOT NULL, 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '', 
synonyms VARCHAR DEFAULT '',
PRIMARY KEY(id)
);
=================== table_name: compound ===========================
---- Column name: id: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
---- Column name: synonyms: information read ----
create_table_query:
CREATE TABLE c2m2.compound (
id VARCHAR NOT NULL, 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '', 
synonyms VARCHAR DEFAULT '',
PRIMARY KEY(id)
);
=================== table_name: substance ===========================
---- Column name: id: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
---- Column name: synonyms: information read ----
---- Column name: compound: information read ----
create_table_query:
CREATE TABLE c2m2.substance (
id VARCHAR NOT NULL, 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '', 
synonyms VARCHAR DEFAULT '', 
compound VARCHAR NOT NULL,
PRIMARY KEY(id)
);
=================== table_name: gene ===========================
---- Column name: id: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
---- Column name: synonyms: information read ----
---- Column name: organism: information read ----
create_table_query:
CREATE TABLE c2m2.gene (
id VARCHAR NOT NULL, 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '', 
synonyms VARCHAR DEFAULT '', 
organism VARCHAR NOT NULL,
PRIMARY KEY(id)
);
=================== table_name: protein ===========================
---- Column name: id: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
---- Column name: synonyms: information read ----
---- Column name: organism: information read ----
create_table_query:
CREATE TABLE c2m2.protein (
id VARCHAR NOT NULL, 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '', 
synonyms VARCHAR DEFAULT '', 
organism VARCHAR DEFAULT '',
PRIMARY KEY(id)
);
=================== table_name: protein_gene ===========================
---- Column name: protein: information read ----
---- Column name: gene: information read ----
create_table_query:
CREATE TABLE c2m2.protein_gene (
protein VARCHAR NOT NULL, 
gene VARCHAR NOT NULL,
PRIMARY KEY(protein, gene)
);
=================== table_name: sample_prep_method ===========================
---- Column name: id: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
---- Column name: synonyms: information read ----
create_table_query:
CREATE TABLE c2m2.sample_prep_method (
id VARCHAR NOT NULL, 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '', 
synonyms VARCHAR DEFAULT '',
PRIMARY KEY(id)
);
=================== table_name: id_namespace ===========================
---- Column name: id: information read ----
---- Column name: abbreviation: information read ----
---- Column name: name: information read ----
---- Column name: description: information read ----
create_table_query:
CREATE TABLE c2m2.id_namespace (
id VARCHAR NOT NULL, 
abbreviation VARCHAR DEFAULT '', 
name VARCHAR NOT NULL, 
description VARCHAR DEFAULT '',
PRIMARY KEY(id)
);
================== Defined all tables ======================
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Time taken to define table: 0.7452917098999023 seconds.

Names of all tables:
['file', 'biosample', 'subject', 'dcc', 'project', 'project_in_project', 'collection', 'collection_in_collection', 'file_describes_collection', 'collection_defined_by_project', 'file_in_collection', 'biosample_in_collection', 'subject_in_collection', 'file_describes_biosample', 'file_describes_subject', 'biosample_from_subject', 'biosample_disease', 'subject_disease', 'collection_disease', 'collection_phenotype', 'collection_gene', 'collection_compound', 'collection_substance', 'collection_taxonomy', 'collection_anatomy', 'collection_protein', 'subject_phenotype', 'biosample_substance', 'subject_substance', 'biosample_gene', 'phenotype_gene', 'phenotype_disease', 'subject_race', 'subject_role_taxonomy', 'assay_type', 'analysis_type', 'ncbi_taxonomy', 'anatomy', 'file_format', 'data_type', 'disease', 'phenotype', 'compound', 'substance', 'gene', 'protein', 'protein_gene', 'sample_prep_method', 'id_namespace']

Going to ingest metadata from files


********* c2m2s dataframe is: **********
    filetype         filename  ...     created  dcc_short_label
8       C2M2  datapackage.zip  ...  2023-11-28              4DN
15      C2M2  datapackage.zip  ...  2023-08-17             ERCC
21      C2M2  datapackage.zip  ...  2023-09-01             GTEx
29      C2M2  datapackage.zip  ...  2023-12-14           GlyGen
36      C2M2  datapackage.zip  ...  2022-06-20              HMP
44      C2M2  datapackage.zip  ...  2024-01-04           HuBMAP
51      C2M2  datapackage.zip  ...  2024-01-09              IDG
62      C2M2  datapackage.zip  ...  2023-11-29        KidsFirst
73      C2M2  datapackage.zip  ...  2023-09-18            LINCS
86      C2M2  datapackage.zip  ...  2023-12-08               MW
91      C2M2  datapackage.zip  ...  2023-11-15          MoTrPAC
101     C2M2  datapackage.zip  ...  2024-01-03            SPARC

[12 rows x 14 columns]
Processing C2M2 Files...:   0%|          | 0/12 [00:00<?, ?it/s]
================================== DCC short label: 4DN =============================================
Unpack zip file: c2m2_extract_path: ingest/c2m2s/4DN/datapackage
--------- ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/dcc.tsv ---------
ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/dcc.tsv
Read from file: df: #rows = 1, #cols: 9

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.dcc;
qt_df: Empty DataFrame
Columns: [pk]
Index: []
---- Executed query, got data.frame: qt_df: #rows = 0, #cols: 1

df_pk (at most first 10 elements): ['cfde_registry_dcc:4dn']
qt_pk (at most first 10 elements): []
---- Removed rows from df with matching pk
*** Entering dcc to database ***
df: #rows = 1, #cols: 9
df:
                      id  ... project_local_id
0  cfde_registry_dcc:4dn  ...              4DN

[1 rows x 9 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.027907609939575195 seconds.

--------- ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/id_namespace.tsv ---------
ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/id_namespace.tsv
Read from file: df: #rows = 1, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.id_namespace;
qt_df: Empty DataFrame
Columns: [pk]
Index: []
---- Executed query, got data.frame: qt_df: #rows = 0, #cols: 1

df_pk (at most first 10 elements): ['https://data.4dnucleome.org']
qt_pk (at most first 10 elements): []
---- Removed rows from df with matching pk
*** Entering id_namespace to database ***
df: #rows = 1, #cols: 4
df:
                            id  ...                                        description
0  https://data.4dnucleome.org  ...  Study of the three-dimensional organization of...

[1 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.00899815559387207 seconds.

--------- ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/disease.tsv ---------
ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/disease.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['id']
*** Entering disease to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002657651901245117 seconds.

--------- ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/data_type.tsv ---------
ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/data_type.tsv
Read from file: df: #rows = 5, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.data_type;
qt_df: Empty DataFrame
Columns: [pk]
Index: []
---- Executed query, got data.frame: qt_df: #rows = 0, #cols: 1

df_pk (at most first 10 elements): ['data:1383', 'data:2082', 'data:2887', 'data:2968', 'data:3002']
qt_pk (at most first 10 elements): []
---- Removed rows from df with matching pk
*** Entering data_type to database ***
df: #rows = 5, #cols: 4
df:
          id  ...                                           synonyms
0  data:1383  ...  ["Sequence alignment (nucleic acid)","RNA sequ...
1  data:2082  ...                                          ["Array"]
2  data:2887  ...  ["Sequence record (nucleic acid)","Nucleotide ...
3  data:2968  ...                                     ["Image data"]
4  data:3002  ...  ["Genome-browser track","Genome annotation tra...

[5 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.008786201477050781 seconds.

--------- ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/collection_disease.tsv ---------
ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/collection_disease.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'disease']
*** Entering collection_disease to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, disease]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002496004104614258 seconds.

--------- ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/file_in_collection.tsv ---------
ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/file_in_collection.tsv
Read from file: df: #rows = 42828, #cols: 4

pKeys: ['file_id_namespace', 'file_local_id', 'collection_id_namespace', 'collection_local_id']
*** Entering file_in_collection to database ***
df: #rows = 42828, #cols: 4
df:
                 file_id_namespace  ...                   collection_local_id
0      https://data.4dnucleome.org  ...  82f15e77-cea6-4a67-af31-2a4b03f5cb80
1      https://data.4dnucleome.org  ...  82f15e77-cea6-4a67-af31-2a4b03f5cb80
2      https://data.4dnucleome.org  ...  82f15e77-cea6-4a67-af31-2a4b03f5cb80
3      https://data.4dnucleome.org  ...  32b53129-8f25-4df6-82a4-a5e8cc010a51
4      https://data.4dnucleome.org  ...  32b53129-8f25-4df6-82a4-a5e8cc010a51
...                            ...  ...                                   ...
42823  https://data.4dnucleome.org  ...  ee8e40d0-d170-4597-a485-1b9e67af815e
42824  https://data.4dnucleome.org  ...  ee8e40d0-d170-4597-a485-1b9e67af815e
42825  https://data.4dnucleome.org  ...  ee8e40d0-d170-4597-a485-1b9e67af815e
42826  https://data.4dnucleome.org  ...  ee8e40d0-d170-4597-a485-1b9e67af815e
42827  https://data.4dnucleome.org  ...  ee8e40d0-d170-4597-a485-1b9e67af815e

[42828 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.7050018310546875 seconds.

--------- ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/subject_role_taxonomy.tsv ---------
ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/subject_role_taxonomy.tsv
Read from file: df: #rows = 286, #cols: 4

pKeys: ['subject_id_namespace', 'subject_local_id', 'role_id', 'taxonomy_id']
*** Entering subject_role_taxonomy to database ***
df: #rows = 286, #cols: 4
df:
            subject_id_namespace  ...     taxonomy_id
0    https://data.4dnucleome.org  ...  NCBI:txid10090
1    https://data.4dnucleome.org  ...  NCBI:txid10090
2    https://data.4dnucleome.org  ...   NCBI:txid9606
3    https://data.4dnucleome.org  ...   NCBI:txid9606
4    https://data.4dnucleome.org  ...   NCBI:txid9606
..                           ...  ...             ...
281  https://data.4dnucleome.org  ...  NCBI:txid10090
282  https://data.4dnucleome.org  ...   NCBI:txid9606
283  https://data.4dnucleome.org  ...   NCBI:txid9606
284  https://data.4dnucleome.org  ...   NCBI:txid9606
285  https://data.4dnucleome.org  ...   NCBI:txid9606

[286 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.013773918151855469 seconds.

--------- ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/biosample_in_collection.tsv ---------
ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/biosample_in_collection.tsv
Read from file: df: #rows = 5140, #cols: 4

pKeys: ['biosample_id_namespace', 'biosample_local_id', 'collection_id_namespace', 'collection_local_id']
*** Entering biosample_in_collection to database ***
df: #rows = 5140, #cols: 4
df:
           biosample_id_namespace  ...                   collection_local_id
0     https://data.4dnucleome.org  ...  82f15e77-cea6-4a67-af31-2a4b03f5cb80
1     https://data.4dnucleome.org  ...  32b53129-8f25-4df6-82a4-a5e8cc010a51
2     https://data.4dnucleome.org  ...  52964056-822d-43a0-b1e5-ecc1d7f43b20
3     https://data.4dnucleome.org  ...  171bbf21-a162-45da-b08f-f1cdee46d5cd
4     https://data.4dnucleome.org  ...  b10869f7-58a4-439d-8ed9-d6f2e217c952
...                           ...  ...                                   ...
5135  https://data.4dnucleome.org  ...  40f350f5-6f54-4a67-bd49-2995c25e3b98
5136  https://data.4dnucleome.org  ...  a348d549-7f6c-45cc-abc9-f53f71f039c1
5137  https://data.4dnucleome.org  ...  9d6cd2c3-8600-4a49-89e6-de9617701d37
5138  https://data.4dnucleome.org  ...  ce2c144a-77c8-4a61-867e-d0b824b6f168
5139  https://data.4dnucleome.org  ...  3d4f4f72-ba72-43d6-b4ad-e0381c74ef66

[5140 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.11853408813476562 seconds.

--------- ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/subject_phenotype.tsv ---------
ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/subject_phenotype.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['subject_id_namespace', 'subject_local_id', 'association_type', 'phenotype']
*** Entering subject_phenotype to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [subject_id_namespace, subject_local_id, association_type, phenotype]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0038819313049316406 seconds.

--------- ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/phenotype_disease.tsv ---------
ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/phenotype_disease.tsv
Read from file: df: #rows = 0, #cols: 2

pKeys: ['phenotype', 'disease']
*** Entering phenotype_disease to database ***
df: #rows = 0, #cols: 2
df:
Empty DataFrame
Columns: [phenotype, disease]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0023517608642578125 seconds.

--------- ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/collection_compound.tsv ---------
ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/collection_compound.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'compound']
*** Entering collection_compound to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, compound]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002475261688232422 seconds.

--------- ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/protein_gene.tsv ---------
ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/protein_gene.tsv
Read from file: df: #rows = 0, #cols: 2

pKeys: ['protein', 'gene']
*** Entering protein_gene to database ***
df: #rows = 0, #cols: 2
df:
Empty DataFrame
Columns: [protein, gene]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0023055076599121094 seconds.

--------- ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/phenotype_gene.tsv ---------
ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/phenotype_gene.tsv
Read from file: df: #rows = 0, #cols: 2

pKeys: ['phenotype', 'gene']
*** Entering phenotype_gene to database ***
df: #rows = 0, #cols: 2
df:
Empty DataFrame
Columns: [phenotype, gene]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0022759437561035156 seconds.

--------- ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/phenotype.tsv ---------
ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/phenotype.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['id']
*** Entering phenotype to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002617359161376953 seconds.

--------- ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/subject_disease.tsv ---------
ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/subject_disease.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['subject_id_namespace', 'subject_local_id', 'association_type', 'disease']
*** Entering subject_disease to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [subject_id_namespace, subject_local_id, association_type, disease]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0025985240936279297 seconds.

--------- ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/collection_phenotype.tsv ---------
ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/collection_phenotype.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'phenotype']
*** Entering collection_phenotype to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, phenotype]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002518177032470703 seconds.

--------- ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/protein.tsv ---------
ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/protein.tsv
Read from file: df: #rows = 0, #cols: 5

pKeys: ['id']
*** Entering protein to database ***
df: #rows = 0, #cols: 5
df:
Empty DataFrame
Columns: [id, name, description, synonyms, organism]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002745389938354492 seconds.

--------- ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/ncbi_taxonomy.tsv ---------
ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/ncbi_taxonomy.tsv
Read from file: df: #rows = 7, #cols: 5

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.ncbi_taxonomy;
qt_df: Empty DataFrame
Columns: [pk]
Index: []
---- Executed query, got data.frame: qt_df: #rows = 0, #cols: 1

df_pk (at most first 10 elements): ['NCBI:txid10036', 'NCBI:txid10090', 'NCBI:txid60711', 'NCBI:txid7227', 'NCBI:txid7955', 'NCBI:txid9031', 'NCBI:txid9606']
qt_pk (at most first 10 elements): []
---- Removed rows from df with matching pk
*** Entering ncbi_taxonomy to database ***
df: #rows = 7, #cols: 5
df:
               id  ...                                           synonyms
0  NCBI:txid10036  ...  ["Syrian hamster", "Cricetus auratus", "Golden...
1  NCBI:txid10090  ...                                          ["mouse"]
2  NCBI:txid60711  ...  ["Cercopithecus aethiops sabaeus", "Cercopithe...
3   NCBI:txid7227  ...                        ["Sophophora melanogaster"]
4   NCBI:txid7955  ...  ["zebra fish", "Brachydanio rerio", "Brachydan...
5   NCBI:txid9031  ...  ["chickens", "Gallus domesticus", "Gallus gall...
6   NCBI:txid9606  ...                                                 []

[7 rows x 5 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.01000523567199707 seconds.

--------- ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/collection_protein.tsv ---------
ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/collection_protein.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'protein']
*** Entering collection_protein to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, protein]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002565622329711914 seconds.

--------- ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/analysis_type.tsv ---------
ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/analysis_type.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['id']
*** Entering analysis_type to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002703428268432617 seconds.

--------- ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/file_describes_biosample.tsv ---------
ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/file_describes_biosample.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['file_id_namespace', 'file_local_id', 'biosample_id_namespace', 'biosample_local_id']
*** Entering file_describes_biosample to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [file_id_namespace, file_local_id, biosample_id_namespace, biosample_local_id]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002580881118774414 seconds.

--------- ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/file.tsv ---------
ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/file.tsv
Read from file: df: #rows = 42410, #cols: 20

pKeys: ['id_namespace', 'local_id']
*** Entering file to database ***
df: #rows = 42410, #cols: 20
df:
                      id_namespace  ... dbgap_study_id
0      https://data.4dnucleome.org  ...            NaN
1      https://data.4dnucleome.org  ...            NaN
2      https://data.4dnucleome.org  ...            NaN
3      https://data.4dnucleome.org  ...            NaN
4      https://data.4dnucleome.org  ...            NaN
...                            ...  ...            ...
42405  https://data.4dnucleome.org  ...            NaN
42406  https://data.4dnucleome.org  ...            NaN
42407  https://data.4dnucleome.org  ...            NaN
42408  https://data.4dnucleome.org  ...            NaN
42409  https://data.4dnucleome.org  ...            NaN

[42410 rows x 20 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 2.0989677906036377 seconds.

--------- ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/collection_gene.tsv ---------
ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/collection_gene.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'gene']
*** Entering collection_gene to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, gene]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.006143808364868164 seconds.

--------- ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/biosample_from_subject.tsv ---------
ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/biosample_from_subject.tsv
Read from file: df: #rows = 2961, #cols: 5

pKeys: ['biosample_id_namespace', 'biosample_local_id', 'subject_id_namespace', 'subject_local_id']
*** Entering biosample_from_subject to database ***
df: #rows = 2961, #cols: 5
df:
           biosample_id_namespace  ... age_at_sampling
0     https://data.4dnucleome.org  ...             NaN
1     https://data.4dnucleome.org  ...             NaN
2     https://data.4dnucleome.org  ...             NaN
3     https://data.4dnucleome.org  ...             NaN
4     https://data.4dnucleome.org  ...             NaN
...                           ...  ...             ...
2956  https://data.4dnucleome.org  ...             NaN
2957  https://data.4dnucleome.org  ...             NaN
2958  https://data.4dnucleome.org  ...             NaN
2959  https://data.4dnucleome.org  ...             NaN
2960  https://data.4dnucleome.org  ...             NaN

[2961 rows x 5 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.05352783203125 seconds.

--------- ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/file_describes_collection.tsv ---------
ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/file_describes_collection.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['file_id_namespace', 'file_local_id', 'collection_id_namespace', 'collection_local_id']
*** Entering file_describes_collection to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [file_id_namespace, file_local_id, collection_id_namespace, collection_local_id]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.003023386001586914 seconds.

--------- ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/subject_race.tsv ---------
ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/subject_race.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['subject_id_namespace', 'subject_local_id', 'race']
*** Entering subject_race to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [subject_id_namespace, subject_local_id, race]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0024912357330322266 seconds.

--------- ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/collection_in_collection.tsv ---------
ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/collection_in_collection.tsv
Read from file: df: #rows = 5140, #cols: 4

pKeys: ['superset_collection_id_namespace', 'superset_collection_local_id', 'subset_collection_id_namespace', 'subset_collection_local_id']
*** Entering collection_in_collection to database ***
df: #rows = 5140, #cols: 4
df:
     superset_collection_id_namespace  ...            subset_collection_local_id
0         https://data.4dnucleome.org  ...  82f15e77-cea6-4a67-af31-2a4b03f5cb80
1         https://data.4dnucleome.org  ...  32b53129-8f25-4df6-82a4-a5e8cc010a51
2         https://data.4dnucleome.org  ...  52964056-822d-43a0-b1e5-ecc1d7f43b20
3         https://data.4dnucleome.org  ...  171bbf21-a162-45da-b08f-f1cdee46d5cd
4         https://data.4dnucleome.org  ...  b10869f7-58a4-439d-8ed9-d6f2e217c952
...                               ...  ...                                   ...
5135      https://data.4dnucleome.org  ...  40f350f5-6f54-4a67-bd49-2995c25e3b98
5136      https://data.4dnucleome.org  ...  a348d549-7f6c-45cc-abc9-f53f71f039c1
5137      https://data.4dnucleome.org  ...  9d6cd2c3-8600-4a49-89e6-de9617701d37
5138      https://data.4dnucleome.org  ...  ce2c144a-77c8-4a61-867e-d0b824b6f168
5139      https://data.4dnucleome.org  ...  3d4f4f72-ba72-43d6-b4ad-e0381c74ef66

[5140 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.07959175109863281 seconds.

--------- ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/collection_defined_by_project.tsv ---------
ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/collection_defined_by_project.tsv
Read from file: df: #rows = 7347, #cols: 4

pKeys: ['collection_id_namespace', 'collection_local_id', 'project_id_namespace', 'project_local_id']
*** Entering collection_defined_by_project to database ***
df: #rows = 7347, #cols: 4
df:
          collection_id_namespace  ...                      project_local_id
0     https://data.4dnucleome.org  ...  ee89349a-1d43-4048-9142-bc750f0f3b32
1     https://data.4dnucleome.org  ...  ee89349a-1d43-4048-9142-bc750f0f3b32
2     https://data.4dnucleome.org  ...  ee89349a-1d43-4048-9142-bc750f0f3b32
3     https://data.4dnucleome.org  ...  ee89349a-1d43-4048-9142-bc750f0f3b32
4     https://data.4dnucleome.org  ...  ee89349a-1d43-4048-9142-bc750f0f3b32
...                           ...  ...                                   ...
7342  https://data.4dnucleome.org  ...  36a06537-7831-494d-b10d-3e9fea931021
7343  https://data.4dnucleome.org  ...  36a06537-7831-494d-b10d-3e9fea931021
7344  https://data.4dnucleome.org  ...  36a06537-7831-494d-b10d-3e9fea931021
7345  https://data.4dnucleome.org  ...  b0b9c607-f8b4-4f02-93f4-9895b461334b
7346  https://data.4dnucleome.org  ...  b0b9c607-f8b4-4f02-93f4-9895b461334b

[7347 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.12439393997192383 seconds.

--------- ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/collection_substance.tsv ---------
ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/collection_substance.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'substance']
*** Entering collection_substance to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, substance]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0034613609313964844 seconds.

--------- ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/biosample_substance.tsv ---------
ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/biosample_substance.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['biosample_id_namespace', 'biosample_local_id', 'substance']
*** Entering biosample_substance to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [biosample_id_namespace, biosample_local_id, substance]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002645730972290039 seconds.

--------- ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/project.tsv ---------
ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/project.tsv
Read from file: df: #rows = 41, #cols: 7

pKeys: ['id_namespace', 'local_id']
*** Entering project to database ***
df: #rows = 41, #cols: 7
df:
                   id_namespace  ...                                        description
0   https://data.4dnucleome.org  ...  Study of the three-dimensional organization of...
1   https://data.4dnucleome.org  ...  CENTER FOR INTEGRATED MULTI-MODAL AND MULTI-SC...
2   https://data.4dnucleome.org  ...  COMBINED CYTOLOGICAL, GENOMIC, AND FUNCTIONAL ...
3   https://data.4dnucleome.org  ...  GENOME ARCHITECTURE IN HUMAN GERMINAL CENTER B...
4   https://data.4dnucleome.org  ...  INVESTIGATING THE EFFECTS OF STRUCTURAL VARIAN...
5   https://data.4dnucleome.org  ...  4DN-DCIC PHASE 2: This file is the result of a...
6   https://data.4dnucleome.org  ...  DISCOVERY OF DIABETES-RELEVANT BETA CELL ENHAN...
7   https://data.4dnucleome.org  ...                                     EXTERNAL AWARD
8   https://data.4dnucleome.org  ...  LIVE-CELL MULTIPLEX SUPER-RESOLUTION IMAGING O...
9   https://data.4dnucleome.org  ...  SINGLE-CELL DISSECTION OF CHROMATIN ARCHITECTU...
10  https://data.4dnucleome.org  ...  UNIVERSITY OF WASHINGTON CENTER FOR NUCLEAR OR...
11  https://data.4dnucleome.org  ...  DYNAMICS OF CHROMOSOME ORGANIZATION AND CHROMA...
12  https://data.4dnucleome.org  ...  SAN DIEGO CENTER FOR 4D NUCLEOME RESEARCH http...
13  https://data.4dnucleome.org  ...  TETHERED NUCLEASE STRATEGIES FOR IN SITU MAPPI...
14  https://data.4dnucleome.org  ...  DECIPHERING NUCLEAR BODIES AND COMPARTMENTS TH...
15  https://data.4dnucleome.org  ...  CHROMATIN FUNCTION DURING TRANSCRIPTION AND DN...
16  https://data.4dnucleome.org  ...  MAPPING THE 3D GENOME LANDSCAPE https://projec...
17  https://data.4dnucleome.org  ...  CENTER FOR 3D STRUCTURE AND PHYSICS OF THE GEN...
18  https://data.4dnucleome.org  ...  PHASE SEPARATION-INDUCED NUCLEAR ORGANIZATION ...
19  https://data.4dnucleome.org  ...  MULTISCALE ANALYSES OF 4D NUCLEOME STRUCTURE A...
20  https://data.4dnucleome.org  ...  ENGINEERING AND IMAGING 3D GENOME STRUCTURE-FU...
21  https://data.4dnucleome.org  ...  NUCLEOME POSITIONING SYSTEM FOR SPATIOTEMPORAL...
22  https://data.4dnucleome.org  ...  THE SECOND PHASE OF NIH COMMON FUND 4D NUCLEOM...
23  https://data.4dnucleome.org  ...  THE ORGANIZATIONAL HUB AND WEB PORTAL FOR THE ...
24  https://data.4dnucleome.org  ...  4DN-DCIC PHASE 1: This file is the result of a...
25  https://data.4dnucleome.org  ...  ELUCIDATING THE ROLE OF NASCENT RNA IN ENHANCE...
26  https://data.4dnucleome.org  ...  IMAGING CHROMOSOME DYNAMICS AND MEASURING ITS ...
27  https://data.4dnucleome.org  ...                      THE CELL NUCLEUS UNDER STRESS
28  https://data.4dnucleome.org  ...  ESTABLISHING THE 3D CHROMATIN ARCHITECTURAL OR...
29  https://data.4dnucleome.org  ...  ENGINEERING AND VISUALIZING GENOME FOLDING AT ...
30  https://data.4dnucleome.org  ...  NUCLEOLAR GENOMICS DURING EARLY MAMMALIAN DEVE...
31  https://data.4dnucleome.org  ...  AN INTEGRATED IMAGING SYSTEM FOR HIGH-THROUGHP...
32  https://data.4dnucleome.org  ...  IMAGING LOCAL AND GLOBAL CHROMATIN STRUCTURE A...
33  https://data.4dnucleome.org  ...  EXPLORING HOW THE GENOME FOLDS THROUGH PROXIMI...
34  https://data.4dnucleome.org  ...  TOOLS FOR IMAGING THE FUNCTIONAL GENOME IN LIV...
35  https://data.4dnucleome.org  ...  DECIPHERING THE FUNCTION AND MECHANISMS OF LNC...
36  https://data.4dnucleome.org  ...  DISTANCE-HI-C: CREATING PHOTO ACTIVATED X-LINK...
37  https://data.4dnucleome.org  ...  A COMPREHENSIVE CATALOG OF DNASE I HYPERSENSIT...
38  https://data.4dnucleome.org  ...  NEW AUTOMATED EXPERIMENTAL AND COMPUTATIONAL P...
39  https://data.4dnucleome.org  ...  THE WASHU 4DN NETWORK DATA COORDINATION AND IN...
40  https://data.4dnucleome.org  ...  THE SAN DIEGO EPIGENOME CENTER https://project...

[41 rows x 7 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.012566566467285156 seconds.

--------- ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/anatomy.tsv ---------
ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/anatomy.tsv
Read from file: df: #rows = 56, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.anatomy;
qt_df: Empty DataFrame
Columns: [pk]
Index: []
---- Executed query, got data.frame: qt_df: #rows = 0, #cols: 1

df_pk (at most first 10 elements): ['CL:0000034', 'CL:0000081', 'CL:0000082', 'CL:0000216', 'CL:0000501', 'CL:0000604', 'CL:0000893', 'CL:0000945', 'CL:0002553', 'CL:0002586']
qt_pk (at most first 10 elements): []
---- Removed rows from df with matching pk
*** Entering anatomy to database ***
df: #rows = 56, #cols: 4
df:
                id  ...                                           synonyms
0       CL:0000034  ...                               ["animal stem cell"]
1       CL:0000081  ...                                                 []
2       CL:0000082  ...                           ["lung epithelial cell"]
3       CL:0000216  ...                                                 []
4       CL:0000501  ...                        ["granulosa cell of ovary"]
5       CL:0000604  ...                                                 []
6       CL:0000893  ...  ["immature T cell","immature T lymphocyte","im...
7       CL:0000945  ...                                                 []
8       CL:0002553  ...                                                 []
9       CL:0002586  ...                                                 []
10      CL:0002620  ...                                                 []
11      CL:2000042  ...                                                 []
12      CL:2000074  ...                                                 []
13  UBERON:0000002  ...  ["canalis cervicis uteri","caudal segment of u...
14  UBERON:0000087  ...                                                 []
15  UBERON:0000383  ...  ["muscle system","muscle system of body","musc...
16  UBERON:0000922  ...                             ["embryonic organism"]
17  UBERON:0000948  ...             ["chambered heart","vertebrate heart"]
18  UBERON:0000955  ...                                                 []
19  UBERON:0000956  ...                  ["cortex of cerebral hemisphere"]
20  UBERON:0000995  ...                                                 []
21  UBERON:0001049  ...                                                 []
22  UBERON:0001155  ...                                    ["large bowel"]
23  UBERON:0001264  ...                                                 []
24  UBERON:0001384  ...                                   ["motor cortex"]
25  UBERON:0001890  ...                                             ["FB"]
26  UBERON:0001891  ...                                             ["MB"]
27  UBERON:0001911  ...          ["glandula mammaria","lactiferous gland"]
28  UBERON:0001997  ...  ["UBERON:0004853","main olfactory epithelium",...
29  UBERON:0002028  ...                                                 []
30  UBERON:0002037  ...         ["epencephalon-1","infratentorial region"]
31  UBERON:0002048  ...                                          ["pulmo"]
32  UBERON:0002079  ...  ["atrium sinistrum","cardiac left atrium","hea...
33  UBERON:0002084  ...  ["cardiac left ventricle","left cardiac ventri...
34  UBERON:0002097  ...                       ["entire skin","skin organ"]
35  UBERON:0002101  ...  ["free limb","limb sensu Vertebrata","pentadac...
36  UBERON:0002106  ...                                                 []
37  UBERON:0002107  ...                                                 []
38  UBERON:0002113  ...                                                 []
39  UBERON:0002240  ...                                                 []
40  UBERON:0002367  ...                       ["male prostate","prostate"]
41  UBERON:0002370  ...                    ["thymus gland","thymus organ"]
42  UBERON:0002481  ...  ["calcium tissue","osseous tissue","osteogenic...
43  UBERON:0002691  ...  ["a10a","ventral tegmental area of tsai","vent...
44  UBERON:0003244  ...  ["epithelium of lactiferous gland","lactiferou...
45  UBERON:0003881  ...  ["CA1","CA1 field","CA1 field of Ammon's horn"...
46  UBERON:0003902  ...  ["neural layer of retina","neural retina","neu...
47  UBERON:0003903  ...                                                 []
48  UBERON:0004347  ...                            ["limb buds","limbbud"]
49  UBERON:0007777  ...                                                 []
50  UBERON:0008930  ...                         ["somatic sensory cortex"]
51  UBERON:0008933  ...  ["primary somatosensory cortex (area S1, areas...
52  UBERON:0012314  ...                                                 []
53  UBERON:0013694  ...                                                 []
54  UBERON:0019249  ...                                                 []
55  UBERON:0019252  ...                                                 []

[56 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.012036561965942383 seconds.

--------- ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/sample_prep_method.tsv ---------
ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/sample_prep_method.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['id']
*** Entering sample_prep_method to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0027878284454345703 seconds.

--------- ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/assay_type.tsv ---------
ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/assay_type.tsv
Read from file: df: #rows = 31, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.assay_type;
qt_df: Empty DataFrame
Columns: [pk]
Index: []
---- Executed query, got data.frame: qt_df: #rows = 0, #cols: 1

df_pk (at most first 10 elements): ['CHMO:0000087', 'OBI:0000185', 'OBI:0000626', 'OBI:0000716', 'OBI:0001177', 'OBI:0001271', 'OBI:0001631', 'OBI:0001848', 'OBI:0001920', 'OBI:0002631']
qt_pk (at most first 10 elements): []
---- Removed rows from df with matching pk
*** Entering assay_type to database ***
df: #rows = 31, #cols: 4
df:
              id  ...                                           synonyms
0   CHMO:0000087  ...  ["fluorescence imaging","fluorescence microsco...
1    OBI:0000185  ...                                                 []
2    OBI:0000626  ...                          ["nucleotide sequencing"]
3    OBI:0000716  ...  ["chromatin immunoprecipitation sequencing ass...
4    OBI:0001177  ...                                                 []
5    OBI:0001271  ...  ["transcription profiling by high throughput s...
6    OBI:0001631  ...                                                 []
7    OBI:0001848  ...                      ["ChIA-PET","ChIA-PET assay"]
8    OBI:0001920  ...                    ["Repli-seq","Repli-seq assay"]
9    OBI:0002631  ...                                      ["scRNA-seq"]
10   OBI:0002984  ...                                          ["cHi-C"]
11   OBI:0003033  ...                                  ["CUT&RUN assay"]
12   OBI:0003034  ...                                  ["CUT&Tag assay"]
13   OBI:0003089  ...                                  ["bulk ATAC-seq"]
14   OBI:0003094  ...                                           ["FISH"]
15   OBI:0003104  ...                                     ["sciATACseq"]
16   OBI:0003105  ...                                      ["sciRNAseq"]
17   OBI:0003297  ...                                        ["TSA-seq"]
18   OBI:0003299  ...                                                 []
19   OBI:0003300  ...                                        ["NAD-seq"]
20   OBI:0003301  ...                                                 []
21   OBI:0003302  ...                                                 []
22   OBI:0003303  ...                                       ["sci-Hi-C"]
23   OBI:0003304  ...                                        ["sn-Hi-C"]
24   OBI:0003305  ...                                                 []
25   OBI:0003306  ...                                                 []
26   OBI:0003311  ...                                     ["DNA SPRITE"]
27   OBI:0003312  ...                                 ["RNA-DNA SPRITE"]
28   OBI:0003313  ...                                            ["GAM"]
29   OBI:0003314  ...                                          ["MARGI"]
30   OBI:0600047  ...                                                 []

[31 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.010219335556030273 seconds.

--------- ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/biosample_disease.tsv ---------
ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/biosample_disease.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['biosample_id_namespace', 'biosample_local_id', 'association_type', 'disease']
*** Entering biosample_disease to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [biosample_id_namespace, biosample_local_id, association_type, disease]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0026831626892089844 seconds.

--------- ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/collection_anatomy.tsv ---------
ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/collection_anatomy.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'anatomy']
*** Entering collection_anatomy to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, anatomy]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002554178237915039 seconds.

--------- ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/gene.tsv ---------
ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/gene.tsv
Read from file: df: #rows = 0, #cols: 5

pKeys: ['id']
*** Entering gene to database ***
df: #rows = 0, #cols: 5
df:
Empty DataFrame
Columns: [id, name, description, synonyms, organism]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0030362606048583984 seconds.

--------- ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/biosample.tsv ---------
ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/biosample.tsv
Read from file: df: #rows = 2961, #cols: 8

pKeys: ['id_namespace', 'local_id']
*** Entering biosample to database ***
df: #rows = 2961, #cols: 8
df:
                     id_namespace  ...         anatomy
0     https://data.4dnucleome.org  ...  UBERON:0001384
1     https://data.4dnucleome.org  ...  UBERON:0001384
2     https://data.4dnucleome.org  ...  UBERON:0001384
3     https://data.4dnucleome.org  ...  UBERON:0001384
4     https://data.4dnucleome.org  ...  UBERON:0001384
...                           ...  ...             ...
2956  https://data.4dnucleome.org  ...      CL:0000945
2957  https://data.4dnucleome.org  ...      CL:0000945
2958  https://data.4dnucleome.org  ...      CL:0000945
2959  https://data.4dnucleome.org  ...      CL:0000945
2960  https://data.4dnucleome.org  ...      CL:0000945

[2961 rows x 8 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.10982012748718262 seconds.

--------- ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/file_describes_subject.tsv ---------
ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/file_describes_subject.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['file_id_namespace', 'file_local_id', 'subject_id_namespace', 'subject_local_id']
*** Entering file_describes_subject to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [file_id_namespace, file_local_id, subject_id_namespace, subject_local_id]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.003708362579345703 seconds.

--------- ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/subject.tsv ---------
ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/subject.tsv
Read from file: df: #rows = 286, #cols: 10

pKeys: ['id_namespace', 'local_id']
*** Entering subject to database ***
df: #rows = 286, #cols: 10
df:
                    id_namespace  ... age_at_enrollment
0    https://data.4dnucleome.org  ...               NaN
1    https://data.4dnucleome.org  ...               NaN
2    https://data.4dnucleome.org  ...               NaN
3    https://data.4dnucleome.org  ...               NaN
4    https://data.4dnucleome.org  ...               NaN
..                           ...  ...               ...
281  https://data.4dnucleome.org  ...               NaN
282  https://data.4dnucleome.org  ...               NaN
283  https://data.4dnucleome.org  ...               NaN
284  https://data.4dnucleome.org  ...               NaN
285  https://data.4dnucleome.org  ...               NaN

[286 rows x 10 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.02066946029663086 seconds.

--------- ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/file_format.tsv ---------
ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/file_format.tsv
Read from file: df: #rows = 15, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.file_format;
qt_df: Empty DataFrame
Columns: [pk]
Index: []
---- Executed query, got data.frame: qt_df: #rows = 0, #cols: 1

df_pk (at most first 10 elements): ['format:1930', 'format:2330', 'format:2331', 'format:2572', 'format:3003', 'format:3004', 'format:3006', 'format:3475', 'format:3583', 'format:3590']
qt_pk (at most first 10 elements): []
---- Removed rows from df with matching pk
*** Entering file_format to database ***
df: #rows = 15, #cols: 4
df:
             id  ...                                  synonyms
0   format:1930  ...                           ["FASTAQ","fq"]
1   format:2330  ...               ["Plain text format","txt"]
2   format:2331  ...             ["Hypertext Markup Language"]
3   format:2572  ...                                        []
4   format:3003  ...                                        []
5   format:3004  ...                                        []
6   format:3006  ...                                        []
7   format:3475  ...  ["Tab-delimited","Tab-separated values"]
8   format:3583  ...                                        []
9   format:3590  ...                                    ["h5"]
10  format:3591  ...                                  ["tiff"]
11  format:3727  ...                                        []
12  format:3752  ...                ["Comma-separated values"]
13  format:3981  ...                         ["Tarball","TAR"]
14  format:3987  ...                                   ["ZIP"]

[15 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.00961160659790039 seconds.

--------- ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/biosample_gene.tsv ---------
ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/biosample_gene.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['biosample_id_namespace', 'biosample_local_id', 'gene']
*** Entering biosample_gene to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [biosample_id_namespace, biosample_local_id, gene]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0025534629821777344 seconds.

--------- ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/subject_substance.tsv ---------
ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/subject_substance.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['subject_id_namespace', 'subject_local_id', 'substance']
*** Entering subject_substance to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [subject_id_namespace, subject_local_id, substance]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0025031566619873047 seconds.

--------- ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/collection.tsv ---------
ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/collection.tsv
Read from file: df: #rows = 7347, #cols: 8

pKeys: ['id_namespace', 'local_id']
*** Entering collection to database ***
Processing C2M2 Files...:   8%|▊         | 1/12 [00:04<00:54,  5.00s/it]df: #rows = 7347, #cols: 8
df:
                     id_namespace  ... has_time_series_data
0     https://data.4dnucleome.org  ...                  NaN
1     https://data.4dnucleome.org  ...                  NaN
2     https://data.4dnucleome.org  ...                  NaN
3     https://data.4dnucleome.org  ...                  NaN
4     https://data.4dnucleome.org  ...                  NaN
...                           ...  ...                  ...
7342  https://data.4dnucleome.org  ...                  NaN
7343  https://data.4dnucleome.org  ...                  NaN
7344  https://data.4dnucleome.org  ...                  NaN
7345  https://data.4dnucleome.org  ...                  NaN
7346  https://data.4dnucleome.org  ...                  NaN

[7347 rows x 8 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.2071082592010498 seconds.

--------- ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/compound.tsv ---------
ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/compound.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['id']
*** Entering compound to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.004046201705932617 seconds.

--------- ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/subject_in_collection.tsv ---------
ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/subject_in_collection.tsv
Read from file: df: #rows = 2207, #cols: 4

pKeys: ['subject_id_namespace', 'subject_local_id', 'collection_id_namespace', 'collection_local_id']
*** Entering subject_in_collection to database ***
df: #rows = 2207, #cols: 4
df:
             subject_id_namespace  ...                   collection_local_id
0     https://data.4dnucleome.org  ...  eeec002c-fbeb-4d00-98be-44988bc722ab
1     https://data.4dnucleome.org  ...  c4af61db-b761-4b66-b94b-9b8b4ab5acb1
2     https://data.4dnucleome.org  ...  1a98a8cd-744e-4b72-88b0-16644d5ad85b
3     https://data.4dnucleome.org  ...  5911b4ec-4f40-4ce6-846e-be59c93cdc36
4     https://data.4dnucleome.org  ...  6d723940-f9f9-43a2-a579-a31431f6ad6f
...                           ...  ...                                   ...
2202  https://data.4dnucleome.org  ...  17b4aa3e-5c9c-457e-8413-1a6441f89324
2203  https://data.4dnucleome.org  ...  5dbcedc0-0a69-4eb3-8c71-3471212bc5de
2204  https://data.4dnucleome.org  ...  2a756f80-89c5-4979-bb70-75a4b69634ce
2205  https://data.4dnucleome.org  ...  aa6f0d82-16c9-4109-a1f8-3fa0636a3560
2206  https://data.4dnucleome.org  ...  ee8e40d0-d170-4597-a485-1b9e67af815e

[2207 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.04349517822265625 seconds.

--------- ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/project_in_project.tsv ---------
ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/project_in_project.tsv
Read from file: df: #rows = 40, #cols: 4

pKeys: ['parent_project_id_namespace', 'parent_project_local_id', 'child_project_id_namespace', 'child_project_local_id']
*** Entering project_in_project to database ***
df: #rows = 40, #cols: 4
df:
    parent_project_id_namespace  ...                child_project_local_id
0   https://data.4dnucleome.org  ...  ee89349a-1d43-4048-9142-bc750f0f3b32
1   https://data.4dnucleome.org  ...  91b694c3-f4d7-4ddd-8278-16f94e15c1c5
2   https://data.4dnucleome.org  ...  f959fce7-bd94-4a8d-961d-8c72a4eaa1ad
3   https://data.4dnucleome.org  ...  0247d660-dc33-4a2e-84a7-eb1ac2cbbaca
4   https://data.4dnucleome.org  ...  71171a4e-dca1-44cb-8375-fafd896c6923
5   https://data.4dnucleome.org  ...  8432a44c-4da7-446b-9080-f4fae299ebd6
6   https://data.4dnucleome.org  ...  12a92962-8265-4fc0-b2f8-cf14f05db58b
7   https://data.4dnucleome.org  ...  b7c5d0c8-053e-4da3-b446-b68787a5a738
8   https://data.4dnucleome.org  ...  8c9d595e-2809-4779-ae6e-305341f695ff
9   https://data.4dnucleome.org  ...  fcc7f634-9252-499f-b79c-380795af2ddd
10  https://data.4dnucleome.org  ...  795c8991-3773-440d-bb4c-4cf69105adfb
11  https://data.4dnucleome.org  ...  4871e338-b07d-4665-a00a-357648e5bad6
12  https://data.4dnucleome.org  ...  4ddcac2d-72b6-40a7-ac68-67efba21a0d0
13  https://data.4dnucleome.org  ...  c7883cb7-0f06-4833-ba75-654d81e1415f
14  https://data.4dnucleome.org  ...  b9ff5f2d-68aa-4a4b-9c3d-54707e1798ec
15  https://data.4dnucleome.org  ...  eda54849-45e6-4f96-82de-fea642bc194b
16  https://data.4dnucleome.org  ...  ae6c618f-7a8c-441e-a886-e30bbbe591da
17  https://data.4dnucleome.org  ...  a49f939d-b24c-44e0-9fd5-0d72898beed6
18  https://data.4dnucleome.org  ...  9f6d9e4a-9542-49c7-8a54-c6c9a1862d90
19  https://data.4dnucleome.org  ...  b3046311-087c-4141-8e98-a099b96ac6cd
20  https://data.4dnucleome.org  ...  029a2578-43dc-4343-8f41-694518cce304
21  https://data.4dnucleome.org  ...  1a4da807-8221-47d2-96ab-7a31485974c3
22  https://data.4dnucleome.org  ...  c55dd1f0-433b-4714-bfce-8b3ae09f071c
23  https://data.4dnucleome.org  ...  b0b9c607-f8b4-4f02-93f4-9895b461334b
24  https://data.4dnucleome.org  ...  619535d9-ec49-4f36-9cad-a0887cf535cb
25  https://data.4dnucleome.org  ...  4a3ea2f9-864b-429d-9948-54dbe0d7958d
26  https://data.4dnucleome.org  ...  e9b7d287-40b3-44b6-9a10-be28cf2347f0
27  https://data.4dnucleome.org  ...  a7668120-3722-4ce9-95ac-8dc05b67fe36
28  https://data.4dnucleome.org  ...  cf0c686c-a3ad-411d-9986-ad42927352c0
29  https://data.4dnucleome.org  ...  54a81332-c7e2-4a3f-aff7-1f9f1d38dcd0
30  https://data.4dnucleome.org  ...  83702425-25f4-413b-9826-7257e2732506
31  https://data.4dnucleome.org  ...  2e902b3b-82d5-4da3-8cc8-3285c7d3e092
32  https://data.4dnucleome.org  ...  36a06537-7831-494d-b10d-3e9fea931021
33  https://data.4dnucleome.org  ...  e7adc531-c594-4f3e-a432-252dd5b5748d
34  https://data.4dnucleome.org  ...  4de1cf81-1ea0-4a19-bc7a-dd3343b34438
35  https://data.4dnucleome.org  ...  d52d2d3e-a491-436f-9150-ee670b1fe3a4
36  https://data.4dnucleome.org  ...  43fc2984-a074-49c4-a69f-c9d3f3eadeba
37  https://data.4dnucleome.org  ...  3caf886c-2735-4688-8c10-52d1910efbed
38  https://data.4dnucleome.org  ...  a725c2ce-5be2-4933-bf56-f0b7b3f1c584
39  https://data.4dnucleome.org  ...  1dbecc95-ec91-4081-a862-c79d18a8d0bd

[40 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.008411884307861328 seconds.

--------- ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/collection_taxonomy.tsv ---------
ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/collection_taxonomy.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'taxon']
*** Entering collection_taxonomy to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, taxon]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002544403076171875 seconds.

--------- ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/substance.tsv ---------
ingest/c2m2s/4DN/datapackage/231128_c2m2_4dn_submission/data/substance.tsv
Read from file: df: #rows = 0, #cols: 5

pKeys: ['id']
*** Entering substance to database ***
df: #rows = 0, #cols: 5
df:
Empty DataFrame
Columns: [id, name, description, synonyms, compound]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002828836441040039 seconds.


================================== DCC short label: ERCC =============================================
Unpack zip file: c2m2_extract_path: ingest/c2m2s/ERCC/datapackage
--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/dcc.tsv ---------
ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/dcc.tsv
Read from file: df: #rows = 1, #cols: 9

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.dcc;
qt_df:                       pk
0  cfde_registry_dcc:4dn
---- Executed query, got data.frame: qt_df: #rows = 1, #cols: 1

df_pk (at most first 10 elements): ['cfde_registry_dcc:exrna']
qt_pk (at most first 10 elements): ['cfde_registry_dcc:4dn']
---- Removed rows from df with matching pk
*** Entering dcc to database ***
df: #rows = 1, #cols: 9
df:
                        id  ... project_local_id
0  cfde_registry_dcc:exrna  ...      exRNA_Atlas

[1 rows x 9 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.014487743377685547 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/id_namespace.tsv ---------
ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/id_namespace.tsv
Read from file: df: #rows = 1, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.id_namespace;
qt_df:                             pk
0  https://data.4dnucleome.org
---- Executed query, got data.frame: qt_df: #rows = 1, #cols: 1

df_pk (at most first 10 elements): ['ERCC-exRNA']
qt_pk (at most first 10 elements): ['https://data.4dnucleome.org']
---- Removed rows from df with matching pk
*** Entering id_namespace to database ***
df: #rows = 1, #cols: 4
df:
           id  ...                                        description
0  ERCC-exRNA  ...  The exRNA Atlas is the data repository of the ...

[1 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.010039091110229492 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/disease.tsv ---------
ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/disease.tsv
Read from file: df: #rows = 23, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.disease;
qt_df: Empty DataFrame
Columns: [pk]
Index: []
---- Executed query, got data.frame: qt_df: #rows = 0, #cols: 1

df_pk (at most first 10 elements): ['DOID:0080832', 'DOID:10286', 'DOID:10534', 'DOID:10652', 'DOID:10941', 'DOID:1184', 'DOID:12217', 'DOID:1287', 'DOID:14330', 'DOID:1520']
qt_pk (at most first 10 elements): []
---- Removed rows from df with matching pk
*** Entering disease to database ***
df: #rows = 23, #cols: 4
df:
              id  ...                                           synonyms
0   DOID:0080832  ...                                                 []
1     DOID:10286  ...     ["cancer of prostate","carcinoma of prostate"]
2     DOID:10534  ...  ["DOID:10539","DOID:10542","DOID:10543","DOID:...
3     DOID:10652  ...        ["Alzheimer disease","Alzheimers dementia"]
4     DOID:10941  ...                                 ["brain aneurysm"]
5      DOID:1184  ...                                                 []
6     DOID:12217  ...  ["Dementia with Lewy bodies","Diffuse Lewy bod...
7      DOID:1287  ...  ["DOID:73","disease of subdivision of hemolymp...
8     DOID:14330  ...          ["paralysis agitans","Parkinson disease"]
9      DOID:1520  ...         ["carcinoma of colon","Colonic carcinoma"]
10      DOID:219  ...                                                 []
11     DOID:2377  ...  ["Generalized multiple sclerosis","insular scl...
12     DOID:2841  ...  ["DOID:12703","DOID:13829","DOID:13830","DOID:...
13     DOID:3073  ...  ["brain Glioblastoma","Glioblastoma multiforme...
14      DOID:409  ...  ["DOID:2164","DOID:2165","DOID:46","disorder o...
15     DOID:4905  ...  ["carcinoma of pancreas","Exocrine pancreas ca...
16     DOID:5844  ...              ["heart attack","Myocardial infarct"]
17     DOID:6000  ...  ["DOID:395","Cardiac Failure Congestive","CHF"...
18     DOID:6713  ...  ["DOID:12214","DOID:3455","DOID:8231","cerebro...
19     DOID:8577  ...  ["DOID:8576","DOID:9016","Left-sided ulcerativ...
20     DOID:9074  ...  ["disseminated lupus erythematosus","Lupus Ery...
21     DOID:9256  ...                                                 []
22     DOID:9744  ...  ["IDDM","insulin-dependent diabetes mellitus",...

[23 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.009976387023925781 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/data_type.tsv ---------
ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/data_type.tsv
Read from file: df: #rows = 3, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.data_type;
qt_df:           pk
0  data:1383
1  data:2082
2  data:3002
3  data:2887
4  data:2968
---- Executed query, got data.frame: qt_df: #rows = 5, #cols: 1

df_pk (at most first 10 elements): ['data:2048', 'data:2082', 'data:3495']
qt_pk (at most first 10 elements): ['data:1383', 'data:2082', 'data:3002', 'data:2887', 'data:2968']
---- Removed rows from df with matching pk
*** Entering data_type to database ***
df: #rows = 2, #cols: 4
df:
          id  ...               synonyms
0  data:2048  ...  ["Document","Record"]
2  data:3495  ...      ["RNA sequences"]

[2 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.009344339370727539 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection_disease.tsv ---------
ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection_disease.tsv
Read from file: df: #rows = 40, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'disease']
*** Entering collection_disease to database ***
df: #rows = 40, #cols: 3
df:
   collection_id_namespace  collection_local_id       disease
0               ERCC-exRNA  EXR-MANSE1oCqMmF-AN     DOID:2841
1               ERCC-exRNA  EXR-KVICK1oIp40e-AN     DOID:9074
2               ERCC-exRNA  EXR-DGALA1TA1HoZ-AN     DOID:9744
3               ERCC-exRNA  EXR-JFREE1eZDUKB-AN     DOID:1287
4               ERCC-exRNA  EXR-DGALA1ykypVf-AN     DOID:9744
5               ERCC-exRNA  EXR-TPATE10baswA-AN      DOID:409
6               ERCC-exRNA  EXR-KJENS10lPClY-AN     DOID:6713
7               ERCC-exRNA  EXR-KJENS1sPlvS2-AN    DOID:10652
8               ERCC-exRNA  EXR-KJENS1sPlvS2-AN    DOID:14330
9               ERCC-exRNA  EXR-DGALA1P4v4GC-AN     DOID:9744
10              ERCC-exRNA  EXR-JFRAN1cDpMBU-AN     DOID:9256
11              ERCC-exRNA  EXR-JFRAN16VDql8-AN     DOID:9256
12              ERCC-exRNA  EXR-MBITZ12SHVIr-AN     DOID:1184
13              ERCC-exRNA  EXR-TPATE1OqELFf-AN     DOID:4905
14              ERCC-exRNA  EXR-TPATE1OqELFf-AN     DOID:1520
15              ERCC-exRNA  EXR-TPATE1OqELFf-AN    DOID:10286
16              ERCC-exRNA  EXR-SADAS1UJ0CzW-AN     DOID:5844
17              ERCC-exRNA  EXR-DGALA19d0VyY-AN     DOID:9744
18              ERCC-exRNA  EXR-AKRIC157ITEl-AN     DOID:3073
19              ERCC-exRNA  EXR-DGALA1zS6cGa-AN     DOID:9744
20              ERCC-exRNA  EXR-AWEAV1lyeWbT-AN      DOID:219
21              ERCC-exRNA  EXR-KJENS12WGutU-AN     DOID:6713
22              ERCC-exRNA  EXR-DGALA1V5h5va-AN     DOID:8577
23              ERCC-exRNA  EXR-DGALA1V5h5va-AN     DOID:9256
24              ERCC-exRNA  EXR-KJENS1WBaSro-AN    DOID:10941
25              ERCC-exRNA  EXR-DGALA1cdjOXX-AN     DOID:9744
26              ERCC-exRNA  EXR-KJENS1yrpQwk-AN    DOID:12217
27              ERCC-exRNA  EXR-KJENS1yrpQwk-AN    DOID:14330
28              ERCC-exRNA  EXR-KJENS1yrpQwk-AN    DOID:10652
29              ERCC-exRNA  EXR-KJENS1yrpQwk-AN  DOID:0080832
30              ERCC-exRNA  EXR-DGALA1N1n2AB-AN     DOID:9744
31              ERCC-exRNA  EXR-DGALA1EdwWo1-AN     DOID:9744
32              ERCC-exRNA  EXR-SADAS17lDVDx-AN     DOID:6000
33              ERCC-exRNA  EXR-SADAS17lDVDx-AN     DOID:5844
34              ERCC-exRNA  EXR-DWONG1qf3tcS-AN    DOID:10534
35              ERCC-exRNA  EXR-TPATE1NUsA7E-AN      DOID:409
36              ERCC-exRNA  EXR-DGALA1SJdHJu-AN     DOID:9744
37              ERCC-exRNA  EXR-JSAUG1UH2001-AN    DOID:10652
38              ERCC-exRNA  EXR-JSAUG1UH3001-AN    DOID:10652
39              ERCC-exRNA  EXR-RGAND1UH2001-AN     DOID:2377
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.00654149055480957 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/file_in_collection.tsv ---------
ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/file_in_collection.tsv
Read from file: df: #rows = 178133, #cols: 4

pKeys: ['file_id_namespace', 'file_local_id', 'collection_id_namespace', 'collection_local_id']
*** Entering file_in_collection to database ***
df: #rows = 178133, #cols: 4
df:
       file_id_namespace  ...  collection_local_id
0             ERCC-exRNA  ...  EXR-DERLE1Dj6liR-AN
1             ERCC-exRNA  ...  EXR-DERLE1Dj6liR-AN
2             ERCC-exRNA  ...  EXR-DERLE1Dj6liR-AN
3             ERCC-exRNA  ...  EXR-DERLE1Dj6liR-AN
4             ERCC-exRNA  ...  EXR-DERLE1Dj6liR-AN
...                  ...  ...                  ...
178128        ERCC-exRNA  ...  EXR-RGAND1UH2001-AN
178129        ERCC-exRNA  ...  EXR-RGAND1UH2001-AN
178130        ERCC-exRNA  ...  EXR-RGAND1UH2001-AN
178131        ERCC-exRNA  ...  EXR-RGAND1UH2001-AN
178132        ERCC-exRNA  ...  EXR-RGAND1UH2001-AN

[178133 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 3.5227208137512207 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/subject_role_taxonomy.tsv ---------
ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/subject_role_taxonomy.tsv
Read from file: df: #rows = 7209, #cols: 4

pKeys: ['subject_id_namespace', 'subject_local_id', 'role_id', 'taxonomy_id']
*** Entering subject_role_taxonomy to database ***
df: #rows = 7209, #cols: 4
df:
     subject_id_namespace  ...    taxonomy_id
0              ERCC-exRNA  ...  NCBI:txid9606
1              ERCC-exRNA  ...  NCBI:txid9606
2              ERCC-exRNA  ...  NCBI:txid9606
3              ERCC-exRNA  ...  NCBI:txid9606
4              ERCC-exRNA  ...  NCBI:txid9606
...                   ...  ...            ...
7204           ERCC-exRNA  ...  NCBI:txid9606
7205           ERCC-exRNA  ...  NCBI:txid9606
7206           ERCC-exRNA  ...  NCBI:txid9606
7207           ERCC-exRNA  ...  NCBI:txid9606
7208           ERCC-exRNA  ...  NCBI:txid9606

[7209 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.11659932136535645 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/biosample_in_collection.tsv ---------
ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/biosample_in_collection.tsv
Read from file: df: #rows = 10362, #cols: 4

pKeys: ['biosample_id_namespace', 'biosample_local_id', 'collection_id_namespace', 'collection_local_id']
*** Entering biosample_in_collection to database ***
df: #rows = 10362, #cols: 4
df:
      biosample_id_namespace  ...  collection_local_id
0                 ERCC-exRNA  ...  EXR-DERLE1Dj6liR-AN
1                 ERCC-exRNA  ...  EXR-DERLE1Dj6liR-AN
2                 ERCC-exRNA  ...  EXR-DERLE1Dj6liR-AN
3                 ERCC-exRNA  ...  EXR-IGHIR1V7Sc5u-AN
4                 ERCC-exRNA  ...  EXR-IGHIR1V7Sc5u-AN
...                      ...  ...                  ...
10357             ERCC-exRNA  ...  EXR-RGAND1UH2001-AN
10358             ERCC-exRNA  ...  EXR-RGAND1UH2001-AN
10359             ERCC-exRNA  ...  EXR-RGAND1UH2001-AN
10360             ERCC-exRNA  ...  EXR-RGAND1UH2001-AN
10361             ERCC-exRNA  ...  EXR-RGAND1UH2001-AN

[10362 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.1586289405822754 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/subject_phenotype.tsv ---------
ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/subject_phenotype.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['subject_id_namespace', 'subject_local_id', 'association_type', 'phenotype']
*** Entering subject_phenotype to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [subject_id_namespace, subject_local_id, association_type, phenotype]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0033805370330810547 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/phenotype_disease.tsv ---------
ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/phenotype_disease.tsv
Read from file: df: #rows = 0, #cols: 2

pKeys: ['phenotype', 'disease']
*** Entering phenotype_disease to database ***
df: #rows = 0, #cols: 2
df:
Empty DataFrame
Columns: [phenotype, disease]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0023565292358398438 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection_compound.tsv ---------
ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection_compound.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'compound']
*** Entering collection_compound to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, compound]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0024437904357910156 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/protein_gene.tsv ---------
ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/protein_gene.tsv
Read from file: df: #rows = 0, #cols: 2

pKeys: ['protein', 'gene']
*** Entering protein_gene to database ***
df: #rows = 0, #cols: 2
df:
Empty DataFrame
Columns: [protein, gene]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0022737979888916016 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/phenotype_gene.tsv ---------
ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/phenotype_gene.tsv
Read from file: df: #rows = 0, #cols: 2

pKeys: ['phenotype', 'gene']
*** Entering phenotype_gene to database ***
df: #rows = 0, #cols: 2
df:
Empty DataFrame
Columns: [phenotype, gene]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0023102760314941406 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/phenotype.tsv ---------
ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/phenotype.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['id']
*** Entering phenotype to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002582073211669922 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/subject_disease.tsv ---------
ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/subject_disease.tsv
Read from file: df: #rows = 1576, #cols: 4

pKeys: ['subject_id_namespace', 'subject_local_id', 'association_type', 'disease']
*** Entering subject_disease to database ***
df: #rows = 1576, #cols: 4
df:
     subject_id_namespace  ...    disease
0              ERCC-exRNA  ...  DOID:2841
1              ERCC-exRNA  ...  DOID:2841
2              ERCC-exRNA  ...  DOID:2841
3              ERCC-exRNA  ...  DOID:2841
4              ERCC-exRNA  ...  DOID:2841
...                   ...  ...        ...
1571           ERCC-exRNA  ...  DOID:2377
1572           ERCC-exRNA  ...  DOID:2377
1573           ERCC-exRNA  ...  DOID:2377
1574           ERCC-exRNA  ...  DOID:2377
1575           ERCC-exRNA  ...  DOID:2377

[1576 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.031013011932373047 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection_phenotype.tsv ---------
ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection_phenotype.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'phenotype']
*** Entering collection_phenotype to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, phenotype]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0030832290649414062 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/protein.tsv ---------
ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/protein.tsv
Read from file: df: #rows = 0, #cols: 5

pKeys: ['id']
*** Entering protein to database ***
df: #rows = 0, #cols: 5
df:
Empty DataFrame
Columns: [id, name, description, synonyms, organism]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0028467178344726562 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/ncbi_taxonomy.tsv ---------
ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/ncbi_taxonomy.tsv
Read from file: df: #rows = 2, #cols: 5

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.ncbi_taxonomy;
qt_df:                pk
0  NCBI:txid60711
1  NCBI:txid10090
2  NCBI:txid10036
3   NCBI:txid7955
4   NCBI:txid9031
5   NCBI:txid7227
6   NCBI:txid9606
---- Executed query, got data.frame: qt_df: #rows = 7, #cols: 1

df_pk (at most first 10 elements): ['NCBI:txid10090', 'NCBI:txid9606']
qt_pk (at most first 10 elements): ['NCBI:txid60711', 'NCBI:txid10090', 'NCBI:txid10036', 'NCBI:txid7955', 'NCBI:txid9031', 'NCBI:txid7227', 'NCBI:txid9606']
---- Removed rows from df with matching pk
*** Entering ncbi_taxonomy to database ***
df: #rows = 0, #cols: 5
df:
Empty DataFrame
Columns: [id, clade, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.005930662155151367 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection_protein.tsv ---------
ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection_protein.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'protein']
*** Entering collection_protein to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, protein]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002438068389892578 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/analysis_type.tsv ---------
ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/analysis_type.tsv
Read from file: df: #rows = 1, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.analysis_type;
qt_df: Empty DataFrame
Columns: [pk]
Index: []
---- Executed query, got data.frame: qt_df: #rows = 0, #cols: 1

df_pk (at most first 10 elements): ['OBI:0001872']
qt_pk (at most first 10 elements): []
---- Removed rows from df with matching pk
*** Entering analysis_type to database ***
df: #rows = 1, #cols: 4
df:
            id  ... synonyms
0  OBI:0001872  ...       []

[1 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.00863504409790039 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/file_describes_biosample.tsv ---------
ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/file_describes_biosample.tsv
Read from file: df: #rows = 178133, #cols: 4

pKeys: ['file_id_namespace', 'file_local_id', 'biosample_id_namespace', 'biosample_local_id']
*** Entering file_describes_biosample to database ***
df: #rows = 178133, #cols: 4
df:
       file_id_namespace  ...           biosample_local_id
0             ERCC-exRNA  ...  EXR-DERLE1LLAURPLATCOMP1-BS
1             ERCC-exRNA  ...  EXR-DERLE1LLAURPLATCOMP3-BS
2             ERCC-exRNA  ...  EXR-DERLE1LLAURPLATCOMP2-BS
3             ERCC-exRNA  ...  EXR-DERLE1LLAURPLATCOMP3-BS
4             ERCC-exRNA  ...  EXR-DERLE1LLAURPLATCOMP3-BS
...                  ...  ...                          ...
178128        ERCC-exRNA  ...          EXR-RGAND1UH2189-BS
178129        ERCC-exRNA  ...          EXR-RGAND1UH2190-BS
178130        ERCC-exRNA  ...          EXR-RGAND1UH2191-BS
178131        ERCC-exRNA  ...          EXR-RGAND1UH2192-BS
178132        ERCC-exRNA  ...          EXR-RGAND1UH2193-BS

[178133 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 3.8057947158813477 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/file.tsv ---------
ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/file.tsv
Read from file: df: #rows = 178133, #cols: 20

pKeys: ['id_namespace', 'local_id']
*** Entering file to database ***
df: #rows = 178133, #cols: 20
df:
       id_namespace  ... dbgap_study_id
0        ERCC-exRNA  ...            NaN
1        ERCC-exRNA  ...            NaN
2        ERCC-exRNA  ...            NaN
3        ERCC-exRNA  ...            NaN
4        ERCC-exRNA  ...            NaN
...             ...  ...            ...
178128   ERCC-exRNA  ...            NaN
178129   ERCC-exRNA  ...            NaN
178130   ERCC-exRNA  ...            NaN
178131   ERCC-exRNA  ...            NaN
178132   ERCC-exRNA  ...            NaN

[178133 rows x 20 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 9.834436893463135 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection_gene.tsv ---------
ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection_gene.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'gene']
*** Entering collection_gene to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, gene]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.013334274291992188 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/biosample_from_subject.tsv ---------
ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/biosample_from_subject.tsv
Read from file: df: #rows = 10362, #cols: 5

pKeys: ['biosample_id_namespace', 'biosample_local_id', 'subject_id_namespace', 'subject_local_id']
*** Entering biosample_from_subject to database ***
df: #rows = 10362, #cols: 5
df:
      biosample_id_namespace  ... age_at_sampling
0                 ERCC-exRNA  ...             0.0
1                 ERCC-exRNA  ...            36.0
2                 ERCC-exRNA  ...            36.0
3                 ERCC-exRNA  ...            22.0
4                 ERCC-exRNA  ...            45.0
...                      ...  ...             ...
10357             ERCC-exRNA  ...            50.0
10358             ERCC-exRNA  ...            40.0
10359             ERCC-exRNA  ...            30.0
10360             ERCC-exRNA  ...            30.0
10361             ERCC-exRNA  ...            40.0

[10362 rows x 5 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.19215893745422363 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/file_describes_collection.tsv ---------
ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/file_describes_collection.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['file_id_namespace', 'file_local_id', 'collection_id_namespace', 'collection_local_id']
*** Entering file_describes_collection to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [file_id_namespace, file_local_id, collection_id_namespace, collection_local_id]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0036296844482421875 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/subject_race.tsv ---------
ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/subject_race.tsv
Read from file: df: #rows = 1257, #cols: 3

pKeys: ['subject_id_namespace', 'subject_local_id', 'race']
*** Entering subject_race to database ***
df: #rows = 1257, #cols: 3
df:
     subject_id_namespace       subject_local_id                 race
0              ERCC-exRNA  EXR-IGHIR1DONOR4EE-DO  cfde_subject_race:3
1              ERCC-exRNA  EXR-IGHIR1DONOR3IG-DO  cfde_subject_race:3
2              ERCC-exRNA  EXR-IGHIR1DONOR6CO-DO  cfde_subject_race:3
3              ERCC-exRNA  EXR-IGHIR1DONOR5EC-DO  cfde_subject_race:5
4              ERCC-exRNA  EXR-IGHIR1DONOR2SL-DO  cfde_subject_race:5
...                   ...                    ...                  ...
1252           ERCC-exRNA     EXR-IGHIR1D35VS-DO  cfde_subject_race:3
1253           ERCC-exRNA     EXR-IGHIR1D4EED-DO  cfde_subject_race:3
1254           ERCC-exRNA     EXR-IGHIR1D16XS-DO  cfde_subject_race:5
1255           ERCC-exRNA     EXR-IGHIR1D28SU-DO  cfde_subject_race:5
1256           ERCC-exRNA    EXR-IGHIR1D34MMS-DO  cfde_subject_race:3

[1257 rows x 3 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.022355318069458008 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection_in_collection.tsv ---------
ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection_in_collection.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['superset_collection_id_namespace', 'superset_collection_local_id', 'subset_collection_id_namespace', 'subset_collection_local_id']
*** Entering collection_in_collection to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [superset_collection_id_namespace, superset_collection_local_id, subset_collection_id_namespace, subset_collection_local_id]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0025930404663085938 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection_defined_by_project.tsv ---------
ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection_defined_by_project.tsv
Read from file: df: #rows = 77, #cols: 4

pKeys: ['collection_id_namespace', 'collection_local_id', 'project_id_namespace', 'project_local_id']
*** Entering collection_defined_by_project to database ***
df: #rows = 77, #cols: 4
df:
   collection_id_namespace  ...               project_local_id
0               ERCC-exRNA  ...     EXR-DERLE1LLAURPLATCOMP-ST
1               ERCC-exRNA  ...   EXR-IGHIR1Anticoagulants1-ST
2               ERCC-exRNA  ...          EXR-DGALA120170825-ST
3               ERCC-exRNA  ...  EXR-IGHIR1CircadianRhythm2-ST
4               ERCC-exRNA  ...           EXR-TTUSC1U19xZW1-ST
..                     ...  ...                            ...
72              ERCC-exRNA  ...  EXR-IGHIR1HbContamination3-ST
73              ERCC-exRNA  ...        EXR-JFREE1UH2PLASMA1-ST
74              ERCC-exRNA  ...            EXR-JSAUG1UH2001-ST
75              ERCC-exRNA  ...            EXR-JSAUG1UH3001-ST
76              ERCC-exRNA  ...            EXR-RGAND1UH2001-ST

[77 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.00966954231262207 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection_substance.tsv ---------
ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection_substance.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'substance']
*** Entering collection_substance to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, substance]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0024166107177734375 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/biosample_substance.tsv ---------
ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/biosample_substance.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['biosample_id_namespace', 'biosample_local_id', 'substance']
*** Entering biosample_substance to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [biosample_id_namespace, biosample_local_id, substance]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0023338794708251953 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/project.tsv ---------
ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/project.tsv
Read from file: df: #rows = 60, #cols: 7

pKeys: ['id_namespace', 'local_id']
*** Entering project to database ***
df: #rows = 60, #cols: 7
df:
   id_namespace  ...                                        description
0    ERCC-exRNA  ...  The exRNA Atlas is the data repository of the ...
1    ERCC-exRNA  ...  Given the increasing interest in their use as ...
2    ERCC-exRNA  ...  Impact of different anticoagulants in obtainin...
3    ERCC-exRNA  ...  Endogenous and exogenous extracellular RNAs wi...
4    ERCC-exRNA  ...  Impact of circadian rhythm in obtaining refere...
5    ERCC-exRNA  ...  exRNA reference profiling at 12 intervals over...
6    ERCC-exRNA  ...  To ascertain kit and input-related sequencing ...
7    ERCC-exRNA  ...  The effect of increasing concentrations of hae...
8    ERCC-exRNA  ...  To test the composition and sources of miRNAs ...
9    ERCC-exRNA  ...  High-Density Lipoproteins - small RNA Signatur...
10   ERCC-exRNA  ...  Determine miRNA expression patterns in plasma ...
11   ERCC-exRNA  ...  This study is RNA-seq study for MESA plasma sa...
12   ERCC-exRNA  ...  We seek to discover small RNA biomarkers of au...
13   ERCC-exRNA  ...  Determine miRNA expression patterns in plasma ...
14   ERCC-exRNA  ...  One goal of Phase 1 of our project is to produ...
15   ERCC-exRNA  ...  To profile extracellular vesicles and cargo fr...
16   ERCC-exRNA  ...  Extracellular RNA from the plasma of 40 indivi...
17   ERCC-exRNA  ...  Identify and analyze extracellular RNA found i...
18   ERCC-exRNA  ...  Background and Purpose: Rapid identification o...
19   ERCC-exRNA  ...  To identify urinary RNA from biopsy associated...
20   ERCC-exRNA  ...  Endogenous and exogenous extracellular RNAs wi...
21   ERCC-exRNA  ...  We profiled the miRNA contents from cerebrospi...
22   ERCC-exRNA  ...  To profile extracellular vesicles and cargo fr...
23   ERCC-exRNA  ...  There are currently few datasets describing ba...
24   ERCC-exRNA  ...  Endogenous and exogenous extracellular RNAs wi...
25   ERCC-exRNA  ...  The heterogeneity of small extracellular vesic...
26   ERCC-exRNA  ...  The potential for extracellular RNA as a poten...
27   ERCC-exRNA  ...  We have shown that exosomes released from muta...
28   ERCC-exRNA  ...  To identify urinary RNA as non-invasive biomar...
29   ERCC-exRNA  ...  Extracellular vesicles are selectively enriche...
30   ERCC-exRNA  ...  To identify urinary RNA from prospective urine...
31   ERCC-exRNA  ...  To identify novel small RNA biomarkers for ele...
32   ERCC-exRNA  ...  Impact of circadian rhythm in obtaining refere...
33   ERCC-exRNA  ...  To profile extracellular vesicles and cargo fr...
34   ERCC-exRNA  ...  Impact of different anticoagulants in obtainin...
35   ERCC-exRNA  ...  To profile extracellular vesicles and cargo fr...
36   ERCC-exRNA  ...  The role of non-coding RNAs in different biolo...
37   ERCC-exRNA  ...   exRNAs profiles by gender in healthy individuals
38   ERCC-exRNA  ...  This study examines extracellular RNA levels f...
39   ERCC-exRNA  ...  Extracellular vesicles (EVs) carrying small RN...
40   ERCC-exRNA  ...  The effect of increasing concentrations of hae...
41   ERCC-exRNA  ...  Macrophage-derived exosomes contribute to the ...
42   ERCC-exRNA  ...  Intraventricular hemorrhage (IVH) is a signifi...
43   ERCC-exRNA  ...  One goal of Phase 1 of our project is to produ...
44   ERCC-exRNA  ...  Export of novel exRNAs into extracellular vesi...
45   ERCC-exRNA  ...  To characterize the EVs produced by blood base...
46   ERCC-exRNA  ...  To identify miRNA biomarker reversals that can...
47   ERCC-exRNA  ...  Human plasma has long been a rich source for b...
48   ERCC-exRNA  ...  Brain injury resulting from hemorrhagic stroke...
49   ERCC-exRNA  ...  To identify miRNAs that can predict the gestat...
50   ERCC-exRNA  ...  Endogenous and exogenous extracellular RNAs wi...
51   ERCC-exRNA  ...  While PD is typically thought of as a motor di...
52   ERCC-exRNA  ...  To identify differentially expressed small RNA...
53   ERCC-exRNA  ...  To identify novel small RNA biomarkers unique ...
54   ERCC-exRNA  ...  Exercise improves cardiometabolic and vascular...
55   ERCC-exRNA  ...  Compare small RNA expression in bile from norm...
56   ERCC-exRNA  ...  Impact of hemolysis on profiles of exRNAs in h...
57   ERCC-exRNA  ...  Identify candidate miRNA biomarkers for AD in CSF
58   ERCC-exRNA  ...  We used an independent cohort of patient CSF s...
59   ERCC-exRNA  ...  Patient (Multiple Sclerosis, MS) and Healthy C...

[60 rows x 7 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.01207113265991211 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/anatomy.tsv ---------
ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/anatomy.tsv
Read from file: df: #rows = 26, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.anatomy;
qt_df:                 pk
0   UBERON:0002037
1       CL:0002586
2       CL:0000082
3   UBERON:0007777
4   UBERON:0002079
5   UBERON:0002240
6   UBERON:0001384
7       CL:2000042
8       CL:0000081
9   UBERON:0000956
10  UBERON:0002481
11  UBERON:0000948
12      CL:0002620
13      CL:0000034
14  UBERON:0001049
15      CL:0000604
16  UBERON:0008930
17  UBERON:0002113
18  UBERON:0002048
19  UBERON:0000383
20  UBERON:0003244
21  UBERON:0001911
22  UBERON:0002106
23  UBERON:0002691
24  UBERON:0001890
25      CL:0000216
26  UBERON:0019249
27      CL:2000074
28  UBERON:0000087
29  UBERON:0002097
30  UBERON:0001891
31  UBERON:0001264
32      CL:0000501
33  UBERON:0000955
34  UBERON:0003903
35  UBERON:0003881
36  UBERON:0003902
37  UBERON:0019252
38  UBERON:0002101
39      CL:0000945
40      CL:0000893
41  UBERON:0013694
42  UBERON:0000922
43  UBERON:0001155
44  UBERON:0000002
45  UBERON:0001997
46  UBERON:0002367
47      CL:0002553
48  UBERON:0008933
49  UBERON:0004347
50  UBERON:0012314
51  UBERON:0002370
52  UBERON:0002107
53  UBERON:0000995
54  UBERON:0002028
55  UBERON:0002084
---- Executed query, got data.frame: qt_df: #rows = 56, #cols: 1

df_pk (at most first 10 elements): ['UBERON:0000167', 'UBERON:0000178', 'UBERON:0000363', 'UBERON:0000467', 'UBERON:0000955', 'UBERON:0000995', 'UBERON:0000998', 'UBERON:0001008', 'UBERON:0001017', 'UBERON:0001062']
qt_pk (at most first 10 elements): ['UBERON:0002037', 'CL:0002586', 'CL:0000082', 'UBERON:0007777', 'UBERON:0002079', 'UBERON:0002240', 'UBERON:0001384', 'CL:2000042', 'CL:0000081', 'UBERON:0000956']
---- Removed rows from df with matching pk
*** Entering anatomy to database ***
df: #rows = 22, #cols: 4
df:
                id  ...                                           synonyms
0   UBERON:0000167  ...                ["buccal cavity","cavity of mouth"]
1   UBERON:0000178  ...            ["portion of blood","vertebrate blood"]
2   UBERON:0000363  ...  ["lymphoreticular system","mononuclear phagocy...
3   UBERON:0000467  ...  ["body system","connected anatomical system","...
6   UBERON:0000998  ...                                  ["seminal gland"]
7   UBERON:0001008  ...  ["excretory system","systema urinaria","system...
8   UBERON:0001017  ...                ["CNS","systema nervosum centrale"]
9   UBERON:0001062  ...                                                 []
11  UBERON:0001255  ...                      ["bladder","vesica urinaria"]
12  UBERON:0001305  ...  ["follicle of ovary","follicle of ovary viewed...
13  UBERON:0001310  ...                                                 []
14  UBERON:0001555  ...           ["digestive tube","enteric tract","gut"]
15  UBERON:0001558  ...                       ["lower respiratory system"]
16  UBERON:0001736  ...  ["mandibular gland","mandibular salivary gland...
17  UBERON:0001831  ...                                        ["parotid"]
18  UBERON:0001969  ...  ["blood plasm","plasma","portion of blood plas...
20  UBERON:0002110  ...                       ["cholecyst","gall bladder"]
21  UBERON:0002394  ...                                                 []
22  UBERON:0002465  ...                                 ["UBERON:0002096"]
23  UBERON:0003714  ...  ["nerve tissue","nervous tissue","portion of n...
24  UBERON:0004086  ...  ["brain ventricles","cerebral ventricle","regi...
25  UBERON:0004535  ...                                                 []

[22 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.01040196418762207 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/sample_prep_method.tsv ---------
ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/sample_prep_method.tsv
Read from file: df: #rows = 1, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.sample_prep_method;
qt_df: Empty DataFrame
Columns: [pk]
Index: []
---- Executed query, got data.frame: qt_df: #rows = 0, #cols: 1

df_pk (at most first 10 elements): ['OBI:0001902']
qt_pk (at most first 10 elements): []
---- Removed rows from df with matching pk
*** Entering sample_prep_method to database ***
df: #rows = 1, #cols: 4
df:
            id  ...                             synonyms
0  OBI:0001902  ...  ["Nucleic Acid Preparation Method"]

[1 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.008513212203979492 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/assay_type.tsv ---------
ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/assay_type.tsv
Read from file: df: #rows = 2, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.assay_type;
qt_df:               pk
0    OBI:0003306
1    OBI:0003104
2    OBI:0002984
3    OBI:0000185
4    OBI:0003300
5    OBI:0003312
6    OBI:0001631
7    OBI:0003301
8    OBI:0003033
9    OBI:0003094
10   OBI:0003311
11   OBI:0002631
12   OBI:0003297
13   OBI:0001920
14   OBI:0000716
15   OBI:0001177
16   OBI:0003314
17   OBI:0001848
18   OBI:0003313
19   OBI:0003299
20   OBI:0003089
21   OBI:0003105
22   OBI:0000626
23   OBI:0003305
24   OBI:0003304
25   OBI:0003303
26   OBI:0003034
27   OBI:0600047
28  CHMO:0000087
29   OBI:0003302
30   OBI:0001271
---- Executed query, got data.frame: qt_df: #rows = 31, #cols: 1

df_pk (at most first 10 elements): ['OBI:0000893', 'OBI:0002112']
qt_pk (at most first 10 elements): ['OBI:0003306', 'OBI:0003104', 'OBI:0002984', 'OBI:0000185', 'OBI:0003300', 'OBI:0003312', 'OBI:0001631', 'OBI:0003301', 'OBI:0003033', 'OBI:0003094']
---- Removed rows from df with matching pk
*** Entering assay_type to database ***
df: #rows = 2, #cols: 4
df:
            id  ...                                           synonyms
0  OBI:0000893  ...  ["kinetic polymerase chain reaction","Q-PCR","...
1  OBI:0002112  ...                  ["short RNA-seq","small RNA-seq"]

[2 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.009267568588256836 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/biosample_disease.tsv ---------
ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/biosample_disease.tsv
Read from file: df: #rows = 2401, #cols: 4

pKeys: ['biosample_id_namespace', 'biosample_local_id', 'association_type', 'disease']
*** Entering biosample_disease to database ***
df: #rows = 2401, #cols: 4
df:
     biosample_id_namespace  ...    disease
0                ERCC-exRNA  ...  DOID:2841
1                ERCC-exRNA  ...  DOID:2841
2                ERCC-exRNA  ...  DOID:2841
3                ERCC-exRNA  ...  DOID:2841
4                ERCC-exRNA  ...  DOID:2841
...                     ...  ...        ...
2396             ERCC-exRNA  ...  DOID:2377
2397             ERCC-exRNA  ...  DOID:2377
2398             ERCC-exRNA  ...  DOID:2377
2399             ERCC-exRNA  ...  DOID:2377
2400             ERCC-exRNA  ...  DOID:2377

[2401 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.04026460647583008 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection_anatomy.tsv ---------
ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection_anatomy.tsv
Read from file: df: #rows = 90, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'anatomy']
*** Entering collection_anatomy to database ***
df: #rows = 90, #cols: 3
df:
   collection_id_namespace   collection_local_id         anatomy
0               ERCC-exRNA   EXR-DERLE1Dj6liR-AN  UBERON:0001969
1               ERCC-exRNA   EXR-IGHIR1V7Sc5u-AN  UBERON:0004535
2               ERCC-exRNA   EXR-DGALA1ECRXVs-AN  UBERON:0001017
3               ERCC-exRNA   EXR-IGHIR1tbB6UC-AN  UBERON:0004535
4               ERCC-exRNA   EXR-TTUSC1gCrGDH-AN  UBERON:0004535
..                     ...                   ...             ...
85              ERCC-exRNA   EXR-IGHIR1ycqrF2-AN  UBERON:0004535
86              ERCC-exRNA  EXR-JFREE1UH2qPCR-AN  UBERON:0004535
87              ERCC-exRNA   EXR-JSAUG1UH2001-AN  UBERON:0003714
88              ERCC-exRNA   EXR-JSAUG1UH3001-AN  UBERON:0003714
89              ERCC-exRNA   EXR-RGAND1UH2001-AN  UBERON:0000178

[90 rows x 3 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.007337331771850586 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/gene.tsv ---------
ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/gene.tsv
Read from file: df: #rows = 0, #cols: 5

pKeys: ['id']
*** Entering gene to database ***
df: #rows = 0, #cols: 5
df:
Empty DataFrame
Columns: [id, name, description, synonyms, organism]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002744913101196289 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/biosample.tsv ---------
ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/biosample.tsv
Read from file: df: #rows = 10362, #cols: 8

pKeys: ['id_namespace', 'local_id']
*** Entering biosample to database ***
df: #rows = 10362, #cols: 8
df:
      id_namespace  ...         anatomy
0       ERCC-exRNA  ...  UBERON:0001969
1       ERCC-exRNA  ...  UBERON:0001969
2       ERCC-exRNA  ...  UBERON:0001969
3       ERCC-exRNA  ...  UBERON:0004535
4       ERCC-exRNA  ...  UBERON:0004535
...            ...  ...             ...
10357   ERCC-exRNA  ...  UBERON:0000178
10358   ERCC-exRNA  ...  UBERON:0000178
10359   ERCC-exRNA  ...  UBERON:0000178
10360   ERCC-exRNA  ...  UBERON:0000178
10361   ERCC-exRNA  ...  UBERON:0000178

[10362 rows x 8 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.23466253280639648 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/file_describes_subject.tsv ---------
ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/file_describes_subject.tsv
Read from file: df: #rows = 178133, #cols: 4

pKeys: ['file_id_namespace', 'file_local_id', 'subject_id_namespace', 'subject_local_id']
*** Entering file_describes_subject to database ***
df: #rows = 178133, #cols: 4
df:
       file_id_namespace  ...             subject_local_id
0             ERCC-exRNA  ...  EXR-DERLE1LLAURPLATCOMP1-DO
1             ERCC-exRNA  ...  EXR-DERLE1LLAURPLATCOMP3-DO
2             ERCC-exRNA  ...  EXR-DERLE1LLAURPLATCOMP2-DO
3             ERCC-exRNA  ...  EXR-DERLE1LLAURPLATCOMP3-DO
4             ERCC-exRNA  ...  EXR-DERLE1LLAURPLATCOMP3-DO
...                  ...  ...                          ...
178128        ERCC-exRNA  ...          EXR-RGAND1UH2137-DO
178129        ERCC-exRNA  ...          EXR-RGAND1UH2138-DO
178130        ERCC-exRNA  ...          EXR-RGAND1UH2139-DO
178131        ERCC-exRNA  ...          EXR-RGAND1UH2140-DO
178132        ERCC-exRNA  ...          EXR-RGAND1UH2141-DO

[178133 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 3.442523241043091 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/subject.tsv ---------
ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/subject.tsv
Read from file: df: #rows = 7209, #cols: 10

pKeys: ['id_namespace', 'local_id']
*** Entering subject to database ***
df: #rows = 7209, #cols: 10
df:
     id_namespace  ... age_at_enrollment
0      ERCC-exRNA  ...               0.0
1      ERCC-exRNA  ...              36.0
2      ERCC-exRNA  ...              36.0
3      ERCC-exRNA  ...              22.0
4      ERCC-exRNA  ...              45.0
...           ...  ...               ...
7204   ERCC-exRNA  ...              50.0
7205   ERCC-exRNA  ...              40.0
7206   ERCC-exRNA  ...              30.0
7207   ERCC-exRNA  ...              30.0
7208   ERCC-exRNA  ...              40.0

[7209 rows x 10 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.2017507553100586 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/file_format.tsv ---------
ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/file_format.tsv
Read from file: df: #rows = 3, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.file_format;
qt_df:              pk
0   format:3004
1   format:3987
2   format:2572
3   format:3591
4   format:3590
5   format:3006
6   format:1930
7   format:3727
8   format:3752
9   format:3583
10  format:3981
11  format:2330
12  format:2331
13  format:3003
14  format:3475
---- Executed query, got data.frame: qt_df: #rows = 15, #cols: 1

df_pk (at most first 10 elements): ['format:1930', 'format:2333', 'format:3475']
qt_pk (at most first 10 elements): ['format:3004', 'format:3987', 'format:2572', 'format:3591', 'format:3590', 'format:3006', 'format:1930', 'format:3727', 'format:3752', 'format:3583']
---- Removed rows from df with matching pk
*** Entering file_format to database ***
df: #rows = 1, #cols: 4
df:
            id           name     description synonyms
1  format:2333  Binary format  Binary format.       []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.010283946990966797 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/biosample_gene.tsv ---------
ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/biosample_gene.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['biosample_id_namespace', 'biosample_local_id', 'gene']
*** Entering biosample_gene to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [biosample_id_namespace, biosample_local_id, gene]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0024983882904052734 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/subject_substance.tsv ---------
ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/subject_substance.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['subject_id_namespace', 'subject_local_id', 'substance']
*** Entering subject_substance to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [subject_id_namespace, subject_local_id, substance]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002387523651123047 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection.tsv ---------
ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection.tsv
Read from file: df: #rows = 77, #cols: 8

pKeys: ['id_namespace', 'local_id']
*** Entering collection to database ***
df: #rows = 77, #cols: 8
df:
   id_namespace              local_id  ...     description has_time_series_data
0    ERCC-exRNA   EXR-DERLE1Dj6liR-AN  ...  Analysis Entry                False
1    ERCC-exRNA   EXR-IGHIR1V7Sc5u-AN  ...  Analysis Entry                False
2    ERCC-exRNA   EXR-DGALA1ECRXVs-AN  ...  Analysis Entry                False
3    ERCC-exRNA   EXR-IGHIR1tbB6UC-AN  ...  Analysis Entry                False
4    ERCC-exRNA   EXR-TTUSC1gCrGDH-AN  ...  Analysis Entry                False
..          ...                   ...  ...             ...                  ...
72   ERCC-exRNA   EXR-IGHIR1ycqrF2-AN  ...  Analysis Entry                False
73   ERCC-exRNA  EXR-JFREE1UH2qPCR-AN  ...  Analysis Entry                False
74   ERCC-exRNA   EXR-JSAUG1UH2001-AN  ...  Analysis Entry                False
75   ERCC-exRNA   EXR-JSAUG1UH3001-AN  ...  Analysis Entry                False
76   ERCC-exRNA   EXR-RGAND1UH2001-AN  ...  Analysis Entry                False

[77 rows x 8 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.01398324966430664 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/compound.tsv ---------
ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/compound.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['id']
*** Entering compound to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002694368362426758 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/subject_in_collection.tsv ---------
ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/subject_in_collection.tsv
Read from file: df: #rows = 7212, #cols: 4

pKeys: ['subject_id_namespace', 'subject_local_id', 'collection_id_namespace', 'collection_local_id']
*** Entering subject_in_collection to database ***
df: #rows = 7212, #cols: 4
df:
     subject_id_namespace  ...  collection_local_id
0              ERCC-exRNA  ...  EXR-DERLE1Dj6liR-AN
1              ERCC-exRNA  ...  EXR-DERLE1Dj6liR-AN
2              ERCC-exRNA  ...  EXR-DERLE1Dj6liR-AN
3              ERCC-exRNA  ...  EXR-IGHIR1V7Sc5u-AN
4              ERCC-exRNA  ...  EXR-IGHIR1V7Sc5u-AN
...                   ...  ...                  ...
7207           ERCC-exRNA  ...  EXR-RGAND1UH2001-AN
7208           ERCC-exRNA  ...  EXR-RGAND1UH2001-AN
7209           ERCC-exRNA  ...  EXR-RGAND1UH2001-AN
7210           ERCC-exRNA  ...  EXR-RGAND1UH2001-AN
7211           ERCC-exRNA  ...  EXR-RGAND1UH2001-AN

[7212 rows x 4 columns]
>>> All good.
Processing C2M2 Files...:  17%|█▋        | 2/12 [00:28<02:37, 15.80s/it]>>>>>>>> Time taken to ingest the metadata from this file: 0.1133127212524414 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/project_in_project.tsv ---------
ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/project_in_project.tsv
Read from file: df: #rows = 59, #cols: 4

pKeys: ['parent_project_id_namespace', 'parent_project_local_id', 'child_project_id_namespace', 'child_project_local_id']
*** Entering project_in_project to database ***
df: #rows = 59, #cols: 4
df:
   parent_project_id_namespace  ...                child_project_local_id
0                   ERCC-exRNA  ...            EXR-DERLE1LLAURPLATCOMP-ST
1                   ERCC-exRNA  ...          EXR-IGHIR1Anticoagulants1-ST
2                   ERCC-exRNA  ...                 EXR-DGALA120170825-ST
3                   ERCC-exRNA  ...         EXR-IGHIR1CircadianRhythm2-ST
4                   ERCC-exRNA  ...                  EXR-TTUSC1U19xZW1-ST
5                   ERCC-exRNA  ...                   EXR-KJENS1VolT01-ST
6                   ERCC-exRNA  ...         EXR-IGHIR1HbContamination1-ST
7                   ERCC-exRNA  ...                 EXR-MANSE1ALLERAIR-ST
8                   ERCC-exRNA  ...                 EXR-KVICK1KCVSLE00-ST
9                   ERCC-exRNA  ...             EXR-MTEWA1FeedingStudy-ST
10                  ERCC-exRNA  ...            EXR-JFREE1U01MESAPLASMA-ST
11                  ERCC-exRNA  ...                 EXR-DGALA120200130-ST
12                  ERCC-exRNA  ...          EXR-MTEWA1HealthyControls-ST
13                  ERCC-exRNA  ...               EXR-DERLE1PHASE1PROT-ST
14                  ERCC-exRNA  ...               EXR-JJONE1HVEXOPROFP-ST
15                  ERCC-exRNA  ...               EXR-JFREE1UH2PLASMA1-ST
16                  ERCC-exRNA  ...                   EXR-TPATE1Z4fuUS-ST
17                  ERCC-exRNA  ...                   EXR-KJENS1STROKE-ST
18                  ERCC-exRNA  ...                    EXR-MBITZ1CTOT2-ST
19                  ERCC-exRNA  ...                 EXR-KWANG120171122-ST
20                  ERCC-exRNA  ...                 EXR-KJENS1ADPD0000-ST
21                  ERCC-exRNA  ...               EXR-JJONE1HVEXOPROFU-ST
22                  ERCC-exRNA  ...                   EXR-KJENS1smRID1-ST
23                  ERCC-exRNA  ...                 EXR-KWANG120171115-ST
24                  ERCC-exRNA  ...           EXR-JFRAN1RCOFF1COLNCANC-ST
25                  ERCC-exRNA  ...              EXR-MTEWA1HealthyULMC-ST
26                  ERCC-exRNA  ...                  EXR-JFRAN1CRCKRAS-ST
27                  ERCC-exRNA  ...                      EXR-MBITZ1NEP-ST
28                  ERCC-exRNA  ...                EXR-TPATE1COLCANCER-ST
29                  ERCC-exRNA  ...                    EXR-MBITZ1CTOT1-ST
30                  ERCC-exRNA  ...                  EXR-SADAS1POSTMI1-ST
31                  ERCC-exRNA  ...  EXR-IGHIR1IGHIRANCircadianRhythm3-ST
32                  ERCC-exRNA  ...               EXR-JJONE1HVEXOPROFS-ST
33                  ERCC-exRNA  ...   EXR-IGHIR1IGHIRANAnticoagulants3-ST
34                  ERCC-exRNA  ...                  EXR-JJONE1QIAGENU-ST
35                  ERCC-exRNA  ...                 EXR-ANACC12017NORM-ST
36                  ERCC-exRNA  ...       EXR-IGHIR1IGHIRANGenderPool1-ST
37                  ERCC-exRNA  ...                 EXR-AKRIC1AKGBMexo-ST
38                  ERCC-exRNA  ...                 EXR-AWEAV1COLNCANC-ST
39                  ERCC-exRNA  ...         EXR-IGHIR1CircadianRhythm1-ST
40                  ERCC-exRNA  ...                     EXR-KJENS1DIAB-ST
41                  ERCC-exRNA  ...                   EXR-KJENS1smIVH1-ST
42                  ERCC-exRNA  ...               EXR-DERLE1PHASE1OPEN-ST
43                  ERCC-exRNA  ...                 EXR-MANSE1TCELEXOS-ST
44                  ERCC-exRNA  ...                 EXR-IGHIR1BLDCLLEV-ST
45                  ERCC-exRNA  ...    EXR-LLAUR1PPLCDYSSERAMIRNEBS001-ST
46                  ERCC-exRNA  ...                 EXR-DGALA1GUTPLASM-ST
47                  ERCC-exRNA  ...                   EXR-KJENS1aSAHPR-ST
48                  ERCC-exRNA  ...             EXR-LLAUR1NPNORNEBP001-ST
49                  ERCC-exRNA  ...                 EXR-KWANG120171121-ST
50                  ERCC-exRNA  ...                   EXR-KJENS1MJFPDD-ST
51                  ERCC-exRNA  ...      EXR-SADAS1SDAS1EVHFMISMRNASEQ-ST
52                  ERCC-exRNA  ...                  EXR-DWONG1TMDW78D-ST
53                  ERCC-exRNA  ...                   EXR-SADAS1EXERs1-ST
54                  ERCC-exRNA  ...                   EXR-TPATE168zlfJ-ST
55                  ERCC-exRNA  ...         EXR-IGHIR1HbContamination3-ST
56                  ERCC-exRNA  ...                   EXR-JSAUG1UH2001-ST
57                  ERCC-exRNA  ...                   EXR-JSAUG1UH3001-ST
58                  ERCC-exRNA  ...                   EXR-RGAND1UH2001-ST

[59 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.011073112487792969 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection_taxonomy.tsv ---------
ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/collection_taxonomy.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'taxon']
*** Entering collection_taxonomy to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, taxon]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0026907920837402344 seconds.

--------- ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/substance.tsv ---------
ingest/c2m2s/ERCC/datapackage/CFDEexRNA_20230817/data/substance.tsv
Read from file: df: #rows = 0, #cols: 5

pKeys: ['id']
*** Entering substance to database ***
df: #rows = 0, #cols: 5
df:
Empty DataFrame
Columns: [id, name, description, synonyms, compound]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0028340816497802734 seconds.


================================== DCC short label: GTEx =============================================
Unpack zip file: c2m2_extract_path: ingest/c2m2s/GTEx/datapackage
--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/dcc.tsv ---------
ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/dcc.tsv
Read from file: df: #rows = 1, #cols: 9

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.dcc;
qt_df:                         pk
0  cfde_registry_dcc:exrna
1    cfde_registry_dcc:4dn
---- Executed query, got data.frame: qt_df: #rows = 2, #cols: 1

df_pk (at most first 10 elements): ['cfde_registry_dcc:gtex']
qt_pk (at most first 10 elements): ['cfde_registry_dcc:exrna', 'cfde_registry_dcc:4dn']
---- Removed rows from df with matching pk
*** Entering dcc to database ***
df: #rows = 1, #cols: 9
df:
                       id  ... project_local_id
0  cfde_registry_dcc:gtex  ...             gtex

[1 rows x 9 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.016605615615844727 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/id_namespace.tsv ---------
ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/id_namespace.tsv
Read from file: df: #rows = 3, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.id_namespace;
qt_df:                             pk
0  https://data.4dnucleome.org
1                   ERCC-exRNA
---- Executed query, got data.frame: qt_df: #rows = 2, #cols: 1

df_pk (at most first 10 elements): ['adult_gtex', 'egtex', 'gtex']
qt_pk (at most first 10 elements): ['https://data.4dnucleome.org', 'ERCC-exRNA']
---- Removed rows from df with matching pk
*** Entering id_namespace to database ***
df: #rows = 3, #cols: 4
df:
           id  ...                                    description
1  adult_gtex  ...   The ID namespace for the Adult GTEx project.
2       egtex  ...        The ID namespace for the eGTEx project.
0        gtex  ...  The ID namespace for the Global GTEx project.

[3 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.011307716369628906 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/disease.tsv ---------
ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/disease.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['id']
*** Entering disease to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002771615982055664 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/data_type.tsv ---------
ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/data_type.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['id']
*** Entering data_type to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0025751590728759766 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection_disease.tsv ---------
ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection_disease.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'disease']
*** Entering collection_disease to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, disease]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002464771270751953 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/file_in_collection.tsv ---------
ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/file_in_collection.tsv
Read from file: df: #rows = 548, #cols: 4

pKeys: ['file_id_namespace', 'file_local_id', 'collection_id_namespace', 'collection_local_id']
*** Entering file_in_collection to database ***
df: #rows = 548, #cols: 4
df:
    file_id_namespace  ...                                collection_local_id
0          adult_gtex  ...  gs://adult-gtex/additional_GTEx_datasets/v6p/c...
1          adult_gtex  ...                    gs://adult-gtex/annotations/v3/
2          adult_gtex  ...                    gs://adult-gtex/annotations/v3/
3          adult_gtex  ...                    gs://adult-gtex/annotations/v3/
4          adult_gtex  ...                    gs://adult-gtex/annotations/v3/
..                ...  ...                                                ...
543        adult_gtex  ...     gs://adult-gtex/single-cell/v9/long-read-data/
544        adult_gtex  ...     gs://adult-gtex/single-cell/v9/long-read-data/
545        adult_gtex  ...     gs://adult-gtex/single-cell/v9/long-read-data/
546        adult_gtex  ...     gs://adult-gtex/single-cell/v9/snrna-seq-data/
547        adult_gtex  ...     gs://adult-gtex/single-cell/v9/snrna-seq-data/

[548 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.024351119995117188 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/subject_role_taxonomy.tsv ---------
ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/subject_role_taxonomy.tsv
Read from file: df: #rows = 979, #cols: 4

pKeys: ['subject_id_namespace', 'subject_local_id', 'role_id', 'taxonomy_id']
*** Entering subject_role_taxonomy to database ***
df: #rows = 979, #cols: 4
df:
    subject_id_namespace subject_local_id              role_id    taxonomy_id
0             adult_gtex       GTEX-1117F  cfde_subject_role:0  NCBI:txid9606
1             adult_gtex       GTEX-111CU  cfde_subject_role:0  NCBI:txid9606
2             adult_gtex       GTEX-111FC  cfde_subject_role:0  NCBI:txid9606
3             adult_gtex       GTEX-111VG  cfde_subject_role:0  NCBI:txid9606
4             adult_gtex       GTEX-111YS  cfde_subject_role:0  NCBI:txid9606
..                   ...              ...                  ...            ...
974           adult_gtex        GTEX-ZYWO  cfde_subject_role:0  NCBI:txid9606
975           adult_gtex        GTEX-ZYY3  cfde_subject_role:0  NCBI:txid9606
976           adult_gtex        GTEX-ZZ64  cfde_subject_role:0  NCBI:txid9606
977           adult_gtex        GTEX-ZZPT  cfde_subject_role:0  NCBI:txid9606
978           adult_gtex        GTEX-ZZPU  cfde_subject_role:0  NCBI:txid9606

[979 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.02120184898376465 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/biosample_in_collection.tsv ---------
ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/biosample_in_collection.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['biosample_id_namespace', 'biosample_local_id', 'collection_id_namespace', 'collection_local_id']
*** Entering biosample_in_collection to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [biosample_id_namespace, biosample_local_id, collection_id_namespace, collection_local_id]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002954721450805664 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/subject_phenotype.tsv ---------
ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/subject_phenotype.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['subject_id_namespace', 'subject_local_id', 'association_type', 'phenotype']
*** Entering subject_phenotype to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [subject_id_namespace, subject_local_id, association_type, phenotype]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0026099681854248047 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/phenotype_disease.tsv ---------
ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/phenotype_disease.tsv
Read from file: df: #rows = 0, #cols: 2

pKeys: ['phenotype', 'disease']
*** Entering phenotype_disease to database ***
df: #rows = 0, #cols: 2
df:
Empty DataFrame
Columns: [phenotype, disease]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0023009777069091797 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection_compound.tsv ---------
ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection_compound.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'compound']
*** Entering collection_compound to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, compound]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002462148666381836 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/protein_gene.tsv ---------
ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/protein_gene.tsv
Read from file: df: #rows = 0, #cols: 2

pKeys: ['protein', 'gene']
*** Entering protein_gene to database ***
df: #rows = 0, #cols: 2
df:
Empty DataFrame
Columns: [protein, gene]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002267599105834961 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/phenotype_gene.tsv ---------
ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/phenotype_gene.tsv
Read from file: df: #rows = 0, #cols: 2

pKeys: ['phenotype', 'gene']
*** Entering phenotype_gene to database ***
df: #rows = 0, #cols: 2
df:
Empty DataFrame
Columns: [phenotype, gene]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0022935867309570312 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/phenotype.tsv ---------
ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/phenotype.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['id']
*** Entering phenotype to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0026106834411621094 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/subject_disease.tsv ---------
ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/subject_disease.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['subject_id_namespace', 'subject_local_id', 'association_type', 'disease']
*** Entering subject_disease to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [subject_id_namespace, subject_local_id, association_type, disease]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0027189254760742188 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection_phenotype.tsv ---------
ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection_phenotype.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'phenotype']
*** Entering collection_phenotype to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, phenotype]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0026030540466308594 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/protein.tsv ---------
ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/protein.tsv
Read from file: df: #rows = 0, #cols: 5

pKeys: ['id']
*** Entering protein to database ***
df: #rows = 0, #cols: 5
df:
Empty DataFrame
Columns: [id, name, description, synonyms, organism]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0035524368286132812 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/ncbi_taxonomy.tsv ---------
ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/ncbi_taxonomy.tsv
Read from file: df: #rows = 1, #cols: 5

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.ncbi_taxonomy;
qt_df:                pk
0  NCBI:txid60711
1  NCBI:txid10090
2  NCBI:txid10036
3   NCBI:txid7955
4   NCBI:txid9031
5   NCBI:txid7227
6   NCBI:txid9606
---- Executed query, got data.frame: qt_df: #rows = 7, #cols: 1

df_pk (at most first 10 elements): ['NCBI:txid9606']
qt_pk (at most first 10 elements): ['NCBI:txid60711', 'NCBI:txid10090', 'NCBI:txid10036', 'NCBI:txid7955', 'NCBI:txid9031', 'NCBI:txid7227', 'NCBI:txid9606']
---- Removed rows from df with matching pk
*** Entering ncbi_taxonomy to database ***
df: #rows = 0, #cols: 5
df:
Empty DataFrame
Columns: [id, clade, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.009378194808959961 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection_protein.tsv ---------
ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection_protein.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'protein']
*** Entering collection_protein to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, protein]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0035409927368164062 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/analysis_type.tsv ---------
ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/analysis_type.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['id']
*** Entering analysis_type to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0026710033416748047 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/file_describes_biosample.tsv ---------
ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/file_describes_biosample.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['file_id_namespace', 'file_local_id', 'biosample_id_namespace', 'biosample_local_id']
*** Entering file_describes_biosample to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [file_id_namespace, file_local_id, biosample_id_namespace, biosample_local_id]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0025985240936279297 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/file.tsv ---------
ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/file.tsv
Read from file: df: #rows = 548, #cols: 20

pKeys: ['id_namespace', 'local_id']
*** Entering file to database ***
df: #rows = 548, #cols: 20
df:
    id_namespace  ... dbgap_study_id
0     adult_gtex  ...            NaN
1     adult_gtex  ...            NaN
2     adult_gtex  ...            NaN
3     adult_gtex  ...            NaN
4     adult_gtex  ...            NaN
..           ...  ...            ...
543   adult_gtex  ...            NaN
544   adult_gtex  ...            NaN
545   adult_gtex  ...            NaN
546   adult_gtex  ...            NaN
547   adult_gtex  ...            NaN

[548 rows x 20 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.045877695083618164 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection_gene.tsv ---------
ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection_gene.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'gene']
*** Entering collection_gene to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, gene]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.003916263580322266 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/biosample_from_subject.tsv ---------
ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/biosample_from_subject.tsv
Read from file: df: #rows = 22015, #cols: 5

pKeys: ['biosample_id_namespace', 'biosample_local_id', 'subject_id_namespace', 'subject_local_id']
*** Entering biosample_from_subject to database ***
df: #rows = 22015, #cols: 5
df:
      biosample_id_namespace  ... age_at_sampling
0                 adult_gtex  ...             NaN
1                 adult_gtex  ...             NaN
2                 adult_gtex  ...             NaN
3                 adult_gtex  ...             NaN
4                 adult_gtex  ...             NaN
...                      ...  ...             ...
22010             adult_gtex  ...             NaN
22011             adult_gtex  ...             NaN
22012             adult_gtex  ...             NaN
22013             adult_gtex  ...             NaN
22014             adult_gtex  ...             NaN

[22015 rows x 5 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.34283971786499023 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/file_describes_collection.tsv ---------
ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/file_describes_collection.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['file_id_namespace', 'file_local_id', 'collection_id_namespace', 'collection_local_id']
*** Entering file_describes_collection to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [file_id_namespace, file_local_id, collection_id_namespace, collection_local_id]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.003801107406616211 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/subject_race.tsv ---------
ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/subject_race.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['subject_id_namespace', 'subject_local_id', 'race']
*** Entering subject_race to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [subject_id_namespace, subject_local_id, race]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002457857131958008 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection_in_collection.tsv ---------
ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection_in_collection.tsv
Read from file: df: #rows = 71, #cols: 4

pKeys: ['superset_collection_id_namespace', 'superset_collection_local_id', 'subset_collection_id_namespace', 'subset_collection_local_id']
*** Entering collection_in_collection to database ***
df: #rows = 71, #cols: 4
df:
   superset_collection_id_namespace  ...                         subset_collection_local_id
0                        adult_gtex  ...      gs://adult-gtex/additional_GTEx_datasets/v6p/
1                        adult_gtex  ...  gs://adult-gtex/additional_GTEx_datasets/v6p/c...
2                        adult_gtex  ...                    gs://adult-gtex/annotations/v3/
3                        adult_gtex  ...                    gs://adult-gtex/annotations/v4/
4                        adult_gtex  ...                    gs://adult-gtex/annotations/v6/
..                              ...  ...                                                ...
66                            egtex  ...                gs://egtex/methylation/wgbs/backup/
67                       adult_gtex  ...           gs://adult-gtex/haplotype-expression/v8/
68                       adult_gtex  ...                  gs://adult-gtex/outlier-calls/v8/
69                       adult_gtex  ...     gs://adult-gtex/single-cell/v9/long-read-data/
70                       adult_gtex  ...     gs://adult-gtex/single-cell/v9/snrna-seq-data/

[71 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.009732484817504883 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection_defined_by_project.tsv ---------
ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection_defined_by_project.tsv
Read from file: df: #rows = 14, #cols: 4

pKeys: ['collection_id_namespace', 'collection_local_id', 'project_id_namespace', 'project_local_id']
*** Entering collection_defined_by_project to database ***
df: #rows = 14, #cols: 4
df:
   collection_id_namespace  ... project_local_id
0               adult_gtex  ...       adult_gtex
1               adult_gtex  ...       adult_gtex
2               adult_gtex  ...       adult_gtex
3               adult_gtex  ...       adult_gtex
4               adult_gtex  ...       adult_gtex
5               adult_gtex  ...       adult_gtex
6               adult_gtex  ...       adult_gtex
7               adult_gtex  ...       adult_gtex
8               adult_gtex  ...       adult_gtex
9                    egtex  ...            egtex
10                   egtex  ...            egtex
11                   egtex  ...            egtex
12              adult_gtex  ...       adult_gtex
13              adult_gtex  ...       adult_gtex

[14 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.007336139678955078 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection_substance.tsv ---------
ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection_substance.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'substance']
*** Entering collection_substance to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, substance]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0025300979614257812 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/biosample_substance.tsv ---------
ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/biosample_substance.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['biosample_id_namespace', 'biosample_local_id', 'substance']
*** Entering biosample_substance to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [biosample_id_namespace, biosample_local_id, substance]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002440929412841797 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/project.tsv ---------
ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/project.tsv
Read from file: df: #rows = 3, #cols: 7

pKeys: ['id_namespace', 'local_id']
*** Entering project to database ***
df: #rows = 3, #cols: 7
df:
  id_namespace  ...                                        description
0         gtex  ...  The Genotype-Tissue Expression (GTEx) project ...
1   adult_gtex  ...  The Adult Genotype-Tissue Expression (GTEx) pr...
2        egtex  ...  eGTEx datasets consist of assays performed by ...

[3 rows x 7 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.009072065353393555 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/anatomy.tsv ---------
ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/anatomy.tsv
Read from file: df: #rows = 51, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.anatomy;
qt_df:                 pk
0   UBERON:0002370
1       CL:0002620
2   UBERON:0002107
3   UBERON:0001911
4   UBERON:0000995
..             ...
73  UBERON:0002101
74      CL:2000042
75  UBERON:0000467
76      CL:0000945
77  UBERON:0003714

[78 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 78, #cols: 1

df_pk (at most first 10 elements): ['UBERON:0000007', 'UBERON:0000458', 'UBERON:0000473', 'UBERON:0000945', 'UBERON:0000992', 'UBERON:0000995', 'UBERON:0000996', 'UBERON:0001114', 'UBERON:0001150', 'UBERON:0001157']
qt_pk (at most first 10 elements): ['UBERON:0002370', 'CL:0002620', 'UBERON:0002107', 'UBERON:0001911', 'UBERON:0000995', 'UBERON:0000087', 'CL:0000893', 'UBERON:0002106', 'UBERON:0001736', 'UBERON:0002037']
---- Removed rows from df with matching pk
*** Entering anatomy to database ***
df: #rows = 46, #cols: 4
df:
                id  ...                                           synonyms
0   UBERON:0000007  ...  ["glandula pituitaria","Hp","pituitary","pitui...
1   UBERON:0000458  ...                                                 []
2   UBERON:0000473  ...  ["UBERON:0002117","gonad of male genitalia","g...
3   UBERON:0000945  ...                                                 []
4   UBERON:0000992  ...  ["animal ovary","female gonad","female organis...
6   UBERON:0000996  ...                                                 []
7   UBERON:0001114  ...  ["liver right lobe","lobus hepaticus dexter","...
8   UBERON:0001150  ...                ["pancreas body","pancreatic body"]
9   UBERON:0001157  ...                              ["colon transversum"]
10  UBERON:0001159  ...                                                 []
11  UBERON:0001211  ...                    ["noduli lymphoidei aggregati"]
12  UBERON:0001225  ...  ["cortex renalis","kidney cortex","renal cortex"]
14  UBERON:0001293  ...  ["outer renal medulla","outer zone of medulla ...
15  UBERON:0001323  ...                         ["medial popliteal nerve"]
16  UBERON:0001496  ...  ["ascending thoracic aorta","pars ascendens ao...
17  UBERON:0001621  ...                         ["coronary arterial tree"]
18  UBERON:0001870  ...  ["cortex of frontal lobe","frontal lobe cortex...
19  UBERON:0001873  ...                      ["UBERON:0010122","caudatus"]
20  UBERON:0001874  ...                                ["nucleus putamen"]
21  UBERON:0001876  ...  ["amygdaloid body","amygdaloid complex","amygd...
22  UBERON:0001882  ...  ["accumbens nucleus","colliculus of caudate nu...
23  UBERON:0001898  ...  ["Hy","preoptico-hypothalamic area","preoptico...
24  UBERON:0001954  ...  ["UBERON:0003940","UBERON:0004165","ammon gyru...
26  UBERON:0002038  ...  ["nucleus of basis pedunculi","SN","Soemmering...
27  UBERON:0002046  ...                                        ["thyroid"]
29  UBERON:0002190  ...  ["UBERON:0008875","fatty layer of subcutaneous...
31  UBERON:0002369  ...     ["glandula adrenalis","glandula suprarenalis"]
32  UBERON:0003889  ...  ["mammalian oviduct","salpinges","salpinx","ut...
33  UBERON:0004264  ...  ["hind limb middle limb segment skin","hind li...
34  UBERON:0004550  ...  ["cardiac sphincter","gastroesophageal sphinct...
35  UBERON:0004648  ...  ["esophagus muscularis mucosae","lamina muscul...
36  UBERON:0006330  ...  ["anterior lingual salivary gland","Bauhin's g...
37  UBERON:0006469  ...  ["C1 cervical spinal cord","C1 segment","C1 sp...
38  UBERON:0006566  ...  ["left ventricular myocardium","myocardium of ...
39  UBERON:0006631  ...  ["auricula dextra","right auricle","right auri...
40  UBERON:0006920  ...                                                 []
41  UBERON:0007610  ...                                                 []
42  UBERON:0008367  ...                                                 []
43  UBERON:0008952  ...  ["left lung cranial lobe","left upper lobe","l...
44  UBERON:0009834  ...                                                 []
45  UBERON:0009835  ...                                                 []
46  UBERON:0010414  ...                              ["omental fat depot"]
47  UBERON:0011907  ...  ["caput mediale (musculus gastrocnemius)","cap...
48  UBERON:0012249  ...  ["UBERON:0010182","ectocervix","portio vaginal...
49  UBERON:0013756  ...  ["blood in vein","portion of venous blood","ve...
50  UBERON:0036149  ...                                                 []

[46 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.012438058853149414 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/sample_prep_method.tsv ---------
ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/sample_prep_method.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['id']
*** Entering sample_prep_method to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0028297901153564453 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/assay_type.tsv ---------
ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/assay_type.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['id']
*** Entering assay_type to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002719402313232422 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/biosample_disease.tsv ---------
ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/biosample_disease.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['biosample_id_namespace', 'biosample_local_id', 'association_type', 'disease']
*** Entering biosample_disease to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [biosample_id_namespace, biosample_local_id, association_type, disease]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002732515335083008 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection_anatomy.tsv ---------
ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection_anatomy.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'anatomy']
*** Entering collection_anatomy to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, anatomy]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0026397705078125 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/gene.tsv ---------
ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/gene.tsv
Read from file: df: #rows = 0, #cols: 5

pKeys: ['id']
*** Entering gene to database ***
df: #rows = 0, #cols: 5
df:
Empty DataFrame
Columns: [id, name, description, synonyms, organism]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0030295848846435547 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/biosample.tsv ---------
ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/biosample.tsv
Read from file: df: #rows = 22015, #cols: 8

pKeys: ['id_namespace', 'local_id']
*** Entering biosample to database ***
df: #rows = 22015, #cols: 8
df:
      id_namespace  ...         anatomy
0       adult_gtex  ...  UBERON:0013756
1       adult_gtex  ...  UBERON:0013756
2       adult_gtex  ...  UBERON:0013756
3       adult_gtex  ...  UBERON:0013756
4       adult_gtex  ...  UBERON:0013756
...            ...  ...             ...
22010   adult_gtex  ...  UBERON:0001255
22011   adult_gtex  ...  UBERON:0001293
22012   adult_gtex  ...  UBERON:0001293
22013   adult_gtex  ...  UBERON:0001293
22014   adult_gtex  ...  UBERON:0001293

[22015 rows x 8 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.514754056930542 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/file_describes_subject.tsv ---------
ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/file_describes_subject.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['file_id_namespace', 'file_local_id', 'subject_id_namespace', 'subject_local_id']
*** Entering file_describes_subject to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [file_id_namespace, file_local_id, subject_id_namespace, subject_local_id]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0044748783111572266 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/subject.tsv ---------
ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/subject.tsv
Read from file: df: #rows = 979, #cols: 10

pKeys: ['id_namespace', 'local_id']
*** Entering subject to database ***
df: #rows = 979, #cols: 10
df:
    id_namespace    local_id  ... ethnicity age_at_enrollment
0     adult_gtex  GTEX-1117F  ...       NaN               NaN
1     adult_gtex  GTEX-111CU  ...       NaN               NaN
2     adult_gtex  GTEX-111FC  ...       NaN               NaN
3     adult_gtex  GTEX-111VG  ...       NaN               NaN
4     adult_gtex  GTEX-111YS  ...       NaN               NaN
..           ...         ...  ...       ...               ...
974   adult_gtex   GTEX-ZYWO  ...       NaN               NaN
975   adult_gtex   GTEX-ZYY3  ...       NaN               NaN
976   adult_gtex   GTEX-ZZ64  ...       NaN               NaN
977   adult_gtex   GTEX-ZZPT  ...       NaN               NaN
978   adult_gtex   GTEX-ZZPU  ...       NaN               NaN

[979 rows x 10 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.035086870193481445 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/file_format.tsv ---------
ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/file_format.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['id']
*** Entering file_format to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0037817955017089844 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/biosample_gene.tsv ---------
ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/biosample_gene.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['biosample_id_namespace', 'biosample_local_id', 'gene']
*** Entering biosample_gene to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [biosample_id_namespace, biosample_local_id, gene]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0025854110717773438 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/subject_substance.tsv ---------
ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/subject_substance.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['subject_id_namespace', 'subject_local_id', 'substance']
*** Entering subject_substance to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [subject_id_namespace, subject_local_id, substance]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002454519271850586 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection.tsv ---------
ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection.tsv
Read from file: df: #rows = 85, #cols: 8

pKeys: ['id_namespace', 'local_id']
*** Entering collection to database ***
df: #rows = 85, #cols: 8
df:
   id_namespace  ... has_time_series_data
0    adult_gtex  ...                  NaN
1    adult_gtex  ...                  NaN
2    adult_gtex  ...                  NaN
3    adult_gtex  ...                  NaN
4    adult_gtex  ...                  NaN
..          ...  ...                  ...
80   adult_gtex  ...                  NaN
81   adult_gtex  ...                  NaN
82   adult_gtex  ...                  NaN
83   adult_gtex  ...                  NaN
84   adult_gtex  ...                  NaN

[85 rows x 8 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.01349782943725586 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/compound.tsv ---------
ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/compound.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['id']
*** Entering compound to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002802610397338867 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/subject_in_collection.tsv ---------
ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/subject_in_collection.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['subject_id_namespace', 'subject_local_id', 'collection_id_namespace', 'collection_local_id']
*** Entering subject_in_collection to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [subject_id_namespace, subject_local_id, collection_id_namespace, collection_local_id]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0026595592498779297 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/project_in_project.tsv ---------
ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/project_in_project.tsv
Read from file: df: #rows = 2, #cols: 4

pKeys: ['parent_project_id_namespace', 'parent_project_local_id', 'child_project_id_namespace', 'child_project_local_id']
*** Entering project_in_project to database ***
df: #rows = 2, #cols: 4
df:
  parent_project_id_namespace  ... child_project_local_id
0                        gtex  ...             adult_gtex
1                        gtex  ...                  egtex

[2 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.006744384765625 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection_taxonomy.tsv ---------
ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/collection_taxonomy.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'taxon']
*** Entering collection_taxonomy to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, taxon]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0024881362915039062 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/substance.tsv ---------
ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/substance.tsv
Read from file: df: #rows = 0, #cols: 5

pKeys: ['id']
*** Entering substance to database ***
df: #rows = 0, #cols: 5
df:
Empty DataFrame
Columns: [id, name, description, synonyms, compound]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002829313278198242 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/external_CV_reference_files/HPO_MPO_Entrez_gene_IDs_to_EnsEMBL_IDs.tsv ---------
ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/external_CV_reference_files/HPO_MPO_Entrez_gene_IDs_to_EnsEMBL_IDs.tsv
>>>>>>>> Time taken to ingest the metadata from this file: 1.1444091796875e-05 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/external_CV_reference_files/ensembl_genes.tsv ---------
ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/external_CV_reference_files/ensembl_genes.tsv
>>>>>>>> Time taken to ingest the metadata from this file: 1.5735626220703125e-05 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/external_CV_reference_files/Interlex_data_type.2023-03-02.tsv ---------
Processing C2M2 Files...:  25%|██▌       | 3/12 [05:19<21:13, 141.55s/it]ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/external_CV_reference_files/Interlex_data_type.2023-03-02.tsv
>>>>>>>> Time taken to ingest the metadata from this file: 2.6226043701171875e-05 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/external_CV_reference_files/OBI.provisional_terms.2023-03-02.tsv ---------
ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/external_CV_reference_files/OBI.provisional_terms.2023-03-02.tsv
>>>>>>>> Time taken to ingest the metadata from this file: 5.7220458984375e-06 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/external_CV_reference_files/Interlex_file_format.2022-11-01.tsv ---------
ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/external_CV_reference_files/Interlex_file_format.2022-11-01.tsv
>>>>>>>> Time taken to ingest the metadata from this file: 5.4836273193359375e-06 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/external_CV_reference_files/EDAM.version_1.25.tsv ---------
ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/external_CV_reference_files/EDAM.version_1.25.tsv
>>>>>>>> Time taken to ingest the metadata from this file: 4.76837158203125e-06 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/external_CV_reference_files/ensembl_organism_name_to_ncbi_taxonomy_id.tsv ---------
ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/external_CV_reference_files/ensembl_organism_name_to_ncbi_taxonomy_id.tsv
>>>>>>>> Time taken to ingest the metadata from this file: 5.0067901611328125e-06 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/external_CV_reference_files/sample_pubchem_reference_data/compound.first_5000_records.max_100_synonyms_per_term.tsv ---------
ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/external_CV_reference_files/sample_pubchem_reference_data/compound.first_5000_records.max_100_synonyms_per_term.tsv
>>>>>>>> Time taken to ingest the metadata from this file: 6.9141387939453125e-06 seconds.

--------- ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/external_CV_reference_files/sample_pubchem_reference_data/substance.first_5000_records.max_100_synonyms_per_term.tsv ---------
ingest/c2m2s/GTEx/datapackage/data_3318a10b82ea496baf88073610ccc9c810deb001/data/external_CV_reference_files/sample_pubchem_reference_data/substance.first_5000_records.max_100_synonyms_per_term.tsv
>>>>>>>> Time taken to ingest the metadata from this file: 5.0067901611328125e-06 seconds.


================================== DCC short label: GlyGen =============================================
Unpack zip file: c2m2_extract_path: ingest/c2m2s/GlyGen/datapackage
--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/phenotype.tsv ---------
ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/phenotype.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['id']
*** Entering phenotype to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.004438877105712891 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/substance.tsv ---------
ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/substance.tsv
Read from file: df: #rows = 0, #cols: 5

pKeys: ['id']
*** Entering substance to database ***
df: #rows = 0, #cols: 5
df:
Empty DataFrame
Columns: [id, name, description, synonyms, compound]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0030586719512939453 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/subject_phenotype.tsv ---------
ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/subject_phenotype.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['subject_id_namespace', 'subject_local_id', 'association_type', 'phenotype']
*** Entering subject_phenotype to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [subject_id_namespace, subject_local_id, association_type, phenotype]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0028672218322753906 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/subject_disease.tsv ---------
ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/subject_disease.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['subject_id_namespace', 'subject_local_id', 'association_type', 'disease']
*** Entering subject_disease to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [subject_id_namespace, subject_local_id, association_type, disease]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0028333663940429688 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/subject_substance.tsv ---------
ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/subject_substance.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['subject_id_namespace', 'subject_local_id', 'substance']
*** Entering subject_substance to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [subject_id_namespace, subject_local_id, substance]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0026063919067382812 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/project.tsv ---------
ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/project.tsv
Read from file: df: #rows = 992, #cols: 7

pKeys: ['id_namespace', 'local_id']
*** Entering project to database ***
df: #rows = 992, #cols: 7
df:
                     id_namespace  ...                                      description
0    https://www.data.glygen.org/  ...  Master project for all GlyGen related resources
1    https://www.data.glygen.org/  ...                                    GlyGen portal
2    https://www.data.glygen.org/  ...              GlyGen Glycan Array Data Repository
3    https://www.data.glygen.org/  ...                                              NaN
4    https://www.data.glygen.org/  ...                                              NaN
..                            ...  ...                                              ...
987  https://www.data.glygen.org/  ...                                              NaN
988  https://www.data.glygen.org/  ...                            See Attached Protocol
989  https://www.data.glygen.org/  ...                                              NaN
990  https://www.data.glygen.org/  ...                                              NaN
991  https://www.data.glygen.org/  ...                                              NaN

[992 rows x 7 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.03216862678527832 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/file_format.tsv ---------
ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/file_format.tsv
Read from file: df: #rows = 5, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.file_format;
qt_df:              pk
0   format:3004
1   format:3987
2   format:2572
3   format:3591
4   format:3590
5   format:3006
6   format:1930
7   format:3727
8   format:3752
9   format:3583
10  format:3981
11  format:2330
12  format:2331
13  format:3003
14  format:2333
15  format:3475
---- Executed query, got data.frame: qt_df: #rows = 16, #cols: 1

df_pk (at most first 10 elements): ['format:2330', 'format:3468', 'format:3579', 'format:3603', 'format:3752']
qt_pk (at most first 10 elements): ['format:3004', 'format:3987', 'format:2572', 'format:3591', 'format:3590', 'format:3006', 'format:1930', 'format:3727', 'format:3752', 'format:3583']
---- Removed rows from df with matching pk
*** Entering file_format to database ***
df: #rows = 3, #cols: 4
df:
            id  ...                    synonyms
1  format:3468  ...  ["Microsoft Excel format"]
2  format:3579  ...             ["JPEG","jpeg"]
3  format:3603  ...                          []

[3 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.011175870895385742 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/phenotype_gene.tsv ---------
ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/phenotype_gene.tsv
Read from file: df: #rows = 0, #cols: 2

pKeys: ['phenotype', 'gene']
*** Entering phenotype_gene to database ***
df: #rows = 0, #cols: 2
df:
Empty DataFrame
Columns: [phenotype, gene]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002460002899169922 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/collection_gene.tsv ---------
ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/collection_gene.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'gene']
*** Entering collection_gene to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, gene]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0025670528411865234 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/collection_in_collection.tsv ---------
ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/collection_in_collection.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['superset_collection_id_namespace', 'superset_collection_local_id', 'subset_collection_id_namespace', 'subset_collection_local_id']
*** Entering collection_in_collection to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [superset_collection_id_namespace, superset_collection_local_id, subset_collection_id_namespace, subset_collection_local_id]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002766847610473633 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/biosample_disease.tsv ---------
ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/biosample_disease.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['biosample_id_namespace', 'biosample_local_id', 'association_type', 'disease']
*** Entering biosample_disease to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [biosample_id_namespace, biosample_local_id, association_type, disease]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0026700496673583984 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/disease.tsv ---------
ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/disease.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['id']
*** Entering disease to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0028290748596191406 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/file_describes_subject.tsv ---------
ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/file_describes_subject.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['file_id_namespace', 'file_local_id', 'subject_id_namespace', 'subject_local_id']
*** Entering file_describes_subject to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [file_id_namespace, file_local_id, subject_id_namespace, subject_local_id]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002791166305541992 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/collection_taxonomy.tsv ---------
ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/collection_taxonomy.tsv
Read from file: df: #rows = 112366, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'taxon']
*** Entering collection_taxonomy to database ***
df: #rows = 112366, #cols: 3
df:
             collection_id_namespace  ...          taxon
0       https://www.data.glygen.org/  ...  NCBI:txid9606
1       https://www.data.glygen.org/  ...  NCBI:txid9606
2       https://www.data.glygen.org/  ...  NCBI:txid9606
3       https://www.data.glygen.org/  ...  NCBI:txid9606
4       https://www.data.glygen.org/  ...  NCBI:txid9606
...                              ...  ...            ...
112361  https://www.data.glygen.org/  ...  NCBI:txid7227
112362  https://www.data.glygen.org/  ...  NCBI:txid7227
112363  https://www.data.glygen.org/  ...  NCBI:txid7227
112364  https://www.data.glygen.org/  ...  NCBI:txid7227
112365  https://www.data.glygen.org/  ...  NCBI:txid7227

[112366 rows x 3 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.66139554977417 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/subject_race.tsv ---------
ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/subject_race.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['subject_id_namespace', 'subject_local_id', 'race']
*** Entering subject_race to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [subject_id_namespace, subject_local_id, race]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.004286766052246094 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/subject_role_taxonomy.tsv ---------
ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/subject_role_taxonomy.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['subject_id_namespace', 'subject_local_id', 'role_id', 'taxonomy_id']
*** Entering subject_role_taxonomy to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [subject_id_namespace, subject_local_id, role_id, taxonomy_id]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0025870800018310547 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/gene.tsv ---------
ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/gene.tsv
Read from file: df: #rows = 0, #cols: 5

pKeys: ['id']
*** Entering gene to database ***
df: #rows = 0, #cols: 5
df:
Empty DataFrame
Columns: [id, name, description, synonyms, organism]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0027108192443847656 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/analysis_type.tsv ---------
ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/analysis_type.tsv
Read from file: df: #rows = 1, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.analysis_type;
qt_df:             pk
0  OBI:0001872
---- Executed query, got data.frame: qt_df: #rows = 1, #cols: 1

df_pk (at most first 10 elements): ['OBI:0001985']
qt_pk (at most first 10 elements): ['OBI:0001872']
---- Removed rows from df with matching pk
*** Entering analysis_type to database ***
df: #rows = 1, #cols: 4
df:
            id  ... synonyms
0  OBI:0001985  ...       []

[1 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.009356021881103516 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/file_describes_biosample.tsv ---------
ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/file_describes_biosample.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['file_id_namespace', 'file_local_id', 'biosample_id_namespace', 'biosample_local_id']
*** Entering file_describes_biosample to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [file_id_namespace, file_local_id, biosample_id_namespace, biosample_local_id]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0025904178619384766 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/collection_protein.tsv ---------
ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/collection_protein.tsv
Read from file: df: #rows = 111181, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'protein']
*** Entering collection_protein to database ***
df: #rows = 111181, #cols: 3
df:
             collection_id_namespace          collection_local_id     protein
0       https://www.data.glygen.org/      COL_Q9ULV8-1_GLY_000001      Q9ULV8
1       https://www.data.glygen.org/      COL_Q53R12-1_GLY_000001      Q53R12
2       https://www.data.glygen.org/  COL_A0A075B6P5-1_GLY_000001  A0A075B6P5
3       https://www.data.glygen.org/      COL_O75153-1_GLY_000001      O75153
4       https://www.data.glygen.org/      COL_Q17RY6-1_GLY_000001      Q17RY6
...                              ...                          ...         ...
111176  https://www.data.glygen.org/      COL_A1Z877-1_GLY_000711      A1Z877
111177  https://www.data.glygen.org/      COL_Q7KTF8-1_GLY_000711      Q7KTF8
111178  https://www.data.glygen.org/      COL_P12080-1_GLY_000711      P12080
111179  https://www.data.glygen.org/      COL_Q24368-1_GLY_000711      Q24368
111180  https://www.data.glygen.org/      COL_Q8MLT4-1_GLY_000711      Q8MLT4

[111181 rows x 3 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.5988965034484863 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/file.tsv ---------
ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/file.tsv
Read from file: df: #rows = 1941, #cols: 20

pKeys: ['id_namespace', 'local_id']
*** Entering file to database ***
df: #rows = 1941, #cols: 20
df:
                      id_namespace  ... dbgap_study_id
0     https://www.data.glygen.org/  ...            NaN
1     https://www.data.glygen.org/  ...            NaN
2     https://www.data.glygen.org/  ...            NaN
3     https://www.data.glygen.org/  ...            NaN
4     https://www.data.glygen.org/  ...            NaN
...                            ...  ...            ...
1936  https://www.data.glygen.org/  ...            NaN
1937  https://www.data.glygen.org/  ...            NaN
1938  https://www.data.glygen.org/  ...            NaN
1939  https://www.data.glygen.org/  ...            NaN
1940  https://www.data.glygen.org/  ...            NaN

[1941 rows x 20 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.12163233757019043 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/subject_in_collection.tsv ---------
ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/subject_in_collection.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['subject_id_namespace', 'subject_local_id', 'collection_id_namespace', 'collection_local_id']
*** Entering subject_in_collection to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [subject_id_namespace, subject_local_id, collection_id_namespace, collection_local_id]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.003814697265625 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/subject.tsv ---------
ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/subject.tsv
Read from file: df: #rows = 0, #cols: 10

pKeys: ['id_namespace', 'local_id']
*** Entering subject to database ***
df: #rows = 0, #cols: 10
df:
Empty DataFrame
Columns: [id_namespace, local_id, project_id_namespace, project_local_id, persistent_id, creation_time, granularity, sex, ethnicity, age_at_enrollment]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.003372669219970703 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/collection_defined_by_project.tsv ---------
ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/collection_defined_by_project.tsv
Read from file: df: #rows = 158551, #cols: 4

pKeys: ['collection_id_namespace', 'collection_local_id', 'project_id_namespace', 'project_local_id']
*** Entering collection_defined_by_project to database ***
df: #rows = 158551, #cols: 4
df:
             collection_id_namespace  ... project_local_id
0       https://www.data.glygen.org/  ...           Portal
1       https://www.data.glygen.org/  ...           Portal
2       https://www.data.glygen.org/  ...           Portal
3       https://www.data.glygen.org/  ...           Portal
4       https://www.data.glygen.org/  ...           Portal
...                              ...  ...              ...
158546  https://www.data.glygen.org/  ...        AD4489175
158547  https://www.data.glygen.org/  ...        AD3511701
158548  https://www.data.glygen.org/  ...        AD4548197
158549  https://www.data.glygen.org/  ...        AD5517222
158550  https://www.data.glygen.org/  ...        AD7677224

[158551 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 2.837059736251831 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/biosample.tsv ---------
ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/biosample.tsv
Read from file: df: #rows = 0, #cols: 8

pKeys: ['id_namespace', 'local_id']
*** Entering biosample to database ***
df: #rows = 0, #cols: 8
df:
Empty DataFrame
Columns: [id_namespace, local_id, project_id_namespace, project_local_id, persistent_id, creation_time, sample_prep_method, anatomy]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.006042003631591797 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/data_type.tsv ---------
ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/data_type.tsv
Read from file: df: #rows = 6, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.data_type;
qt_df:           pk
0  data:3495
1  data:1383
2  data:2048
3  data:2082
4  data:3002
5  data:2887
6  data:2968
---- Executed query, got data.frame: qt_df: #rows = 7, #cols: 1

df_pk (at most first 10 elements): ['ILX:0793824', 'ILX:0793825', 'data:1714', 'data:2764', 'data:3110', 'data:3111']
qt_pk (at most first 10 elements): ['data:3495', 'data:1383', 'data:2048', 'data:2082', 'data:3002', 'data:2887', 'data:2968']
---- Removed rows from df with matching pk
*** Entering data_type to database ***
df: #rows = 6, #cols: 4
df:
            id  ...                                           synonyms
0  ILX:0793824  ...                                                 []
1  ILX:0793825  ...                                                 []
2    data:1714  ...                                                 []
3    data:2764  ...                                                 []
4    data:3110  ...                                                 []
5    data:3111  ...  ["Gene annotation (expression)","Gene expressi...

[6 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.010129213333129883 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/anatomy.tsv ---------
ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/anatomy.tsv
Read from file: df: #rows = 66, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.anatomy;
qt_df:                  pk
0    UBERON:0000087
1    UBERON:0009834
2    UBERON:0010414
3    UBERON:0001736
4    UBERON:0002037
..              ...
119  UBERON:0000002
120  UBERON:0001496
121  UBERON:0000473
122  UBERON:0003714
123      CL:0002620

[124 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 124, #cols: 1

df_pk (at most first 10 elements): ['UBERON:0000002', 'UBERON:0000007', 'UBERON:0000029', 'UBERON:0000059', 'UBERON:0000086', 'UBERON:0000173', 'UBERON:0000178', 'UBERON:0000305', 'UBERON:0000317', 'UBERON:0000344']
qt_pk (at most first 10 elements): ['UBERON:0000087', 'UBERON:0009834', 'UBERON:0010414', 'UBERON:0001736', 'UBERON:0002037', 'UBERON:0001157', 'UBERON:0009835', 'UBERON:0001621', 'UBERON:0002097', 'UBERON:0001017']
---- Removed rows from df with matching pk
*** Entering anatomy to database ***
df: #rows = 44, #cols: 4
df:
                id  ...                                           synonyms
2   UBERON:0000029  ...                                                 []
3   UBERON:0000059  ...                                                 []
4   UBERON:0000086  ...            ["zona pellucida - vitelline membrane"]
5   UBERON:0000173  ...                                                 []
7   UBERON:0000305  ...                                         ["amnios"]
8   UBERON:0000317  ...  ["UBERON:0003347","UBERON:0004981","colon muco...
9   UBERON:0000344  ...  ["mucosa of organ","mucosa of organ part","muc...
13  UBERON:0000947  ...  ["trunk of aortic tree","trunk of systemic art...
15  UBERON:0000965  ...  ["camera-type eye lens","eye lens","lens","len...
16  UBERON:0000966  ...  ["inner layer of eyeball","retina of camera-ty...
17  UBERON:0000977  ...                            ["wall of pleural sac"]
19  UBERON:0000997  ...  ["female pudendum","mammalian vulva","puboperi...
20  UBERON:0001011  ...                                                 []
21  UBERON:0001040  ...                                                 []
22  UBERON:0001088  ...                                                 []
23  UBERON:0001090  ...                                    ["joint fluid"]
25  UBERON:0001199  ...  ["gastric mucosa","gastric mucous membrane","m...
26  UBERON:0001204  ...  ["mucosa of organ of small bowel","mucosa of o...
27  UBERON:0001207  ...  ["large intestinal mucosa","large intestine mu...
28  UBERON:0001212  ...  ["Brunner's gland","gland of Brunner","submuco...
30  UBERON:0001269  ...                 ["acetabular region","acetabulum"]
31  UBERON:0001301  ...                                                 []
32  UBERON:0001359  ...                    ["cerebral spinal fluid","CSF"]
35  UBERON:0001832  ...           ["ductus sublingualis","Rivinus' gland"]
36  UBERON:0001836  ...                       ["salivary gland secretion"]
37  UBERON:0001893  ...    ["cerebrum","endbrain","supratentorial region"]
39  UBERON:0001913  ...                             ["mammary gland milk"]
40  UBERON:0001914  ...                                                 []
42  UBERON:0001977  ...                                          ["serum"]
43  UBERON:0001987  ...        ["allantoic placenta","eutherian placenta"]
47  UBERON:0002066  ...                                                 []
51  UBERON:0002108  ...                  ["small bowel","small intestine"]
53  UBERON:0002131  ...  ["anterior cerebellar lobe","anterior lobe of ...
54  UBERON:0002255  ...  ["Jacobson's organ","organon vomeronasale","or...
55  UBERON:0002298  ...                 ["brain stem","truncus encephali"]
57  UBERON:0002371  ...                 ["medulla ossea","medulla ossium"]
58  UBERON:0002414  ...                                                 []
59  UBERON:0004134  ...  ["kidney proximal tubule","proximal kidney tub...
60  UBERON:0005777  ...  ["GBM","glomerular capillary basement membrane...
61  UBERON:0006530  ...                                 ["seminal plasma"]
62  UBERON:0007109  ...                                                 []
63  UBERON:0007779  ...                                                 []
64  UBERON:0007795  ...                                                 []
65  UBERON:0012248  ...                                                 []

[44 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.012210369110107422 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/collection_compound.tsv ---------
ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/collection_compound.tsv
Read from file: df: #rows = 517848, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'compound']
*** Entering collection_compound to database ***
df: #rows = 517848, #cols: 3
df:
             collection_id_namespace      collection_local_id  compound
0       https://www.data.glygen.org/  COL_G78482IS_GLY_000281  G78482IS
1       https://www.data.glygen.org/  COL_G56432LZ_GLY_000281  G56432LZ
2       https://www.data.glygen.org/  COL_G97770GP_GLY_000281  G97770GP
3       https://www.data.glygen.org/  COL_G60673DJ_GLY_000281  G60673DJ
4       https://www.data.glygen.org/  COL_G82363EY_GLY_000281  G82363EY
...                              ...                      ...       ...
517843  https://www.data.glygen.org/       AD7677224-S8973588  G30627OI
517844  https://www.data.glygen.org/       AD7677224-S8973588  G06594DV
517845  https://www.data.glygen.org/       AD7677224-S8973588  70698323
517846  https://www.data.glygen.org/       AD7677224-S8973588  G09520ZQ
517847  https://www.data.glygen.org/       AD7677224-S8973588     79025

[517848 rows x 3 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 6.8754799365997314 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/collection.tsv ---------
ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/collection.tsv
Read from file: df: #rows = 158551, #cols: 8

pKeys: ['id_namespace', 'local_id']
*** Entering collection to database ***
df: #rows = 158551, #cols: 8
df:
                        id_namespace  ... has_time_series_data
0       https://www.data.glygen.org/  ...                  NaN
1       https://www.data.glygen.org/  ...                  NaN
2       https://www.data.glygen.org/  ...                  NaN
3       https://www.data.glygen.org/  ...                  NaN
4       https://www.data.glygen.org/  ...                  NaN
...                              ...  ...                  ...
158546  https://www.data.glygen.org/  ...                  NaN
158547  https://www.data.glygen.org/  ...                  NaN
158548  https://www.data.glygen.org/  ...                  NaN
158549  https://www.data.glygen.org/  ...                  NaN
158550  https://www.data.glygen.org/  ...                  NaN

[158551 rows x 8 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 3.797947406768799 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/collection_disease.tsv ---------
ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/collection_disease.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'disease']
*** Entering collection_disease to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, disease]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.010190725326538086 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/phenotype_disease.tsv ---------
ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/phenotype_disease.tsv
Read from file: df: #rows = 0, #cols: 2

pKeys: ['phenotype', 'disease']
*** Entering phenotype_disease to database ***
df: #rows = 0, #cols: 2
df:
Empty DataFrame
Columns: [phenotype, disease]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0024476051330566406 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/project_in_project.tsv ---------
ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/project_in_project.tsv
Read from file: df: #rows = 991, #cols: 4

pKeys: ['parent_project_id_namespace', 'parent_project_local_id', 'child_project_id_namespace', 'child_project_local_id']
*** Entering project_in_project to database ***
df: #rows = 991, #cols: 4
df:
      parent_project_id_namespace  ... child_project_local_id
0    https://www.data.glygen.org/  ...                 Portal
1    https://www.data.glygen.org/  ...                  Array
2    https://www.data.glygen.org/  ...             AD10662905
3    https://www.data.glygen.org/  ...             AD10712497
4    https://www.data.glygen.org/  ...              AD4163938
..                            ...  ...                    ...
986  https://www.data.glygen.org/  ...              AD4489175
987  https://www.data.glygen.org/  ...              AD3511701
988  https://www.data.glygen.org/  ...              AD4548197
989  https://www.data.glygen.org/  ...              AD5517222
990  https://www.data.glygen.org/  ...              AD7677224

[991 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.021329164505004883 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/dcc.tsv ---------
ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/dcc.tsv
Read from file: df: #rows = 1, #cols: 9

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.dcc;
qt_df:                         pk
0  cfde_registry_dcc:exrna
1    cfde_registry_dcc:4dn
2   cfde_registry_dcc:gtex
---- Executed query, got data.frame: qt_df: #rows = 3, #cols: 1

df_pk (at most first 10 elements): ['cfde_registry_dcc:glygen']
qt_pk (at most first 10 elements): ['cfde_registry_dcc:exrna', 'cfde_registry_dcc:4dn', 'cfde_registry_dcc:gtex']
---- Removed rows from df with matching pk
*** Entering dcc to database ***
df: #rows = 1, #cols: 9
df:
                         id  ... project_local_id
0  cfde_registry_dcc:glygen  ...           GlyGen

[1 rows x 9 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.01232767105102539 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/biosample_in_collection.tsv ---------
ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/biosample_in_collection.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['biosample_id_namespace', 'biosample_local_id', 'collection_id_namespace', 'collection_local_id']
*** Entering biosample_in_collection to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [biosample_id_namespace, biosample_local_id, collection_id_namespace, collection_local_id]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0025954246520996094 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/collection_phenotype.tsv ---------
ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/collection_phenotype.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'phenotype']
*** Entering collection_phenotype to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, phenotype]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002397775650024414 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/collection_substance.tsv ---------
ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/collection_substance.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'substance']
*** Entering collection_substance to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, substance]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0023386478424072266 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/file_describes_collection.tsv ---------
ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/file_describes_collection.tsv
Read from file: df: #rows = 159455, #cols: 4

pKeys: ['file_id_namespace', 'file_local_id', 'collection_id_namespace', 'collection_local_id']
*** Entering file_describes_collection to database ***
df: #rows = 159455, #cols: 4
df:
                   file_id_namespace  ...          collection_local_id
0       https://www.data.glygen.org/  ...      COL_Q9ULV8-1_GLY_000001
1       https://www.data.glygen.org/  ...      COL_Q53R12-1_GLY_000001
2       https://www.data.glygen.org/  ...  COL_A0A075B6P5-1_GLY_000001
3       https://www.data.glygen.org/  ...      COL_O75153-1_GLY_000001
4       https://www.data.glygen.org/  ...      COL_Q17RY6-1_GLY_000001
...                              ...  ...                          ...
159450  https://www.data.glygen.org/  ...           AD4548197-S6095323
159451  https://www.data.glygen.org/  ...           AD5517222-S3098796
159452  https://www.data.glygen.org/  ...           AD5517222-S3098796
159453  https://www.data.glygen.org/  ...           AD7677224-S8973588
159454  https://www.data.glygen.org/  ...           AD7677224-S8973588

[159455 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 2.7084922790527344 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/file_in_collection.tsv ---------
ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/file_in_collection.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['file_id_namespace', 'file_local_id', 'collection_id_namespace', 'collection_local_id']
*** Entering file_in_collection to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [file_id_namespace, file_local_id, collection_id_namespace, collection_local_id]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.005159854888916016 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/protein_gene.tsv ---------
ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/protein_gene.tsv
Read from file: df: #rows = 0, #cols: 2

pKeys: ['protein', 'gene']
*** Entering protein_gene to database ***
df: #rows = 0, #cols: 2
df:
Empty DataFrame
Columns: [protein, gene]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0024406909942626953 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/collection_anatomy.tsv ---------
ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/collection_anatomy.tsv
Read from file: df: #rows = 3520, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'anatomy']
*** Entering collection_anatomy to database ***
df: #rows = 3520, #cols: 3
df:
           collection_id_namespace      collection_local_id         anatomy
0     https://www.data.glygen.org/  COL_Q5UIP0-1_GLY_000329  UBERON:0001911
1     https://www.data.glygen.org/  COL_P04004-1_GLY_000329  UBERON:0001977
2     https://www.data.glygen.org/  COL_P04004-1_GLY_000329  UBERON:0001911
3     https://www.data.glygen.org/  COL_P04004-1_GLY_000329  UBERON:0001913
4     https://www.data.glygen.org/  COL_P04004-1_GLY_000329  UBERON:0001969
...                            ...                      ...             ...
3515  https://www.data.glygen.org/  COL_G02402FF_GLY_000630  UBERON:0000922
3516  https://www.data.glygen.org/  COL_G74724QE_GLY_000630  UBERON:0000922
3517  https://www.data.glygen.org/  COL_G89319AW_GLY_000630  UBERON:0000922
3518  https://www.data.glygen.org/  COL_G31685JQ_GLY_000630  UBERON:0000922
3519  https://www.data.glygen.org/  COL_G63628AV_GLY_000630  UBERON:0000922

[3520 rows x 3 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.04867434501647949 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/biosample_gene.tsv ---------
ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/biosample_gene.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['biosample_id_namespace', 'biosample_local_id', 'gene']
*** Entering biosample_gene to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [biosample_id_namespace, biosample_local_id, gene]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0033473968505859375 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/compound.tsv ---------
ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/compound.tsv
Read from file: df: #rows = 45191, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.compound;
qt_df: Empty DataFrame
Columns: [pk]
Index: []
---- Executed query, got data.frame: qt_df: #rows = 0, #cols: 1

df_pk (at most first 10 elements): ['10000009', '10008718', '10011812', '10022829', '10023700', '10053824', '10062728', '10062742', '10062744', '10074840']
qt_pk (at most first 10 elements): []
---- Removed rows from df with matching pk
*** Entering compound to database ***
df: #rows = 45191, #cols: 4
df:
             id  ...                                           synonyms
0      10000009  ...  ["WURCS=2.0/2,2,1/[a2122h-1x_1-5][a2112h-1b_1-...
1      10008718  ...  ["(GlcA)1 (GlcNAc)2", "beta-D-GlcpNAc-(1->4)-b...
2      10011812  ...  ["WURCS=2.0/5,5,4/[a2122h-1x_1-5_2*NSO/3=O/3=O...
3      10022829  ...  ["WURCS=2.0/2,2,1/[a2122h-1x_1-5_2*NCC/3=O][a2...
4      10023700  ...  ["WURCS=2.0/2,2,1/[a2122A-1x_1-5][a2122h-1b_1-...
...         ...  ...                                                ...
45186  G99991DB  ...                                                 []
45187  G99992LL  ...                                                 []
45188  G99993SZ  ...                                                 []
45189  G99994YV  ...                                                 []
45190  G99997WS  ...                                                 []

[45191 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 10.798271179199219 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/biosample_substance.tsv ---------
ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/biosample_substance.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['biosample_id_namespace', 'biosample_local_id', 'substance']
*** Entering biosample_substance to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [biosample_id_namespace, biosample_local_id, substance]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0036673545837402344 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/ncbi_taxonomy.tsv ---------
ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/ncbi_taxonomy.tsv
Read from file: df: #rows = 9, #cols: 5

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.ncbi_taxonomy;
qt_df:                pk
0  NCBI:txid60711
1  NCBI:txid10090
2  NCBI:txid10036
3   NCBI:txid7955
4   NCBI:txid9031
5   NCBI:txid7227
6   NCBI:txid9606
---- Executed query, got data.frame: qt_df: #rows = 7, #cols: 1

df_pk (at most first 10 elements): ['NCBI:txid10090', 'NCBI:txid10116', 'NCBI:txid11108', 'NCBI:txid11116', 'NCBI:txid2697049', 'NCBI:txid63746', 'NCBI:txid694009', 'NCBI:txid7227', 'NCBI:txid9606']
qt_pk (at most first 10 elements): ['NCBI:txid60711', 'NCBI:txid10090', 'NCBI:txid10036', 'NCBI:txid7955', 'NCBI:txid9031', 'NCBI:txid7227', 'NCBI:txid9606']
---- Removed rows from df with matching pk
*** Entering ncbi_taxonomy to database ***
df: #rows = 6, #cols: 5
df:
                 id  ...                                           synonyms
1    NCBI:txid10116  ...                         ["rats", "Mus norvegicus"]
2    NCBI:txid11108  ...           ["HCV-H", "Hepatitis C virus isolate H"]
3    NCBI:txid11116  ...                                                 []
4  NCBI:txid2697049  ...  ["2019-nCoV", "COVID-19 virus", "HCoV-19", "Hu...
5    NCBI:txid63746  ...                   ["Hepatitis C virus strain H77"]
6   NCBI:txid694009  ...  ["HCoV-SARS", "Human coronavirus (strain SARS)...

[6 rows x 5 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.012237787246704102 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/sample_prep_method.tsv ---------
ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/sample_prep_method.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['id']
*** Entering sample_prep_method to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002645730972290039 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/id_namespace.tsv ---------
ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/id_namespace.tsv
Read from file: df: #rows = 1, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.id_namespace;
qt_df:                             pk
0                        egtex
1  https://data.4dnucleome.org
2                         gtex
3                   ERCC-exRNA
4                   adult_gtex
---- Executed query, got data.frame: qt_df: #rows = 5, #cols: 1

df_pk (at most first 10 elements): ['https://www.data.glygen.org/']
qt_pk (at most first 10 elements): ['egtex', 'https://data.4dnucleome.org', 'gtex', 'ERCC-exRNA', 'adult_gtex']
---- Removed rows from df with matching pk
*** Entering id_namespace to database ***
df: #rows = 1, #cols: 4
df:
                             id  ...         description
0  https://www.data.glygen.org/  ...  The GlyGen project

[1 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.009015083312988281 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/biosample_from_subject.tsv ---------
ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/biosample_from_subject.tsv
Read from file: df: #rows = 0, #cols: 5

pKeys: ['biosample_id_namespace', 'biosample_local_id', 'subject_id_namespace', 'subject_local_id']
*** Entering biosample_from_subject to database ***
Processing C2M2 Files...:  33%|███▎      | 4/12 [06:22<14:44, 110.57s/it]df: #rows = 0, #cols: 5
df:
Empty DataFrame
Columns: [biosample_id_namespace, biosample_local_id, subject_id_namespace, subject_local_id, age_at_sampling]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002969026565551758 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/assay_type.tsv ---------
ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/assay_type.tsv
Read from file: df: #rows = 1, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.assay_type;
qt_df:               pk
0    OBI:0003306
1    OBI:0003104
2    OBI:0002984
3    OBI:0000185
4    OBI:0003300
5    OBI:0003312
6    OBI:0001631
7    OBI:0003301
8    OBI:0003033
9    OBI:0003094
10   OBI:0000893
11   OBI:0003311
12   OBI:0002631
13   OBI:0003297
14   OBI:0001920
15   OBI:0000716
16   OBI:0001177
17   OBI:0003314
18   OBI:0002112
19   OBI:0001848
20   OBI:0003313
21   OBI:0003299
22   OBI:0003089
23   OBI:0003105
24   OBI:0000626
25   OBI:0003305
26   OBI:0003304
27   OBI:0003303
28   OBI:0003034
29   OBI:0600047
30  CHMO:0000087
31   OBI:0003302
32   OBI:0001271
---- Executed query, got data.frame: qt_df: #rows = 33, #cols: 1

df_pk (at most first 10 elements): ['OBI:0001985']
qt_pk (at most first 10 elements): ['OBI:0003306', 'OBI:0003104', 'OBI:0002984', 'OBI:0000185', 'OBI:0003300', 'OBI:0003312', 'OBI:0001631', 'OBI:0003301', 'OBI:0003033', 'OBI:0003094']
---- Removed rows from df with matching pk
*** Entering assay_type to database ***
df: #rows = 1, #cols: 4
df:
            id  ... synonyms
0  OBI:0001985  ...       []

[1 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.009503364562988281 seconds.

--------- ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/protein.tsv ---------
ingest/c2m2s/GlyGen/datapackage/autogenerated_C2M2_term_tables/data/protein.tsv
Read from file: df: #rows = 79221, #cols: 5

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.protein;
qt_df: Empty DataFrame
Columns: [pk]
Index: []
---- Executed query, got data.frame: qt_df: #rows = 0, #cols: 1

df_pk (at most first 10 elements): ['A0A021WW64', 'A0A023GPK8', 'A0A023GRW3', 'A0A023IKK2', 'A0A024R1R8', 'A0A024RBG1', 'A0A024RCN7', 'A0A075B5I0', 'A0A075B5I2', 'A0A075B5I3']
qt_pk (at most first 10 elements): []
---- Removed rows from df with matching pk
*** Entering protein to database ***
df: #rows = 79221, #cols: 5
df:
               id              name  ...             synonyms        organism
0      A0A021WW64  A0A021WW64_DROME  ...                   []   NCBI:txid7227
1      A0A023GPK8  A0A023GPK8_DROME  ...                   []   NCBI:txid7227
2      A0A023GRW3  A0A023GRW3_DROME  ...                   []   NCBI:txid7227
3      A0A023IKK2    A0A023IKK2_RAT  ...                   []  NCBI:txid10116
4      A0A024R1R8       TMA7B_HUMAN  ...                   []   NCBI:txid9606
...           ...               ...  ...                  ...             ...
79216      X2JLD3      X2JLD3_DROME  ...                   []   NCBI:txid7227
79217      X4YX01      X4YX01_DROME  ...                   []   NCBI:txid7227
79218      X6R8D5       GUCNB_HUMAN  ...  ["GUCA1A neighbor"]   NCBI:txid9606
79219      X6R8R1       ST15B_HUMAN  ...                   []   NCBI:txid9606
79220      Z4YNJ9        Z4YNJ9_RAT  ...                   []  NCBI:txid10116

[79221 rows x 5 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 30.994866371154785 seconds.


================================== DCC short label: HMP =============================================
Unpack zip file: c2m2_extract_path: ingest/c2m2s/HMP/datapackage
--------- ingest/c2m2s/HMP/datapackage/merged/data/subject_race.tsv ---------
ingest/c2m2s/HMP/datapackage/merged/data/subject_race.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['subject_id_namespace', 'subject_local_id', 'race']
*** Entering subject_race to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [subject_id_namespace, subject_local_id, race]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.005270957946777344 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/protein.tsv ---------
ingest/c2m2s/HMP/datapackage/merged/data/protein.tsv
Read from file: df: #rows = 0, #cols: 5

pKeys: ['id']
*** Entering protein to database ***
df: #rows = 0, #cols: 5
df:
Empty DataFrame
Columns: [id, name, description, synonyms, organism]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002855539321899414 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/disease.tsv ---------
ingest/c2m2s/HMP/datapackage/merged/data/disease.tsv
Read from file: df: #rows = 8, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.disease;
qt_df:               pk
0     DOID:10534
1     DOID:10652
2     DOID:10941
3      DOID:9074
4      DOID:1184
5      DOID:3073
6      DOID:1520
7     DOID:12217
8      DOID:1287
9      DOID:4905
10     DOID:9744
11      DOID:219
12    DOID:10286
13     DOID:9256
14     DOID:5844
15     DOID:2377
16     DOID:2841
17     DOID:6000
18     DOID:8577
19    DOID:14330
20  DOID:0080832
21     DOID:6713
22      DOID:409
---- Executed query, got data.frame: qt_df: #rows = 23, #cols: 1

df_pk (at most first 10 elements): ['DOID:4914', 'DOID:5295', 'DOID:8677', 'DOID:8778', 'DOID:8893', 'DOID:934', 'DOID:9778', 'DOID:9970']
qt_pk (at most first 10 elements): ['DOID:10534', 'DOID:10652', 'DOID:10941', 'DOID:9074', 'DOID:1184', 'DOID:3073', 'DOID:1520', 'DOID:12217', 'DOID:1287', 'DOID:4905']
---- Removed rows from df with matching pk
*** Entering disease to database ***
df: #rows = 8, #cols: 4
df:
          id  ...                                           synonyms
0  DOID:4914  ...                     ["Oesophageal adenocarcinoma"]
1  DOID:5295  ...  ["DOID:10759","DOID:11222","DOID:11789","DOID:...
2  DOID:8677  ...  ["ENTEROCOLITIS NECROTIZING","necrotizing ente...
3  DOID:8778  ...  ["DOID:8784","DOID:8855","DOID:8942","Crohn di...
4  DOID:8893  ...                                                 []
5   DOID:934  ...  ["DOID:1329","Viral disease","Viral Infection"...
6  DOID:9778  ...                          ["IBD","Irritable colon"]
7  DOID:9970  ...                                                 []

[8 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.014539718627929688 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/phenotype_gene.tsv ---------
ingest/c2m2s/HMP/datapackage/merged/data/phenotype_gene.tsv
Read from file: df: #rows = 0, #cols: 2

pKeys: ['phenotype', 'gene']
*** Entering phenotype_gene to database ***
df: #rows = 0, #cols: 2
df:
Empty DataFrame
Columns: [phenotype, gene]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002309083938598633 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/dcc.tsv ---------
ingest/c2m2s/HMP/datapackage/merged/data/dcc.tsv
Read from file: df: #rows = 1, #cols: 9

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.dcc;
qt_df:                          pk
0  cfde_registry_dcc:glygen
1   cfde_registry_dcc:exrna
2     cfde_registry_dcc:4dn
3    cfde_registry_dcc:gtex
---- Executed query, got data.frame: qt_df: #rows = 4, #cols: 1

df_pk (at most first 10 elements): ['cfde_registry_dcc:hmp']
qt_pk (at most first 10 elements): ['cfde_registry_dcc:glygen', 'cfde_registry_dcc:exrna', 'cfde_registry_dcc:4dn', 'cfde_registry_dcc:gtex']
---- Removed rows from df with matching pk
*** Entering dcc to database ***
df: #rows = 1, #cols: 9
df:
                      id  ... project_local_id
0  cfde_registry_dcc:hmp  ...              HMP

[1 rows x 9 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.012196540832519531 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/biosample_in_collection.tsv ---------
ingest/c2m2s/HMP/datapackage/merged/data/biosample_in_collection.tsv
Read from file: df: #rows = 58417, #cols: 4

pKeys: ['biosample_id_namespace', 'biosample_local_id', 'collection_id_namespace', 'collection_local_id']
*** Entering biosample_in_collection to database ***
df: #rows = 58417, #cols: 4
df:
            biosample_id_namespace  ...      collection_local_id
0      tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000002
1      tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000003
2      tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000004
3      tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000007
4      tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000008
...                            ...  ...                      ...
58412  tag:hmpdacc.org,2022-04-04:  ...      hmwgsqcv2_SRS971275
58413  tag:hmpdacc.org,2022-04-04:  ...      hmwgsqcv2_SRS971276
58414  tag:hmpdacc.org,2022-04-04:  ...      hmwgsqcv2_SRS971277
58415  tag:hmpdacc.org,2022-04-04:  ...      hmwgsqcv2_SRS971427
58416  tag:hmpdacc.org,2022-04-04:  ...      hmwgsqcv2_SRS971428

[58417 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.9330360889434814 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/biosample_disease.tsv ---------
ingest/c2m2s/HMP/datapackage/merged/data/biosample_disease.tsv
Read from file: df: #rows = 2531, #cols: 4

pKeys: ['biosample_id_namespace', 'biosample_local_id', 'association_type', 'disease']
*** Entering biosample_disease to database ***
df: #rows = 2531, #cols: 4
df:
           biosample_id_namespace  ...    disease
0     tag:hmpdacc.org,2022-04-04:  ...  DOID:4914
1     tag:hmpdacc.org,2022-04-04:  ...  DOID:4914
2     tag:hmpdacc.org,2022-04-04:  ...  DOID:4914
3     tag:hmpdacc.org,2022-04-04:  ...  DOID:4914
4     tag:hmpdacc.org,2022-04-04:  ...  DOID:4914
...                           ...  ...        ...
2526  tag:hmpdacc.org,2022-04-04:  ...  DOID:9970
2527  tag:hmpdacc.org,2022-04-04:  ...  DOID:9970
2528  tag:hmpdacc.org,2022-04-04:  ...  DOID:9970
2529  tag:hmpdacc.org,2022-04-04:  ...  DOID:9970
2530  tag:hmpdacc.org,2022-04-04:  ...  DOID:9970

[2531 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.042748451232910156 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/biosample_from_subject.tsv ---------
ingest/c2m2s/HMP/datapackage/merged/data/biosample_from_subject.tsv
Read from file: df: #rows = 49471, #cols: 5

pKeys: ['biosample_id_namespace', 'biosample_local_id', 'subject_id_namespace', 'subject_local_id']
*** Entering biosample_from_subject to database ***
df: #rows = 49471, #cols: 5
df:
            biosample_id_namespace  ... age_at_sampling
0      tag:hmpdacc.org,2022-04-04:  ...             NaN
1      tag:hmpdacc.org,2022-04-04:  ...             NaN
2      tag:hmpdacc.org,2022-04-04:  ...             NaN
3      tag:hmpdacc.org,2022-04-04:  ...             NaN
4      tag:hmpdacc.org,2022-04-04:  ...             NaN
...                            ...  ...             ...
49466  tag:hmpdacc.org,2022-04-04:  ...             NaN
49467  tag:hmpdacc.org,2022-04-04:  ...             NaN
49468  tag:hmpdacc.org,2022-04-04:  ...             NaN
49469  tag:hmpdacc.org,2022-04-04:  ...             NaN
49470  tag:hmpdacc.org,2022-04-04:  ...             NaN

[49471 rows x 5 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.8471107482910156 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/subject.tsv ---------
ingest/c2m2s/HMP/datapackage/merged/data/subject.tsv
Read from file: df: #rows = 7903, #cols: 10

pKeys: ['id_namespace', 'local_id']
*** Entering subject to database ***
df: #rows = 7903, #cols: 10
df:
                     id_namespace        local_id  ... ethnicity age_at_enrollment
0     tag:hmpdacc.org,2022-04-04:   HHS_158458797  ...       NaN               NaN
1     tag:hmpdacc.org,2022-04-04:   HHS_158479027  ...       NaN               NaN
2     tag:hmpdacc.org,2022-04-04:   HHS_158499257  ...       NaN               NaN
3     tag:hmpdacc.org,2022-04-04:   HHS_158742018  ...       NaN               NaN
4     tag:hmpdacc.org,2022-04-04:   HHS_158802708  ...       NaN               NaN
...                           ...             ...  ...       ...               ...
7898  tag:hmpdacc.org,2022-04-04:  PRJNA46331_418  ...       NaN               NaN
7899  tag:hmpdacc.org,2022-04-04:  PRJNA46331_410  ...       NaN               NaN
7900  tag:hmpdacc.org,2022-04-04:  PRJNA46331_445  ...       NaN               NaN
7901  tag:hmpdacc.org,2022-04-04:  PRJNA46331_424  ...       NaN               NaN
7902  tag:hmpdacc.org,2022-04-04:  PRJNA46331_413  ...       NaN               NaN

[7903 rows x 10 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.19394898414611816 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/anatomy.tsv ---------
ingest/c2m2s/HMP/datapackage/merged/data/anatomy.tsv
Read from file: df: #rows = 95, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.anatomy;
qt_df:                  pk
0    UBERON:0000087
1    UBERON:0001199
2    UBERON:0009834
3    UBERON:0010414
4    UBERON:0001736
..              ...
163  UBERON:0001496
164  UBERON:0000473
165  UBERON:0003714
166      CL:0002620
167  UBERON:0001914

[168 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 168, #cols: 1

df_pk (at most first 10 elements): ['UBERON:0000002', 'UBERON:0000003', 'UBERON:0000004', 'UBERON:0000029', 'UBERON:0000165', 'UBERON:0000167', 'UBERON:0000178', 'UBERON:0000341', 'UBERON:0000376', 'UBERON:0000403']
qt_pk (at most first 10 elements): ['UBERON:0000087', 'UBERON:0001199', 'UBERON:0009834', 'UBERON:0010414', 'UBERON:0001736', 'UBERON:0002037', 'UBERON:0001157', 'UBERON:0009835', 'UBERON:0001621', 'UBERON:0002097']
---- Removed rows from df with matching pk
*** Entering anatomy to database ***
df: #rows = 76, #cols: 4
df:
                id  ...                                           synonyms
1   UBERON:0000003  ...                                                 []
2   UBERON:0000004  ...  ["nasal sac","nose","peripheral olfactory organ"]
4   UBERON:0000165  ...                    ["regio oralis","regio oralis"]
7   UBERON:0000341  ...                                                 []
8   UBERON:0000376  ...  ["hind limb stylopod","hind limb stylopodium",...
..             ...  ...                                                ...
90  UBERON:0034766  ...                                                 []
91  UBERON:0035295  ...                                                 []
92  UBERON:2001427  ...                               ["anterior nostril"]
93  UBERON:2001553  ...  ["intercalarium anterior process","intercalari...
94  UBERON:3011048  ...                                                 []

[76 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.014052152633666992 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/collection_anatomy.tsv ---------
ingest/c2m2s/HMP/datapackage/merged/data/collection_anatomy.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'anatomy']
*** Entering collection_anatomy to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, anatomy]
Index: []
>>> All good.
/home/mano/DRC/DRC-Portals/database/populateC2M2FromS3_MRM.py:257: DtypeWarning: Columns (4,19) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv(table_str, delimiter='\t');
>>>>>>>> Time taken to ingest the metadata from this file: 0.00244140625 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/file.tsv ---------
ingest/c2m2s/HMP/datapackage/merged/data/file.tsv
Read from file: df: #rows = 251136, #cols: 20

pKeys: ['id_namespace', 'local_id']
*** Entering file to database ***
df: #rows = 251136, #cols: 20
df:
                       id_namespace  ... dbgap_study_id
0       tag:hmpdacc.org,2022-04-04:  ...            NaN
1       tag:hmpdacc.org,2022-04-04:  ...            NaN
2       tag:hmpdacc.org,2022-04-04:  ...            NaN
3       tag:hmpdacc.org,2022-04-04:  ...            NaN
4       tag:hmpdacc.org,2022-04-04:  ...            NaN
...                             ...  ...            ...
251131  tag:hmpdacc.org,2022-04-04:  ...            NaN
251132  tag:hmpdacc.org,2022-04-04:  ...            NaN
251133  tag:hmpdacc.org,2022-04-04:  ...            NaN
251134  tag:hmpdacc.org,2022-04-04:  ...            NaN
251135  tag:hmpdacc.org,2022-04-04:  ...            NaN

[251136 rows x 20 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 13.188294649124146 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/file_in_collection.tsv ---------
ingest/c2m2s/HMP/datapackage/merged/data/file_in_collection.tsv
Read from file: df: #rows = 36849, #cols: 4

pKeys: ['file_id_namespace', 'file_local_id', 'collection_id_namespace', 'collection_local_id']
*** Entering file_in_collection to database ***
df: #rows = 36849, #cols: 4
df:
                 file_id_namespace  ...      collection_local_id
0      tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000002
1      tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000002
2      tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000003
3      tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000003
4      tag:hmpdacc.org,2022-04-04:  ...  2010RefGen_SAMN00000004
...                            ...  ...                      ...
36844  tag:hmpdacc.org,2022-04-04:  ...      hmwgsqcv2_SRS971275
36845  tag:hmpdacc.org,2022-04-04:  ...      hmwgsqcv2_SRS971276
36846  tag:hmpdacc.org,2022-04-04:  ...      hmwgsqcv2_SRS971277
36847  tag:hmpdacc.org,2022-04-04:  ...      hmwgsqcv2_SRS971427
36848  tag:hmpdacc.org,2022-04-04:  ...      hmwgsqcv2_SRS971428

[36849 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.6419966220855713 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/project.tsv ---------
ingest/c2m2s/HMP/datapackage/merged/data/project.tsv
Read from file: df: #rows = 24, #cols: 7

pKeys: ['id_namespace', 'local_id']
*** Entering project to database ***
df: #rows = 24, #cols: 7
df:
                   id_namespace  ...                                        description
0   tag:hmpdacc.org,2022-04-04:  ...  The Human Microbiome Project (HMP) was a Commo...
1   tag:hmpdacc.org,2022-04-04:  ...  Phase 1 of the Human Microbiome Project had th...
2   tag:hmpdacc.org,2022-04-04:  ...  The Healthy Human Subjects project is part of ...
3   tag:hmpdacc.org,2022-04-04:  ...  Human Microbiome Project Demonstration Project...
4   tag:hmpdacc.org,2022-04-04:  ...  This project involved studying the differences...
5   tag:hmpdacc.org,2022-04-04:  ...  This project investigated the effect of a woma...
6   tag:hmpdacc.org,2022-04-04:  ...  This project investigated how changes in the h...
7   tag:hmpdacc.org,2022-04-04:  ...  The goal of the project was to determine wheth...
8   tag:hmpdacc.org,2022-04-04:  ...  This project involved characterization of the ...
9   tag:hmpdacc.org,2022-04-04:  ...  This project evaluated the "Thrifty Microbiome...
10  tag:hmpdacc.org,2022-04-04:  ...  This project evaluated the contribution of the...
11  tag:hmpdacc.org,2022-04-04:  ...  This project evaluated the hypothesis that the...
12  tag:hmpdacc.org,2022-04-04:  ...  This project tested the hypothesis that change...
13  tag:hmpdacc.org,2022-04-04:  ...  This project evaluated the association between...
14  tag:hmpdacc.org,2022-04-04:  ...  This project involved characterization of all ...
15  tag:hmpdacc.org,2022-04-04:  ...  This project explored the role of the neonatal...
16  tag:hmpdacc.org,2022-04-04:  ...  This project determined the nature of the huma...
17  tag:hmpdacc.org,2022-04-04:  ...  This project evaluated the role of the enteric...
18  tag:hmpdacc.org,2022-04-04:  ...  The goal of this project was to investigate th...
19  tag:hmpdacc.org,2022-04-04:  ...  As part of the Human Microbiome Project Phase ...
20  tag:hmpdacc.org,2022-04-04:  ...  The Integrative Human Microbiome Project (iHMP...
21  tag:hmpdacc.org,2022-04-04:  ...  This project characterized the microbiomes of ...
22  tag:hmpdacc.org,2022-04-04:  ...  This study includes multi'omics measurements f...
23  tag:hmpdacc.org,2022-04-04:  ...  The goal of this project was to better underst...

[24 rows x 7 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.013299942016601562 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/biosample.tsv ---------
ingest/c2m2s/HMP/datapackage/merged/data/biosample.tsv
Read from file: df: #rows = 51873, #cols: 8

pKeys: ['id_namespace', 'local_id']
*** Entering biosample to database ***
df: #rows = 51873, #cols: 8
df:
                      id_namespace  ...         anatomy
0      tag:hmpdacc.org,2022-04-04:  ...  UBERON:2001427
1      tag:hmpdacc.org,2022-04-04:  ...  UBERON:2001427
2      tag:hmpdacc.org,2022-04-04:  ...  UBERON:2001427
3      tag:hmpdacc.org,2022-04-04:  ...  UBERON:2001427
4      tag:hmpdacc.org,2022-04-04:  ...  UBERON:2001427
...                            ...  ...             ...
51868  tag:hmpdacc.org,2022-04-04:  ...             NaN
51869  tag:hmpdacc.org,2022-04-04:  ...             NaN
51870  tag:hmpdacc.org,2022-04-04:  ...             NaN
51871  tag:hmpdacc.org,2022-04-04:  ...             NaN
51872  tag:hmpdacc.org,2022-04-04:  ...             NaN

[51873 rows x 8 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.1069543361663818 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/collection_taxonomy.tsv ---------
ingest/c2m2s/HMP/datapackage/merged/data/collection_taxonomy.tsv
Read from file: df: #rows = 6022, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'taxon']
*** Entering collection_taxonomy to database ***
df: #rows = 6022, #cols: 3
df:
          collection_id_namespace  ...             taxon
0     tag:hmpdacc.org,2022-04-04:  ...   NCBI:txid445970
1     tag:hmpdacc.org,2022-04-04:  ...   NCBI:txid445972
2     tag:hmpdacc.org,2022-04-04:  ...   NCBI:txid449673
3     tag:hmpdacc.org,2022-04-04:  ...   NCBI:txid445974
4     tag:hmpdacc.org,2022-04-04:  ...   NCBI:txid411461
...                           ...  ...               ...
6017  tag:hmpdacc.org,2022-04-04:  ...  NCBI:txid1161743
6018  tag:hmpdacc.org,2022-04-04:  ...  NCBI:txid1161744
6019  tag:hmpdacc.org,2022-04-04:  ...  NCBI:txid1161904
6020  tag:hmpdacc.org,2022-04-04:  ...  NCBI:txid1161745
6021  tag:hmpdacc.org,2022-04-04:  ...  NCBI:txid1161902

[6022 rows x 3 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.08774352073669434 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/protein_gene.tsv ---------
ingest/c2m2s/HMP/datapackage/merged/data/protein_gene.tsv
Read from file: df: #rows = 0, #cols: 2

pKeys: ['protein', 'gene']
*** Entering protein_gene to database ***
df: #rows = 0, #cols: 2
df:
Empty DataFrame
Columns: [protein, gene]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.003197193145751953 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/collection_protein.tsv ---------
ingest/c2m2s/HMP/datapackage/merged/data/collection_protein.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'protein']
*** Entering collection_protein to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, protein]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0023450851440429688 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/collection_defined_by_project.tsv ---------
ingest/c2m2s/HMP/datapackage/merged/data/collection_defined_by_project.tsv
Read from file: df: #rows = 20146, #cols: 4

pKeys: ['collection_id_namespace', 'collection_local_id', 'project_id_namespace', 'project_local_id']
*** Entering collection_defined_by_project to database ***
df: #rows = 20146, #cols: 4
df:
           collection_id_namespace  ... project_local_id
0      tag:hmpdacc.org,2022-04-04:  ...           RefGen
1      tag:hmpdacc.org,2022-04-04:  ...           RefGen
2      tag:hmpdacc.org,2022-04-04:  ...           RefGen
3      tag:hmpdacc.org,2022-04-04:  ...           RefGen
4      tag:hmpdacc.org,2022-04-04:  ...           RefGen
...                            ...  ...              ...
20141  tag:hmpdacc.org,2022-04-04:  ...              HHS
20142  tag:hmpdacc.org,2022-04-04:  ...              HHS
20143  tag:hmpdacc.org,2022-04-04:  ...              HHS
20144  tag:hmpdacc.org,2022-04-04:  ...              HHS
20145  tag:hmpdacc.org,2022-04-04:  ...              HHS

[20146 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.33716678619384766 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/collection_compound.tsv ---------
ingest/c2m2s/HMP/datapackage/merged/data/collection_compound.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'compound']
*** Entering collection_compound to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, compound]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0035178661346435547 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/phenotype.tsv ---------
ingest/c2m2s/HMP/datapackage/merged/data/phenotype.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['id']
*** Entering phenotype to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0024514198303222656 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/subject_in_collection.tsv ---------
ingest/c2m2s/HMP/datapackage/merged/data/subject_in_collection.tsv
Read from file: df: #rows = 21563, #cols: 4

pKeys: ['subject_id_namespace', 'subject_local_id', 'collection_id_namespace', 'collection_local_id']
*** Entering subject_in_collection to database ***
df: #rows = 21563, #cols: 4
df:
              subject_id_namespace  ...    collection_local_id
0      tag:hmpdacc.org,2022-04-04:  ...  hmasm1_anterior_nares
1      tag:hmpdacc.org,2022-04-04:  ...  hmasm1_anterior_nares
2      tag:hmpdacc.org,2022-04-04:  ...  hmasm1_anterior_nares
3      tag:hmpdacc.org,2022-04-04:  ...  hmasm1_anterior_nares
4      tag:hmpdacc.org,2022-04-04:  ...  hmasm1_anterior_nares
...                            ...  ...                    ...
21558  tag:hmpdacc.org,2022-04-04:  ...    hmwgsqcv2_SRS971275
21559  tag:hmpdacc.org,2022-04-04:  ...    hmwgsqcv2_SRS971276
21560  tag:hmpdacc.org,2022-04-04:  ...    hmwgsqcv2_SRS971277
21561  tag:hmpdacc.org,2022-04-04:  ...    hmwgsqcv2_SRS971427
21562  tag:hmpdacc.org,2022-04-04:  ...    hmwgsqcv2_SRS971428

[21563 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.3803279399871826 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/id_namespace.tsv ---------
ingest/c2m2s/HMP/datapackage/merged/data/id_namespace.tsv
Read from file: df: #rows = 1, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.id_namespace;
qt_df:                              pk
0                         egtex
1  https://www.data.glygen.org/
2   https://data.4dnucleome.org
3                          gtex
4                    ERCC-exRNA
5                    adult_gtex
---- Executed query, got data.frame: qt_df: #rows = 6, #cols: 1

df_pk (at most first 10 elements): ['tag:hmpdacc.org,2022-04-04:']
qt_pk (at most first 10 elements): ['egtex', 'https://www.data.glygen.org/', 'https://data.4dnucleome.org', 'gtex', 'ERCC-exRNA', 'adult_gtex']
---- Removed rows from df with matching pk
*** Entering id_namespace to database ***
df: #rows = 1, #cols: 4
df:
                            id  ...                                        description
0  tag:hmpdacc.org,2022-04-04:  ...  The default identifier namespace id_namespace ...

[1 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.011328697204589844 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/subject_phenotype.tsv ---------
ingest/c2m2s/HMP/datapackage/merged/data/subject_phenotype.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['subject_id_namespace', 'subject_local_id', 'association_type', 'phenotype']
*** Entering subject_phenotype to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [subject_id_namespace, subject_local_id, association_type, phenotype]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002698659896850586 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/substance.tsv ---------
ingest/c2m2s/HMP/datapackage/merged/data/substance.tsv
Read from file: df: #rows = 0, #cols: 5

pKeys: ['id']
*** Entering substance to database ***
df: #rows = 0, #cols: 5
df:
Empty DataFrame
Columns: [id, name, description, synonyms, compound]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0027408599853515625 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/collection_in_collection.tsv ---------
ingest/c2m2s/HMP/datapackage/merged/data/collection_in_collection.tsv
Read from file: df: #rows = 20124, #cols: 4

pKeys: ['superset_collection_id_namespace', 'superset_collection_local_id', 'subset_collection_id_namespace', 'subset_collection_local_id']
*** Entering collection_in_collection to database ***
df: #rows = 20124, #cols: 4
df:
      superset_collection_id_namespace  ... subset_collection_local_id
0          tag:hmpdacc.org,2022-04-04:  ...    2010RefGen_SAMN00000002
1          tag:hmpdacc.org,2022-04-04:  ...    2010RefGen_SAMN00000003
2          tag:hmpdacc.org,2022-04-04:  ...    2010RefGen_SAMN00000004
3          tag:hmpdacc.org,2022-04-04:  ...    2010RefGen_SAMN00000007
4          tag:hmpdacc.org,2022-04-04:  ...    2010RefGen_SAMN00000008
...                                ...  ...                        ...
20119      tag:hmpdacc.org,2022-04-04:  ...        hmwgsqcv2_SRS971275
20120      tag:hmpdacc.org,2022-04-04:  ...        hmwgsqcv2_SRS971276
20121      tag:hmpdacc.org,2022-04-04:  ...        hmwgsqcv2_SRS971277
20122      tag:hmpdacc.org,2022-04-04:  ...        hmwgsqcv2_SRS971427
20123      tag:hmpdacc.org,2022-04-04:  ...        hmwgsqcv2_SRS971428

[20124 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.3239428997039795 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/file_describes_subject.tsv ---------
ingest/c2m2s/HMP/datapackage/merged/data/file_describes_subject.tsv
Read from file: df: #rows = 240632, #cols: 4

pKeys: ['file_id_namespace', 'file_local_id', 'subject_id_namespace', 'subject_local_id']
*** Entering file_describes_subject to database ***
df: #rows = 240632, #cols: 4
df:
                  file_id_namespace  ... subject_local_id
0       tag:hmpdacc.org,2022-04-04:  ...    HHS_158458797
1       tag:hmpdacc.org,2022-04-04:  ...    HHS_158479027
2       tag:hmpdacc.org,2022-04-04:  ...    HHS_158458797
3       tag:hmpdacc.org,2022-04-04:  ...    HHS_158458797
4       tag:hmpdacc.org,2022-04-04:  ...    HHS_158458797
...                             ...  ...              ...
240627  tag:hmpdacc.org,2022-04-04:  ...    HHS_596625983
240628  tag:hmpdacc.org,2022-04-04:  ...    HHS_725019804
240629  tag:hmpdacc.org,2022-04-04:  ...    HHS_970836795
240630  tag:hmpdacc.org,2022-04-04:  ...    HHS_160987560
240631  tag:hmpdacc.org,2022-04-04:  ...    HHS_161068481

[240632 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 4.1605384349823 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/compound.tsv ---------
ingest/c2m2s/HMP/datapackage/merged/data/compound.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['id']
*** Entering compound to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.00646662712097168 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/collection_substance.tsv ---------
ingest/c2m2s/HMP/datapackage/merged/data/collection_substance.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'substance']
*** Entering collection_substance to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, substance]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0025234222412109375 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/biosample_gene.tsv ---------
ingest/c2m2s/HMP/datapackage/merged/data/biosample_gene.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['biosample_id_namespace', 'biosample_local_id', 'gene']
*** Entering biosample_gene to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [biosample_id_namespace, biosample_local_id, gene]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002433300018310547 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/collection_disease.tsv ---------
ingest/c2m2s/HMP/datapackage/merged/data/collection_disease.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'disease']
*** Entering collection_disease to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, disease]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0023446083068847656 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/analysis_type.tsv ---------
ingest/c2m2s/HMP/datapackage/merged/data/analysis_type.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['id']
*** Entering analysis_type to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002513408660888672 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/phenotype_disease.tsv ---------
ingest/c2m2s/HMP/datapackage/merged/data/phenotype_disease.tsv
Read from file: df: #rows = 0, #cols: 2

pKeys: ['phenotype', 'disease']
*** Entering phenotype_disease to database ***
df: #rows = 0, #cols: 2
df:
Empty DataFrame
Columns: [phenotype, disease]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0021758079528808594 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/gene.tsv ---------
ingest/c2m2s/HMP/datapackage/merged/data/gene.tsv
Read from file: df: #rows = 0, #cols: 5

pKeys: ['id']
*** Entering gene to database ***
df: #rows = 0, #cols: 5
df:
Empty DataFrame
Columns: [id, name, description, synonyms, organism]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0026121139526367188 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/file_describes_biosample.tsv ---------
ingest/c2m2s/HMP/datapackage/merged/data/file_describes_biosample.tsv
Read from file: df: #rows = 289343, #cols: 4

pKeys: ['file_id_namespace', 'file_local_id', 'biosample_id_namespace', 'biosample_local_id']
*** Entering file_describes_biosample to database ***
df: #rows = 289343, #cols: 4
df:
                  file_id_namespace  ... biosample_local_id
0       tag:hmpdacc.org,2022-04-04:  ...          SRS011061
1       tag:hmpdacc.org,2022-04-04:  ...          SRS011084
2       tag:hmpdacc.org,2022-04-04:  ...          SRS011086
3       tag:hmpdacc.org,2022-04-04:  ...          SRS011090
4       tag:hmpdacc.org,2022-04-04:  ...          SRS011098
...                             ...  ...                ...
289338  tag:hmpdacc.org,2022-04-04:  ...          SRS971275
289339  tag:hmpdacc.org,2022-04-04:  ...          SRS971276
289340  tag:hmpdacc.org,2022-04-04:  ...          SRS971277
289341  tag:hmpdacc.org,2022-04-04:  ...          SRS971427
289342  tag:hmpdacc.org,2022-04-04:  ...          SRS971428

[289343 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 4.740657091140747 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/collection_gene.tsv ---------
ingest/c2m2s/HMP/datapackage/merged/data/collection_gene.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'gene']
*** Entering collection_gene to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, gene]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.007113456726074219 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/subject_substance.tsv ---------
ingest/c2m2s/HMP/datapackage/merged/data/subject_substance.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['subject_id_namespace', 'subject_local_id', 'substance']
*** Entering subject_substance to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [subject_id_namespace, subject_local_id, substance]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0027670860290527344 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/project_in_project.tsv ---------
ingest/c2m2s/HMP/datapackage/merged/data/project_in_project.tsv
Read from file: df: #rows = 23, #cols: 4

pKeys: ['parent_project_id_namespace', 'parent_project_local_id', 'child_project_id_namespace', 'child_project_local_id']
*** Entering project_in_project to database ***
df: #rows = 23, #cols: 4
df:
    parent_project_id_namespace  ... child_project_local_id
0   tag:hmpdacc.org,2022-04-04:  ...                   HMP1
1   tag:hmpdacc.org,2022-04-04:  ...                    HHS
2   tag:hmpdacc.org,2022-04-04:  ...                   Demo
3   tag:hmpdacc.org,2022-04-04:  ...              Psoriasis
4   tag:hmpdacc.org,2022-04-04:  ...                 VagMic
5   tag:hmpdacc.org,2022-04-04:  ...           CrohnDietGen
6   tag:hmpdacc.org,2022-04-04:  ...                 UlcCol
7   tag:hmpdacc.org,2022-04-04:  ...               UrethMic
8   tag:hmpdacc.org,2022-04-04:  ...                Obesity
9   tag:hmpdacc.org,2022-04-04:  ...            CrohnStrFun
10  tag:hmpdacc.org,2022-04-04:  ...            CrohnAllele
11  tag:hmpdacc.org,2022-04-04:  ...             EsophAdeno
12  tag:hmpdacc.org,2022-04-04:  ...                 BacVag
13  tag:hmpdacc.org,2022-04-04:  ...               VirFever
14  tag:hmpdacc.org,2022-04-04:  ...           NecEntNeonat
15  tag:hmpdacc.org,2022-04-04:  ...             PedPainInf
16  tag:hmpdacc.org,2022-04-04:  ...               AtopDerm
17  tag:hmpdacc.org,2022-04-04:  ...                   Acne
18  tag:hmpdacc.org,2022-04-04:  ...                 RefGen
19  tag:hmpdacc.org,2022-04-04:  ...                   iHMP
20  tag:hmpdacc.org,2022-04-04:  ...                 MOMSPI
21  tag:hmpdacc.org,2022-04-04:  ...                 IBDMDB
22  tag:hmpdacc.org,2022-04-04:  ...                    T2D

[23 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.008460283279418945 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/ncbi_taxonomy.tsv ---------
ingest/c2m2s/HMP/datapackage/merged/data/ncbi_taxonomy.tsv
Read from file: df: #rows = 2313, #cols: 5

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.ncbi_taxonomy;
qt_df:                   pk
0     NCBI:txid63746
1     NCBI:txid60711
2     NCBI:txid10090
3     NCBI:txid11108
4     NCBI:txid10036
5      NCBI:txid7955
6      NCBI:txid9031
7     NCBI:txid11116
8    NCBI:txid694009
9      NCBI:txid7227
10    NCBI:txid10116
11     NCBI:txid9606
12  NCBI:txid2697049
---- Executed query, got data.frame: qt_df: #rows = 13, #cols: 1

df_pk (at most first 10 elements): ['NCBI:txid1000568', 'NCBI:txid1000569', 'NCBI:txid1000570', 'NCBI:txid1000588', 'NCBI:txid1000589', 'NCBI:txid1000590', 'NCBI:txid1002339', 'NCBI:txid1002364', 'NCBI:txid1002365', 'NCBI:txid1002366']
qt_pk (at most first 10 elements): ['NCBI:txid63746', 'NCBI:txid60711', 'NCBI:txid10090', 'NCBI:txid11108', 'NCBI:txid10036', 'NCBI:txid7955', 'NCBI:txid9031', 'NCBI:txid11116', 'NCBI:txid694009', 'NCBI:txid7227']
---- Removed rows from df with matching pk
*** Entering ncbi_taxonomy to database ***
df: #rows = 2312, #cols: 5
df:
                    id  ...                                           synonyms
0     NCBI:txid1000568  ...                                                 []
1     NCBI:txid1000569  ...                                                 []
2     NCBI:txid1000570  ...  ["Streptococcus anginosus ATCC 12395", "Strept...
3     NCBI:txid1000588  ...          ["Streptococcus mitis bv. 2 strain SK95"]
4     NCBI:txid1000589  ...  ["Streptococcus dysgalactiae subsp. equisimili...
...                ...  ...                                                ...
2308   NCBI:txid999436  ...                  ["Treponema denticola str. SP32"]
2309   NCBI:txid999437  ...  ["Treponema denticola str. SP33", "Treponema d...
2310   NCBI:txid999438  ...  ["Treponema denticola str. SP37", "Treponema d...
2311   NCBI:txid999439  ...  ["Treponema denticola str. SP44", "Treponema d...
2312   NCBI:txid999440  ...  ["Treponema denticola str. US-Trep", "Treponem...

[2312 rows x 5 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0711216926574707 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/file_format.tsv ---------
ingest/c2m2s/HMP/datapackage/merged/data/file_format.tsv
Read from file: df: #rows = 15, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.file_format;
qt_df:              pk
0   format:3603
1   format:3004
2   format:3579
3   format:3987
4   format:2572
5   format:3591
6   format:3590
7   format:3006
8   format:1930
9   format:3468
10  format:3727
11  format:3752
12  format:3583
13  format:3981
14  format:2330
15  format:2331
16  format:3003
17  format:2333
18  format:3475
---- Executed query, got data.frame: qt_df: #rows = 19, #cols: 1

df_pk (at most first 10 elements): ['format:1919', 'format:1929', 'format:1930', 'format:1936', 'format:1975', 'format:2330', 'format:2572', 'format:3244', 'format:3464', 'format:3468']
qt_pk (at most first 10 elements): ['format:3603', 'format:3004', 'format:3579', 'format:3987', 'format:2572', 'format:3591', 'format:3590', 'format:3006', 'format:1930', 'format:3468']
---- Removed rows from df with matching pk
*** Entering file_format to database ***
df: #rows = 10, #cols: 4
df:
             id  ...                                  synonyms
0   format:1919  ...                                        []
1   format:1929  ...  ["FASTA sequence format","FASTA format"]
3   format:1936  ...                               ["GenBank"]
4   format:1975  ...                                        []
7   format:3244  ...                                        []
8   format:3464  ...            ["JavaScript Object Notation"]
11  format:3508  ...                                        []
12  format:3654  ...                                        []
13  format:3712  ...                                        []
14  format:3746  ...  ["BIological Observation Matrix format"]

[10 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.010926246643066406 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/subject_disease.tsv ---------
ingest/c2m2s/HMP/datapackage/merged/data/subject_disease.tsv
Read from file: df: #rows = 492, #cols: 4

pKeys: ['subject_id_namespace', 'subject_local_id', 'association_type', 'disease']
*** Entering subject_disease to database ***
df: #rows = 492, #cols: 4
df:
            subject_id_namespace  ...    disease
0    tag:hmpdacc.org,2022-04-04:  ...  DOID:4914
1    tag:hmpdacc.org,2022-04-04:  ...  DOID:4914
2    tag:hmpdacc.org,2022-04-04:  ...  DOID:4914
3    tag:hmpdacc.org,2022-04-04:  ...  DOID:4914
4    tag:hmpdacc.org,2022-04-04:  ...  DOID:4914
..                           ...  ...        ...
487  tag:hmpdacc.org,2022-04-04:  ...  DOID:9970
488  tag:hmpdacc.org,2022-04-04:  ...  DOID:9970
489  tag:hmpdacc.org,2022-04-04:  ...  DOID:9970
490  tag:hmpdacc.org,2022-04-04:  ...  DOID:9970
491  tag:hmpdacc.org,2022-04-04:  ...  DOID:9970

[492 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.01426553726196289 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/file_describes_collection.tsv ---------
ingest/c2m2s/HMP/datapackage/merged/data/file_describes_collection.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['file_id_namespace', 'file_local_id', 'collection_id_namespace', 'collection_local_id']
*** Entering file_describes_collection to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [file_id_namespace, file_local_id, collection_id_namespace, collection_local_id]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0026319026947021484 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/data_type.tsv ---------
ingest/c2m2s/HMP/datapackage/merged/data/data_type.tsv
Read from file: df: #rows = 16, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.data_type;
Processing C2M2 Files...:  42%|████▏     | 5/12 [06:52<09:30, 81.51s/it] qt_df:              pk
0     data:3111
1     data:1714
2     data:3495
3   ILX:0793824
4     data:1383
5     data:3110
6     data:2764
7     data:2048
8     data:2082
9     data:3002
10    data:2887
11    data:2968
12  ILX:0793825
---- Executed query, got data.frame: qt_df: #rows = 13, #cols: 1

df_pk (at most first 10 elements): ['data:0907', 'data:0925', 'data:0943', 'data:0945', 'data:1255', 'data:1270', 'data:1916', 'data:2048', 'data:2082', 'data:2600']
qt_pk (at most first 10 elements): ['data:3111', 'data:1714', 'data:3495', 'ILX:0793824', 'data:1383', 'data:3110', 'data:2764', 'data:2048', 'data:2082', 'data:3002']
---- Removed rows from df with matching pk
*** Entering data_type to database ***
df: #rows = 13, #cols: 4
df:
           id  ...                                           synonyms
0   data:0907  ...  ["Protein classification data","Protein family...
1   data:0925  ...              ["Contigs","SO:0000353","SO:0001248"]
2   data:0943  ...                      ["Mass spectrometry spectra"]
3   data:0945  ...  ["Peptide spectrum match","'Protein identifica...
4   data:1255  ...  ["Feature record","Sequence features report","...
5   data:1270  ...                         ["Sequence feature table"]
6   data:1916  ...                                                 []
9   data:2600  ...                              ["Network","Pathway"]
10  data:2603  ...  ["Non-coding RNA quantification data","Transcr...
11  data:2976  ...  ["Protein sequences","Amino acid sequence","Am...
12  data:3028  ...                                 ["Taxonomic data"]
13  data:3494  ...                                  ["DNA sequences"]
15  data:3917  ...                              ["Read count matrix"]

[13 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.009842872619628906 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/assay_type.tsv ---------
ingest/c2m2s/HMP/datapackage/merged/data/assay_type.tsv
Read from file: df: #rows = 12, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.assay_type;
qt_df:               pk
0    OBI:0003306
1    OBI:0003104
2    OBI:0002984
3    OBI:0000185
4    OBI:0003300
5    OBI:0003312
6    OBI:0001631
7    OBI:0003301
8    OBI:0003033
9    OBI:0003094
10   OBI:0000893
11   OBI:0003311
12   OBI:0002631
13   OBI:0003297
14   OBI:0001920
15   OBI:0000716
16   OBI:0001177
17   OBI:0003314
18   OBI:0002112
19   OBI:0001848
20   OBI:0003313
21   OBI:0001985
22   OBI:0003299
23   OBI:0003089
24   OBI:0003105
25   OBI:0000626
26   OBI:0003305
27   OBI:0003304
28   OBI:0003303
29   OBI:0003034
30   OBI:0600047
31  CHMO:0000087
32   OBI:0003302
33   OBI:0001271
---- Executed query, got data.frame: qt_df: #rows = 34, #cols: 1

df_pk (at most first 10 elements): ['OBI:0000366', 'OBI:0000615', 'OBI:0001271', 'OBI:0002117', 'OBI:0002118', 'OBI:0002145', 'OBI:0002623', 'OBI:0002760', 'OBI:0002761', 'OBI:0002763']
qt_pk (at most first 10 elements): ['OBI:0003306', 'OBI:0003104', 'OBI:0002984', 'OBI:0000185', 'OBI:0003300', 'OBI:0003312', 'OBI:0001631', 'OBI:0003301', 'OBI:0003033', 'OBI:0003094']
---- Removed rows from df with matching pk
*** Entering assay_type to database ***
df: #rows = 11, #cols: 4
df:
             id  ...                                  synonyms
0   OBI:0000366  ...  ["metabolite assay","metabolomic assay"]
1   OBI:0000615  ...                    ["proteomic analysis"]
3   OBI:0002117  ...                                   ["WGS"]
4   OBI:0002118  ...                                   ["WES"]
5   OBI:0002145  ...                                        []
6   OBI:0002623  ...                                   ["WMS"]
7   OBI:0002760  ...                                        []
8   OBI:0002761  ...                       ["lipidomic assay"]
9   OBI:0002763  ...             ["16S rRNA sequencing assay"]
10  OBI:0002766  ...                                        []
11  OBI:0002768  ...                                        []

[11 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.010591745376586914 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/collection.tsv ---------
ingest/c2m2s/HMP/datapackage/merged/data/collection.tsv
Read from file: df: #rows = 20146, #cols: 8

pKeys: ['id_namespace', 'local_id']
*** Entering collection to database ***
df: #rows = 20146, #cols: 8
df:
                      id_namespace  ... has_time_series_data
0      tag:hmpdacc.org,2022-04-04:  ...                False
1      tag:hmpdacc.org,2022-04-04:  ...                False
2      tag:hmpdacc.org,2022-04-04:  ...                False
3      tag:hmpdacc.org,2022-04-04:  ...                False
4      tag:hmpdacc.org,2022-04-04:  ...                False
...                            ...  ...                  ...
20141  tag:hmpdacc.org,2022-04-04:  ...                False
20142  tag:hmpdacc.org,2022-04-04:  ...                False
20143  tag:hmpdacc.org,2022-04-04:  ...                False
20144  tag:hmpdacc.org,2022-04-04:  ...                False
20145  tag:hmpdacc.org,2022-04-04:  ...                False

[20146 rows x 8 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.543327808380127 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/subject_role_taxonomy.tsv ---------
ingest/c2m2s/HMP/datapackage/merged/data/subject_role_taxonomy.tsv
Read from file: df: #rows = 7903, #cols: 4

pKeys: ['subject_id_namespace', 'subject_local_id', 'role_id', 'taxonomy_id']
*** Entering subject_role_taxonomy to database ***
df: #rows = 7903, #cols: 4
df:
             subject_id_namespace  ...    taxonomy_id
0     tag:hmpdacc.org,2022-04-04:  ...  NCBI:txid9606
1     tag:hmpdacc.org,2022-04-04:  ...  NCBI:txid9606
2     tag:hmpdacc.org,2022-04-04:  ...  NCBI:txid9606
3     tag:hmpdacc.org,2022-04-04:  ...  NCBI:txid9606
4     tag:hmpdacc.org,2022-04-04:  ...  NCBI:txid9606
...                           ...  ...            ...
7898  tag:hmpdacc.org,2022-04-04:  ...  NCBI:txid9606
7899  tag:hmpdacc.org,2022-04-04:  ...  NCBI:txid9606
7900  tag:hmpdacc.org,2022-04-04:  ...  NCBI:txid9606
7901  tag:hmpdacc.org,2022-04-04:  ...  NCBI:txid9606
7902  tag:hmpdacc.org,2022-04-04:  ...  NCBI:txid9606

[7903 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.12328147888183594 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/biosample_substance.tsv ---------
ingest/c2m2s/HMP/datapackage/merged/data/biosample_substance.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['biosample_id_namespace', 'biosample_local_id', 'substance']
*** Entering biosample_substance to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [biosample_id_namespace, biosample_local_id, substance]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0030062198638916016 seconds.

--------- ingest/c2m2s/HMP/datapackage/merged/data/collection_phenotype.tsv ---------
ingest/c2m2s/HMP/datapackage/merged/data/collection_phenotype.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'phenotype']
*** Entering collection_phenotype to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, phenotype]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002371072769165039 seconds.


================================== DCC short label: HuBMAP =============================================
Unpack zip file: c2m2_extract_path: ingest/c2m2s/HuBMAP/datapackage
--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/dcc.tsv ---------
ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/dcc.tsv
Read from file: df: #rows = 1, #cols: 9

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.dcc;
qt_df:                          pk
0  cfde_registry_dcc:glygen
1   cfde_registry_dcc:exrna
2     cfde_registry_dcc:4dn
3     cfde_registry_dcc:hmp
4    cfde_registry_dcc:gtex
---- Executed query, got data.frame: qt_df: #rows = 5, #cols: 1

df_pk (at most first 10 elements): ['cfde_registry_dcc:hubmap']
qt_pk (at most first 10 elements): ['cfde_registry_dcc:glygen', 'cfde_registry_dcc:exrna', 'cfde_registry_dcc:4dn', 'cfde_registry_dcc:hmp', 'cfde_registry_dcc:gtex']
---- Removed rows from df with matching pk
*** Entering dcc to database ***
df: #rows = 1, #cols: 9
df:
                         id  ... project_local_id
0  cfde_registry_dcc:hubmap  ...           HuBMAP

[1 rows x 9 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.021162748336791992 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/collection.tsv ---------
ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/collection.tsv
Read from file: df: #rows = 1185, #cols: 8

pKeys: ['id_namespace', 'local_id']
*** Entering collection to database ***
df: #rows = 1185, #cols: 8
df:
                        id_namespace  ... has_time_series_data
0     tag:hubmapconsortium.org,2023:  ...                  NaN
1     tag:hubmapconsortium.org,2023:  ...                  NaN
2     tag:hubmapconsortium.org,2023:  ...                  NaN
3     tag:hubmapconsortium.org,2023:  ...                  NaN
4     tag:hubmapconsortium.org,2023:  ...                  NaN
...                              ...  ...                  ...
1180  tag:hubmapconsortium.org,2023:  ...                  NaN
1181  tag:hubmapconsortium.org,2023:  ...                  NaN
1182  tag:hubmapconsortium.org,2023:  ...                  NaN
1183  tag:hubmapconsortium.org,2023:  ...                  NaN
1184  tag:hubmapconsortium.org,2023:  ...                  NaN

[1185 rows x 8 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.046118974685668945 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/subject.tsv ---------
ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/subject.tsv
Read from file: df: #rows = 153, #cols: 10

pKeys: ['id_namespace', 'local_id']
*** Entering subject to database ***
df: #rows = 153, #cols: 10
df:
                       id_namespace  ... age_at_enrollment
0    tag:hubmapconsortium.org,2023:  ...               NaN
1    tag:hubmapconsortium.org,2023:  ...               NaN
2    tag:hubmapconsortium.org,2023:  ...               NaN
3    tag:hubmapconsortium.org,2023:  ...               NaN
4    tag:hubmapconsortium.org,2023:  ...               NaN
..                              ...  ...               ...
148  tag:hubmapconsortium.org,2023:  ...               NaN
149  tag:hubmapconsortium.org,2023:  ...               NaN
150  tag:hubmapconsortium.org,2023:  ...               NaN
151  tag:hubmapconsortium.org,2023:  ...               NaN
152  tag:hubmapconsortium.org,2023:  ...               NaN

[153 rows x 10 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.016201019287109375 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/file_format.tsv ---------
ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/file_format.tsv
Read from file: df: #rows = 14, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.file_format;
qt_df:              pk
0   format:3654
1   format:3603
2   format:3004
3   format:3464
4   format:3579
5   format:1936
6   format:3987
7   format:1975
8   format:3712
9   format:2572
10  format:3591
11  format:3590
12  format:3006
13  format:1930
14  format:3468
15  format:3244
16  format:3727
17  format:3752
18  format:1919
19  format:3583
20  format:1929
21  format:3981
22  format:3746
23  format:2330
24  format:3508
25  format:2331
26  format:3003
27  format:2333
28  format:3475
---- Executed query, got data.frame: qt_df: #rows = 29, #cols: 1

df_pk (at most first 10 elements): ['format:2330', 'format:2332', 'format:3464', 'format:3475', 'format:3508', 'format:3579', 'format:3591', 'format:3620', 'format:3727', 'format:3752']
qt_pk (at most first 10 elements): ['format:3654', 'format:3603', 'format:3004', 'format:3464', 'format:3579', 'format:1936', 'format:3987', 'format:1975', 'format:3712', 'format:2572']
---- Removed rows from df with matching pk
*** Entering file_format to database ***
df: #rows = 5, #cols: 4
df:
             id  ...                        synonyms
1   format:2332  ...  ["eXtensible Markup Language"]
7   format:3620  ...                              []
10  format:3839  ...                              []
11  format:3873  ...                              []
13  format:3989  ...                     ["GNU Zip"]

[5 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.009482860565185547 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/subject_substance.tsv ---------
ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/subject_substance.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['subject_id_namespace', 'subject_local_id', 'substance']
*** Entering subject_substance to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [subject_id_namespace, subject_local_id, substance]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0024814605712890625 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/biosample_in_collection.tsv ---------
ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/biosample_in_collection.tsv
Read from file: df: #rows = 1185, #cols: 4

pKeys: ['biosample_id_namespace', 'biosample_local_id', 'collection_id_namespace', 'collection_local_id']
*** Entering biosample_in_collection to database ***
df: #rows = 1185, #cols: 4
df:
              biosample_id_namespace  ... collection_local_id
0     tag:hubmapconsortium.org,2023:  ...     HBM679.NNNK.283
1     tag:hubmapconsortium.org,2023:  ...     HBM987.XGTH.368
2     tag:hubmapconsortium.org,2023:  ...     HBM569.NBHZ.832
3     tag:hubmapconsortium.org,2023:  ...     HBM297.MZZX.824
4     tag:hubmapconsortium.org,2023:  ...     HBM784.HQQK.452
...                              ...  ...                 ...
1180  tag:hubmapconsortium.org,2023:  ...     HBM277.WQXZ.332
1181  tag:hubmapconsortium.org,2023:  ...     HBM967.ZTCR.629
1182  tag:hubmapconsortium.org,2023:  ...     HBM847.HRHF.876
1183  tag:hubmapconsortium.org,2023:  ...     HBM742.NHHQ.357
1184  tag:hubmapconsortium.org,2023:  ...     HBM472.JBTD.782

[1185 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.026612043380737305 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/collection_disease.tsv ---------
ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/collection_disease.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'disease']
*** Entering collection_disease to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, disease]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002433300018310547 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/file_describes_collection.tsv ---------
ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/file_describes_collection.tsv
Read from file: df: #rows = 1523, #cols: 4

pKeys: ['file_id_namespace', 'file_local_id', 'collection_id_namespace', 'collection_local_id']
*** Entering file_describes_collection to database ***
df: #rows = 1523, #cols: 4
df:
                   file_id_namespace  ... collection_local_id
0     tag:hubmapconsortium.org,2023:  ...     HBM679.NNNK.283
1     tag:hubmapconsortium.org,2023:  ...     HBM987.XGTH.368
2     tag:hubmapconsortium.org,2023:  ...     HBM569.NBHZ.832
3     tag:hubmapconsortium.org,2023:  ...     HBM297.MZZX.824
4     tag:hubmapconsortium.org,2023:  ...     HBM784.HQQK.452
...                              ...  ...                 ...
1518  tag:hubmapconsortium.org,2023:  ...     HBM967.ZTCR.629
1519  tag:hubmapconsortium.org,2023:  ...     HBM847.HRHF.876
1520  tag:hubmapconsortium.org,2023:  ...     HBM742.NHHQ.357
1521  tag:hubmapconsortium.org,2023:  ...     HBM472.JBTD.782
1522  tag:hubmapconsortium.org,2023:  ...     HBM472.JBTD.782

[1523 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.029296159744262695 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/ncbi_taxonomy.tsv ---------
ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/ncbi_taxonomy.tsv
Read from file: df: #rows = 0, #cols: 5

pKeys: ['id']
*** Entering ncbi_taxonomy to database ***
df: #rows = 0, #cols: 5
df:
Empty DataFrame
Columns: [id, clade, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002747774124145508 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/collection_substance.tsv ---------
ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/collection_substance.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'substance']
*** Entering collection_substance to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, substance]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0023250579833984375 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/subject_in_collection.tsv ---------
ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/subject_in_collection.tsv
Read from file: df: #rows = 1174, #cols: 4

pKeys: ['subject_id_namespace', 'subject_local_id', 'collection_id_namespace', 'collection_local_id']
*** Entering subject_in_collection to database ***
df: #rows = 1174, #cols: 4
df:
                subject_id_namespace  ... collection_local_id
0     tag:hubmapconsortium.org,2023:  ...     HBM679.NNNK.283
1     tag:hubmapconsortium.org,2023:  ...     HBM987.XGTH.368
2     tag:hubmapconsortium.org,2023:  ...     HBM569.NBHZ.832
3     tag:hubmapconsortium.org,2023:  ...     HBM297.MZZX.824
4     tag:hubmapconsortium.org,2023:  ...     HBM784.HQQK.452
...                              ...  ...                 ...
1169  tag:hubmapconsortium.org,2023:  ...     HBM277.WQXZ.332
1170  tag:hubmapconsortium.org,2023:  ...     HBM967.ZTCR.629
1171  tag:hubmapconsortium.org,2023:  ...     HBM847.HRHF.876
1172  tag:hubmapconsortium.org,2023:  ...     HBM742.NHHQ.357
1173  tag:hubmapconsortium.org,2023:  ...     HBM472.JBTD.782

[1174 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.024852991104125977 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/subject_race.tsv ---------
ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/subject_race.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['subject_id_namespace', 'subject_local_id', 'race']
*** Entering subject_race to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [subject_id_namespace, subject_local_id, race]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002445697784423828 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/collection_compound.tsv ---------
ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/collection_compound.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'compound']
*** Entering collection_compound to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, compound]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0023109912872314453 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/biosample_from_subject.tsv ---------
ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/biosample_from_subject.tsv
Read from file: df: #rows = 511, #cols: 5

pKeys: ['biosample_id_namespace', 'biosample_local_id', 'subject_id_namespace', 'subject_local_id']
*** Entering biosample_from_subject to database ***
df: #rows = 511, #cols: 5
df:
             biosample_id_namespace  ... age_at_sampling
0    tag:hubmapconsortium.org,2023:  ...             NaN
1    tag:hubmapconsortium.org,2023:  ...             NaN
2    tag:hubmapconsortium.org,2023:  ...             NaN
3    tag:hubmapconsortium.org,2023:  ...             NaN
4    tag:hubmapconsortium.org,2023:  ...             NaN
..                              ...  ...             ...
506  tag:hubmapconsortium.org,2023:  ...             NaN
507  tag:hubmapconsortium.org,2023:  ...             NaN
508  tag:hubmapconsortium.org,2023:  ...             NaN
509  tag:hubmapconsortium.org,2023:  ...             NaN
510  tag:hubmapconsortium.org,2023:  ...             NaN

[511 rows x 5 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.01641845703125 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/substance.tsv ---------
ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/substance.tsv
Read from file: df: #rows = 0, #cols: 5

pKeys: ['id']
*** Entering substance to database ***
df: #rows = 0, #cols: 5
df:
Empty DataFrame
Columns: [id, name, description, synonyms, compound]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0026819705963134766 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/file_describes_subject.tsv ---------
ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/file_describes_subject.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['file_id_namespace', 'file_local_id', 'subject_id_namespace', 'subject_local_id']
*** Entering file_describes_subject to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [file_id_namespace, file_local_id, subject_id_namespace, subject_local_id]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002497434616088867 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/collection_in_collection.tsv ---------
ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/collection_in_collection.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['superset_collection_id_namespace', 'superset_collection_local_id', 'subset_collection_id_namespace', 'subset_collection_local_id']
*** Entering collection_in_collection to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [superset_collection_id_namespace, superset_collection_local_id, subset_collection_id_namespace, subset_collection_local_id]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002473115921020508 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/id_namespace.tsv ---------
ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/id_namespace.tsv
Read from file: df: #rows = 1, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.id_namespace;
qt_df:                              pk
0                         egtex
1  https://www.data.glygen.org/
2   https://data.4dnucleome.org
3                          gtex
4                    ERCC-exRNA
5   tag:hmpdacc.org,2022-04-04:
6                    adult_gtex
---- Executed query, got data.frame: qt_df: #rows = 7, #cols: 1

df_pk (at most first 10 elements): ['tag:hubmapconsortium.org,2023:']
qt_pk (at most first 10 elements): ['egtex', 'https://www.data.glygen.org/', 'https://data.4dnucleome.org', 'gtex', 'ERCC-exRNA', 'tag:hmpdacc.org,2022-04-04:', 'adult_gtex']
---- Removed rows from df with matching pk
*** Entering id_namespace to database ***
df: #rows = 1, #cols: 4
df:
                               id  ...                       description
0  tag:hubmapconsortium.org,2023:  ...  Human BioMolecular Atlas Program

[1 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.008875608444213867 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/biosample_substance.tsv ---------
ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/biosample_substance.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['biosample_id_namespace', 'biosample_local_id', 'substance']
*** Entering biosample_substance to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [biosample_id_namespace, biosample_local_id, substance]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0023369789123535156 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/project.tsv ---------
ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/project.tsv
Read from file: df: #rows = 10, #cols: 7

pKeys: ['id_namespace', 'local_id']
*** Entering project to database ***
df: #rows = 10, #cols: 7
df:
                     id_namespace  ... description
0  tag:hubmapconsortium.org,2023:  ...         NaN
1  tag:hubmapconsortium.org,2023:  ...         NaN
2  tag:hubmapconsortium.org,2023:  ...         NaN
3  tag:hubmapconsortium.org,2023:  ...         NaN
4  tag:hubmapconsortium.org,2023:  ...         NaN
5  tag:hubmapconsortium.org,2023:  ...         NaN
6  tag:hubmapconsortium.org,2023:  ...         NaN
7  tag:hubmapconsortium.org,2023:  ...         NaN
8  tag:hubmapconsortium.org,2023:  ...         NaN
9  tag:hubmapconsortium.org,2023:  ...         NaN

[10 rows x 7 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.00905919075012207 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/phenotype_gene.tsv ---------
ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/phenotype_gene.tsv
Read from file: df: #rows = 0, #cols: 2

pKeys: ['phenotype', 'gene']
*** Entering phenotype_gene to database ***
df: #rows = 0, #cols: 2
df:
Empty DataFrame
Columns: [phenotype, gene]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002187967300415039 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/file_in_collection.tsv ---------
ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/file_in_collection.tsv
Read from file: df: #rows = 9417470, #cols: 4

pKeys: ['file_id_namespace', 'file_local_id', 'collection_id_namespace', 'collection_local_id']
*** Entering file_in_collection to database ***
df: #rows = 9417470, #cols: 4
df:
                      file_id_namespace  ... collection_local_id
0        tag:hubmapconsortium.org,2023:  ...     HBM679.NNNK.283
1        tag:hubmapconsortium.org,2023:  ...     HBM679.NNNK.283
2        tag:hubmapconsortium.org,2023:  ...     HBM679.NNNK.283
3        tag:hubmapconsortium.org,2023:  ...     HBM679.NNNK.283
4        tag:hubmapconsortium.org,2023:  ...     HBM679.NNNK.283
...                                 ...  ...                 ...
9417465  tag:hubmapconsortium.org,2023:  ...     HBM472.JBTD.782
9417466  tag:hubmapconsortium.org,2023:  ...     HBM472.JBTD.782
9417467  tag:hubmapconsortium.org,2023:  ...     HBM472.JBTD.782
9417468  tag:hubmapconsortium.org,2023:  ...     HBM472.JBTD.782
9417469  tag:hubmapconsortium.org,2023:  ...     HBM472.JBTD.782

[9417470 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 302.61652660369873 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/file_describes_biosample.tsv ---------
ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/file_describes_biosample.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['file_id_namespace', 'file_local_id', 'biosample_id_namespace', 'biosample_local_id']
*** Entering file_describes_biosample to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [file_id_namespace, file_local_id, biosample_id_namespace, biosample_local_id]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.1796722412109375 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/file.tsv ---------
ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/file.tsv
Read from file: df: #rows = 9417470, #cols: 20

pKeys: ['id_namespace', 'local_id']
*** Entering file to database ***
df: #rows = 9417470, #cols: 20
df:
                           id_namespace  ... dbgap_study_id
0        tag:hubmapconsortium.org,2023:  ...            NaN
1        tag:hubmapconsortium.org,2023:  ...            NaN
2        tag:hubmapconsortium.org,2023:  ...            NaN
3        tag:hubmapconsortium.org,2023:  ...            NaN
4        tag:hubmapconsortium.org,2023:  ...            NaN
...                                 ...  ...            ...
9417465  tag:hubmapconsortium.org,2023:  ...            NaN
9417466  tag:hubmapconsortium.org,2023:  ...            NaN
9417467  tag:hubmapconsortium.org,2023:  ...            NaN
9417468  tag:hubmapconsortium.org,2023:  ...            NaN
9417469  tag:hubmapconsortium.org,2023:  ...            NaN

[9417470 rows x 20 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 703.7840387821198 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/collection_anatomy.tsv ---------
ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/collection_anatomy.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'anatomy']
*** Entering collection_anatomy to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, anatomy]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 5.928555011749268 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/phenotype.tsv ---------
ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/phenotype.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['id']
*** Entering phenotype to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.004578828811645508 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/protein_gene.tsv ---------
ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/protein_gene.tsv
Read from file: df: #rows = 0, #cols: 2

pKeys: ['protein', 'gene']
*** Entering protein_gene to database ***
df: #rows = 0, #cols: 2
df:
Empty DataFrame
Columns: [protein, gene]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002701282501220703 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/data_type.tsv ---------
ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/data_type.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['id']
*** Entering data_type to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0032367706298828125 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/anatomy.tsv ---------
ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/anatomy.tsv
Read from file: df: #rows = 12, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.anatomy;
qt_df:                  pk
0    UBERON:0000087
1    UBERON:0001199
2    UBERON:0007311
3    UBERON:0001728
4    UBERON:0001736
..              ...
239  UBERON:0001496
240  UBERON:0000473
241  UBERON:0013069
242  UBERON:0008337
243  UBERON:0001474

[244 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 244, #cols: 1

df_pk (at most first 10 elements): ['UBERON:0000029', 'UBERON:0000059', 'UBERON:0000178', 'UBERON:0000948', 'UBERON:0000995', 'UBERON:0002097', 'UBERON:0002106', 'UBERON:0002108', 'UBERON:0002167', 'UBERON:0002370']
qt_pk (at most first 10 elements): ['UBERON:0000087', 'UBERON:0001199', 'UBERON:0007311', 'UBERON:0001728', 'UBERON:0001736', 'UBERON:0002037', 'UBERON:0009835', 'UBERON:0001621', 'UBERON:0002097', 'UBERON:0001017']
---- Removed rows from df with matching pk
*** Entering anatomy to database ***
df: #rows = 3, #cols: 4
df:
                id  ... synonyms
8   UBERON:0002167  ...       []
10  UBERON:0004538  ...       []
11  UBERON:0004539  ...       []

[3 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.04096508026123047 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/biosample_disease.tsv ---------
ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/biosample_disease.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['biosample_id_namespace', 'biosample_local_id', 'association_type', 'disease']
*** Entering biosample_disease to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [biosample_id_namespace, biosample_local_id, association_type, disease]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.003342866897583008 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/sample_prep_method.tsv ---------
ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/sample_prep_method.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['id']
*** Entering sample_prep_method to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0031943321228027344 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/biosample.tsv ---------
ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/biosample.tsv
Read from file: df: #rows = 522, #cols: 8

pKeys: ['id_namespace', 'local_id']
*** Entering biosample to database ***
df: #rows = 522, #cols: 8
df:
                       id_namespace  ...         anatomy
0    tag:hubmapconsortium.org,2023:  ...  UBERON:0000059
1    tag:hubmapconsortium.org,2023:  ...  UBERON:0002106
2    tag:hubmapconsortium.org,2023:  ...  UBERON:0002108
3    tag:hubmapconsortium.org,2023:  ...  UBERON:0000059
4    tag:hubmapconsortium.org,2023:  ...  UBERON:0004539
..                              ...  ...             ...
517  tag:hubmapconsortium.org,2023:  ...  UBERON:0002370
518  tag:hubmapconsortium.org,2023:  ...  UBERON:0000995
519  tag:hubmapconsortium.org,2023:  ...  UBERON:0000995
520  tag:hubmapconsortium.org,2023:  ...  UBERON:0000995
521  tag:hubmapconsortium.org,2023:  ...  UBERON:0000059

[522 rows x 8 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0349574089050293 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/collection_phenotype.tsv ---------
ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/collection_phenotype.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'phenotype']
*** Entering collection_phenotype to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, phenotype]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0032918453216552734 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/disease.tsv ---------
ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/disease.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['id']
*** Entering disease to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0028815269470214844 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/compound.tsv ---------
ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/compound.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['id']
*** Entering compound to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002956390380859375 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/collection_taxonomy.tsv ---------
ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/collection_taxonomy.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'taxon']
*** Entering collection_taxonomy to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, taxon]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002730131149291992 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/subject_disease.tsv ---------
ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/subject_disease.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['subject_id_namespace', 'subject_local_id', 'association_type', 'disease']
*** Entering subject_disease to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [subject_id_namespace, subject_local_id, association_type, disease]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0030972957611083984 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/assay_type.tsv ---------
ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/assay_type.tsv
Read from file: df: #rows = 16, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.assay_type;
qt_df:               pk
0    OBI:0003306
1    OBI:0002766
2    OBI:0003104
3    OBI:0002984
4    OBI:0000185
5    OBI:0003300
6    OBI:0002760
7    OBI:0003312
8    OBI:0002117
9    OBI:0001631
10   OBI:0002761
11   OBI:0003301
12   OBI:0003033
13   OBI:0003094
14   OBI:0000893
15   OBI:0003311
16   OBI:0002631
17   OBI:0003297
18   OBI:0001920
19   OBI:0002768
20   OBI:0000716
21   OBI:0001177
22   OBI:0003314
23   OBI:0002112
24   OBI:0002118
25   OBI:0001848
26   OBI:0002623
27   OBI:0003313
28   OBI:0001985
29   OBI:0000366
30   OBI:0000615
31   OBI:0003299
32   OBI:0003089
33   OBI:0003105
34   OBI:0002763
35   OBI:0000626
36   OBI:0003305
37   OBI:0003304
38   OBI:0003303
39   OBI:0002145
40   OBI:0003034
41   OBI:0600047
42  CHMO:0000087
43   OBI:0003302
44   OBI:0001271
---- Executed query, got data.frame: qt_df: #rows = 45, #cols: 1

df_pk (at most first 10 elements): ['OBI:0000470', 'OBI:0001271', 'OBI:0001977', 'OBI:0002117', 'OBI:0003087', 'OBI:0003089', 'OBI:0003092', 'OBI:0003093', 'OBI:0003097', 'OBI:0003098']
qt_pk (at most first 10 elements): ['OBI:0003306', 'OBI:0002766', 'OBI:0003104', 'OBI:0002984', 'OBI:0000185', 'OBI:0003300', 'OBI:0002760', 'OBI:0003312', 'OBI:0002117', 'OBI:0001631']
---- Removed rows from df with matching pk
*** Entering assay_type to database ***
df: #rows = 13, #cols: 4
df:
             id  ...                          synonyms
0   OBI:0000470  ...                                []
2   OBI:0001977  ...                                []
4   OBI:0003087  ...  ["intrinsic fluorescence assay"]
6   OBI:0003092  ...                                []
7   OBI:0003093  ...                         ["CODEX"]
8   OBI:0003097  ...                         ["LC-MS"]
9   OBI:0003098  ...                                []
10  OBI:0003099  ...                     ["MALDI-IMS"]
11  OBI:0003100  ...                          ["MIBI"]
12  OBI:0003101  ...                      ["NanoDESI"]
13  OBI:0003103  ...                  ["PAS staining"]
14  OBI:0003107  ...                                []
15  OBI:0003108  ...          ["SNARE-seq","SNAREseq"]

[13 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.012756824493408203 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/phenotype_disease.tsv ---------
ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/phenotype_disease.tsv
Read from file: df: #rows = 0, #cols: 2

pKeys: ['phenotype', 'disease']
*** Entering phenotype_disease to database ***
df: #rows = 0, #cols: 2
df:
Empty DataFrame
Columns: [phenotype, disease]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0026633739471435547 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/protein.tsv ---------
ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/protein.tsv
Read from file: df: #rows = 0, #cols: 5

pKeys: ['id']
*** Entering protein to database ***
df: #rows = 0, #cols: 5
df:
Empty DataFrame
Columns: [id, name, description, synonyms, organism]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0029175281524658203 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/project_in_project.tsv ---------
ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/project_in_project.tsv
Read from file: df: #rows = 9, #cols: 4

pKeys: ['parent_project_id_namespace', 'parent_project_local_id', 'child_project_id_namespace', 'child_project_local_id']
*** Entering project_in_project to database ***
df: #rows = 9, #cols: 4
df:
      parent_project_id_namespace  ...                     child_project_local_id
0  tag:hubmapconsortium.org,2023:  ...                               Stanford TMC
1  tag:hubmapconsortium.org,2023:  ...                  University of Florida TMC
2  tag:hubmapconsortium.org,2023:  ...                             Vanderbilt TMC
3  tag:hubmapconsortium.org,2023:  ...                               Stanford RTI
4  tag:hubmapconsortium.org,2023:  ...     University of California San Diego TMC
5  tag:hubmapconsortium.org,2023:  ...                       General Electric RTI
6  tag:hubmapconsortium.org,2023:  ...                                 Purdue TTD
7  tag:hubmapconsortium.org,2023:  ...                        Broad Institute RTI
8  tag:hubmapconsortium.org,2023:  ...  TTD Pacific Northwest National Laboratory

[9 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.008951425552368164 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/collection_gene.tsv ---------
ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/collection_gene.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'gene']
*** Entering collection_gene to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, gene]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0028328895568847656 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/subject_role_taxonomy.tsv ---------
ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/subject_role_taxonomy.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['subject_id_namespace', 'subject_local_id', 'role_id', 'taxonomy_id']
*** Entering subject_role_taxonomy to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [subject_id_namespace, subject_local_id, role_id, taxonomy_id]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0030231475830078125 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/subject_phenotype.tsv ---------
ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/subject_phenotype.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['subject_id_namespace', 'subject_local_id', 'association_type', 'phenotype']
*** Entering subject_phenotype to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [subject_id_namespace, subject_local_id, association_type, phenotype]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0028243064880371094 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/gene.tsv ---------
ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/gene.tsv
Read from file: df: #rows = 0, #cols: 5

pKeys: ['id']
*** Entering gene to database ***
df: #rows = 0, #cols: 5
df:
Empty DataFrame
Columns: [id, name, description, synonyms, organism]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0034008026123046875 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/analysis_type.tsv ---------
ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/analysis_type.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['id']
*** Entering analysis_type to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
Processing C2M2 Files...:  50%|█████     | 6/12 [24:33<41:25, 414.33s/it]>>>>>>>> Time taken to ingest the metadata from this file: 0.0028183460235595703 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/biosample_gene.tsv ---------
ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/biosample_gene.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['biosample_id_namespace', 'biosample_local_id', 'gene']
*** Entering biosample_gene to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [biosample_id_namespace, biosample_local_id, gene]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002889871597290039 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/collection_protein.tsv ---------
ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/collection_protein.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'protein']
*** Entering collection_protein to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, protein]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002687692642211914 seconds.

--------- ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/collection_defined_by_project.tsv ---------
ingest/c2m2s/HuBMAP/datapackage/submission_67073a558f17a55f57f679b02e5e1631d478a275/data/collection_defined_by_project.tsv
Read from file: df: #rows = 1185, #cols: 4

pKeys: ['collection_id_namespace', 'collection_local_id', 'project_id_namespace', 'project_local_id']
*** Entering collection_defined_by_project to database ***
df: #rows = 1185, #cols: 4
df:
             collection_id_namespace  ...                        project_local_id
0     tag:hubmapconsortium.org,2023:  ...                            Stanford TMC
1     tag:hubmapconsortium.org,2023:  ...               University of Florida TMC
2     tag:hubmapconsortium.org,2023:  ...                            Stanford TMC
3     tag:hubmapconsortium.org,2023:  ...                            Stanford TMC
4     tag:hubmapconsortium.org,2023:  ...                          Vanderbilt TMC
...                              ...  ...                                     ...
1180  tag:hubmapconsortium.org,2023:  ...                            Stanford TMC
1181  tag:hubmapconsortium.org,2023:  ...  University of California San Diego TMC
1182  tag:hubmapconsortium.org,2023:  ...                            Stanford TMC
1183  tag:hubmapconsortium.org,2023:  ...                            Stanford TMC
1184  tag:hubmapconsortium.org,2023:  ...                            Stanford TMC

[1185 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.03097701072692871 seconds.


================================== DCC short label: IDG =============================================
Unpack zip file: c2m2_extract_path: ingest/c2m2s/IDG/datapackage
--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/analysis_type.tsv ---------
ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/analysis_type.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['id']
*** Entering analysis_type to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.007108926773071289 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/protein_gene.tsv ---------
ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/protein_gene.tsv
Read from file: df: #rows = 0, #cols: 2

pKeys: ['protein', 'gene']
*** Entering protein_gene to database ***
df: #rows = 0, #cols: 2
df:
Empty DataFrame
Columns: [protein, gene]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0031974315643310547 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/biosample_from_subject.tsv ---------
ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/biosample_from_subject.tsv
Read from file: df: #rows = 0, #cols: 5

pKeys: ['biosample_id_namespace', 'biosample_local_id', 'subject_id_namespace', 'subject_local_id']
*** Entering biosample_from_subject to database ***
df: #rows = 0, #cols: 5
df:
Empty DataFrame
Columns: [biosample_id_namespace, biosample_local_id, subject_id_namespace, subject_local_id, age_at_sampling]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0031876564025878906 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/disease.tsv ---------
ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/disease.tsv
Read from file: df: #rows = 1899, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.disease;
qt_df:               pk
0     DOID:10534
1     DOID:10652
2     DOID:10941
3      DOID:4914
4      DOID:9970
5      DOID:9074
6      DOID:8893
7      DOID:1184
8      DOID:8778
9      DOID:9778
10     DOID:3073
11     DOID:1520
12     DOID:8677
13    DOID:12217
14     DOID:1287
15     DOID:4905
16     DOID:9744
17      DOID:219
18      DOID:934
19    DOID:10286
20     DOID:9256
21     DOID:5844
22     DOID:2377
23     DOID:2841
24     DOID:6000
25     DOID:8577
26    DOID:14330
27  DOID:0080832
28     DOID:6713
29     DOID:5295
30      DOID:409
---- Executed query, got data.frame: qt_df: #rows = 31, #cols: 1

df_pk (at most first 10 elements): ['DOID:10003', 'DOID:10016', 'DOID:10017', 'DOID:1002', 'DOID:10033', 'DOID:10041', 'DOID:10112', 'DOID:10124', 'DOID:10126', 'DOID:10140']
qt_pk (at most first 10 elements): ['DOID:10534', 'DOID:10652', 'DOID:10941', 'DOID:4914', 'DOID:9970', 'DOID:9074', 'DOID:8893', 'DOID:1184', 'DOID:8778', 'DOID:9778']
---- Removed rows from df with matching pk
*** Entering disease to database ***
df: #rows = 1870, #cols: 4
df:
              id  ...                                           synonyms
0     DOID:10003  ...  ["DOID:11053","DOID:12112","DOID:12114","centr...
1     DOID:10016  ...  ["MEN type IIB","MEN2B","mucosal neuroma syndr...
2     DOID:10017  ...  ["MEN type I","Wermer syndrome","Wermer's synd...
3      DOID:1002  ...                                                 []
4     DOID:10033  ...  ["Ciliary muscle paresis","Cycloplegic paralys...
...          ...  ...                                                ...
1894   DOID:9975  ...                                                 []
1895   DOID:9976  ...                                                 []
1896    DOID:998  ...                  ["Eosinophilia myalgia syndrome"]
1897    DOID:999  ...       ["eosinophilia","Eosinophilic leukocytosis"]
1898   DOID:9993  ...                                  ["Hypoglycaemia"]

[1870 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.06845927238464355 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection.tsv ---------
ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection.tsv
Read from file: df: #rows = 74743, #cols: 8

pKeys: ['id_namespace', 'local_id']
*** Entering collection to database ***
df: #rows = 74743, #cols: 8
df:
                                            id_namespace  ... has_time_series_data
0                       https://www.druggablegenome.net/  ...                  NaN
1                       https://www.druggablegenome.net/  ...                  NaN
2                       https://www.druggablegenome.net/  ...                  NaN
3                       https://www.druggablegenome.net/  ...                  NaN
4                       https://www.druggablegenome.net/  ...                  NaN
...                                                  ...  ...                  ...
74738  https://druggablegenome.net/cfde_idg_tcrd_targets  ...                  NaN
74739  https://druggablegenome.net/cfde_idg_tcrd_targets  ...                  NaN
74740  https://druggablegenome.net/cfde_idg_tcrd_targets  ...                  NaN
74741  https://druggablegenome.net/cfde_idg_tcrd_targets  ...                  NaN
74742  https://druggablegenome.net/cfde_idg_tcrd_targets  ...                  NaN

[74743 rows x 8 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 2.1405367851257324 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/gene.tsv ---------
ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/gene.tsv
Read from file: df: #rows = 19634, #cols: 5

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.gene;
qt_df: Empty DataFrame
Columns: [pk]
Index: []
---- Executed query, got data.frame: qt_df: #rows = 0, #cols: 1

df_pk (at most first 10 elements): ['ENSG00000000003', 'ENSG00000000005', 'ENSG00000000419', 'ENSG00000000457', 'ENSG00000000460', 'ENSG00000000938', 'ENSG00000000971', 'ENSG00000001036', 'ENSG00000001084', 'ENSG00000001167']
qt_pk (at most first 10 elements): []
---- Removed rows from df with matching pk
*** Entering gene to database ***
df: #rows = 19634, #cols: 5
df:
                    id  ...       organism
0      ENSG00000000003  ...  NCBI:txid9606
1      ENSG00000000005  ...  NCBI:txid9606
2      ENSG00000000419  ...  NCBI:txid9606
3      ENSG00000000457  ...  NCBI:txid9606
4      ENSG00000000460  ...  NCBI:txid9606
...                ...  ...            ...
19629  ENSG00000288701  ...  NCBI:txid9606
19630  ENSG00000288702  ...  NCBI:txid9606
19631  ENSG00000288705  ...  NCBI:txid9606
19632  ENSG00000288709  ...  NCBI:txid9606
19633  ENSG00000288722  ...  NCBI:txid9606

[19634 rows x 5 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 2.4215474128723145 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/file_describes_collection.tsv ---------
ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/file_describes_collection.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['file_id_namespace', 'file_local_id', 'collection_id_namespace', 'collection_local_id']
*** Entering file_describes_collection to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [file_id_namespace, file_local_id, collection_id_namespace, collection_local_id]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0044176578521728516 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/subject_race.tsv ---------
ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/subject_race.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['subject_id_namespace', 'subject_local_id', 'race']
*** Entering subject_race to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [subject_id_namespace, subject_local_id, race]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0025353431701660156 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/project_in_project.tsv ---------
ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/project_in_project.tsv
Read from file: df: #rows = 5, #cols: 4

pKeys: ['parent_project_id_namespace', 'parent_project_local_id', 'child_project_id_namespace', 'child_project_local_id']
*** Entering project_in_project to database ***
df: #rows = 5, #cols: 4
df:
        parent_project_id_namespace  ... child_project_local_id
0  https://www.druggablegenome.net/  ...            Harmonizome
1  https://www.druggablegenome.net/  ...           Drugmonizome
2  https://www.druggablegenome.net/  ...      idg_tcrd_diseases
3  https://www.druggablegenome.net/  ...  idg_drugcentral_drugs
4  https://www.druggablegenome.net/  ...       idg_tcrd_targets

[5 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.008275032043457031 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/subject_substance.tsv ---------
ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/subject_substance.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['subject_id_namespace', 'subject_local_id', 'substance']
*** Entering subject_substance to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [subject_id_namespace, subject_local_id, substance]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0025484561920166016 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/id_namespace.tsv ---------
ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/id_namespace.tsv
Read from file: df: #rows = 4, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.id_namespace;
qt_df:                                pk
0                           egtex
1    https://www.data.glygen.org/
2     https://data.4dnucleome.org
3                            gtex
4                      ERCC-exRNA
5     tag:hmpdacc.org,2022-04-04:
6                      adult_gtex
7  tag:hubmapconsortium.org,2023:
---- Executed query, got data.frame: qt_df: #rows = 8, #cols: 1

df_pk (at most first 10 elements): ['https://druggablegenome.net/cfde_idg_drugcentral_drugs', 'https://druggablegenome.net/cfde_idg_tcrd_diseases', 'https://druggablegenome.net/cfde_idg_tcrd_targets', 'https://www.druggablegenome.net/']
qt_pk (at most first 10 elements): ['egtex', 'https://www.data.glygen.org/', 'https://data.4dnucleome.org', 'gtex', 'ERCC-exRNA', 'tag:hmpdacc.org,2022-04-04:', 'adult_gtex', 'tag:hubmapconsortium.org,2023:']
---- Removed rows from df with matching pk
*** Entering id_namespace to database ***
df: #rows = 4, #cols: 4
df:
                                                  id  ...                                        description
2  https://druggablegenome.net/cfde_idg_drugcentr...  ...  IDG DrugCentral.org, online reference for appr...
1  https://druggablegenome.net/cfde_idg_tcrd_dise...  ...  IDG Target Central Resource Database (TCRD) Di...
3  https://druggablegenome.net/cfde_idg_tcrd_targets  ...  IDG Target Central Resource Database (TCRD) Ta...
0                   https://www.druggablegenome.net/  ...  The goal of IDG is to improve our understandin...

[4 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.012964963912963867 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/file_format.tsv ---------
ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/file_format.tsv
Read from file: df: #rows = 4, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.file_format;
qt_df:              pk
0   format:3654
1   format:3603
2   format:3004
3   format:3464
4   format:3579
5   format:1936
6   format:3987
7   format:2332
8   format:1975
9   format:3712
10  format:2572
11  format:3591
12  format:3590
13  format:3873
14  format:3006
15  format:1930
16  format:3468
17  format:3244
18  format:3727
19  format:3752
20  format:1919
21  format:3583
22  format:1929
23  format:3981
24  format:3746
25  format:3989
26  format:2330
27  format:3508
28  format:2331
29  format:3003
30  format:3839
31  format:3620
32  format:2333
33  format:3475
---- Executed query, got data.frame: qt_df: #rows = 34, #cols: 1

df_pk (at most first 10 elements): ['format:2330', 'format:3464', 'format:3475', 'format:3989']
qt_pk (at most first 10 elements): ['format:3654', 'format:3603', 'format:3004', 'format:3464', 'format:3579', 'format:1936', 'format:3987', 'format:2332', 'format:1975', 'format:3712']
---- Removed rows from df with matching pk
*** Entering file_format to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.005983829498291016 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/ncbi_taxonomy.tsv ---------
ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/ncbi_taxonomy.tsv
Read from file: df: #rows = 1, #cols: 5

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.ncbi_taxonomy;
qt_df:                     pk
0     NCBI:txid1095745
1     NCBI:txid1739397
2      NCBI:txid742723
3     NCBI:txid1715193
4      NCBI:txid469585
...                ...
2320   NCBI:txid742726
2321  NCBI:txid1715207
2322  NCBI:txid1161416
2323   NCBI:txid765081
2324   NCBI:txid999422

[2325 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 2325, #cols: 1

df_pk (at most first 10 elements): ['NCBI:txid9606']
qt_pk (at most first 10 elements): ['NCBI:txid1095745', 'NCBI:txid1739397', 'NCBI:txid742723', 'NCBI:txid1715193', 'NCBI:txid469585', 'NCBI:txid1581186', 'NCBI:txid762963', 'NCBI:txid1542093', 'NCBI:txid1134801', 'NCBI:txid525378']
---- Removed rows from df with matching pk
*** Entering ncbi_taxonomy to database ***
df: #rows = 0, #cols: 5
df:
Empty DataFrame
Columns: [id, clade, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.010747671127319336 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/project.tsv ---------
ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/project.tsv
Read from file: df: #rows = 6, #cols: 7

pKeys: ['id_namespace', 'local_id']
*** Entering project to database ***
df: #rows = 6, #cols: 7
df:
                                        id_namespace  ...                                        description
0                   https://www.druggablegenome.net/  ...  A collection of information about genes and pr...
1                   https://www.druggablegenome.net/  ...  The goal of IDG is to improve our understandin...
2                   https://www.druggablegenome.net/  ...  A web portal for querying sets of known drugs ...
3  https://druggablegenome.net/cfde_idg_tcrd_dise...  ...                             IDG TCRD disease pages
4  https://druggablegenome.net/cfde_idg_drugcentr...  ...                         IDG DrugCentral drug pages
5  https://druggablegenome.net/cfde_idg_tcrd_targets  ...                              IDG TCRD target pages

[6 rows x 7 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.01016092300415039 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection_taxonomy.tsv ---------
ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection_taxonomy.tsv
Read from file: df: #rows = 18479, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'taxon']
*** Entering collection_taxonomy to database ***
df: #rows = 18479, #cols: 3
df:
                collection_id_namespace     collection_local_id          taxon
0      https://www.druggablegenome.net/     GABPB1_associations  NCBI:txid9606
1      https://www.druggablegenome.net/      NR2C2_associations  NCBI:txid9606
2      https://www.druggablegenome.net/       FSHR_associations  NCBI:txid9606
3      https://www.druggablegenome.net/  C17orf107_associations  NCBI:txid9606
4      https://www.druggablegenome.net/      BEND7_associations  NCBI:txid9606
...                                 ...                     ...            ...
18474  https://www.druggablegenome.net/    CCDC160_associations  NCBI:txid9606
18475  https://www.druggablegenome.net/    EMILIN1_associations  NCBI:txid9606
18476  https://www.druggablegenome.net/      APOC4_associations  NCBI:txid9606
18477  https://www.druggablegenome.net/       AASS_associations  NCBI:txid9606
18478  https://www.druggablegenome.net/    DCUN1D4_associations  NCBI:txid9606

[18479 rows x 3 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.2313370704650879 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/subject_in_collection.tsv ---------
ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/subject_in_collection.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['subject_id_namespace', 'subject_local_id', 'collection_id_namespace', 'collection_local_id']
*** Entering subject_in_collection to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [subject_id_namespace, subject_local_id, collection_id_namespace, collection_local_id]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.00413823127746582 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/assay_type.tsv ---------
ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/assay_type.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['id']
*** Entering assay_type to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0028362274169921875 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/subject_role_taxonomy.tsv ---------
ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/subject_role_taxonomy.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['subject_id_namespace', 'subject_local_id', 'role_id', 'taxonomy_id']
*** Entering subject_role_taxonomy to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [subject_id_namespace, subject_local_id, role_id, taxonomy_id]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002567291259765625 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/biosample_in_collection.tsv ---------
ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/biosample_in_collection.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['biosample_id_namespace', 'biosample_local_id', 'collection_id_namespace', 'collection_local_id']
*** Entering biosample_in_collection to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [biosample_id_namespace, biosample_local_id, collection_id_namespace, collection_local_id]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0025081634521484375 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/substance.tsv ---------
ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/substance.tsv
Read from file: df: #rows = 0, #cols: 5

pKeys: ['id']
*** Entering substance to database ***
df: #rows = 0, #cols: 5
df:
Empty DataFrame
Columns: [id, name, description, synonyms, compound]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0025768280029296875 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/phenotype_disease.tsv ---------
ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/phenotype_disease.tsv
Read from file: df: #rows = 0, #cols: 2

pKeys: ['phenotype', 'disease']
*** Entering phenotype_disease to database ***
df: #rows = 0, #cols: 2
df:
Empty DataFrame
Columns: [phenotype, disease]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0021555423736572266 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/file_in_collection.tsv ---------
ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/file_in_collection.tsv
Read from file: df: #rows = 74743, #cols: 4

pKeys: ['file_id_namespace', 'file_local_id', 'collection_id_namespace', 'collection_local_id']
*** Entering file_in_collection to database ***
df: #rows = 74743, #cols: 4
df:
                                       file_id_namespace  ...        collection_local_id
0                       https://www.druggablegenome.net/  ...        GABPB1_associations
1                       https://www.druggablegenome.net/  ...         NR2C2_associations
2                       https://www.druggablegenome.net/  ...          FSHR_associations
3                       https://www.druggablegenome.net/  ...          RMRP_associations
4                       https://www.druggablegenome.net/  ...  LOC100129894_associations
...                                                  ...  ...                        ...
74738  https://druggablegenome.net/cfde_idg_tcrd_targets  ...            TARGET_ID_20408
74739  https://druggablegenome.net/cfde_idg_tcrd_targets  ...            TARGET_ID_20409
74740  https://druggablegenome.net/cfde_idg_tcrd_targets  ...            TARGET_ID_20410
74741  https://druggablegenome.net/cfde_idg_tcrd_targets  ...            TARGET_ID_20411
74742  https://druggablegenome.net/cfde_idg_tcrd_targets  ...            TARGET_ID_20412

[74743 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.2883219718933105 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection_in_collection.tsv ---------
ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection_in_collection.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['superset_collection_id_namespace', 'superset_collection_local_id', 'subset_collection_id_namespace', 'subset_collection_local_id']
*** Entering collection_in_collection to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [superset_collection_id_namespace, superset_collection_local_id, subset_collection_id_namespace, subset_collection_local_id]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.00586247444152832 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection_compound.tsv ---------
ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection_compound.tsv
Read from file: df: #rows = 16604, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'compound']
*** Entering collection_compound to database ***
df: #rows = 16604, #cols: 3
df:
                                 collection_id_namespace  ...  compound
0                       https://www.druggablegenome.net/  ...   1069140
1                       https://www.druggablegenome.net/  ...   6102686
2                       https://www.druggablegenome.net/  ...  24748050
3                       https://www.druggablegenome.net/  ...  16131215
4                       https://www.druggablegenome.net/  ...      1103
...                                                  ...  ...       ...
16599  https://druggablegenome.net/cfde_idg_drugcentr...  ...  10041070
16600  https://druggablegenome.net/cfde_idg_drugcentr...  ...   3058754
16601  https://druggablegenome.net/cfde_idg_drugcentr...  ...  25077495
16602  https://druggablegenome.net/cfde_idg_drugcentr...  ...     56032
16603  https://druggablegenome.net/cfde_idg_drugcentr...  ...     61274

[16604 rows x 3 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.2619500160217285 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/data_type.tsv ---------
ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/data_type.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['id']
*** Entering data_type to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.004421234130859375 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/dcc.tsv ---------
ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/dcc.tsv
Read from file: df: #rows = 1, #cols: 9

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.dcc;
qt_df:                          pk
0  cfde_registry_dcc:glygen
1   cfde_registry_dcc:exrna
2     cfde_registry_dcc:4dn
3     cfde_registry_dcc:hmp
4  cfde_registry_dcc:hubmap
5    cfde_registry_dcc:gtex
---- Executed query, got data.frame: qt_df: #rows = 6, #cols: 1

df_pk (at most first 10 elements): ['cfde_registry_dcc:idg']
qt_pk (at most first 10 elements): ['cfde_registry_dcc:glygen', 'cfde_registry_dcc:exrna', 'cfde_registry_dcc:4dn', 'cfde_registry_dcc:hmp', 'cfde_registry_dcc:hubmap', 'cfde_registry_dcc:gtex']
---- Removed rows from df with matching pk
*** Entering dcc to database ***
df: #rows = 1, #cols: 9
df:
                      id  ... project_local_id
0  cfde_registry_dcc:idg  ...              IDG

[1 rows x 9 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.014125823974609375 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/phenotype.tsv ---------
ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/phenotype.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['id']
*** Entering phenotype to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0027871131896972656 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/file_describes_biosample.tsv ---------
ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/file_describes_biosample.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['file_id_namespace', 'file_local_id', 'biosample_id_namespace', 'biosample_local_id']
*** Entering file_describes_biosample to database ***
/home/mano/DRC/DRC-Portals/database/populateC2M2FromS3_MRM.py:257: DtypeWarning: Columns (12) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv(table_str, delimiter='\t');
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [file_id_namespace, file_local_id, biosample_id_namespace, biosample_local_id]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002768278121948242 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection_anatomy.tsv ---------
ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection_anatomy.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'anatomy']
*** Entering collection_anatomy to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, anatomy]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0024461746215820312 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/biosample_substance.tsv ---------
ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/biosample_substance.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['biosample_id_namespace', 'biosample_local_id', 'substance']
*** Entering biosample_substance to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [biosample_id_namespace, biosample_local_id, substance]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0024237632751464844 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/biosample.tsv ---------
ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/biosample.tsv
Read from file: df: #rows = 0, #cols: 8

pKeys: ['id_namespace', 'local_id']
*** Entering biosample to database ***
df: #rows = 0, #cols: 8
df:
Empty DataFrame
Columns: [id_namespace, local_id, project_id_namespace, project_local_id, persistent_id, creation_time, sample_prep_method, anatomy]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.003202676773071289 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/biosample_disease.tsv ---------
ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/biosample_disease.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['biosample_id_namespace', 'biosample_local_id', 'association_type', 'disease']
*** Entering biosample_disease to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [biosample_id_namespace, biosample_local_id, association_type, disease]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.00258636474609375 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/file.tsv ---------
ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/file.tsv
Read from file: df: #rows = 75893, #cols: 20

pKeys: ['id_namespace', 'local_id']
*** Entering file to database ***
df: #rows = 75893, #cols: 20
df:
                                            id_namespace  ... dbgap_study_id
0                       https://www.druggablegenome.net/  ...            NaN
1                       https://www.druggablegenome.net/  ...            NaN
2                       https://www.druggablegenome.net/  ...            NaN
3                       https://www.druggablegenome.net/  ...            NaN
4                       https://www.druggablegenome.net/  ...            NaN
...                                                  ...  ...            ...
75888  https://druggablegenome.net/cfde_idg_tcrd_targets  ...            NaN
75889  https://druggablegenome.net/cfde_idg_tcrd_targets  ...            NaN
75890  https://druggablegenome.net/cfde_idg_tcrd_targets  ...            NaN
75891  https://druggablegenome.net/cfde_idg_tcrd_targets  ...            NaN
75892  https://druggablegenome.net/cfde_idg_tcrd_targets  ...            NaN

[75893 rows x 20 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 4.070736885070801 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/protein.tsv ---------
ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/protein.tsv
Read from file: df: #rows = 0, #cols: 5

pKeys: ['id']
*** Entering protein to database ***
df: #rows = 0, #cols: 5
df:
Empty DataFrame
Columns: [id, name, description, synonyms, organism]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.01065516471862793 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/anatomy.tsv ---------
ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/anatomy.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['id']
*** Entering anatomy to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.003378152847290039 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection_defined_by_project.tsv ---------
ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection_defined_by_project.tsv
Read from file: df: #rows = 74743, #cols: 4

pKeys: ['collection_id_namespace', 'collection_local_id', 'project_id_namespace', 'project_local_id']
*** Entering collection_defined_by_project to database ***
df: #rows = 74743, #cols: 4
df:
                                 collection_id_namespace  ...  project_local_id
0                       https://www.druggablegenome.net/  ...       Harmonizome
1                       https://www.druggablegenome.net/  ...       Harmonizome
2                       https://www.druggablegenome.net/  ...       Harmonizome
3                       https://www.druggablegenome.net/  ...       Harmonizome
4                       https://www.druggablegenome.net/  ...       Harmonizome
...                                                  ...  ...               ...
74738  https://druggablegenome.net/cfde_idg_tcrd_targets  ...  idg_tcrd_targets
74739  https://druggablegenome.net/cfde_idg_tcrd_targets  ...  idg_tcrd_targets
74740  https://druggablegenome.net/cfde_idg_tcrd_targets  ...  idg_tcrd_targets
74741  https://druggablegenome.net/cfde_idg_tcrd_targets  ...  idg_tcrd_targets
74742  https://druggablegenome.net/cfde_idg_tcrd_targets  ...  idg_tcrd_targets

[74743 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.290642261505127 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/subject.tsv ---------
ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/subject.tsv
Read from file: df: #rows = 0, #cols: 10

pKeys: ['id_namespace', 'local_id']
*** Entering subject to database ***
df: #rows = 0, #cols: 10
df:
Empty DataFrame
Columns: [id_namespace, local_id, project_id_namespace, project_local_id, persistent_id, creation_time, granularity, sex, ethnicity, age_at_enrollment]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.008385896682739258 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection_protein.tsv ---------
ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection_protein.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'protein']
*** Entering collection_protein to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, protein]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0029675960540771484 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/file_describes_subject.tsv ---------
ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/file_describes_subject.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['file_id_namespace', 'file_local_id', 'subject_id_namespace', 'subject_local_id']
*** Entering file_describes_subject to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [file_id_namespace, file_local_id, subject_id_namespace, subject_local_id]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.00274658203125 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection_disease.tsv ---------
ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection_disease.tsv
Read from file: df: #rows = 1899, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'disease']
*** Entering collection_disease to database ***
df: #rows = 1899, #cols: 3
df:
                                collection_id_namespace  ...     disease
0     https://druggablegenome.net/cfde_idg_tcrd_dise...  ...     DOID:15
1     https://druggablegenome.net/cfde_idg_tcrd_dise...  ...     DOID:17
2     https://druggablegenome.net/cfde_idg_tcrd_dise...  ...     DOID:28
3     https://druggablegenome.net/cfde_idg_tcrd_dise...  ...     DOID:37
4     https://druggablegenome.net/cfde_idg_tcrd_dise...  ...     DOID:47
...                                                 ...  ...         ...
1894  https://druggablegenome.net/cfde_idg_tcrd_dise...  ...  DOID:14796
1895  https://druggablegenome.net/cfde_idg_tcrd_dise...  ...  DOID:60001
1896  https://druggablegenome.net/cfde_idg_tcrd_dise...  ...  DOID:60002
1897  https://druggablegenome.net/cfde_idg_tcrd_dise...  ...  DOID:60004
1898  https://druggablegenome.net/cfde_idg_tcrd_dise...  ...  DOID:60009

[1899 rows x 3 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.03859543800354004 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/sample_prep_method.tsv ---------
ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/sample_prep_method.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['id']
*** Entering sample_prep_method to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.004273176193237305 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/phenotype_gene.tsv ---------
ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/phenotype_gene.tsv
Read from file: df: #rows = 0, #cols: 2

pKeys: ['phenotype', 'gene']
*** Entering phenotype_gene to database ***
df: #rows = 0, #cols: 2
df:
Empty DataFrame
Columns: [phenotype, gene]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002724885940551758 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/biosample_gene.tsv ---------
ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/biosample_gene.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['biosample_id_namespace', 'biosample_local_id', 'gene']
*** Entering biosample_gene to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [biosample_id_namespace, biosample_local_id, gene]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0025634765625 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection_substance.tsv ---------
ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection_substance.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'substance']
*** Entering collection_substance to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, substance]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002454519271850586 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection_phenotype.tsv ---------
ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection_phenotype.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'phenotype']
*** Entering collection_phenotype to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, phenotype]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0024712085723876953 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection_gene.tsv ---------
ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/collection_gene.tsv
Read from file: df: #rows = 37774, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'gene']
*** Entering collection_gene to database ***
df: #rows = 37774, #cols: 3
df:
                                 collection_id_namespace  ...             gene
0                       https://www.druggablegenome.net/  ...  ENSG00000104064
1                       https://www.druggablegenome.net/  ...  ENSG00000177463
2                       https://www.druggablegenome.net/  ...  ENSG00000170820
3                       https://www.druggablegenome.net/  ...  ENSG00000205710
4                       https://www.druggablegenome.net/  ...  ENSG00000165626
...                                                  ...  ...              ...
37769  https://druggablegenome.net/cfde_idg_tcrd_targets  ...  ENSG00000134640
37770  https://druggablegenome.net/cfde_idg_tcrd_targets  ...  ENSG00000182534
37771  https://druggablegenome.net/cfde_idg_tcrd_targets  ...  ENSG00000009950
37772  https://druggablegenome.net/cfde_idg_tcrd_targets  ...  ENSG00000121211
37773  https://druggablegenome.net/cfde_idg_tcrd_targets  ...  ENSG00000110811

[37774 rows x 3 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.49416255950927734 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/compound.tsv ---------
ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/compound.tsv
Read from file: df: #rows = 12962, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.compound;
qt_df:              pk
0      G21286VC
1      G66231VJ
2      G55943II
3      G30268KJ
4      G76631VS
...         ...
45186  G94172VX
45187  G38602GT
45188  91846918
45189  G28852XW
45190  G04679CK

[45191 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 45191, #cols: 1

df_pk (at most first 10 elements): ['6', '11', '19', '38', '44', '49', '51', '58', '70', '72']
qt_pk (at most first 10 elements): ['G21286VC', 'G66231VJ', 'G55943II', 'G30268KJ', 'G76631VS', 'G42138LH', 'G10602EW', 'G84227HS', 'G72207TE', 'G19073EP']
---- Removed rows from df with matching pk
*** Entering compound to database ***
Processing C2M2 Files...:  58%|█████▊    | 7/12 [24:52<23:45, 285.14s/it]df: #rows = 12920, #cols: 4
df:
             id  ...                                           synonyms
9825          6  ...  ["1-chloro-2,4-dinitrobenzene", "2,4-Dinitroch...
534          11  ...  ["1,2-dichloroethane", "Ethylene dichloride", ...
3329         19  ...  ["2,3-Dihydroxybenzoic acid", "303-38-8", "Pyr...
5650         38  ...  ["2-dehydropantoate", "ketopantoic acid", "4-h...
6107         44  ...  ["tartronate", "hydroxypropanedioate", "hydrox...
...         ...  ...                                                ...
2854  162342684  ...            ["selamectin", "220119-17-5", "C74112"]
2855  162343947  ...                ["nystatin", "1400-61-9", "H10423"]
2857  162393081  ...               ["Tylosin", "1401-69-0", "BAA40169"]
2858  162396680  ...                  ["methylcobalamin", "13422-55-4"]
2865  162639132  ...                         ["veratridine", "71-62-5"]

[12920 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 4.84965705871582 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/subject_phenotype.tsv ---------
ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/subject_phenotype.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['subject_id_namespace', 'subject_local_id', 'association_type', 'phenotype']
*** Entering subject_phenotype to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [subject_id_namespace, subject_local_id, association_type, phenotype]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.006254673004150391 seconds.

--------- ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/subject_disease.tsv ---------
ingest/c2m2s/IDG/datapackage/merged-datapackage_cba63847d02e8ee1ccf150a98ebe814be895333c/data/subject_disease.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['subject_id_namespace', 'subject_local_id', 'association_type', 'disease']
*** Entering subject_disease to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [subject_id_namespace, subject_local_id, association_type, disease]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002824068069458008 seconds.


================================== DCC short label: KidsFirst =============================================
Unpack zip file: c2m2_extract_path: ingest/c2m2s/KidsFirst/datapackage
--------- ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/collection.tsv ---------
ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/collection.tsv
Read from file: df: #rows = 0, #cols: 8

pKeys: ['id_namespace', 'local_id']
*** Entering collection to database ***
df: #rows = 0, #cols: 8
df:
Empty DataFrame
Columns: [id_namespace, local_id, persistent_id, creation_time, abbreviation, name, description, has_time_series_data]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.006015777587890625 seconds.

--------- ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/anatomy.tsv ---------
ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/anatomy.tsv
Read from file: df: #rows = 16, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.anatomy;
qt_df:                  pk
0    UBERON:0000087
1    UBERON:0001199
2    UBERON:0007311
3    UBERON:0001728
4    UBERON:0001736
..              ...
242  UBERON:0001496
243  UBERON:0000473
244  UBERON:0013069
245  UBERON:0008337
246  UBERON:0001474

[247 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 247, #cols: 1

df_pk (at most first 10 elements): ['UBERON:0000178', 'UBERON:0000479', 'UBERON:0000955', 'UBERON:0000988', 'UBERON:0001003', 'UBERON:0001017', 'UBERON:0001037', 'UBERON:0001836', 'UBERON:0002048', 'UBERON:0002363']
qt_pk (at most first 10 elements): ['UBERON:0000087', 'UBERON:0001199', 'UBERON:0007311', 'UBERON:0001728', 'UBERON:0001736', 'UBERON:0002037', 'UBERON:0009835', 'UBERON:0001621', 'UBERON:0002097', 'UBERON:0001017']
---- Removed rows from df with matching pk
*** Entering anatomy to database ***
df: #rows = 7, #cols: 4
df:
                id  ...                                           synonyms
3   UBERON:0000988  ...                ["pons of Varolius","pons Varolii"]
4   UBERON:0001003  ...        ["epidermis","skin","vertebrate epidermis"]
6   UBERON:0001037  ...                                           ["hair"]
9   UBERON:0002363  ...         ["dura mater of neuraxis","pachymeninges"]
12  UBERON:0003728  ...                      ["mediastinal part of chest"]
14  UBERON:0010011  ...  ["basal ganglia","basal ganglia set","basal nu...
15  UBERON:0016435  ...                                                 []

[7 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.016010046005249023 seconds.

--------- ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/file_in_collection.tsv ---------
ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/file_in_collection.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['file_id_namespace', 'file_local_id', 'collection_id_namespace', 'collection_local_id']
*** Entering file_in_collection to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [file_id_namespace, file_local_id, collection_id_namespace, collection_local_id]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0036537647247314453 seconds.

--------- ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/file.tsv ---------
ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/file.tsv
Read from file: df: #rows = 273047, #cols: 20

pKeys: ['id_namespace', 'local_id']
*** Entering file to database ***
df: #rows = 273047, #cols: 20
df:
       id_namespace     local_id  ... bundle_collection_local_id dbgap_study_id
0        kidsfirst:  GF_0003WJQG  ...                        NaN      phs002276
1        kidsfirst:  GF_00065FWM  ...                        NaN            NaN
2        kidsfirst:  GF_000BZ5E7  ...                        NaN      phs001436
3        kidsfirst:  GF_000C18FW  ...                        NaN      phs001436
4        kidsfirst:  GF_000GT6FR  ...                        NaN      phs001436
...             ...          ...  ...                        ...            ...
273042   kidsfirst:  GF_ZZZRX79D  ...                        NaN      phs002276
273043   kidsfirst:  GF_ZZZVAQDZ  ...                        NaN            NaN
273044   kidsfirst:  GF_ZZZWXJM1  ...                        NaN      phs002276
273045   kidsfirst:  GF_ZZZYCMZQ  ...                        NaN      phs001110
273046   kidsfirst:  GF_ZZZZ8C2T  ...                        NaN      phs001110

[273047 rows x 20 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 16.15242028236389 seconds.

--------- ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/gene.tsv ---------
ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/gene.tsv
Read from file: df: #rows = 0, #cols: 5

pKeys: ['id']
*** Entering gene to database ***
df: #rows = 0, #cols: 5
df:
Empty DataFrame
Columns: [id, name, description, synonyms, organism]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.026192665100097656 seconds.

--------- ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/subject_role_taxonomy.tsv ---------
ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/subject_role_taxonomy.tsv
Read from file: df: #rows = 31227, #cols: 4

pKeys: ['subject_id_namespace', 'subject_local_id', 'role_id', 'taxonomy_id']
*** Entering subject_role_taxonomy to database ***
df: #rows = 31227, #cols: 4
df:
      subject_id_namespace subject_local_id              role_id    taxonomy_id
0               kidsfirst:      PT_0001K4K1  cfde_subject_role:0  NCBI:txid9606
1               kidsfirst:      PT_0021ZCHS  cfde_subject_role:0  NCBI:txid9606
2               kidsfirst:      PT_002MFVY5  cfde_subject_role:0  NCBI:txid9606
3               kidsfirst:      PT_004FDKPF  cfde_subject_role:0  NCBI:txid9606
4               kidsfirst:      PT_004KEANN  cfde_subject_role:0  NCBI:txid9606
...                    ...              ...                  ...            ...
31222           kidsfirst:      PT_ZZTQQVCT  cfde_subject_role:0  NCBI:txid9606
31223           kidsfirst:      PT_ZZWHYVYD  cfde_subject_role:0  NCBI:txid9606
31224           kidsfirst:      PT_ZZWYKZZ8  cfde_subject_role:0  NCBI:txid9606
31225           kidsfirst:      PT_ZZYN2VKP  cfde_subject_role:0  NCBI:txid9606
31226           kidsfirst:      PT_ZZYTGPQS  cfde_subject_role:0  NCBI:txid9606

[31227 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.41060876846313477 seconds.

--------- ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/file_format.tsv ---------
ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/file_format.tsv
Read from file: df: #rows = 12, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.file_format;
qt_df:              pk
0   format:3654
1   format:3603
2   format:3004
3   format:3464
4   format:3579
5   format:1936
6   format:3987
7   format:2332
8   format:1975
9   format:3712
10  format:2572
11  format:3591
12  format:3590
13  format:3873
14  format:3006
15  format:1930
16  format:3468
17  format:3244
18  format:3727
19  format:3752
20  format:1919
21  format:3583
22  format:1929
23  format:3981
24  format:3746
25  format:3989
26  format:2330
27  format:3508
28  format:2331
29  format:3003
30  format:3839
31  format:3620
32  format:2333
33  format:3475
---- Executed query, got data.frame: qt_df: #rows = 34, #cols: 1

df_pk (at most first 10 elements): ['format:1930', 'format:2331', 'format:2572', 'format:3008', 'format:3016', 'format:3327', 'format:3462', 'format:3475', 'format:3508', 'format:3578']
qt_pk (at most first 10 elements): ['format:3654', 'format:3603', 'format:3004', 'format:3464', 'format:3579', 'format:1936', 'format:3987', 'format:2332', 'format:1975', 'format:3712']
---- Removed rows from df with matching pk
*** Entering file_format to database ***
df: #rows = 6, #cols: 4
df:
             id  ... synonyms
3   format:3008  ...       []
4   format:3016  ...       []
5   format:3327  ...       []
6   format:3462  ...       []
9   format:3578  ...       []
11  format:3829  ...       []

[6 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.012404918670654297 seconds.

--------- ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/project.tsv ---------
ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/project.tsv
Read from file: df: #rows = 40, #cols: 7

pKeys: ['id_namespace', 'local_id']
*** Entering project to database ***
df: #rows = 40, #cols: 7
df:
   id_namespace  ...                                        description
0    kidsfirst:  ...  A large-scale data resource to help researcher...
1    kidsfirst:  ...  Kids First: An Integrated Clinical and Genomic...
2    kidsfirst:  ...  Gabriella Miller Kids First Pediatric Research...
3    kidsfirst:  ...  Kids First: Genomic Analysis of Congenital Hea...
4    kidsfirst:  ...  Kids First: Single gene pathogenic variants as...
5    kidsfirst:  ...                        TARGET: Neuroblastoma (NBL)
6    kidsfirst:  ...  Kids First: Expanded Ewing sarcoma cohort for ...
7    kidsfirst:  ...  Kids First: Genomics of Orofacial Clefts in th...
8    kidsfirst:  ...              Genomic Analysis of Familial Leukemia
9    kidsfirst:  ...  Kids First: Genomic Analysis of a Cohort with ...
10   kidsfirst:  ...  Kids First: Genomics of Orthopaedic Disease Pr...
11   kidsfirst:  ...  Kids First: Genomics of Orofacial Cleft Birth ...
12   kidsfirst:  ...  Kids First: Genetic Predisposition to Intracra...
13   kidsfirst:  ...  Kids First: Whole Exome, Genome, and RNA Seque...
14   kidsfirst:  ...  National Heart, Lung, and Blood Institute (NHL...
15   kidsfirst:  ...  Kids First: Germline and Somatic Variants in M...
16   kidsfirst:  ...  Kids First: Whole genome sequencing of nonsynd...
17   kidsfirst:  ...  Kids First: Genetics of Structural Defects of ...
18   kidsfirst:  ...  Kids First: Genetics at the Intersection of Ch...
19   kidsfirst:  ...  Kids First: Genomic Analysis of Laterality Bir...
20   kidsfirst:  ...  Kids First: Discovery of Genetic Basis of Feta...
21   kidsfirst:  ...  Pharmacokinetics, Pharmacodynamics, and Safety...
22   kidsfirst:  ...  Kids First: BCH Structural Birth Defects Colla...
23   kidsfirst:  ...  Kids First: The Genetics of Microtia in Hispan...
24   kidsfirst:  ...  Discovering the Genetic Basis of Human Neurobl...
25   kidsfirst:  ...  Whole Genome Sequencing of African and Asian O...
26   kidsfirst:  ...  Pediatric Brain Tumor Atlas - Children's Brain...
27   kidsfirst:  ...  Kids First: Craniofacial Microsomia: Genetic C...
28   kidsfirst:  ...  Comprehensive Genomic Profiling to Improve Pre...
29   kidsfirst:  ...   Genomic Studies of Orofacial Cleft Birth Defects
30   kidsfirst:  ...                  Pediatric Brain Tumor Atlas: PNOC
31   kidsfirst:  ...  Genome-wide Sequencing to Identify the Genes R...
32   kidsfirst:  ...  Kids First: Genetic Basis of Disorders/Differe...
33   kidsfirst:  ...  Kids First: Genomic Etiologies of CHARGE Syndr...
34   kidsfirst:  ...  Kids First: Genomic Analysis of Congenital Dia...
35   kidsfirst:  ...               TARGET: Acute Myeloid Leukemia (AML)
36   kidsfirst:  ...  Kids First: Genomic Diagnostics in Cornelia de...
37   kidsfirst:  ...                               OpenDIPG: ICR London
38   kidsfirst:  ...  Kids First: Whole Exome and Genome Sequencing ...
39   kidsfirst:  ...  Genomic Analysis of Esophageal Atresia and Tra...

[40 rows x 7 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.011747360229492188 seconds.

--------- ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/phenotype_disease.tsv ---------
ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/phenotype_disease.tsv
Read from file: df: #rows = 0, #cols: 2

pKeys: ['phenotype', 'disease']
*** Entering phenotype_disease to database ***
df: #rows = 0, #cols: 2
df:
Empty DataFrame
Columns: [phenotype, disease]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0023500919342041016 seconds.

--------- ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/ncbi_taxonomy.tsv ---------
ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/ncbi_taxonomy.tsv
Read from file: df: #rows = 1, #cols: 5

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.ncbi_taxonomy;
qt_df:                     pk
0     NCBI:txid1095745
1     NCBI:txid1739397
2      NCBI:txid742723
3     NCBI:txid1715193
4      NCBI:txid469585
...                ...
2320   NCBI:txid742726
2321  NCBI:txid1715207
2322  NCBI:txid1161416
2323   NCBI:txid765081
2324   NCBI:txid999422

[2325 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 2325, #cols: 1

df_pk (at most first 10 elements): ['NCBI:txid9606']
qt_pk (at most first 10 elements): ['NCBI:txid1095745', 'NCBI:txid1739397', 'NCBI:txid742723', 'NCBI:txid1715193', 'NCBI:txid469585', 'NCBI:txid1581186', 'NCBI:txid762963', 'NCBI:txid1542093', 'NCBI:txid1134801', 'NCBI:txid525378']
---- Removed rows from df with matching pk
*** Entering ncbi_taxonomy to database ***
df: #rows = 0, #cols: 5
df:
Empty DataFrame
Columns: [id, clade, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.008868932723999023 seconds.

--------- ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/phenotype.tsv ---------
ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/phenotype.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['id']
*** Entering phenotype to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002562284469604492 seconds.

--------- ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/substance.tsv ---------
ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/substance.tsv
Read from file: df: #rows = 0, #cols: 5

pKeys: ['id']
*** Entering substance to database ***
df: #rows = 0, #cols: 5
df:
Empty DataFrame
Columns: [id, name, description, synonyms, compound]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002706289291381836 seconds.

--------- ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/project_in_project.tsv ---------
ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/project_in_project.tsv
Read from file: df: #rows = 39, #cols: 4

pKeys: ['parent_project_id_namespace', 'parent_project_local_id', 'child_project_id_namespace', 'child_project_local_id']
*** Entering project_in_project to database ***
df: #rows = 39, #cols: 4
df:
   parent_project_id_namespace  ... child_project_local_id
0                   kidsfirst:  ...            SD_ZXJFFMEF
1                   kidsfirst:  ...            SD_ZFGDG5YS
2                   kidsfirst:  ...            SD_Z6MWD3H0
3                   kidsfirst:  ...            SD_Z0D9N23X
4                   kidsfirst:  ...            SD_YNSSAPHE
5                   kidsfirst:  ...            SD_YGVA0E1C
6                   kidsfirst:  ...            SD_W6FWTD8A
7                   kidsfirst:  ...            SD_W0V965XZ
8                   kidsfirst:  ...            SD_VTTSHWV4
9                   kidsfirst:  ...            SD_RM8AFW0R
10                  kidsfirst:  ...            SD_R0EPRSGS
11                  kidsfirst:  ...            SD_QBG7P5P7
12                  kidsfirst:  ...            SD_Q2F7XA29
13                  kidsfirst:  ...            SD_PREASA7S
14                  kidsfirst:  ...            SD_PET7Q6F2
15                  kidsfirst:  ...            SD_P445ACHV
16                  kidsfirst:  ...            SD_NMVV8A1Y
17                  kidsfirst:  ...            SD_JWS3V24D
18                  kidsfirst:  ...            SD_JK4Z4T6V
19                  kidsfirst:  ...            SD_GPZG67FZ
20                  kidsfirst:  ...            SD_FFVQ3T38
21                  kidsfirst:  ...            SD_DZTB5HRR
22                  kidsfirst:  ...            SD_DZ4GPQX6
23                  kidsfirst:  ...            SD_DYPMEHHF
24                  kidsfirst:  ...            SD_DK0KRWK8
25                  kidsfirst:  ...            SD_BHJXBDQK
26                  kidsfirst:  ...            SD_B8X3C1MX
27                  kidsfirst:  ...            SD_AQ9KVN5P
28                  kidsfirst:  ...            SD_9PYZAHHE
29                  kidsfirst:  ...            SD_8Y99QZJJ
30                  kidsfirst:  ...            SD_7NQ9151J
31                  kidsfirst:  ...            SD_6FPYJQBR
32                  kidsfirst:  ...            SD_54G4WG4R
33                  kidsfirst:  ...            SD_46SK55A3
34                  kidsfirst:  ...            SD_46RR9ZR6
35                  kidsfirst:  ...            SD_2CEKQ05V
36                  kidsfirst:  ...            SD_1P41Z782
37                  kidsfirst:  ...            SD_15A2MQQ9
38                  kidsfirst:  ...            SD_0TYVY1TW

[39 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.008056879043579102 seconds.

--------- ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/subject.tsv ---------
ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/subject.tsv
Read from file: df: #rows = 31227, #cols: 10

pKeys: ['id_namespace', 'local_id']
*** Entering subject to database ***
df: #rows = 31227, #cols: 10
df:
      id_namespace     local_id  ...                 ethnicity age_at_enrollment
0       kidsfirst:  PT_0001K4K1  ...  cfde_subject_ethnicity:0               NaN
1       kidsfirst:  PT_0021ZCHS  ...  cfde_subject_ethnicity:1               NaN
2       kidsfirst:  PT_002MFVY5  ...  cfde_subject_ethnicity:1               NaN
3       kidsfirst:  PT_004FDKPF  ...  cfde_subject_ethnicity:1               NaN
4       kidsfirst:  PT_004KEANN  ...  cfde_subject_ethnicity:1               NaN
...            ...          ...  ...                       ...               ...
31222   kidsfirst:  PT_ZZTQQVCT  ...  cfde_subject_ethnicity:1               NaN
31223   kidsfirst:  PT_ZZWHYVYD  ...  cfde_subject_ethnicity:1               NaN
31224   kidsfirst:  PT_ZZWYKZZ8  ...  cfde_subject_ethnicity:1               NaN
31225   kidsfirst:  PT_ZZYN2VKP  ...  cfde_subject_ethnicity:1               NaN
31226   kidsfirst:  PT_ZZYTGPQS  ...                       NaN               NaN

[31227 rows x 10 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.770880937576294 seconds.

--------- ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/analysis_type.tsv ---------
ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/analysis_type.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['id']
*** Entering analysis_type to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.004565000534057617 seconds.

--------- ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/biosample.tsv ---------
ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/biosample.tsv
Read from file: df: #rows = 42208, #cols: 8

pKeys: ['id_namespace', 'local_id']
*** Entering biosample to database ***
df: #rows = 42208, #cols: 8
df:
      id_namespace     local_id  ... sample_prep_method anatomy
0       kidsfirst:  BS_002W6DYW  ...                NaN     NaN
1       kidsfirst:  BS_003293HH  ...                NaN     NaN
2       kidsfirst:  BS_003TNG75  ...                NaN     NaN
3       kidsfirst:  BS_004ND16X  ...                NaN     NaN
4       kidsfirst:  BS_005FNP7J  ...                NaN     NaN
...            ...          ...  ...                ...     ...
42203   kidsfirst:  BS_ZZXBBDB6  ...                NaN     NaN
42204   kidsfirst:  BS_ZZXGGWK6  ...                NaN     NaN
42205   kidsfirst:  BS_ZZY9MDJE  ...                NaN     NaN
42206   kidsfirst:  BS_ZZYRHKG5  ...                NaN     NaN
42207   kidsfirst:  BS_ZZZSE8CC  ...                NaN     NaN

[42208 rows x 8 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.8638792037963867 seconds.

--------- ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/protein_gene.tsv ---------
ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/protein_gene.tsv
Read from file: df: #rows = 0, #cols: 2

pKeys: ['protein', 'gene']
*** Entering protein_gene to database ***
df: #rows = 0, #cols: 2
df:
Empty DataFrame
Columns: [protein, gene]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0046291351318359375 seconds.

--------- ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/subject_race.tsv ---------
ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/subject_race.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['subject_id_namespace', 'subject_local_id', 'race']
*** Entering subject_race to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [subject_id_namespace, subject_local_id, race]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0029168128967285156 seconds.

--------- ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/collection_phenotype.tsv ---------
ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/collection_phenotype.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'phenotype']
*** Entering collection_phenotype to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, phenotype]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.00246429443359375 seconds.

--------- ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/assay_type.tsv ---------
ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/assay_type.tsv
Read from file: df: #rows = 3, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.assay_type;
qt_df:               pk
0    OBI:0003306
1    OBI:0002766
2    OBI:0003104
3    OBI:0002984
4    OBI:0000185
5    OBI:0003300
6    OBI:0003087
7    OBI:0002760
8    OBI:0003312
9    OBI:0003093
10   OBI:0002117
11   OBI:0001631
12   OBI:0003099
13   OBI:0002761
14   OBI:0003301
15   OBI:0003033
16   OBI:0003094
17   OBI:0003097
18   OBI:0001977
19   OBI:0000893
20   OBI:0003311
21   OBI:0002631
22   OBI:0003297
23   OBI:0001920
24   OBI:0003101
25   OBI:0002768
26   OBI:0003092
27   OBI:0000716
28   OBI:0001177
29   OBI:0003314
30   OBI:0002112
31   OBI:0003108
32   OBI:0002118
33   OBI:0001848
34   OBI:0002623
35   OBI:0003313
36   OBI:0001985
37   OBI:0000366
38   OBI:0000615
39   OBI:0003100
40   OBI:0003299
41   OBI:0003089
42   OBI:0003105
43   OBI:0002763
44   OBI:0003107
45   OBI:0000470
46   OBI:0000626
47   OBI:0003305
48   OBI:0003304
49   OBI:0003303
50   OBI:0003103
51   OBI:0002145
52   OBI:0003034
53   OBI:0600047
54  CHMO:0000087
55   OBI:0003302
56   OBI:0001271
57   OBI:0003098
---- Executed query, got data.frame: qt_df: #rows = 58, #cols: 1

df_pk (at most first 10 elements): ['OBI:0001177', 'OBI:0002117', 'OBI:0002118']
qt_pk (at most first 10 elements): ['OBI:0003306', 'OBI:0002766', 'OBI:0003104', 'OBI:0002984', 'OBI:0000185', 'OBI:0003300', 'OBI:0003087', 'OBI:0002760', 'OBI:0003312', 'OBI:0003093']
---- Removed rows from df with matching pk
*** Entering assay_type to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.006472349166870117 seconds.

--------- ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/collection_anatomy.tsv ---------
ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/collection_anatomy.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'anatomy']
*** Entering collection_anatomy to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, anatomy]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0027964115142822266 seconds.

--------- ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/dcc.tsv ---------
ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/dcc.tsv
Read from file: df: #rows = 1, #cols: 9

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.dcc;
qt_df:                          pk
0  cfde_registry_dcc:glygen
1   cfde_registry_dcc:exrna
2     cfde_registry_dcc:4dn
3     cfde_registry_dcc:hmp
4  cfde_registry_dcc:hubmap
5    cfde_registry_dcc:gtex
6     cfde_registry_dcc:idg
---- Executed query, got data.frame: qt_df: #rows = 7, #cols: 1

df_pk (at most first 10 elements): ['cfde_registry_dcc:kidsfirst']
qt_pk (at most first 10 elements): ['cfde_registry_dcc:glygen', 'cfde_registry_dcc:exrna', 'cfde_registry_dcc:4dn', 'cfde_registry_dcc:hmp', 'cfde_registry_dcc:hubmap', 'cfde_registry_dcc:gtex', 'cfde_registry_dcc:idg']
---- Removed rows from df with matching pk
*** Entering dcc to database ***
df: #rows = 1, #cols: 9
df:
                            id  ... project_local_id
0  cfde_registry_dcc:kidsfirst  ...              drc

[1 rows x 9 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.012595176696777344 seconds.

--------- ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/collection_gene.tsv ---------
ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/collection_gene.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'gene']
*** Entering collection_gene to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, gene]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0024564266204833984 seconds.

--------- ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/collection_compound.tsv ---------
ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/collection_compound.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'compound']
*** Entering collection_compound to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, compound]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0024056434631347656 seconds.

--------- ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/biosample_gene.tsv ---------
ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/biosample_gene.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['biosample_id_namespace', 'biosample_local_id', 'gene']
*** Entering biosample_gene to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [biosample_id_namespace, biosample_local_id, gene]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0024023056030273438 seconds.

--------- ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/biosample_in_collection.tsv ---------
ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/biosample_in_collection.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['biosample_id_namespace', 'biosample_local_id', 'collection_id_namespace', 'collection_local_id']
*** Entering biosample_in_collection to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [biosample_id_namespace, biosample_local_id, collection_id_namespace, collection_local_id]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002620220184326172 seconds.

--------- ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/biosample_from_subject.tsv ---------
ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/biosample_from_subject.tsv
Read from file: df: #rows = 42208, #cols: 5

pKeys: ['biosample_id_namespace', 'biosample_local_id', 'subject_id_namespace', 'subject_local_id']
*** Entering biosample_from_subject to database ***
df: #rows = 42208, #cols: 5
df:
      biosample_id_namespace  ... age_at_sampling
0                 kidsfirst:  ...             NaN
1                 kidsfirst:  ...             NaN
2                 kidsfirst:  ...             NaN
3                 kidsfirst:  ...             NaN
4                 kidsfirst:  ...             NaN
...                      ...  ...             ...
42203             kidsfirst:  ...             NaN
42204             kidsfirst:  ...             NaN
42205             kidsfirst:  ...             NaN
42206             kidsfirst:  ...             NaN
42207             kidsfirst:  ...             NaN

[42208 rows x 5 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.7412269115447998 seconds.

--------- ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/collection_protein.tsv ---------
ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/collection_protein.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'protein']
*** Entering collection_protein to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, protein]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.004759788513183594 seconds.

--------- ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/sample_prep_method.tsv ---------
ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/sample_prep_method.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['id']
*** Entering sample_prep_method to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0029044151306152344 seconds.

--------- ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/subject_phenotype.tsv ---------
ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/subject_phenotype.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['subject_id_namespace', 'subject_local_id', 'association_type', 'phenotype']
*** Entering subject_phenotype to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [subject_id_namespace, subject_local_id, association_type, phenotype]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0027272701263427734 seconds.

--------- ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/collection_substance.tsv ---------
ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/collection_substance.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'substance']
*** Entering collection_substance to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, substance]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002531766891479492 seconds.

--------- ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/data_type.tsv ---------
ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/data_type.tsv
Read from file: df: #rows = 9, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.data_type;
qt_df:              pk
0     data:0907
1     data:1916
2     data:3111
3     data:0945
4     data:1270
5     data:1714
6     data:3495
7   ILX:0793824
8     data:1383
9     data:3110
10    data:2603
11    data:2600
12    data:3494
13    data:2764
14    data:2048
15    data:0943
16    data:3028
17    data:1255
18    data:2082
19    data:3002
20    data:3917
21    data:2887
22    data:2976
23    data:2968
24    data:0925
25  ILX:0793825
---- Executed query, got data.frame: qt_df: #rows = 26, #cols: 1

df_pk (at most first 10 elements): ['data:0006', 'data:1383', 'data:1916', 'data:2603', 'data:3112', 'data:3210', 'data:3494', 'data:3498', 'data:3914']
qt_pk (at most first 10 elements): ['data:0907', 'data:1916', 'data:3111', 'data:0945', 'data:1270', 'data:1714', 'data:3495', 'ILX:0793824', 'data:1383', 'data:3110']
---- Removed rows from df with matching pk
*** Entering data_type to database ***
df: #rows = 5, #cols: 4
df:
          id  ...                                           synonyms
0  data:0006  ...                 ["Data record","Data set","Datum"]
4  data:3112  ...  ["Normalised microarray data","Gene expression...
5  data:3210  ...                                                 []
7  data:3498  ...                       ["Gene sequence variations"]
8  data:3914  ...  ["Quality control metrics","QC metrics","QC re...

[5 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.011295557022094727 seconds.

--------- ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/file_describes_subject.tsv ---------
ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/file_describes_subject.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['file_id_namespace', 'file_local_id', 'subject_id_namespace', 'subject_local_id']
*** Entering file_describes_subject to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [file_id_namespace, file_local_id, subject_id_namespace, subject_local_id]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002705812454223633 seconds.

--------- ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/collection_taxonomy.tsv ---------
ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/collection_taxonomy.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'taxon']
*** Entering collection_taxonomy to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, taxon]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0024292469024658203 seconds.

--------- ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/disease.tsv ---------
ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/disease.tsv
Read from file: df: #rows = 28, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.disease;
qt_df:               pk
0      DOID:4977
1      DOID:6683
2     DOID:13941
3      DOID:8947
4     DOID:11840
...          ...
1896   DOID:9553
1897  DOID:12895
1898   DOID:3491
1899   DOID:8838
1900   DOID:2468

[1901 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 1901, #cols: 1

df_pk (at most first 10 elements): ['DOID:0050545', 'DOID:0050567', 'DOID:0050668', 'DOID:0050834', 'DOID:0060250', 'DOID:0080074', 'DOID:0080145', 'DOID:0080171', 'DOID:0080173', 'DOID:0080600']
qt_pk (at most first 10 elements): ['DOID:4977', 'DOID:6683', 'DOID:13941', 'DOID:8947', 'DOID:11840', 'DOID:14447', 'DOID:11054', 'DOID:1791', 'DOID:13810', 'DOID:10780']
---- Removed rows from df with matching pk
*** Entering disease to database ***
df: #rows = 14, #cols: 4
df:
              id  ...                                           synonyms
0   DOID:0050545  ...                   ["heterotaxia","situs ambiguus"]
1   DOID:0050567  ...                                                 []
2   DOID:0050668  ...                                           ["ARBD"]
3   DOID:0050834  ...                             ["CHARGE association"]
4   DOID:0060250  ...                                                 []
5   DOID:0080074  ...                                                 []
6   DOID:0080145  ...  ["DOID:7933","childhood precursor T-lymphoblas...
7   DOID:0080171  ...  ["esophageal atresia and/or tracheoesophageal ...
8   DOID:0080173  ...                   ["exstrophy-epispadias complex"]
9   DOID:0080600  ...  ["2019 Novel Coronavirus (2019-nCoV)","2019-nC...
15       DOID:18  ...  ["DOID:579","Non-neoplastic urinary tract dise...
19     DOID:2907  ...  ["Facio-auriculo-vertebral spectrum","First AN...
24     DOID:4788  ...                              ["intracranial PNET"]
25     DOID:5656  ...  ["Cranial nerve disorder","disorder of cranial...

[14 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.013211488723754883 seconds.

--------- ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/collection_disease.tsv ---------
ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/collection_disease.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'disease']
*** Entering collection_disease to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, disease]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0026183128356933594 seconds.

--------- ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/collection_in_collection.tsv ---------
ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/collection_in_collection.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['superset_collection_id_namespace', 'superset_collection_local_id', 'subset_collection_id_namespace', 'subset_collection_local_id']
*** Entering collection_in_collection to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [superset_collection_id_namespace, superset_collection_local_id, subset_collection_id_namespace, subset_collection_local_id]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0026323795318603516 seconds.

--------- ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/file_describes_biosample.tsv ---------
ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/file_describes_biosample.tsv
Read from file: df: #rows = 378109, #cols: 4

pKeys: ['file_id_namespace', 'file_local_id', 'biosample_id_namespace', 'biosample_local_id']
*** Entering file_describes_biosample to database ***
df: #rows = 378109, #cols: 4
df:
       file_id_namespace  ... biosample_local_id
0             kidsfirst:  ...        BS_002W6DYW
1             kidsfirst:  ...        BS_002W6DYW
2             kidsfirst:  ...        BS_003293HH
3             kidsfirst:  ...        BS_003293HH
4             kidsfirst:  ...        BS_003293HH
...                  ...  ...                ...
378104        kidsfirst:  ...        BS_ZZZSE8CC
378105        kidsfirst:  ...        BS_ZZZSE8CC
378106        kidsfirst:  ...        BS_ZZZSE8CC
378107        kidsfirst:  ...        BS_ZZZSE8CC
378108        kidsfirst:  ...        BS_ZZZSE8CC

[378109 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 6.558297157287598 seconds.

--------- ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/compound.tsv ---------
ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/compound.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['id']
*** Entering compound to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.01137852668762207 seconds.

--------- ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/phenotype_gene.tsv ---------
ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/phenotype_gene.tsv
Read from file: df: #rows = 0, #cols: 2

pKeys: ['phenotype', 'gene']
*** Entering phenotype_gene to database ***
df: #rows = 0, #cols: 2
df:
Empty DataFrame
Columns: [phenotype, gene]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002839326858520508 seconds.

--------- ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/subject_disease.tsv ---------
ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/subject_disease.tsv
Read from file: df: #rows = 38491, #cols: 4

pKeys: ['subject_id_namespace', 'subject_local_id', 'association_type', 'disease']
*** Entering subject_disease to database ***
df: #rows = 38491, #cols: 4
df:
      subject_id_namespace  ...       disease
0               kidsfirst:  ...      DOID:162
1               kidsfirst:  ...    DOID:14250
2               kidsfirst:  ...  DOID:0060250
3               kidsfirst:  ...      DOID:162
4               kidsfirst:  ...     DOID:3827
...                    ...  ...           ...
38486           kidsfirst:  ...    DOID:14250
38487           kidsfirst:  ...      DOID:162
38488           kidsfirst:  ...      DOID:162
38489           kidsfirst:  ...  DOID:0080173
38490           kidsfirst:  ...      DOID:162

[38491 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.5756494998931885 seconds.

--------- ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/biosample_disease.tsv ---------
ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/biosample_disease.tsv
Read from file: df: #rows = 55145, #cols: 4

pKeys: ['biosample_id_namespace', 'biosample_local_id', 'association_type', 'disease']
*** Entering biosample_disease to database ***
df: #rows = 55145, #cols: 4
df:
      biosample_id_namespace  ...       disease
0                 kidsfirst:  ...      DOID:331
1                 kidsfirst:  ...      DOID:162
2                 kidsfirst:  ...      DOID:162
3                 kidsfirst:  ...  DOID:0080145
4                 kidsfirst:  ...      DOID:255
...                      ...  ...           ...
55140             kidsfirst:  ...     DOID:5656
55141             kidsfirst:  ...     DOID:2340
55142             kidsfirst:  ...      DOID:162
55143             kidsfirst:  ...      DOID:162
55144             kidsfirst:  ...      DOID:769

[55145 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.8510544300079346 seconds.

--------- ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/subject_substance.tsv ---------
ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/subject_substance.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['subject_id_namespace', 'subject_local_id', 'substance']
*** Entering subject_substance to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [subject_id_namespace, subject_local_id, substance]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.004634380340576172 seconds.

--------- ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/id_namespace.tsv ---------
ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/id_namespace.tsv
Read from file: df: #rows = 1, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.id_namespace;
qt_df:                                                    pk
0   https://druggablegenome.net/cfde_idg_drugcentr...
1                                               egtex
2                    https://www.druggablegenome.net/
3                        https://www.data.glygen.org/
4                         https://data.4dnucleome.org
5   https://druggablegenome.net/cfde_idg_tcrd_dise...
6                                                gtex
7   https://druggablegenome.net/cfde_idg_tcrd_targets
8                                          ERCC-exRNA
9                         tag:hmpdacc.org,2022-04-04:
10                                         adult_gtex
11                     tag:hubmapconsortium.org,2023:
---- Executed query, got data.frame: qt_df: #rows = 12, #cols: 1

df_pk (at most first 10 elements): ['kidsfirst:']
qt_pk (at most first 10 elements): ['https://druggablegenome.net/cfde_idg_drugcentral_drugs', 'egtex', 'https://www.druggablegenome.net/', 'https://www.data.glygen.org/', 'https://data.4dnucleome.org', 'https://druggablegenome.net/cfde_idg_tcrd_diseases', 'gtex', 'https://druggablegenome.net/cfde_idg_tcrd_targets', 'ERCC-exRNA', 'tag:hmpdacc.org,2022-04-04:']
---- Removed rows from df with matching pk
*** Entering id_namespace to database ***
df: #rows = 1, #cols: 4
df:
           id  ...                                        description
0  kidsfirst:  ...  A large-scale data resource to help researcher...

[1 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.010140180587768555 seconds.

--------- ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/biosample_substance.tsv ---------
ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/biosample_substance.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['biosample_id_namespace', 'biosample_local_id', 'substance']
*** Entering biosample_substance to database ***
Processing C2M2 Files...:  67%|██████▋   | 8/12 [25:21<13:35, 203.79s/it]/home/mano/DRC/DRC-Portals/database/populateC2M2FromS3_MRM.py:257: DtypeWarning: Columns (15) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv(table_str, delimiter='\t');
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [biosample_id_namespace, biosample_local_id, substance]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002597332000732422 seconds.

--------- ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/protein.tsv ---------
ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/protein.tsv
Read from file: df: #rows = 0, #cols: 5

pKeys: ['id']
*** Entering protein to database ***
df: #rows = 0, #cols: 5
df:
Empty DataFrame
Columns: [id, name, description, synonyms, organism]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002682924270629883 seconds.

--------- ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/collection_defined_by_project.tsv ---------
ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/collection_defined_by_project.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['collection_id_namespace', 'collection_local_id', 'project_id_namespace', 'project_local_id']
*** Entering collection_defined_by_project to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, project_id_namespace, project_local_id]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0026123523712158203 seconds.

--------- ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/subject_in_collection.tsv ---------
ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/subject_in_collection.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['subject_id_namespace', 'subject_local_id', 'collection_id_namespace', 'collection_local_id']
*** Entering subject_in_collection to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [subject_id_namespace, subject_local_id, collection_id_namespace, collection_local_id]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0026407241821289062 seconds.

--------- ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/file_describes_collection.tsv ---------
ingest/c2m2s/KidsFirst/datapackage/frictionless_validation/data/file_describes_collection.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['file_id_namespace', 'file_local_id', 'collection_id_namespace', 'collection_local_id']
*** Entering file_describes_collection to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [file_id_namespace, file_local_id, collection_id_namespace, collection_local_id]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002727985382080078 seconds.


================================== DCC short label: LINCS =============================================
Unpack zip file: c2m2_extract_path: ingest/c2m2s/LINCS/datapackage
--------- ingest/c2m2s/LINCS/datapackage/analysis_type.tsv ---------
ingest/c2m2s/LINCS/datapackage/analysis_type.tsv
Read from file: df: #rows = 1, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.analysis_type;
qt_df:             pk
0  OBI:0001985
1  OBI:0001872
---- Executed query, got data.frame: qt_df: #rows = 2, #cols: 1

df_pk (at most first 10 elements): ['OBI:0000679']
qt_pk (at most first 10 elements): ['OBI:0001985', 'OBI:0001872']
---- Removed rows from df with matching pk
*** Entering analysis_type to database ***
df: #rows = 1, #cols: 4
df:
            id  ... synonyms
0  OBI:0000679  ...       []

[1 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.01234889030456543 seconds.

--------- ingest/c2m2s/LINCS/datapackage/file.tsv ---------
ingest/c2m2s/LINCS/datapackage/file.tsv
Read from file: df: #rows = 1495871, #cols: 20

pKeys: ['id_namespace', 'local_id']
*** Entering file to database ***
df: #rows = 1495871, #cols: 20
df:
                          id_namespace  ... dbgap_study_id
0        https://www.lincsproject.org/  ...            NaN
1        https://www.lincsproject.org/  ...            NaN
2        https://www.lincsproject.org/  ...            NaN
3        https://www.lincsproject.org/  ...            NaN
4        https://www.lincsproject.org/  ...            NaN
...                                ...  ...            ...
1495866  https://www.lincsproject.org/  ...            NaN
1495867  https://www.lincsproject.org/  ...            NaN
1495868  https://www.lincsproject.org/  ...            NaN
1495869  https://www.lincsproject.org/  ...            NaN
1495870  https://www.lincsproject.org/  ...            NaN

[1495871 rows x 20 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 109.22504997253418 seconds.

--------- ingest/c2m2s/LINCS/datapackage/project.tsv ---------
ingest/c2m2s/LINCS/datapackage/project.tsv
Read from file: df: #rows = 17, #cols: 7

pKeys: ['id_namespace', 'local_id']
*** Entering project to database ***
df: #rows = 17, #cols: 7
df:
                     id_namespace  ...                                        description
0   https://www.lincsproject.org/  ...  The Library of Integrated Network-Based Cellul...
1   https://www.lincsproject.org/  ...  The LINCS Consortium is an NIH Common Fund pro...
2   https://www.lincsproject.org/  ...  The LINCS Pilot Phase I was composed of 10 cen...
3   https://www.lincsproject.org/  ...  External datasets from entities outside the si...
4   https://www.lincsproject.org/  ...  The NIH LINCS Consortium has been working on a...
5   https://www.lincsproject.org/  ...  The LINCS Pilot Phase Joint Project developed ...
6   https://www.lincsproject.org/  ...  Transcriptional profiles of cultured human bre...
7   https://www.lincsproject.org/  ...  The Library of Integrated Cellular Signatures ...
8   https://www.lincsproject.org/  ...  The LINCS PCCSE uses two high-throughput liqui...
9   https://www.lincsproject.org/  ...  The Library of Integrated Cellular Signatures ...
10  https://www.lincsproject.org/  ...  The LINCS PCCSE uses two high-throughput liqui...
11  https://www.lincsproject.org/  ...  The Library of Integrated Cellular Signatures ...
12  https://www.lincsproject.org/  ...  The LINCS PCCSE uses two high-throughput liqui...
13  https://www.lincsproject.org/  ...  The LINCS PCCSE uses two high-throughput liqui...
14  https://www.lincsproject.org/  ...  The beta release of the CMap LINCS gene expres...
15  https://www.lincsproject.org/  ...  A comprehensive resource dataset that catalogs...
16  https://www.lincsproject.org/  ...  Averaged L1000 signatures for all LINCS 2021 d...

[17 rows x 7 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.15891027450561523 seconds.

--------- ingest/c2m2s/LINCS/datapackage/project_in_project.tsv ---------
ingest/c2m2s/LINCS/datapackage/project_in_project.tsv
Read from file: df: #rows = 16, #cols: 4

pKeys: ['parent_project_id_namespace', 'parent_project_local_id', 'child_project_id_namespace', 'child_project_local_id']
*** Entering project_in_project to database ***
df: #rows = 16, #cols: 4
df:
      parent_project_id_namespace  ... child_project_local_id
0   https://www.lincsproject.org/  ...          LINCS phase 2
1   https://www.lincsproject.org/  ...          LINCS phase 1
2   https://www.lincsproject.org/  ...               External
3   https://www.lincsproject.org/  ...   LINCS MCF10A project
4   https://www.lincsproject.org/  ...    LINCS joint project
5   https://www.lincsproject.org/  ...     LINCS trans-center
6   https://www.lincsproject.org/  ...           L1000-Phase2
7   https://www.lincsproject.org/  ...       LINCS Proteomics
8   https://www.lincsproject.org/  ...           L1000-Phase1
9   https://www.lincsproject.org/  ...            L1000-PCCSE
10  https://www.lincsproject.org/  ...             L1000-GTEx
11  https://www.lincsproject.org/  ...              GCP-PCCSE
12  https://www.lincsproject.org/  ...             P100-PCCSE
13  https://www.lincsproject.org/  ...             LINCS-2021
14  https://www.lincsproject.org/  ...             MCF10A-MDD
15  https://www.lincsproject.org/  ...   LINCS-2021-Consensus

[16 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.007955789566040039 seconds.

--------- ingest/c2m2s/LINCS/datapackage/file_describes_subject.tsv ---------
ingest/c2m2s/LINCS/datapackage/file_describes_subject.tsv
Read from file: df: #rows = 1466498, #cols: 4

pKeys: ['file_id_namespace', 'file_local_id', 'subject_id_namespace', 'subject_local_id']
*** Entering file_describes_subject to database ***
df: #rows = 1466498, #cols: 4
df:
                     file_id_namespace  ... subject_local_id
0        https://www.lincsproject.org/  ...         LCL-1431
1        https://www.lincsproject.org/  ...         LCL-1431
2        https://www.lincsproject.org/  ...         LCL-1461
3        https://www.lincsproject.org/  ...         LCL-1315
4        https://www.lincsproject.org/  ...         LCL-1475
...                                ...  ...              ...
1466493  https://www.lincsproject.org/  ...             YAPC
1466494  https://www.lincsproject.org/  ...             YAPC
1466495  https://www.lincsproject.org/  ...             YAPC
1466496  https://www.lincsproject.org/  ...             YAPC
1466497  https://www.lincsproject.org/  ...             YAPC

[1466498 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 35.43702960014343 seconds.

--------- ingest/c2m2s/LINCS/datapackage/file_describes_biosample.tsv ---------
ingest/c2m2s/LINCS/datapackage/file_describes_biosample.tsv
Read from file: df: #rows = 1467229, #cols: 4

pKeys: ['file_id_namespace', 'file_local_id', 'biosample_id_namespace', 'biosample_local_id']
*** Entering file_describes_biosample to database ***
df: #rows = 1467229, #cols: 4
df:
                     file_id_namespace  ...                                 biosample_local_id
0        https://www.lincsproject.org/  ...                                  LDG-1192:LCL-1431
1        https://www.lincsproject.org/  ...                                  LDG-1191:LCL-1431
2        https://www.lincsproject.org/  ...                                  LDG-1199:LCL-1461
3        https://www.lincsproject.org/  ...                                  LDG-1199:LCL-1315
4        https://www.lincsproject.org/  ...                                  LDG-1199:LCL-1475
...                                ...  ...                                                ...
1467224  https://www.lincsproject.org/  ...  L1000_LINCS_DCIC_REP.A028_YAPC_24H_C19_bortezo...
1467225  https://www.lincsproject.org/  ...  L1000_LINCS_DCIC_REP.A028_YAPC_24H_C22_bortezo...
1467226  https://www.lincsproject.org/  ...  L1000_LINCS_DCIC_REP.A028_YAPC_24H_E01_isocona...
1467227  https://www.lincsproject.org/  ...  L1000_LINCS_DCIC_REP.A028_YAPC_24H_G13_bortezo...
1467228  https://www.lincsproject.org/  ...  L1000_LINCS_DCIC_REP.A028_YAPC_24H_K08_MG-132_...

[1467229 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 39.038262367248535 seconds.

--------- ingest/c2m2s/LINCS/datapackage/biosample_gene.tsv ---------
ingest/c2m2s/LINCS/datapackage/biosample_gene.tsv
Read from file: df: #rows = 361735, #cols: 3

pKeys: ['biosample_id_namespace', 'biosample_local_id', 'gene']
*** Entering biosample_gene to database ***
df: #rows = 361735, #cols: 3
df:
               biosample_id_namespace  ...             gene
0       https://www.lincsproject.org/  ...  ENSG00000002330
1       https://www.lincsproject.org/  ...  ENSG00000003402
2       https://www.lincsproject.org/  ...  ENSG00000147853
3       https://www.lincsproject.org/  ...  ENSG00000112245
4       https://www.lincsproject.org/  ...  ENSG00000159322
...                               ...  ...              ...
361730  https://www.lincsproject.org/  ...  ENSG00000164754
361731  https://www.lincsproject.org/  ...  ENSG00000164190
361732  https://www.lincsproject.org/  ...  ENSG00000164190
361733  https://www.lincsproject.org/  ...  ENSG00000083642
361734  https://www.lincsproject.org/  ...  ENSG00000083642

[361735 rows x 3 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 7.21894097328186 seconds.

--------- ingest/c2m2s/LINCS/datapackage/biosample_from_subject.tsv ---------
ingest/c2m2s/LINCS/datapackage/biosample_from_subject.tsv
Read from file: df: #rows = 1466796, #cols: 5

pKeys: ['biosample_id_namespace', 'biosample_local_id', 'subject_id_namespace', 'subject_local_id']
*** Entering biosample_from_subject to database ***
df: #rows = 1466796, #cols: 5
df:
                biosample_id_namespace  ... age_at_sampling
0        https://www.lincsproject.org/  ...             NaN
1        https://www.lincsproject.org/  ...             NaN
2        https://www.lincsproject.org/  ...             NaN
3        https://www.lincsproject.org/  ...             NaN
4        https://www.lincsproject.org/  ...             NaN
...                                ...  ...             ...
1466791  https://www.lincsproject.org/  ...             NaN
1466792  https://www.lincsproject.org/  ...             NaN
1466793  https://www.lincsproject.org/  ...             NaN
1466794  https://www.lincsproject.org/  ...             NaN
1466795  https://www.lincsproject.org/  ...             NaN

[1466796 rows x 5 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 37.78244948387146 seconds.

--------- ingest/c2m2s/LINCS/datapackage/biosample_substance.tsv ---------
ingest/c2m2s/LINCS/datapackage/biosample_substance.tsv
Read from file: df: #rows = 860285, #cols: 3

pKeys: ['biosample_id_namespace', 'biosample_local_id', 'substance']
*** Entering biosample_substance to database ***
df: #rows = 860285, #cols: 3
df:
               biosample_id_namespace  ...  substance
0       https://www.lincsproject.org/  ...  375174554
1       https://www.lincsproject.org/  ...  375174554
2       https://www.lincsproject.org/  ...  375174554
3       https://www.lincsproject.org/  ...  375174554
4       https://www.lincsproject.org/  ...  375174554
...                               ...  ...        ...
860280  https://www.lincsproject.org/  ...  340084848
860281  https://www.lincsproject.org/  ...  340084848
860282  https://www.lincsproject.org/  ...  340084848
860283  https://www.lincsproject.org/  ...  340084848
860284  https://www.lincsproject.org/  ...  340084848

[860285 rows x 3 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 19.00108575820923 seconds.

--------- ingest/c2m2s/LINCS/datapackage/biosample_disease.tsv ---------
ingest/c2m2s/LINCS/datapackage/biosample_disease.tsv
Read from file: df: #rows = 1211094, #cols: 4

pKeys: ['biosample_id_namespace', 'biosample_local_id', 'association_type', 'disease']
*** Entering biosample_disease to database ***
/home/mano/DRC/DRC-Portals/database/populateC2M2FromS3_MRM.py:257: DtypeWarning: Columns (5) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv(table_str, delimiter='\t');
df: #rows = 1211094, #cols: 4
df:
                biosample_id_namespace  ...    disease
0        https://www.lincsproject.org/  ...  DOID:1240
1        https://www.lincsproject.org/  ...  DOID:1240
2        https://www.lincsproject.org/  ...  DOID:1240
3        https://www.lincsproject.org/  ...  DOID:1240
4        https://www.lincsproject.org/  ...  DOID:1240
...                                ...  ...        ...
1211089  https://www.lincsproject.org/  ...  DOID:3459
1211090  https://www.lincsproject.org/  ...  DOID:3459
1211091  https://www.lincsproject.org/  ...  DOID:3459
1211092  https://www.lincsproject.org/  ...  DOID:3459
1211093  https://www.lincsproject.org/  ...  DOID:3459

[1211094 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 29.240449905395508 seconds.

--------- ingest/c2m2s/LINCS/datapackage/biosample.tsv ---------
ingest/c2m2s/LINCS/datapackage/biosample.tsv
Read from file: df: #rows = 1466796, #cols: 8

pKeys: ['id_namespace', 'local_id']
*** Entering biosample to database ***
df: #rows = 1466796, #cols: 8
df:
                          id_namespace  ...         anatomy
0        https://www.lincsproject.org/  ...  UBERON:0001981
1        https://www.lincsproject.org/  ...  UBERON:0000178
2        https://www.lincsproject.org/  ...  UBERON:0002097
3        https://www.lincsproject.org/  ...  UBERON:0002097
4        https://www.lincsproject.org/  ...  UBERON:0002097
...                                ...  ...             ...
1466791  https://www.lincsproject.org/  ...  UBERON:0000310
1466792  https://www.lincsproject.org/  ...  UBERON:0000310
1466793  https://www.lincsproject.org/  ...  UBERON:0000310
1466794  https://www.lincsproject.org/  ...  UBERON:0000310
1466795  https://www.lincsproject.org/  ...  UBERON:0000310

[1466796 rows x 8 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 44.8389732837677 seconds.

--------- ingest/c2m2s/LINCS/datapackage/gene.tsv ---------
ingest/c2m2s/LINCS/datapackage/gene.tsv
Read from file: df: #rows = 7443, #cols: 5

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.gene;
qt_df:                     pk
0      ENSG00000005007
1      ENSG00000158769
2      ENSG00000079805
3      ENSG00000164611
4      ENSG00000204525
...                ...
19629  ENSG00000255524
19630  ENSG00000171396
19631  ENSG00000141456
19632  ENSG00000134444
19633  ENSG00000170178

[19634 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 19634, #cols: 1

df_pk (at most first 10 elements): ['ENSG00000000003', 'ENSG00000000457', 'ENSG00000000938', 'ENSG00000000971', 'ENSG00000001084', 'ENSG00000001617', 'ENSG00000001626', 'ENSG00000001630', 'ENSG00000002330', 'ENSG00000002549']
qt_pk (at most first 10 elements): ['ENSG00000005007', 'ENSG00000158769', 'ENSG00000079805', 'ENSG00000164611', 'ENSG00000204525', 'ENSG00000112245', 'ENSG00000137975', 'ENSG00000035115', 'ENSG00000182111', 'ENSG00000108381']
---- Removed rows from df with matching pk
*** Entering gene to database ***
df: #rows = 39, #cols: 5
df:
                   id  ...       organism
6668  ENSG00000196230  ...  NCBI:txid9606
6957  ENSG00000203499  ...  NCBI:txid9606
6975  ENSG00000204228  ...  NCBI:txid9606
6986  ENSG00000204308  ...  NCBI:txid9606
6995  ENSG00000204386  ...  NCBI:txid9606
6998  ENSG00000204392  ...  NCBI:txid9606
7004  ENSG00000204463  ...  NCBI:txid9606
7016  ENSG00000204580  ...  NCBI:txid9606
7017  ENSG00000204655  ...  NCBI:txid9606
7103  ENSG00000213676  ...  NCBI:txid9606
7106  ENSG00000213722  ...  NCBI:txid9606
7110  ENSG00000213886  ...  NCBI:txid9606
7164  ENSG00000221988  ...  NCBI:txid9606
7167  ENSG00000223865  ...  NCBI:txid9606
7180  ENSG00000227507  ...  NCBI:txid9606
7189  ENSG00000230463  ...  NCBI:txid9606
7192  ENSG00000231389  ...  NCBI:txid9606
7193  ENSG00000231852  ...  NCBI:txid9606
7195  ENSG00000231925  ...  NCBI:txid9606
7200  ENSG00000232629  ...  NCBI:txid9606
7201  ENSG00000232810  ...  NCBI:txid9606
7204  ENSG00000234127  ...  NCBI:txid9606
7214  ENSG00000236104  ...  NCBI:txid9606
7219  ENSG00000237541  ...  NCBI:txid9606
7234  ENSG00000240065  ...  NCBI:txid9606
7242  ENSG00000241106  ...  NCBI:txid9606
7247  ENSG00000241404  ...  NCBI:txid9606
7258  ENSG00000242574  ...  NCBI:txid9606
7269  ENSG00000243649  ...  NCBI:txid9606
7285  ENSG00000244731  ...  NCBI:txid9606
7409  ENSG00000276023  ...  NCBI:txid9606
7412  ENSG00000276070  ...  NCBI:txid9606
7419  ENSG00000277161  ...  NCBI:txid9606
7421  ENSG00000277399  ...  NCBI:txid9606
7423  ENSG00000277632  ...  NCBI:txid9606
7427  ENSG00000278535  ...  NCBI:txid9606
7428  ENSG00000278540  ...  NCBI:txid9606
7436  ENSG00000290292  ...  NCBI:txid9606
7437  ENSG00000291237  ...  NCBI:txid9606

[39 rows x 5 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.7370638847351074 seconds.

--------- ingest/c2m2s/LINCS/datapackage/substance.tsv ---------
ingest/c2m2s/LINCS/datapackage/substance.tsv
Read from file: df: #rows = 29437, #cols: 5

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.substance;
qt_df: Empty DataFrame
Columns: [pk]
Index: []
---- Executed query, got data.frame: qt_df: #rows = 0, #cols: 1

df_pk (at most first 10 elements): ['85248499', '85248500', '85248502', '85281160', '85281172', '85787080', '85787083', '85787089', '85787096', '85787100']
qt_pk (at most first 10 elements): []
---- Removed rows from df with matching pk
*** Entering substance to database ***
df: #rows = 29437, #cols: 5
df:
              id  ...   compound
23228   85248499  ...    1604254
23229   85248500  ...    1993104
23230   85248502  ...   22693263
23231   85281160  ...     576989
23232   85281172  ...    3473393
...          ...  ...        ...
23223  376252100  ...  134830197
23224  376252104  ...  134830201
23225  376252110  ...  134830207
23226  376252111  ...  134830208
23227  376252113  ...  134830210

[29437 rows x 5 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 4.656320333480835 seconds.

--------- ingest/c2m2s/LINCS/datapackage/sample_prep_method.tsv ---------
ingest/c2m2s/LINCS/datapackage/sample_prep_method.tsv
Read from file: df: #rows = 2, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.sample_prep_method;
qt_df:             pk
0  OBI:0001902
---- Executed query, got data.frame: qt_df: #rows = 1, #cols: 1

df_pk (at most first 10 elements): ['OBI:0600005', 'OBI:0600024']
qt_pk (at most first 10 elements): ['OBI:0001902']
---- Removed rows from df with matching pk
*** Entering sample_prep_method to database ***
df: #rows = 2, #cols: 4
df:
            id  ... synonyms
0  OBI:0600005  ...       []
1  OBI:0600024  ...       []

[2 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.013100147247314453 seconds.

--------- ingest/c2m2s/LINCS/datapackage/protein.tsv ---------
ingest/c2m2s/LINCS/datapackage/protein.tsv
Read from file: df: #rows = 0, #cols: 5

pKeys: ['id']
*** Entering protein to database ***
df: #rows = 0, #cols: 5
df:
Empty DataFrame
Columns: [id, name, description, synonyms, organism]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002722501754760742 seconds.

--------- ingest/c2m2s/LINCS/datapackage/phenotype.tsv ---------
ingest/c2m2s/LINCS/datapackage/phenotype.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['id']
*** Entering phenotype to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0026884078979492188 seconds.

--------- ingest/c2m2s/LINCS/datapackage/ncbi_taxonomy.tsv ---------
ingest/c2m2s/LINCS/datapackage/ncbi_taxonomy.tsv
Read from file: df: #rows = 1, #cols: 5

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.ncbi_taxonomy;
qt_df:                     pk
0     NCBI:txid1095745
1     NCBI:txid1739397
2      NCBI:txid742723
3     NCBI:txid1715193
4      NCBI:txid469585
...                ...
2320   NCBI:txid742726
2321  NCBI:txid1715207
2322  NCBI:txid1161416
2323   NCBI:txid765081
2324   NCBI:txid999422

[2325 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 2325, #cols: 1

df_pk (at most first 10 elements): ['NCBI:txid9606']
qt_pk (at most first 10 elements): ['NCBI:txid1095745', 'NCBI:txid1739397', 'NCBI:txid742723', 'NCBI:txid1715193', 'NCBI:txid469585', 'NCBI:txid1581186', 'NCBI:txid762963', 'NCBI:txid1542093', 'NCBI:txid1134801', 'NCBI:txid525378']
---- Removed rows from df with matching pk
*** Entering ncbi_taxonomy to database ***
df: #rows = 0, #cols: 5
df:
Empty DataFrame
Columns: [id, clade, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.010318994522094727 seconds.

--------- ingest/c2m2s/LINCS/datapackage/file_format.tsv ---------
ingest/c2m2s/LINCS/datapackage/file_format.tsv
Read from file: df: #rows = 4, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.file_format;
qt_df:              pk
0   format:3654
1   format:3603
2   format:3004
3   format:3578
4   format:3464
5   format:3579
6   format:3327
7   format:1936
8   format:3987
9   format:2332
10  format:1975
11  format:3712
12  format:2572
13  format:3591
14  format:3590
15  format:3873
16  format:3006
17  format:3462
18  format:1930
19  format:3468
20  format:3244
21  format:3727
22  format:3752
23  format:1919
24  format:3829
25  format:3583
26  format:1929
27  format:3981
28  format:3746
29  format:3989
30  format:2330
31  format:3508
32  format:2331
33  format:3003
34  format:3016
35  format:3839
36  format:3008
37  format:3620
38  format:2333
39  format:3475
---- Executed query, got data.frame: qt_df: #rows = 40, #cols: 1

df_pk (at most first 10 elements): ['format:3475', 'format:3752', 'format:3981', 'format:3989']
qt_pk (at most first 10 elements): ['format:3654', 'format:3603', 'format:3004', 'format:3578', 'format:3464', 'format:3579', 'format:3327', 'format:1936', 'format:3987', 'format:2332']
---- Removed rows from df with matching pk
*** Entering file_format to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.006886720657348633 seconds.

--------- ingest/c2m2s/LINCS/datapackage/disease.tsv ---------
ingest/c2m2s/LINCS/datapackage/disease.tsv
Read from file: df: #rows = 29, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.disease;
qt_df:               pk
0      DOID:4977
1      DOID:6683
2     DOID:13941
3      DOID:8947
4     DOID:11840
...          ...
1910   DOID:9553
1911  DOID:12895
1912   DOID:3491
1913   DOID:8838
1914   DOID:2468

[1915 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 1915, #cols: 1

df_pk (at most first 10 elements): ['DOID:0060058', 'DOID:0070004', 'DOID:10286', 'DOID:1107', 'DOID:1240', 'DOID:1324', 'DOID:1520', 'DOID:1909', 'DOID:2526', 'DOID:2999']
qt_pk (at most first 10 elements): ['DOID:4977', 'DOID:6683', 'DOID:13941', 'DOID:8947', 'DOID:11840', 'DOID:14447', 'DOID:11054', 'DOID:1791', 'DOID:13810', 'DOID:10780']
---- Removed rows from df with matching pk
*** Entering disease to database ***
df: #rows = 7, #cols: 4
df:
              id  ...                                           synonyms
0   DOID:0060058  ...         ["DOID:1033","DOID:353","lymphoid cancer"]
1   DOID:0070004  ...                                                 []
8      DOID:2526  ...                                                 []
16     DOID:3605  ...  ["cystadenocarcinoma of ovary","cystadenocarci...
18     DOID:3702  ...  ["adenocarcinoma cervix uteri","adenocarcinoma...
22     DOID:4006  ...  ["bladder transitional cell carcinoma","transi...
23     DOID:4007  ...                   ["carcinoma of urinary bladder"]

[7 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.015414714813232422 seconds.

--------- ingest/c2m2s/LINCS/datapackage/data_type.tsv ---------
ingest/c2m2s/LINCS/datapackage/data_type.tsv
Read from file: df: #rows = 8, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.data_type;
qt_df:              pk
0     data:3112
1     data:0907
2     data:0006
3     data:1916
4     data:3210
5     data:3111
6     data:0945
7     data:1270
8     data:1714
9     data:3495
10  ILX:0793824
11    data:1383
12    data:3110
13    data:2603
14    data:2600
15    data:3494
16    data:2764
17    data:2048
18    data:0943
19    data:3028
20    data:1255
21    data:2082
22    data:3002
23    data:3914
24    data:3498
25    data:3917
26    data:2887
27    data:2976
28    data:2968
29    data:0925
30  ILX:0793825
---- Executed query, got data.frame: qt_df: #rows = 31, #cols: 1

df_pk (at most first 10 elements): ['data:0928', 'data:1566', 'data:2536', 'data:2603', 'data:2968', 'data:3002', 'data:3112', 'data:3917']
qt_pk (at most first 10 elements): ['data:3112', 'data:0907', 'data:0006', 'data:1916', 'data:3210', 'data:3111', 'data:0945', 'data:1270', 'data:1714', 'data:3495']
---- Removed rows from df with matching pk
*** Entering data_type to database ***
df: #rows = 3, #cols: 4
df:
          id  ...                             synonyms
0  data:0928  ...          ["Gene expression pattern"]
1  data:1566  ...  ["Protein-drug interaction report"]
2  data:2536  ...                                   []

[3 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.010049104690551758 seconds.

--------- ingest/c2m2s/LINCS/datapackage/compound.tsv ---------
ingest/c2m2s/LINCS/datapackage/compound.tsv
Read from file: df: #rows = 29315, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.compound;
qt_df:              pk
0      G21286VC
1      44665680
2      G55943II
3      11955614
4       5289593
...         ...
58106  G92927TC
58107  91857021
58108  91846918
58109  24812758
58110  G04679CK

[58111 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 58111, #cols: 1

df_pk (at most first 10 elements): ['86', '119', '137', '177', '187', '200', '204', '237', '243', '244']
qt_pk (at most first 10 elements): ['G21286VC', '44665680', 'G55943II', '11955614', '5289593', 'G10602EW', 'G84227HS', '25017411', 'G72207TE', 'G63954IW']
---- Removed rows from df with matching pk
*** Entering compound to database ***
df: #rows = 26578, #cols: 4
df:
             id  ...                                           synonyms
1252        177  ...  ["acetaldehyde", "ethanal", "75-07-0", "acetic...
1369        200  ...  ["1H-imidazole-4-carboxamide, 5-amino-1-(5-O-p...
2641        370  ...  ["Gallic acid", "3,4,5-Trihydroxybenzoic acid"...
8943        450  ...  ["13-methyl-6,7,8,9,11,12,14,15,16,17-decahydr...
8963        453  ...  ["Hexitol", "hexane-1,2,3,4,5,6-hexol", "hexan...
...         ...  ...                                                ...
897   136172774  ...  ["4-(2-methoxyphenyl)-7,7-dimethyl-3-(trifluor...
898   136172782  ...  ["arg-gsk-19", "MLS004256804", "SCHEMBL1646041...
899   136172783  ...  ["arg-gsk-3", "MLS004256799", "SCHEMBL16460203...
900   136188272  ...  ["CHEBI:94423", "BRD-A67605442-001-01-7", "Q27...
901   136235688  ...  ["CHEBI:94313", "BRD-A01317026-001-01-2", "Q27...

[26578 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 18.13117480278015 seconds.

--------- ingest/c2m2s/LINCS/datapackage/assay_type.tsv ---------
ingest/c2m2s/LINCS/datapackage/assay_type.tsv
Read from file: df: #rows = 27, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.assay_type;
qt_df:               pk
0    OBI:0003094
1    OBI:0002760
2    OBI:0003306
3    OBI:0003097
4    OBI:0001920
5    OBI:0002145
6    OBI:0002112
7    OBI:0003034
8    OBI:0003108
9    OBI:0003101
10   OBI:0002118
11   OBI:0003100
12   OBI:0002766
13   OBI:0003312
14   OBI:0003301
15   OBI:0003093
16   OBI:0002117
17   OBI:0003104
18   OBI:0001848
19   OBI:0001977
20   OBI:0003299
21   OBI:0003089
22   OBI:0002768
23   OBI:0002984
24   OBI:0003105
25   OBI:0002763
26   OBI:0003092
27   OBI:0003107
28   OBI:0002623
29   OBI:0003033
30   OBI:0000470
31   OBI:0000626
32   OBI:0003313
33   OBI:0001985
34   OBI:0000185
35   OBI:0003305
36   OBI:0000893
37   OBI:0003304
38   OBI:0000716
39   OBI:0600047
40   OBI:0003303
41   OBI:0000366
42   OBI:0001177
43   OBI:0003311
44   OBI:0001631
45   OBI:0000615
46   OBI:0003103
47   OBI:0003300
48   OBI:0002631
49  CHMO:0000087
50   OBI:0003099
51   OBI:0003314
52   OBI:0003302
53   OBI:0001271
54   OBI:0003098
55   OBI:0003087
56   OBI:0002761
57   OBI:0003297
---- Executed query, got data.frame: qt_df: #rows = 58, #cols: 1

df_pk (at most first 10 elements): ['OBI:0000661', 'OBI:0000893', 'OBI:0001271', 'OBI:0001501', 'OBI:0002039', 'OBI:0002946', 'OBI:0002947', 'OBI:0002948', 'OBI:0002949', 'OBI:0002950']
qt_pk (at most first 10 elements): ['OBI:0003094', 'OBI:0002760', 'OBI:0003306', 'OBI:0003097', 'OBI:0001920', 'OBI:0002145', 'OBI:0002112', 'OBI:0003034', 'OBI:0003108', 'OBI:0003101']
---- Removed rows from df with matching pk
*** Entering assay_type to database ***
df: #rows = 25, #cols: 4
df:
             id  ...                                           synonyms
0   OBI:0000661  ...                                          ["ELISA"]
3   OBI:0001501  ...                                                 []
4   OBI:0002039  ...                      ["ATAC-seq","ATAC-seq assay"]
5   OBI:0002946  ...                                                 []
6   OBI:0002947  ...    ["fluroescence imaging-based cell count assay"]
7   OBI:0002948  ...                                                 []
8   OBI:0002949  ...                                                 []
9   OBI:0002950  ...                                                 []
10  OBI:0002951  ...                                                 []
11  OBI:0002952  ...                                                 []
12  OBI:0002954  ...                                                 []
13  OBI:0002955  ...                                                 []
14  OBI:0002956  ...       ["P100 phosphoprotein quantification assay"]
15  OBI:0002957  ...  ["reverse phase lysate array profiling assay",...
16  OBI:0002958  ...  ["sequential window acquisition of all theoret...
17  OBI:0002959  ...                                                 []
18  OBI:0002961  ...  ["GCP","global chromatin epigenetic profiling"...
19  OBI:0002963  ...                                                 []
20  OBI:0002964  ...                                                 []
21  OBI:0002965  ...                     ["L1000 mRNA profiling assay"]
22  OBI:0002966  ...                                     ["MEMA assay"]
23  OBI:0002967  ...                                                 []
24  OBI:0002968  ...  ["positive/negative ion switching metabolomic ...
25  OBI:0002969  ...                                                 []
26  OBI:0002970  ...                                                 []

[25 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.018947124481201172 seconds.

--------- ingest/c2m2s/LINCS/datapackage/anatomy.tsv ---------
ingest/c2m2s/LINCS/datapackage/anatomy.tsv
Read from file: df: #rows = 60, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.anatomy;
qt_df:                  pk
0    UBERON:0000087
1    UBERON:0001199
2    UBERON:0016435
3    UBERON:0007311
4    UBERON:0001728
..              ...
249  UBERON:0001496
250  UBERON:0000473
251  UBERON:0013069
252  UBERON:0008337
253  UBERON:0001474

[254 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 254, #cols: 1

df_pk (at most first 10 elements): ['UBERON:0000002', 'UBERON:0000007', 'UBERON:0000029', 'UBERON:0000056', 'UBERON:0000059', 'UBERON:0000160', 'UBERON:0000178', 'UBERON:0000310', 'UBERON:0000358', 'UBERON:0000473']
qt_pk (at most first 10 elements): ['UBERON:0000087', 'UBERON:0001199', 'UBERON:0016435', 'UBERON:0007311', 'UBERON:0001728', 'UBERON:0001736', 'UBERON:0002037', 'UBERON:0009835', 'UBERON:0001621', 'UBERON:0002097']
---- Removed rows from df with matching pk
*** Entering anatomy to database ***
df: #rows = 25, #cols: 4
df:
                id  ...                                           synonyms
3   UBERON:0000056  ...                                                 []
5   UBERON:0000160  ...                                          ["bowel"]
7   UBERON:0000310  ...         ["mammary part of chest","mammary region"]
8   UBERON:0000358  ...                                                 []
10  UBERON:0000483  ...      ["epithelial tissue","portion of epithelium"]
15  UBERON:0000974  ...                                                 []
21  UBERON:0001013  ...                ["fat","fat tissue","fatty tissue"]
22  UBERON:0001016  ...                            ["neurological system"]
24  UBERON:0001021  ...                      ["nerves","peripheral nerve"]
26  UBERON:0001044  ...                                 ["salivary gland"]
27  UBERON:0001051  ...             ["laryngeal pharynx","laryngopharynx"]
29  UBERON:0001179  ...                                                 []
32  UBERON:0001295  ...  ["tunica mucosa (endometrium)","tunica mucosa ...
33  UBERON:0001630  ...                                         ["muscle"]
34  UBERON:0001744  ...          ["lymphatic tissue","lymphocytic tissue"]
35  UBERON:0001981  ...  ["region of vascular tree organ","vascular ele...
45  UBERON:0002294  ...                              ["biliary apparatus"]
46  UBERON:0002331  ...     ["chorda umbilicalis","funiculus umbilicalis"]
50  UBERON:0002384  ...  ["portion of connective tissue","textus connec...
51  UBERON:0002397  ...                                 ["upper jaw bone"]
55  UBERON:0006558  ...       ["lymphatic system","lymphatic tree system"]
56  UBERON:0007616  ...                                       ["synovium"]
57  UBERON:0007798  ...                                                 []
58  UBERON:0011143  ...                                                 []
59  UBERON:0014892  ...                                ["skeletal muscle"]

[25 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.013030290603637695 seconds.

--------- ingest/c2m2s/LINCS/datapackage/protein_gene.tsv ---------
ingest/c2m2s/LINCS/datapackage/protein_gene.tsv
Read from file: df: #rows = 0, #cols: 2

pKeys: ['protein', 'gene']
*** Entering protein_gene to database ***
df: #rows = 0, #cols: 2
df:
Empty DataFrame
Columns: [protein, gene]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002347707748413086 seconds.

--------- ingest/c2m2s/LINCS/datapackage/phenotype_gene.tsv ---------
ingest/c2m2s/LINCS/datapackage/phenotype_gene.tsv
Read from file: df: #rows = 0, #cols: 2

pKeys: ['phenotype', 'gene']
*** Entering phenotype_gene to database ***
df: #rows = 0, #cols: 2
df:
Empty DataFrame
Columns: [phenotype, gene]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002374887466430664 seconds.

--------- ingest/c2m2s/LINCS/datapackage/phenotype_disease.tsv ---------
ingest/c2m2s/LINCS/datapackage/phenotype_disease.tsv
Read from file: df: #rows = 0, #cols: 2

pKeys: ['phenotype', 'disease']
*** Entering phenotype_disease to database ***
df: #rows = 0, #cols: 2
df:
Empty DataFrame
Columns: [phenotype, disease]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0025177001953125 seconds.

--------- ingest/c2m2s/LINCS/datapackage/subject.tsv ---------
ingest/c2m2s/LINCS/datapackage/subject.tsv
Read from file: df: #rows = 1966, #cols: 10

pKeys: ['id_namespace', 'local_id']
*** Entering subject to database ***
df: #rows = 1966, #cols: 10
df:
                       id_namespace      local_id  ... ethnicity age_at_enrollment
0     https://www.lincsproject.org/          CD34  ...       NaN               NaN
1     https://www.lincsproject.org/          HL60  ...       NaN               NaN
2     https://www.lincsproject.org/           PC3  ...       NaN               NaN
3     https://www.lincsproject.org/          U937  ...       NaN               NaN
4     https://www.lincsproject.org/          MCF7  ...       NaN               NaN
...                             ...           ...  ...       ...               ...
1961  https://www.lincsproject.org/    KYSE30.311  ...       NaN               NaN
1962  https://www.lincsproject.org/  LCLC103H.311  ...       NaN               NaN
1963  https://www.lincsproject.org/      SNGM.311  ...       NaN               NaN
1964  https://www.lincsproject.org/    SNU761.311  ...       NaN               NaN
1965  https://www.lincsproject.org/           TF1  ...       NaN               NaN

[1966 rows x 10 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0657799243927002 seconds.

--------- ingest/c2m2s/LINCS/datapackage/subject_substance.tsv ---------
ingest/c2m2s/LINCS/datapackage/subject_substance.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['subject_id_namespace', 'subject_local_id', 'substance']
*** Entering subject_substance to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [subject_id_namespace, subject_local_id, substance]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0034623146057128906 seconds.

--------- ingest/c2m2s/LINCS/datapackage/subject_race.tsv ---------
ingest/c2m2s/LINCS/datapackage/subject_race.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['subject_id_namespace', 'subject_local_id', 'race']
*** Entering subject_race to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [subject_id_namespace, subject_local_id, race]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0025322437286376953 seconds.

--------- ingest/c2m2s/LINCS/datapackage/subject_role_taxonomy.tsv ---------
ingest/c2m2s/LINCS/datapackage/subject_role_taxonomy.tsv
Read from file: df: #rows = 1966, #cols: 4

pKeys: ['subject_id_namespace', 'subject_local_id', 'role_id', 'taxonomy_id']
*** Entering subject_role_taxonomy to database ***
df: #rows = 1966, #cols: 4
df:
               subject_id_namespace  ...    taxonomy_id
0     https://www.lincsproject.org/  ...  NCBI:txid9606
1     https://www.lincsproject.org/  ...  NCBI:txid9606
2     https://www.lincsproject.org/  ...  NCBI:txid9606
3     https://www.lincsproject.org/  ...  NCBI:txid9606
4     https://www.lincsproject.org/  ...  NCBI:txid9606
...                             ...  ...            ...
1961  https://www.lincsproject.org/  ...  NCBI:txid9606
1962  https://www.lincsproject.org/  ...  NCBI:txid9606
1963  https://www.lincsproject.org/  ...  NCBI:txid9606
1964  https://www.lincsproject.org/  ...  NCBI:txid9606
1965  https://www.lincsproject.org/  ...  NCBI:txid9606

[1966 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.03685760498046875 seconds.

--------- ingest/c2m2s/LINCS/datapackage/subject_phenotype.tsv ---------
ingest/c2m2s/LINCS/datapackage/subject_phenotype.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['subject_id_namespace', 'subject_local_id', 'association_type', 'phenotype']
*** Entering subject_phenotype to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [subject_id_namespace, subject_local_id, association_type, phenotype]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0030126571655273438 seconds.

--------- ingest/c2m2s/LINCS/datapackage/subject_in_collection.tsv ---------
ingest/c2m2s/LINCS/datapackage/subject_in_collection.tsv
Read from file: df: #rows = 12002, #cols: 4

pKeys: ['subject_id_namespace', 'subject_local_id', 'collection_id_namespace', 'collection_local_id']
*** Entering subject_in_collection to database ***
df: #rows = 12002, #cols: 4
df:
                subject_id_namespace  ... collection_local_id
0      https://www.lincsproject.org/  ...            LDG-1251
1      https://www.lincsproject.org/  ...            LDG-1251
2      https://www.lincsproject.org/  ...            LDG-1104
3      https://www.lincsproject.org/  ...            LDG-1074
4      https://www.lincsproject.org/  ...            LDG-1215
...                              ...  ...                 ...
11997  https://www.lincsproject.org/  ...            LDG-1443
11998  https://www.lincsproject.org/  ...            LDG-1444
11999  https://www.lincsproject.org/  ...            LDG-1444
12000  https://www.lincsproject.org/  ...            LDG-1444
12001  https://www.lincsproject.org/  ...            LDG-1444

[12002 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.21391606330871582 seconds.

--------- ingest/c2m2s/LINCS/datapackage/subject_disease.tsv ---------
ingest/c2m2s/LINCS/datapackage/subject_disease.tsv
Read from file: df: #rows = 197, #cols: 4

pKeys: ['subject_id_namespace', 'subject_local_id', 'association_type', 'disease']
*** Entering subject_disease to database ***
df: #rows = 197, #cols: 4
df:
              subject_id_namespace  ...       disease
0    https://www.lincsproject.org/  ...     DOID:1240
1    https://www.lincsproject.org/  ...     DOID:2526
2    https://www.lincsproject.org/  ...  DOID:0060058
3    https://www.lincsproject.org/  ...     DOID:3459
4    https://www.lincsproject.org/  ...     DOID:1909
..                             ...  ...           ...
192  https://www.lincsproject.org/  ...     DOID:1107
193  https://www.lincsproject.org/  ...     DOID:1324
194  https://www.lincsproject.org/  ...      DOID:363
195  https://www.lincsproject.org/  ...      DOID:684
196  https://www.lincsproject.org/  ...     DOID:1240

[197 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.014364004135131836 seconds.

--------- ingest/c2m2s/LINCS/datapackage/primary_dcc_contact.tsv ---------
ingest/c2m2s/LINCS/datapackage/primary_dcc_contact.tsv
>>>>>>>> Time taken to ingest the metadata from this file: 1.33514404296875e-05 seconds.

--------- ingest/c2m2s/LINCS/datapackage/id_namespace.tsv ---------
ingest/c2m2s/LINCS/datapackage/id_namespace.tsv
Read from file: df: #rows = 1, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.id_namespace;
qt_df:                                                    pk
0   https://druggablegenome.net/cfde_idg_drugcentr...
1                                               egtex
2                    https://www.druggablegenome.net/
3                        https://www.data.glygen.org/
4                         https://data.4dnucleome.org
5   https://druggablegenome.net/cfde_idg_tcrd_dise...
6                                                gtex
7   https://druggablegenome.net/cfde_idg_tcrd_targets
8                                          ERCC-exRNA
9                         tag:hmpdacc.org,2022-04-04:
10                                         adult_gtex
11                                         kidsfirst:
12                     tag:hubmapconsortium.org,2023:
---- Executed query, got data.frame: qt_df: #rows = 13, #cols: 1

df_pk (at most first 10 elements): ['https://www.lincsproject.org/']
qt_pk (at most first 10 elements): ['https://druggablegenome.net/cfde_idg_drugcentral_drugs', 'egtex', 'https://www.druggablegenome.net/', 'https://www.data.glygen.org/', 'https://data.4dnucleome.org', 'https://druggablegenome.net/cfde_idg_tcrd_diseases', 'gtex', 'https://druggablegenome.net/cfde_idg_tcrd_targets', 'ERCC-exRNA', 'tag:hmpdacc.org,2022-04-04:']
---- Removed rows from df with matching pk
*** Entering id_namespace to database ***
df: #rows = 1, #cols: 4
df:
                              id  ...                                        description
0  https://www.lincsproject.org/  ...  A library that catalogs changes that occur whe...

[1 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.011308908462524414 seconds.

--------- ingest/c2m2s/LINCS/datapackage/file_in_collection.tsv ---------
ingest/c2m2s/LINCS/datapackage/file_in_collection.tsv
Read from file: df: #rows = 465, #cols: 4

pKeys: ['file_id_namespace', 'file_local_id', 'collection_id_namespace', 'collection_local_id']
*** Entering file_in_collection to database ***
df: #rows = 465, #cols: 4
df:
                 file_id_namespace  ... collection_local_id
0    https://www.lincsproject.org/  ...            LDG-1397
1    https://www.lincsproject.org/  ...            LDG-1107
2    https://www.lincsproject.org/  ...            LDG-1399
3    https://www.lincsproject.org/  ...            LDG-1187
4    https://www.lincsproject.org/  ...            LDG-1251
..                             ...  ...                 ...
460  https://www.lincsproject.org/  ...            LDG-1298
461  https://www.lincsproject.org/  ...            LDG-1298
462  https://www.lincsproject.org/  ...            LDG-1296
463  https://www.lincsproject.org/  ...            LDG-1296
464  https://www.lincsproject.org/  ...            LDG-1296

[465 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0422360897064209 seconds.

--------- ingest/c2m2s/LINCS/datapackage/file_describes_collection.tsv ---------
ingest/c2m2s/LINCS/datapackage/file_describes_collection.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['file_id_namespace', 'file_local_id', 'collection_id_namespace', 'collection_local_id']
*** Entering file_describes_collection to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [file_id_namespace, file_local_id, collection_id_namespace, collection_local_id]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.00449371337890625 seconds.

--------- ingest/c2m2s/LINCS/datapackage/dcc.tsv ---------
ingest/c2m2s/LINCS/datapackage/dcc.tsv
Read from file: df: #rows = 1, #cols: 9

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.dcc;
qt_df:                             pk
0     cfde_registry_dcc:glygen
1      cfde_registry_dcc:exrna
2  cfde_registry_dcc:kidsfirst
3        cfde_registry_dcc:4dn
4        cfde_registry_dcc:hmp
5     cfde_registry_dcc:hubmap
6       cfde_registry_dcc:gtex
7        cfde_registry_dcc:idg
---- Executed query, got data.frame: qt_df: #rows = 8, #cols: 1

df_pk (at most first 10 elements): ['cfde_registry_dcc:lincs']
qt_pk (at most first 10 elements): ['cfde_registry_dcc:glygen', 'cfde_registry_dcc:exrna', 'cfde_registry_dcc:kidsfirst', 'cfde_registry_dcc:4dn', 'cfde_registry_dcc:hmp', 'cfde_registry_dcc:hubmap', 'cfde_registry_dcc:gtex', 'cfde_registry_dcc:idg']
---- Removed rows from df with matching pk
*** Entering dcc to database ***
df: #rows = 1, #cols: 9
df:
                        id  ... project_local_id
0  cfde_registry_dcc:lincs  ...            LINCS

[1 rows x 9 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.014410018920898438 seconds.

--------- ingest/c2m2s/LINCS/datapackage/collection.tsv ---------
ingest/c2m2s/LINCS/datapackage/collection.tsv
Read from file: df: #rows = 409, #cols: 8

pKeys: ['id_namespace', 'local_id']
*** Entering collection to database ***
df: #rows = 409, #cols: 8
df:
                      id_namespace  ... has_time_series_data
0    https://www.lincsproject.org/  ...                False
1    https://www.lincsproject.org/  ...                False
2    https://www.lincsproject.org/  ...                False
3    https://www.lincsproject.org/  ...                False
4    https://www.lincsproject.org/  ...                False
..                             ...  ...                  ...
404  https://www.lincsproject.org/  ...                False
405  https://www.lincsproject.org/  ...                False
406  https://www.lincsproject.org/  ...                False
407  https://www.lincsproject.org/  ...                False
408  https://www.lincsproject.org/  ...                False

[409 rows x 8 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.02991199493408203 seconds.

--------- ingest/c2m2s/LINCS/datapackage/collection_taxonomy.tsv ---------
ingest/c2m2s/LINCS/datapackage/collection_taxonomy.tsv
Read from file: df: #rows = 409, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'taxon']
*** Entering collection_taxonomy to database ***
df: #rows = 409, #cols: 3
df:
           collection_id_namespace collection_local_id          taxon
0    https://www.lincsproject.org/            LDG-1397  NCBI:txid9606
1    https://www.lincsproject.org/            LDG-1107  NCBI:txid9606
2    https://www.lincsproject.org/            LDG-1399  NCBI:txid9606
3    https://www.lincsproject.org/            LDG-1187  NCBI:txid9606
4    https://www.lincsproject.org/            LDG-1251  NCBI:txid9606
..                             ...                 ...            ...
404  https://www.lincsproject.org/            LDG-1338  NCBI:txid9606
405  https://www.lincsproject.org/            LDG-1363  NCBI:txid9606
406  https://www.lincsproject.org/            LDG-1297  NCBI:txid9606
407  https://www.lincsproject.org/            LDG-1298  NCBI:txid9606
408  https://www.lincsproject.org/            LDG-1296  NCBI:txid9606

[409 rows x 3 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.014964103698730469 seconds.

--------- ingest/c2m2s/LINCS/datapackage/collection_substance.tsv ---------
ingest/c2m2s/LINCS/datapackage/collection_substance.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'substance']
*** Entering collection_substance to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, substance]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0028057098388671875 seconds.

--------- ingest/c2m2s/LINCS/datapackage/collection_protein.tsv ---------
ingest/c2m2s/LINCS/datapackage/collection_protein.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'protein']
Processing C2M2 Files...:  75%|███████▌  | 9/12 [31:18<12:34, 251.49s/it]*** Entering collection_protein to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, protein]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002661466598510742 seconds.

--------- ingest/c2m2s/LINCS/datapackage/collection_phenotype.tsv ---------
ingest/c2m2s/LINCS/datapackage/collection_phenotype.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'phenotype']
*** Entering collection_phenotype to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, phenotype]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0026617050170898438 seconds.

--------- ingest/c2m2s/LINCS/datapackage/collection_in_collection.tsv ---------
ingest/c2m2s/LINCS/datapackage/collection_in_collection.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['superset_collection_id_namespace', 'superset_collection_local_id', 'subset_collection_id_namespace', 'subset_collection_local_id']
*** Entering collection_in_collection to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [superset_collection_id_namespace, superset_collection_local_id, subset_collection_id_namespace, subset_collection_local_id]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0028371810913085938 seconds.

--------- ingest/c2m2s/LINCS/datapackage/collection_gene.tsv ---------
ingest/c2m2s/LINCS/datapackage/collection_gene.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'gene']
*** Entering collection_gene to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, gene]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0028235912322998047 seconds.

--------- ingest/c2m2s/LINCS/datapackage/collection_disease.tsv ---------
ingest/c2m2s/LINCS/datapackage/collection_disease.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'disease']
*** Entering collection_disease to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, disease]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002735614776611328 seconds.

--------- ingest/c2m2s/LINCS/datapackage/collection_defined_by_project.tsv ---------
ingest/c2m2s/LINCS/datapackage/collection_defined_by_project.tsv
Read from file: df: #rows = 409, #cols: 4

pKeys: ['collection_id_namespace', 'collection_local_id', 'project_id_namespace', 'project_local_id']
*** Entering collection_defined_by_project to database ***
df: #rows = 409, #cols: 4
df:
           collection_id_namespace  ... project_local_id
0    https://www.lincsproject.org/  ...    LINCS phase 2
1    https://www.lincsproject.org/  ...    LINCS phase 1
2    https://www.lincsproject.org/  ...    LINCS phase 2
3    https://www.lincsproject.org/  ...    LINCS phase 1
4    https://www.lincsproject.org/  ...    LINCS phase 2
..                             ...  ...              ...
404  https://www.lincsproject.org/  ...    LINCS phase 2
405  https://www.lincsproject.org/  ...    LINCS phase 2
406  https://www.lincsproject.org/  ...    LINCS phase 2
407  https://www.lincsproject.org/  ...    LINCS phase 2
408  https://www.lincsproject.org/  ...    LINCS phase 2

[409 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.029098033905029297 seconds.

--------- ingest/c2m2s/LINCS/datapackage/collection_compound.tsv ---------
ingest/c2m2s/LINCS/datapackage/collection_compound.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'compound']
*** Entering collection_compound to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, compound]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0031485557556152344 seconds.

--------- ingest/c2m2s/LINCS/datapackage/collection_anatomy.tsv ---------
ingest/c2m2s/LINCS/datapackage/collection_anatomy.tsv
Read from file: df: #rows = 179, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'anatomy']
*** Entering collection_anatomy to database ***
df: #rows = 179, #cols: 3
df:
           collection_id_namespace collection_local_id         anatomy
0    https://www.lincsproject.org/            LDG-1251  UBERON:0000178
1    https://www.lincsproject.org/            LDG-1104  UBERON:0002048
2    https://www.lincsproject.org/            LDG-1074  UBERON:0002097
3    https://www.lincsproject.org/            LDG-1215  UBERON:0002097
4    https://www.lincsproject.org/            LDG-1120  UBERON:0000310
..                             ...                 ...             ...
174  https://www.lincsproject.org/            LDG-1219  UBERON:0007616
175  https://www.lincsproject.org/            LDG-1410  UBERON:0000922
176  https://www.lincsproject.org/            LDG-1411  UBERON:0000922
177  https://www.lincsproject.org/            LDG-1412  UBERON:0000922
178  https://www.lincsproject.org/            LDG-1444  UBERON:0000948

[179 rows x 3 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.010935068130493164 seconds.

--------- ingest/c2m2s/LINCS/datapackage/biosample_in_collection.tsv ---------
ingest/c2m2s/LINCS/datapackage/biosample_in_collection.tsv
Read from file: df: #rows = 12002, #cols: 4

pKeys: ['biosample_id_namespace', 'biosample_local_id', 'collection_id_namespace', 'collection_local_id']
*** Entering biosample_in_collection to database ***
df: #rows = 12002, #cols: 4
df:
              biosample_id_namespace  ... collection_local_id
0      https://www.lincsproject.org/  ...            LDG-1251
1      https://www.lincsproject.org/  ...            LDG-1251
2      https://www.lincsproject.org/  ...            LDG-1104
3      https://www.lincsproject.org/  ...            LDG-1074
4      https://www.lincsproject.org/  ...            LDG-1215
...                              ...  ...                 ...
11997  https://www.lincsproject.org/  ...            LDG-1443
11998  https://www.lincsproject.org/  ...            LDG-1444
11999  https://www.lincsproject.org/  ...            LDG-1444
12000  https://www.lincsproject.org/  ...            LDG-1444
12001  https://www.lincsproject.org/  ...            LDG-1444

[12002 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.20571351051330566 seconds.

--------- ingest/c2m2s/LINCS/datapackage/__MACOSX/._analysis_type.tsv ---------
ingest/c2m2s/LINCS/datapackage/__MACOSX/._analysis_type.tsv
>>>>>>>> Time taken to ingest the metadata from this file: 1.239776611328125e-05 seconds.

--------- ingest/c2m2s/LINCS/datapackage/__MACOSX/._project.tsv ---------
ingest/c2m2s/LINCS/datapackage/__MACOSX/._project.tsv
>>>>>>>> Time taken to ingest the metadata from this file: 3.337860107421875e-06 seconds.


================================== DCC short label: MW =============================================
Unpack zip file: c2m2_extract_path: ingest/c2m2s/MW/datapackage
--------- ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/subject_race.tsv ---------
ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/subject_race.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['subject_id_namespace', 'subject_local_id', 'race']
*** Entering subject_race to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [subject_id_namespace, subject_local_id, race]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.004934787750244141 seconds.

--------- ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/subject_substance.tsv ---------
ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/subject_substance.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['subject_id_namespace', 'subject_local_id', 'substance']
*** Entering subject_substance to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [subject_id_namespace, subject_local_id, substance]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002846956253051758 seconds.

--------- ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/analysis_type.tsv ---------
ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/analysis_type.tsv
Read from file: df: #rows = 3, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.analysis_type;
qt_df:             pk
0  OBI:0000679
1  OBI:0001985
2  OBI:0001872
---- Executed query, got data.frame: qt_df: #rows = 3, #cols: 1

df_pk (at most first 10 elements): ['OBI:0000726', 'OBI:0200085', 'OBI:0200199']
qt_pk (at most first 10 elements): ['OBI:0000679', 'OBI:0001985', 'OBI:0001872']
---- Removed rows from df with matching pk
*** Entering analysis_type to database ***
df: #rows = 3, #cols: 4
df:
            id  ... synonyms
0  OBI:0000726  ...       []
1  OBI:0200085  ...       []
2  OBI:0200199  ...       []

[3 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.010770082473754883 seconds.

--------- ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/anatomy.tsv ---------
ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/anatomy.tsv
Read from file: df: #rows = 107, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.anatomy;
qt_df:                  pk
0    UBERON:0001474
1    UBERON:0001013
2    UBERON:0000087
3    UBERON:0001199
4    UBERON:0016435
..              ...
274  UBERON:0001496
275  UBERON:0000473
276  UBERON:0000056
277  UBERON:0013069
278  UBERON:0008337

[279 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 279, #cols: 1

df_pk (at most first 10 elements): ['UBERON:0000006', 'UBERON:0000033', 'UBERON:0000038', 'UBERON:0000044', 'UBERON:0000160', 'UBERON:0000173', 'UBERON:0000178', 'UBERON:0000310', 'UBERON:0000358', 'UBERON:0000403']
qt_pk (at most first 10 elements): ['UBERON:0001474', 'UBERON:0001013', 'UBERON:0000087', 'UBERON:0001199', 'UBERON:0016435', 'UBERON:0007311', 'UBERON:0001728', 'UBERON:0001736', 'UBERON:0002037', 'UBERON:0009835']
---- Removed rows from df with matching pk
*** Entering anatomy to database ***
df: #rows = 50, #cols: 4
df:
                 id  ...                                           synonyms
0    UBERON:0000006  ...           ["pancreatic insula","pancreatic islet"]
1    UBERON:0000033  ...                                  ["head (volume)"]
2    UBERON:0000038  ...  ["liquor follicularis","liquor folliculi","ova...
3    UBERON:0000044  ...  ["UBERON:0026602","dorsal root ganglion","gang...
13   UBERON:0000913  ...             ["intercellular fluid","tissue fluid"]
28   UBERON:0001089  ...                                                 []
29   UBERON:0001134  ...                                ["skeletal muscle"]
34   UBERON:0001268  ...                                                 []
36   UBERON:0001322  ...                                                 []
37   UBERON:0001344  ...  ["epithelial tissue of vagina","vagina epithel...
38   UBERON:0001347  ...  ["adipocytus unigutturalis","textus adiposus a...
39   UBERON:0001348  ...  ["adipocytus multigutturalis","brown fat","mul...
41   UBERON:0001377  ...         ["quadriceps","quadriceps femoris muscle"]
42   UBERON:0001379  ...            ["lateralis","vastus lateralis muscle"]
43   UBERON:0001388  ...  ["gastrocnemius muscle","m. gastrocnemius","m....
45   UBERON:0001471  ...  ["foreskin of penis","penis foreskin","preputi...
48   UBERON:0001637  ...  ["arterial subtree","arterial tree organ part"...
49   UBERON:0001723  ...                                                 []
50   UBERON:0001796  ...  ["aqueous humor","aqueous humour","humor aquos...
51   UBERON:0001797  ...  ["humor vitreous","humor vitreus","portion of ...
54   UBERON:0001851  ...                       ["cortex","cortex of organ"]
55   UBERON:0001869  ...                                                 []
57   UBERON:0001886  ...       ["chorioid plexus","CP","plexus choroideus"]
62   UBERON:0001986  ...                                                 []
73   UBERON:0002114  ...                                                 []
74   UBERON:0002115  ...                                                 []
77   UBERON:0002305  ...  ["cytoarchitectural fields of hippocampal form...
81   UBERON:0002385  ...  ["muscular tissue","portion of muscle tissue",...
82   UBERON:0002405  ...                                                 []
83   UBERON:0002415  ...                             ["caudal subdivision"]
84   UBERON:0002509  ...                                ["mesenteric node"]
85   UBERON:0002512  ...  ["corpora lutea","corpus luteum of ovary","ova...
86   UBERON:0003053  ...  ["brain ventricular zone","ventricular zone of...
87   UBERON:0003891  ...                                                 []
88   UBERON:0004087  ...                                                 []
90   UBERON:0004819  ...  ["epithelial tissue of kidney","epithelium of ...
91   UBERON:0004903  ...                                                 []
92   UBERON:0005291  ...                    ["portion of embryonic tissue"]
94   UBERON:0006911  ...            ["digestive system fluid or secretion"]
96   UBERON:0007379  ...                                                 []
97   UBERON:0008987  ...                           ["parenchyma of kidney"]
98   UBERON:0009754  ...                                                 []
99   UBERON:0009906  ...  ["optic nerve root","optic tract root","root o...
100  UBERON:0010392  ...                                                 []
101  UBERON:0010393  ...                                                 []
102  UBERON:0010394  ...                                                 []
103  UBERON:0010412  ...                         ["periepididymal fat pad"]
104  UBERON:0016482  ...                                                 []
105  UBERON:0018543  ...             ["intestinal lumen","intestine lumen"]
106  UBERON:0018707  ...                                                 []

[50 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.07125306129455566 seconds.

--------- ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/assay_type.tsv ---------
ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/assay_type.tsv
Read from file: df: #rows = 4, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.assay_type;
qt_df:              pk
0   OBI:0003094
1   OBI:0001501
2   OBI:0002760
3   OBI:0003306
4   OBI:0003097
..          ...
78  OBI:0001271
79  OBI:0003098
80  OBI:0003087
81  OBI:0002761
82  OBI:0003297

[83 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 83, #cols: 1

df_pk (at most first 10 elements): ['OBI:0000470', 'OBI:0000623', 'OBI:0003097', 'OBI:0003110']
qt_pk (at most first 10 elements): ['OBI:0003094', 'OBI:0001501', 'OBI:0002760', 'OBI:0003306', 'OBI:0003097', 'OBI:0001920', 'OBI:0002963', 'OBI:0002145', 'OBI:0002112', 'OBI:0003034']
---- Removed rows from df with matching pk
*** Entering assay_type to database ***
df: #rows = 2, #cols: 4
df:
            id  ...                                     synonyms
1  OBI:0000623  ...  ["Nuclear magnetic resonance spectroscopy"]
3  OBI:0003110  ...                                    ["GC-MS"]

[2 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.010261297225952148 seconds.

--------- ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/compound.tsv ---------
ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/compound.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['id']
*** Entering compound to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0026824474334716797 seconds.

--------- ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/data_type.tsv ---------
ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/data_type.tsv
Read from file: df: #rows = 1, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.data_type;
qt_df:              pk
0     data:3112
1     data:0907
2     data:0006
3     data:1916
4     data:3210
5     data:3111
6     data:0945
7     data:1270
8     data:1714
9     data:2536
10    data:3495
11  ILX:0793824
12    data:1566
13    data:1383
14    data:3110
15    data:2603
16    data:2600
17    data:3494
18    data:2764
19    data:2048
20    data:0943
21    data:0928
22    data:3028
23    data:1255
24    data:2082
25    data:3002
26    data:3914
27    data:3498
28    data:3917
29    data:2887
30    data:2976
31    data:2968
32    data:0925
33  ILX:0793825
---- Executed query, got data.frame: qt_df: #rows = 34, #cols: 1

df_pk (at most first 10 elements): ['data:2536']
qt_pk (at most first 10 elements): ['data:3112', 'data:0907', 'data:0006', 'data:1916', 'data:3210', 'data:3111', 'data:0945', 'data:1270', 'data:1714', 'data:2536']
---- Removed rows from df with matching pk
*** Entering data_type to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.006112575531005859 seconds.

--------- ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/disease.tsv ---------
ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/disease.tsv
Read from file: df: #rows = 119, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.disease;
qt_df:               pk
0      DOID:4977
1      DOID:6683
2     DOID:13941
3      DOID:8947
4     DOID:11840
...          ...
1917   DOID:9553
1918  DOID:12895
1919   DOID:3491
1920   DOID:8838
1921   DOID:2468

[1922 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 1922, #cols: 1

df_pk (at most first 10 elements): ['DOID:0014667', 'DOID:0040085', 'DOID:0050117', 'DOID:0050476', 'DOID:0050589', 'DOID:0050700', 'DOID:0050741', 'DOID:0050753', 'DOID:0050830', 'DOID:0050847']
qt_pk (at most first 10 elements): ['DOID:4977', 'DOID:6683', 'DOID:13941', 'DOID:8947', 'DOID:11840', 'DOID:14447', 'DOID:4006', 'DOID:11054', 'DOID:1791', 'DOID:13810']
---- Removed rows from df with matching pk
*** Entering disease to database ***
df: #rows = 28, #cols: 4
df:
               id  ...                                           synonyms
0    DOID:0014667  ...                              ["metabolic disease"]
1    DOID:0040085  ...                                                 []
2    DOID:0050117  ...  ["DOID:10115","DOID:11078","DOID:1304","DOID:1...
3    DOID:0050476  ...  ["3-methylglutaconicaciduria type 2","3-methyl...
4    DOID:0050589  ...                                                 []
5    DOID:0050700  ...                               ["Cardiomyopathies"]
6    DOID:0050741  ...                                     ["alcoholism"]
7    DOID:0050753  ...                                                 []
8    DOID:0050830  ...                                                 []
9    DOID:0050847  ...                                                 []
10   DOID:0060180  ...                                                 []
11   DOID:0060224  ...                                   ["A-fib","AFib"]
12   DOID:0060611  ...                                                 []
13   DOID:0060903  ...                                                 []
14   DOID:0080155  ...                               ["VLCAD deficiency"]
15   DOID:0080162  ...                                                 []
16   DOID:0080547  ...                                           ["NASH"]
18   DOID:0080784  ...                                            ["UTI"]
19   DOID:0081267  ...               ["graft versus host disease","GvHD"]
20   DOID:0081292  ...                                                 []
50     DOID:13576  ...  ["Fetal blood loss from fetal hemorrhage into ...
52      DOID:1398  ...  ["DOID:11681","DOID:13509","DOID:1396","DOID:1...
57      DOID:1564  ...                                        ["mycosis"]
58      DOID:1596  ...                 ["DOID:14672","mental depression"]
87      DOID:6590  ...                                                 []
95      DOID:8544  ...  ["CFS","Myalgic encephalitis","Myalgic encepha...
96      DOID:8566  ...  ["DOID:8763","DOID:9012","DOID:9239","Herpesvi...
111     DOID:9682  ...  ["DOID:9683","DOID:9684","jungle yellow fever"...

[28 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.015486001968383789 seconds.

--------- ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/file_format.tsv ---------
ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/file_format.tsv
Read from file: df: #rows = 9, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.file_format;
qt_df:              pk
0   format:3654
1   format:3603
2   format:3004
3   format:3578
4   format:3464
5   format:3579
6   format:3327
7   format:1936
8   format:3987
9   format:2332
10  format:1975
11  format:3712
12  format:2572
13  format:3591
14  format:3590
15  format:3873
16  format:3006
17  format:3462
18  format:1930
19  format:3468
20  format:3244
21  format:3727
22  format:3752
23  format:1919
24  format:3829
25  format:3583
26  format:1929
27  format:3981
28  format:3746
29  format:3989
30  format:2330
31  format:3508
32  format:2331
33  format:3003
34  format:3016
35  format:3839
36  format:3008
37  format:3620
38  format:2333
39  format:3475
---- Executed query, got data.frame: qt_df: #rows = 40, #cols: 1

df_pk (at most first 10 elements): ['format:2330', 'format:2333', 'format:3506', 'format:3508', 'format:3620', 'format:3752', 'format:3981', 'format:3987', 'format:3989']
qt_pk (at most first 10 elements): ['format:3654', 'format:3603', 'format:3004', 'format:3578', 'format:3464', 'format:3579', 'format:3327', 'format:1936', 'format:3987', 'format:2332']
---- Removed rows from df with matching pk
*** Entering file_format to database ***
df: #rows = 1, #cols: 4
df:
            id  name             description                         synonyms
2  format:3506  docx  Microsoft Word format.  ["Microsoft Word format","doc"]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.009465456008911133 seconds.

--------- ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/gene.tsv ---------
ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/gene.tsv
Read from file: df: #rows = 5455, #cols: 5

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.gene;
qt_df:                     pk
0      ENSG00000005007
1      ENSG00000158769
2      ENSG00000079805
3      ENSG00000164611
4      ENSG00000204525
...                ...
19668  ENSG00000255524
19669  ENSG00000171396
19670  ENSG00000141456
19671  ENSG00000134444
19672  ENSG00000170178

[19673 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 19673, #cols: 1

df_pk (at most first 10 elements): ['ENSG00000000419', 'ENSG00000000971', 'ENSG00000001084', 'ENSG00000001497', 'ENSG00000001626', 'ENSG00000001631', 'ENSG00000002016', 'ENSG00000002330', 'ENSG00000002586', 'ENSG00000002587']
qt_pk (at most first 10 elements): ['ENSG00000005007', 'ENSG00000158769', 'ENSG00000079805', 'ENSG00000164611', 'ENSG00000204525', 'ENSG00000112245', 'ENSG00000137975', 'ENSG00000035115', 'ENSG00000182111', 'ENSG00000108381']
---- Removed rows from df with matching pk
*** Entering gene to database ***
df: #rows = 622, #cols: 5
df:
                   id  ...       organism
4153  ENSG00000186645  ...  NCBI:txid9606
4327  ENSG00000197061  ...  NCBI:txid9606
4336  ENSG00000197238  ...  NCBI:txid9606
4501  ENSG00000204364  ...  NCBI:txid9606
4511  ENSG00000204539  ...  NCBI:txid9606
...               ...  ...            ...
5449  ENSG00000288677  ...  NCBI:txid9606
5450  ENSG00000288784  ...  NCBI:txid9606
5451  ENSG00000289604  ...  NCBI:txid9606
5452  ENSG00000289720  ...  NCBI:txid9606
5454  ENSG00000291307  ...  NCBI:txid9606

[622 rows x 5 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.6313745975494385 seconds.

--------- ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/phenotype_disease.tsv ---------
ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/phenotype_disease.tsv
Read from file: df: #rows = 0, #cols: 2

pKeys: ['phenotype', 'disease']
*** Entering phenotype_disease to database ***
df: #rows = 0, #cols: 2
df:
Empty DataFrame
Columns: [phenotype, disease]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002712726593017578 seconds.

--------- ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/phenotype_gene.tsv ---------
ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/phenotype_gene.tsv
Read from file: df: #rows = 16476, #cols: 2

pKeys: ['phenotype', 'gene']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', phenotype, gene) as pk FROM c2m2.phenotype_gene;
qt_df: Empty DataFrame
Columns: [pk]
Index: []
---- Executed query, got data.frame: qt_df: #rows = 0, #cols: 1

df_pk (at most first 10 elements): ['HP:0000047___ENSG00000002587', 'HP:0000047___ENSG00000004487', 'HP:0000047___ENSG00000004848', 'HP:0000047___ENSG00000004961', 'HP:0000047___ENSG00000005073', 'HP:0000047___ENSG00000005339', 'HP:0000047___ENSG00000005961', 'HP:0000047___ENSG00000006451', 'HP:0000047___ENSG00000006695', 'HP:0000047___ENSG00000007372']
qt_pk (at most first 10 elements): []
---- Removed rows from df with matching pk
*** Entering phenotype_gene to database ***
df: #rows = 16476, #cols: 2
df:
        phenotype             gene
527    HP:0000047  ENSG00000002587
597    HP:0000047  ENSG00000004487
385    HP:0000047  ENSG00000004848
107    HP:0000047  ENSG00000004961
368    HP:0000047  ENSG00000005073
...           ...              ...
16285  HP:0100806  ENSG00000278279
16283  HP:0100806  ENSG00000278555
16436  HP:0100806  ENSG00000278634
16314  HP:0100806  ENSG00000280682
16379  HP:0100806  ENSG00000285348

[16476 rows x 2 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.7527360916137695 seconds.

--------- ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/phenotype.tsv ---------
ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/phenotype.tsv
Read from file: df: #rows = 59, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.phenotype;
qt_df: Empty DataFrame
Columns: [pk]
Index: []
---- Executed query, got data.frame: qt_df: #rows = 0, #cols: 1

df_pk (at most first 10 elements): ['HP:0000047', 'HP:0000670', 'HP:0000716', 'HP:0000717', 'HP:0000726', 'HP:0000822', 'HP:0000939', 'HP:0000964', 'HP:0001047', 'HP:0001251']
qt_pk (at most first 10 elements): []
---- Removed rows from df with matching pk
*** Entering phenotype to database ***
df: #rows = 59, #cols: 4
df:
            id  ...                                           synonyms
0   HP:0000047  ...                                     ["Hypospadia"]
1   HP:0000670  ...  ["HP:0006295","HP:0006306","Caries","Cariosity...
2   HP:0000716  ...                      ["Depression","Depressivity"]
3   HP:0000717  ...                                         ["Autism"]
4   HP:0000726  ...  ["HP:0002274","HP:0007122","HP:0007150","HP:00...
5   HP:0000822  ...  ["HP:0004949","HP:0005126","Arterial hypertens...
6   HP:0000939  ...                                     ["HP:0002774"]
7   HP:0000964  ...                            ["HP:0001481","Eczema"]
8   HP:0001047  ...  ["HP:0007533","HP:0007564","Atopic dermatitis,...
9   HP:0001251  ...  ["HP:0001253","HP:0002513","HP:0007050","HP:00...
10  HP:0001297  ...  ["HP:0002452","Cerebral vascular events","Cere...
11  HP:0001369  ...                 ["Arthritis","Joint inflammation"]
12  HP:0001370  ...                      ["RA","Rheumatoid arthritis"]
13  HP:0001399  ...                                  ["Liver failure"]
14  HP:0001513  ...             ["Having too much body fat","Obesity"]
15  HP:0001596  ...            ["HP:0002238","HP:0008068","Hair loss"]
16  HP:0001638  ...                    ["Disease of the heart muscle"]
17  HP:0001733  ...                        ["Pancreatic inflammation"]
18  HP:0001919  ...     ["Acute kidney failure","Acute renal failure"]
19  HP:0001943  ...   ["HP:0003356","Hypoglycaemia","Low blood sugar"]
20  HP:0002099  ...         ["HP:0002112","Asthma","Bronchial asthma"]
21  HP:0002583  ...                                                 []
22  HP:0002621  ...  ["Atherosclerotic cardiovascular disease","Nar...
23  HP:0002725  ...                                            ["SLE"]
24  HP:0002758  ...  ["HP:0001379","HP:0002824","HP:0005762","Degen...
25  HP:0002829  ...                       ["Arthralgias","Joint pain"]
26  HP:0003077  ...  ["HP:0008159","HP:0008356","Elevated lipids in...
27  HP:0003198  ...  ["HP:0003569","HP:0003705","HP:0003742","HP:00...
28  HP:0003560  ...                        ["HP:0003544","HP:0003806"]
29  HP:0003765  ...                                      ["Psoriasis"]
30  HP:0004326  ...                               ["Wasting syndrome"]
31  HP:0004387  ...                                                 []
32  HP:0004395  ...                                   ["Malnutrition"]
33  HP:0004905  ...                           ["Vitamin A deficiency"]
34  HP:0004950  ...  ["HP:0004928","HP:0004973","HP:0005296","HP:00...
35  HP:0005110  ...  ["HP:0001715","HP:0005179","Quivering upper he...
36  HP:0006979  ...                   ["Sleep-wake cycle disturbance"]
37  HP:0007302  ...                  ["HP:0000755","Bipolar disorder"]
38  HP:0010535  ...  ["Pauses in breathing while sleeping","Sleep a...
39  HP:0011419  ...                             ["Abruptio placentae"]
40  HP:0011782  ...                                                 []
41  HP:0012393  ...                                        ["Allergy"]
42  HP:0012418  ...                         ["Low blood oxygen level"]
43  HP:0012622  ...  ["HP:0000106","HP:0001918","HP:0008671","Chron...
44  HP:0025464  ...                       ["Increased ROS production"]
45  HP:0030127  ...                                     ["HP:0030013"]
46  HP:0030951  ...                        ["Muscle biopsy: fibrosis"]
47  HP:0030955  ...                                                 []
48  HP:0032249  ...                                   ["Valley fever"]
49  HP:0033511  ...                                                 []
50  HP:0033631  ...                                                 []
51  HP:0033677  ...                                           ["ARDS"]
52  HP:0033726  ...                                                 []
53  HP:0100324  ...  ["HP:0001594","HP:0007426","Progressive system...
54  HP:0100543  ...  ["HP:0002128","HP:0002129","HP:0002302","HP:00...
55  HP:0100602  ...                                  ["Pre-eclampsia"]
56  HP:0100753  ...                                                 []
57  HP:0100806  ...                      ["Infection in blood stream"]
58  HP:0500049  ...                                                 []

[59 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.013960599899291992 seconds.

--------- ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/protein_gene.tsv ---------
ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/protein_gene.tsv
Read from file: df: #rows = 0, #cols: 2

pKeys: ['protein', 'gene']
*** Entering protein_gene to database ***
df: #rows = 0, #cols: 2
df:
Empty DataFrame
Columns: [protein, gene]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002613067626953125 seconds.

--------- ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/protein.tsv ---------
ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/protein.tsv
Read from file: df: #rows = 0, #cols: 5

pKeys: ['id']
*** Entering protein to database ***
df: #rows = 0, #cols: 5
df:
Empty DataFrame
Columns: [id, name, description, synonyms, organism]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0027768611907958984 seconds.

--------- ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/sample_prep_method.tsv ---------
ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/sample_prep_method.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['id']
*** Entering sample_prep_method to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0026934146881103516 seconds.

--------- ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/substance.tsv ---------
ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/substance.tsv
Read from file: df: #rows = 0, #cols: 5

pKeys: ['id']
*** Entering substance to database ***
df: #rows = 0, #cols: 5
df:
Empty DataFrame
Columns: [id, name, description, synonyms, compound]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002679586410522461 seconds.

--------- ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/biosample.tsv ---------
ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/biosample.tsv
Read from file: df: #rows = 256207, #cols: 8

pKeys: ['id_namespace', 'local_id']
*** Entering biosample to database ***
df: #rows = 256207, #cols: 8
df:
                                  id_namespace  ...         anatomy
0       https://www.metabolomicsworkbench.org/  ...             NaN
1       https://www.metabolomicsworkbench.org/  ...             NaN
2       https://www.metabolomicsworkbench.org/  ...             NaN
3       https://www.metabolomicsworkbench.org/  ...             NaN
4       https://www.metabolomicsworkbench.org/  ...             NaN
...                                        ...  ...             ...
256202  https://www.metabolomicsworkbench.org/  ...  UBERON:0001977
256203  https://www.metabolomicsworkbench.org/  ...  UBERON:0001977
256204  https://www.metabolomicsworkbench.org/  ...  UBERON:0001977
256205  https://www.metabolomicsworkbench.org/  ...  UBERON:0001977
256206  https://www.metabolomicsworkbench.org/  ...  UBERON:0001977

[256207 rows x 8 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 6.063733339309692 seconds.

--------- ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/biosample_disease.tsv ---------
ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/biosample_disease.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['biosample_id_namespace', 'biosample_local_id', 'association_type', 'disease']
*** Entering biosample_disease to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [biosample_id_namespace, biosample_local_id, association_type, disease]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.007178068161010742 seconds.

--------- ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/biosample_from_subject.tsv ---------
ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/biosample_from_subject.tsv
Read from file: df: #rows = 256207, #cols: 5

pKeys: ['biosample_id_namespace', 'biosample_local_id', 'subject_id_namespace', 'subject_local_id']
*** Entering biosample_from_subject to database ***
df: #rows = 256207, #cols: 5
df:
                        biosample_id_namespace  ... age_at_sampling
0       https://www.metabolomicsworkbench.org/  ...             NaN
1       https://www.metabolomicsworkbench.org/  ...             NaN
2       https://www.metabolomicsworkbench.org/  ...             NaN
3       https://www.metabolomicsworkbench.org/  ...             NaN
4       https://www.metabolomicsworkbench.org/  ...             NaN
...                                        ...  ...             ...
256202  https://www.metabolomicsworkbench.org/  ...             NaN
256203  https://www.metabolomicsworkbench.org/  ...             NaN
256204  https://www.metabolomicsworkbench.org/  ...             NaN
256205  https://www.metabolomicsworkbench.org/  ...             NaN
256206  https://www.metabolomicsworkbench.org/  ...             NaN

[256207 rows x 5 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 4.628996849060059 seconds.

--------- ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/biosample_gene.tsv ---------
ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/biosample_gene.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['biosample_id_namespace', 'biosample_local_id', 'gene']
*** Entering biosample_gene to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [biosample_id_namespace, biosample_local_id, gene]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.008135795593261719 seconds.

--------- ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/biosample_in_collection.tsv ---------
ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/biosample_in_collection.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['biosample_id_namespace', 'biosample_local_id', 'collection_id_namespace', 'collection_local_id']
*** Entering biosample_in_collection to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [biosample_id_namespace, biosample_local_id, collection_id_namespace, collection_local_id]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0027701854705810547 seconds.

--------- ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/biosample_substance.tsv ---------
ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/biosample_substance.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['biosample_id_namespace', 'biosample_local_id', 'substance']
*** Entering biosample_substance to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [biosample_id_namespace, biosample_local_id, substance]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0024764537811279297 seconds.

--------- ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/collection.tsv ---------
ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/collection.tsv
Read from file: df: #rows = 0, #cols: 8

pKeys: ['id_namespace', 'local_id']
*** Entering collection to database ***
df: #rows = 0, #cols: 8
df:
Empty DataFrame
Columns: [id_namespace, local_id, persistent_id, creation_time, abbreviation, name, description, has_time_series_data]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.003136157989501953 seconds.

--------- ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/collection_anatomy.tsv ---------
ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/collection_anatomy.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'anatomy']
*** Entering collection_anatomy to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, anatomy]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002463817596435547 seconds.

--------- ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/collection_compound.tsv ---------
ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/collection_compound.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'compound']
*** Entering collection_compound to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, compound]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0024182796478271484 seconds.

--------- ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/collection_defined_by_project.tsv ---------
ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/collection_defined_by_project.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['collection_id_namespace', 'collection_local_id', 'project_id_namespace', 'project_local_id']
*** Entering collection_defined_by_project to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, project_id_namespace, project_local_id]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002690553665161133 seconds.

--------- ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/collection_disease.tsv ---------
ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/collection_disease.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'disease']
*** Entering collection_disease to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, disease]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0023648738861083984 seconds.

--------- ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/collection_gene.tsv ---------
ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/collection_gene.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'gene']
*** Entering collection_gene to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, gene]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0025522708892822266 seconds.

--------- ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/collection_in_collection.tsv ---------
ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/collection_in_collection.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['superset_collection_id_namespace', 'superset_collection_local_id', 'subset_collection_id_namespace', 'subset_collection_local_id']
*** Entering collection_in_collection to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [superset_collection_id_namespace, superset_collection_local_id, subset_collection_id_namespace, subset_collection_local_id]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002507925033569336 seconds.

--------- ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/collection_phenotype.tsv ---------
ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/collection_phenotype.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'phenotype']
*** Entering collection_phenotype to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, phenotype]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002427339553833008 seconds.

--------- ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/collection_protein.tsv ---------
ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/collection_protein.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'protein']
*** Entering collection_protein to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, protein]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0023946762084960938 seconds.

--------- ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/collection_substance.tsv ---------
ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/collection_substance.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'substance']
*** Entering collection_substance to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, substance]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002356290817260742 seconds.

--------- ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/collection_taxonomy.tsv ---------
ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/collection_taxonomy.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'taxon']
*** Entering collection_taxonomy to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, taxon]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002390146255493164 seconds.

--------- ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/dcc.tsv ---------
ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/dcc.tsv
Read from file: df: #rows = 1, #cols: 9

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.dcc;
qt_df:                             pk
0     cfde_registry_dcc:glygen
1      cfde_registry_dcc:exrna
2  cfde_registry_dcc:kidsfirst
3        cfde_registry_dcc:4dn
4        cfde_registry_dcc:hmp
5     cfde_registry_dcc:hubmap
6       cfde_registry_dcc:gtex
7        cfde_registry_dcc:idg
8      cfde_registry_dcc:lincs
---- Executed query, got data.frame: qt_df: #rows = 9, #cols: 1

df_pk (at most first 10 elements): ['cfde_registry_dcc:metabolomics']
qt_pk (at most first 10 elements): ['cfde_registry_dcc:glygen', 'cfde_registry_dcc:exrna', 'cfde_registry_dcc:kidsfirst', 'cfde_registry_dcc:4dn', 'cfde_registry_dcc:hmp', 'cfde_registry_dcc:hubmap', 'cfde_registry_dcc:gtex', 'cfde_registry_dcc:idg', 'cfde_registry_dcc:lincs']
---- Removed rows from df with matching pk
*** Entering dcc to database ***
df: #rows = 1, #cols: 9
df:
                               id  ... project_local_id
0  cfde_registry_dcc:metabolomics  ...         PPR00001

[1 rows x 9 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.015065670013427734 seconds.

--------- ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/file.tsv ---------
ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/file.tsv
Read from file: df: #rows = 3943, #cols: 20

pKeys: ['id_namespace', 'local_id']
*** Entering file to database ***
df: #rows = 3943, #cols: 20
df:
                                id_namespace  ... dbgap_study_id
0     https://www.metabolomicsworkbench.org/  ...            NaN
1     https://www.metabolomicsworkbench.org/  ...            NaN
2     https://www.metabolomicsworkbench.org/  ...            NaN
3     https://www.metabolomicsworkbench.org/  ...            NaN
4     https://www.metabolomicsworkbench.org/  ...            NaN
...                                      ...  ...            ...
3938  https://www.metabolomicsworkbench.org/  ...            NaN
3939  https://www.metabolomicsworkbench.org/  ...            NaN
3940  https://www.metabolomicsworkbench.org/  ...            NaN
3941  https://www.metabolomicsworkbench.org/  ...            NaN
3942  https://www.metabolomicsworkbench.org/  ...            NaN

[3943 rows x 20 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.37838006019592285 seconds.

--------- ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/file_describes_biosample.tsv ---------
ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/file_describes_biosample.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['file_id_namespace', 'file_local_id', 'biosample_id_namespace', 'biosample_local_id']
*** Entering file_describes_biosample to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [file_id_namespace, file_local_id, biosample_id_namespace, biosample_local_id]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0044100284576416016 seconds.

--------- ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/file_describes_collection.tsv ---------
ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/file_describes_collection.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['file_id_namespace', 'file_local_id', 'collection_id_namespace', 'collection_local_id']
*** Entering file_describes_collection to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [file_id_namespace, file_local_id, collection_id_namespace, collection_local_id]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002610921859741211 seconds.

--------- ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/file_describes_subject.tsv ---------
ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/file_describes_subject.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['file_id_namespace', 'file_local_id', 'subject_id_namespace', 'subject_local_id']
*** Entering file_describes_subject to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [file_id_namespace, file_local_id, subject_id_namespace, subject_local_id]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002539396286010742 seconds.

--------- ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/file_in_collection.tsv ---------
ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/file_in_collection.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['file_id_namespace', 'file_local_id', 'collection_id_namespace', 'collection_local_id']
*** Entering file_in_collection to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [file_id_namespace, file_local_id, collection_id_namespace, collection_local_id]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0025169849395751953 seconds.

--------- ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/id_namespace.tsv ---------
ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/id_namespace.tsv
Read from file: df: #rows = 1, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.id_namespace;
qt_df:                                                    pk
0   https://druggablegenome.net/cfde_idg_drugcentr...
1                                               egtex
2                       https://www.lincsproject.org/
3                    https://www.druggablegenome.net/
4                        https://www.data.glygen.org/
5                         https://data.4dnucleome.org
6   https://druggablegenome.net/cfde_idg_tcrd_dise...
7                                                gtex
8   https://druggablegenome.net/cfde_idg_tcrd_targets
9                                          ERCC-exRNA
10                        tag:hmpdacc.org,2022-04-04:
11                                         adult_gtex
12                                         kidsfirst:
13                     tag:hubmapconsortium.org,2023:
---- Executed query, got data.frame: qt_df: #rows = 14, #cols: 1

df_pk (at most first 10 elements): ['https://www.metabolomicsworkbench.org/']
qt_pk (at most first 10 elements): ['https://druggablegenome.net/cfde_idg_drugcentral_drugs', 'egtex', 'https://www.lincsproject.org/', 'https://www.druggablegenome.net/', 'https://www.data.glygen.org/', 'https://data.4dnucleome.org', 'https://druggablegenome.net/cfde_idg_tcrd_diseases', 'gtex', 'https://druggablegenome.net/cfde_idg_tcrd_targets', 'ERCC-exRNA']
---- Removed rows from df with matching pk
*** Entering id_namespace to database ***
df: #rows = 1, #cols: 4
df:
                                       id  ...                                        description
0  https://www.metabolomicsworkbench.org/  ...  The Metabolomics Workbench is the NIH Common F...

[1 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.010059833526611328 seconds.

--------- ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/ncbi_taxonomy.tsv ---------
ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/ncbi_taxonomy.tsv
Read from file: df: #rows = 149, #cols: 5

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.ncbi_taxonomy;
qt_df:                     pk
0     NCBI:txid1095745
1     NCBI:txid1739397
2      NCBI:txid742723
3     NCBI:txid1715193
4      NCBI:txid469585
...                ...
2320   NCBI:txid742726
2321  NCBI:txid1715207
2322  NCBI:txid1161416
2323   NCBI:txid765081
2324   NCBI:txid999422

[2325 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 2325, #cols: 1

df_pk (at most first 10 elements): ['NCBI:txid10009', 'NCBI:txid10029', 'NCBI:txid10036', 'NCBI:txid1006131', 'NCBI:txid10090', 'NCBI:txid10116', 'NCBI:txid10149', 'NCBI:txid1093657', 'NCBI:txid110662', 'NCBI:txid1129']
qt_pk (at most first 10 elements): ['NCBI:txid1095745', 'NCBI:txid1739397', 'NCBI:txid742723', 'NCBI:txid1715193', 'NCBI:txid469585', 'NCBI:txid1581186', 'NCBI:txid762963', 'NCBI:txid1542093', 'NCBI:txid1134801', 'NCBI:txid525378']
---- Removed rows from df with matching pk
*** Entering ncbi_taxonomy to database ***
df: #rows = 134, #cols: 5
df:
                   id  ...                                           synonyms
0      NCBI:txid10009  ...                                   ["red squirrel"]
1      NCBI:txid10029  ...  ["Chinese hamsters", "Cricetulus aureus", "Cri...
3    NCBI:txid1006131  ...                                                 []
6      NCBI:txid10149  ...  ["carpincho", "Hydrochaeris hydrochaeris", "Hy...
7    NCBI:txid1093657  ...                                                 []
..                ...  ...                                                ...
144     NCBI:txid9913  ...    ["oxen", "Bos bovis", "Bos primigenius taurus"]
145     NCBI:txid9925  ...                 ["goats", "Capra aegagrus hircus"]
146     NCBI:txid9940  ...  ["wild sheep", "Ovis ammon aries", "Ovis orien...
147    NCBI:txid99755  ...                                                 []
148     NCBI:txid9986  ...                     ["rabbits", "Lepus cuniculus"]

[134 rows x 5 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.02196335792541504 seconds.

--------- ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/project.tsv ---------
ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/project.tsv
Read from file: df: #rows = 1593, #cols: 7

pKeys: ['id_namespace', 'local_id']
*** Entering project to database ***
df: #rows = 1593, #cols: 7
df:
                                id_namespace  ...                                        description
0     https://www.metabolomicsworkbench.org/  ...                                       Metabolomics
1     https://www.metabolomicsworkbench.org/  ...  Experiment to test the consequence of a mutati...
2     https://www.metabolomicsworkbench.org/  ...     Intestinal Samples II pre/post transplantation
3     https://www.metabolomicsworkbench.org/  ...                                                  -
4     https://www.metabolomicsworkbench.org/  ...  Multi-center quantitative lipidomics studies o...
...                                      ...  ...                                                ...
1588  https://www.metabolomicsworkbench.org/  ...  Tuberous sclerosis complex (TSC) is an autosom...
1589  https://www.metabolomicsworkbench.org/  ...  In this study, to investigate DM effects at di...
1590  https://www.metabolomicsworkbench.org/  ...  Metabolic status is crucial for stem cell func...
1591  https://www.metabolomicsworkbench.org/  ...  Effective early-stage markers for predicting w...
1592  https://www.metabolomicsworkbench.org/  ...  Obesity results from an interplay between gene...

[1593 rows x 7 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.07114791870117188 seconds.

--------- ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/project_in_project.tsv ---------
ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/project_in_project.tsv
Read from file: df: #rows = 1592, #cols: 4

pKeys: ['parent_project_id_namespace', 'parent_project_local_id', 'child_project_id_namespace', 'child_project_local_id']
*** Entering project_in_project to database ***
df: #rows = 1592, #cols: 4
df:
                 parent_project_id_namespace  ... child_project_local_id
0     https://www.metabolomicsworkbench.org/  ...               PR000001
1     https://www.metabolomicsworkbench.org/  ...               PR000002
2     https://www.metabolomicsworkbench.org/  ...               PR000003
3     https://www.metabolomicsworkbench.org/  ...               PR000004
4     https://www.metabolomicsworkbench.org/  ...               PR000005
...                                      ...  ...                    ...
1587  https://www.metabolomicsworkbench.org/  ...               PR001855
1588  https://www.metabolomicsworkbench.org/  ...               PR001857
1589  https://www.metabolomicsworkbench.org/  ...               PR001858
1590  https://www.metabolomicsworkbench.org/  ...               PR001859
1591  https://www.metabolomicsworkbench.org/  ...               PR001863

[1592 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.03507852554321289 seconds.

--------- ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/subject.tsv ---------
ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/subject.tsv
Read from file: df: #rows = 2572, #cols: 10

pKeys: ['id_namespace', 'local_id']
*** Entering subject to database ***
df: #rows = 2572, #cols: 10
df:
                                id_namespace  ... age_at_enrollment
0     https://www.metabolomicsworkbench.org/  ...               NaN
1     https://www.metabolomicsworkbench.org/  ...               NaN
2     https://www.metabolomicsworkbench.org/  ...               NaN
3     https://www.metabolomicsworkbench.org/  ...               NaN
4     https://www.metabolomicsworkbench.org/  ...               NaN
...                                      ...  ...               ...
2567  https://www.metabolomicsworkbench.org/  ...               NaN
2568  https://www.metabolomicsworkbench.org/  ...               NaN
2569  https://www.metabolomicsworkbench.org/  ...               NaN
2570  https://www.metabolomicsworkbench.org/  ...               NaN
2571  https://www.metabolomicsworkbench.org/  ...               NaN

[2572 rows x 10 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.07082962989807129 seconds.

--------- ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/subject_disease.tsv ---------
ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/subject_disease.tsv
Read from file: df: #rows = 1141, #cols: 4

pKeys: ['subject_id_namespace', 'subject_local_id', 'association_type', 'disease']
*** Entering subject_disease to database ***
Processing C2M2 Files...:  83%|████████▎ | 10/12 [31:33<05:56, 178.47s/it]df: #rows = 1141, #cols: 4
df:
                        subject_id_namespace  ...       disease
0     https://www.metabolomicsworkbench.org/  ...      DOID:104
1     https://www.metabolomicsworkbench.org/  ...      DOID:162
2     https://www.metabolomicsworkbench.org/  ...     DOID:8398
3     https://www.metabolomicsworkbench.org/  ...     DOID:8398
4     https://www.metabolomicsworkbench.org/  ...      DOID:162
...                                      ...  ...           ...
1136  https://www.metabolomicsworkbench.org/  ...    DOID:13515
1137  https://www.metabolomicsworkbench.org/  ...  DOID:0080600
1138  https://www.metabolomicsworkbench.org/  ...     DOID:1205
1139  https://www.metabolomicsworkbench.org/  ...     DOID:1205
1140  https://www.metabolomicsworkbench.org/  ...     DOID:9970

[1141 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.027281999588012695 seconds.

--------- ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/subject_in_collection.tsv ---------
ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/subject_in_collection.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['subject_id_namespace', 'subject_local_id', 'collection_id_namespace', 'collection_local_id']
*** Entering subject_in_collection to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [subject_id_namespace, subject_local_id, collection_id_namespace, collection_local_id]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0040416717529296875 seconds.

--------- ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/subject_phenotype.tsv ---------
ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/subject_phenotype.tsv
Read from file: df: #rows = 260, #cols: 4

pKeys: ['subject_id_namespace', 'subject_local_id', 'association_type', 'phenotype']
*** Entering subject_phenotype to database ***
df: #rows = 260, #cols: 4
df:
                       subject_id_namespace  ...   phenotype
0    https://www.metabolomicsworkbench.org/  ...  HP:0002758
1    https://www.metabolomicsworkbench.org/  ...  HP:0002758
2    https://www.metabolomicsworkbench.org/  ...  HP:0001596
3    https://www.metabolomicsworkbench.org/  ...  HP:0001513
4    https://www.metabolomicsworkbench.org/  ...  HP:0004387
..                                      ...  ...         ...
255  https://www.metabolomicsworkbench.org/  ...  HP:0033631
256  https://www.metabolomicsworkbench.org/  ...  HP:0000716
257  https://www.metabolomicsworkbench.org/  ...  HP:0012393
258  https://www.metabolomicsworkbench.org/  ...  HP:0012393
259  https://www.metabolomicsworkbench.org/  ...  HP:0001513

[260 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.012880086898803711 seconds.

--------- ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/subject_role_taxonomy.tsv ---------
ingest/c2m2s/MW/datapackage/MW-sub-20231208_1427/data/subject_role_taxonomy.tsv
Read from file: df: #rows = 2464, #cols: 4

pKeys: ['subject_id_namespace', 'subject_local_id', 'role_id', 'taxonomy_id']
*** Entering subject_role_taxonomy to database ***
df: #rows = 2464, #cols: 4
df:
                        subject_id_namespace  ...     taxonomy_id
0     https://www.metabolomicsworkbench.org/  ...   NCBI:txid3702
1     https://www.metabolomicsworkbench.org/  ...   NCBI:txid9606
2     https://www.metabolomicsworkbench.org/  ...  NCBI:txid10090
3     https://www.metabolomicsworkbench.org/  ...   NCBI:txid9606
4     https://www.metabolomicsworkbench.org/  ...  NCBI:txid10090
...                                      ...  ...             ...
2459  https://www.metabolomicsworkbench.org/  ...   NCBI:txid9606
2460  https://www.metabolomicsworkbench.org/  ...   NCBI:txid9606
2461  https://www.metabolomicsworkbench.org/  ...  NCBI:txid10090
2462  https://www.metabolomicsworkbench.org/  ...   NCBI:txid9606
2463  https://www.metabolomicsworkbench.org/  ...   NCBI:txid9606

[2464 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.04462027549743652 seconds.


================================== DCC short label: MoTrPAC =============================================
Unpack zip file: c2m2_extract_path: ingest/c2m2s/MoTrPAC/datapackage
--------- ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/dcc.tsv ---------
ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/dcc.tsv
Read from file: df: #rows = 1, #cols: 9

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.dcc;
qt_df:                                pk
0        cfde_registry_dcc:glygen
1         cfde_registry_dcc:exrna
2     cfde_registry_dcc:kidsfirst
3           cfde_registry_dcc:4dn
4           cfde_registry_dcc:hmp
5  cfde_registry_dcc:metabolomics
6        cfde_registry_dcc:hubmap
7          cfde_registry_dcc:gtex
8           cfde_registry_dcc:idg
9         cfde_registry_dcc:lincs
---- Executed query, got data.frame: qt_df: #rows = 10, #cols: 1

df_pk (at most first 10 elements): ['cfde_registry_dcc:motrpac']
qt_pk (at most first 10 elements): ['cfde_registry_dcc:glygen', 'cfde_registry_dcc:exrna', 'cfde_registry_dcc:kidsfirst', 'cfde_registry_dcc:4dn', 'cfde_registry_dcc:hmp', 'cfde_registry_dcc:metabolomics', 'cfde_registry_dcc:hubmap', 'cfde_registry_dcc:gtex', 'cfde_registry_dcc:idg', 'cfde_registry_dcc:lincs']
---- Removed rows from df with matching pk
*** Entering dcc to database ***
df: #rows = 1, #cols: 9
df:
                          id  ... project_local_id
0  cfde_registry_dcc:motrpac  ...          motrpac

[1 rows x 9 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.014878988265991211 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/id_namespace.tsv ---------
ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/id_namespace.tsv
Read from file: df: #rows = 1, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.id_namespace;
qt_df:                                                    pk
0              https://www.metabolomicsworkbench.org/
1   https://druggablegenome.net/cfde_idg_drugcentr...
2                                               egtex
3                       https://www.lincsproject.org/
4                    https://www.druggablegenome.net/
5                        https://www.data.glygen.org/
6                         https://data.4dnucleome.org
7   https://druggablegenome.net/cfde_idg_tcrd_dise...
8                                                gtex
9   https://druggablegenome.net/cfde_idg_tcrd_targets
10                                         ERCC-exRNA
11                        tag:hmpdacc.org,2022-04-04:
12                                         adult_gtex
13                                         kidsfirst:
14                     tag:hubmapconsortium.org,2023:
---- Executed query, got data.frame: qt_df: #rows = 15, #cols: 1

df_pk (at most first 10 elements): ['tag:motrpac-data.org,2023:']
qt_pk (at most first 10 elements): ['https://www.metabolomicsworkbench.org/', 'https://druggablegenome.net/cfde_idg_drugcentral_drugs', 'egtex', 'https://www.lincsproject.org/', 'https://www.druggablegenome.net/', 'https://www.data.glygen.org/', 'https://data.4dnucleome.org', 'https://druggablegenome.net/cfde_idg_tcrd_diseases', 'gtex', 'https://druggablegenome.net/cfde_idg_tcrd_targets']
---- Removed rows from df with matching pk
*** Entering id_namespace to database ***
df: #rows = 1, #cols: 4
df:
                           id  ...                                        description
0  tag:motrpac-data.org,2023:  ...  A tag-URI-based C2M2 Identifier for MoTrPAC's ...

[1 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.009526968002319336 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/disease.tsv ---------
ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/disease.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['id']
*** Entering disease to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002596139907836914 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/data_type.tsv ---------
ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/data_type.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['id']
*** Entering data_type to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0025556087493896484 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/collection_disease.tsv ---------
ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/collection_disease.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'disease']
*** Entering collection_disease to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, disease]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0025947093963623047 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/file_in_collection.tsv ---------
ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/file_in_collection.tsv
Read from file: df: #rows = 18980, #cols: 4

pKeys: ['file_id_namespace', 'file_local_id', 'collection_id_namespace', 'collection_local_id']
*** Entering file_in_collection to database ***
df: #rows = 18980, #cols: 4
df:
                file_id_namespace  ...                collection_local_id
0      tag:motrpac-data.org,2023:  ...      motrpac-pass1b-06-epigenomics
1      tag:motrpac-data.org,2023:  ...      motrpac-pass1b-06-epigenomics
2      tag:motrpac-data.org,2023:  ...      motrpac-pass1b-06-epigenomics
3      tag:motrpac-data.org,2023:  ...      motrpac-pass1b-06-epigenomics
4      tag:motrpac-data.org,2023:  ...      motrpac-pass1b-06-epigenomics
...                           ...  ...                                ...
18975  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-transcriptomics
18976  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-transcriptomics
18977  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-transcriptomics
18978  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-transcriptomics
18979  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-transcriptomics

[18980 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.4110755920410156 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/subject_role_taxonomy.tsv ---------
ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/subject_role_taxonomy.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['subject_id_namespace', 'subject_local_id', 'role_id', 'taxonomy_id']
*** Entering subject_role_taxonomy to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [subject_id_namespace, subject_local_id, role_id, taxonomy_id]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.005510568618774414 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/biosample_in_collection.tsv ---------
ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/biosample_in_collection.tsv
Read from file: df: #rows = 5563, #cols: 4

pKeys: ['biosample_id_namespace', 'biosample_local_id', 'collection_id_namespace', 'collection_local_id']
*** Entering biosample_in_collection to database ***
df: #rows = 5563, #cols: 4
df:
          biosample_id_namespace  ...                        collection_local_id
0     tag:motrpac-data.org,2023:  ...          motrpac-pass1b-06-transcriptomics
1     tag:motrpac-data.org,2023:  ...          motrpac-pass1b-06-transcriptomics
2     tag:motrpac-data.org,2023:  ...          motrpac-pass1b-06-transcriptomics
3     tag:motrpac-data.org,2023:  ...          motrpac-pass1b-06-transcriptomics
4     tag:motrpac-data.org,2023:  ...          motrpac-pass1b-06-transcriptomics
...                          ...  ...                                        ...
5558  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-metabolomics-untargeted
5559  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-metabolomics-untargeted
5560  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-metabolomics-untargeted
5561  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-metabolomics-untargeted
5562  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-metabolomics-untargeted

[5563 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.09753942489624023 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/subject_phenotype.tsv ---------
ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/subject_phenotype.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['subject_id_namespace', 'subject_local_id', 'association_type', 'phenotype']
*** Entering subject_phenotype to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [subject_id_namespace, subject_local_id, association_type, phenotype]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0037450790405273438 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/phenotype_disease.tsv ---------
ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/phenotype_disease.tsv
Read from file: df: #rows = 0, #cols: 2

pKeys: ['phenotype', 'disease']
*** Entering phenotype_disease to database ***
df: #rows = 0, #cols: 2
df:
Empty DataFrame
Columns: [phenotype, disease]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0022881031036376953 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/collection_compound.tsv ---------
ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/collection_compound.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'compound']
*** Entering collection_compound to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, compound]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.00241851806640625 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/protein_gene.tsv ---------
ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/protein_gene.tsv
Read from file: df: #rows = 0, #cols: 2

pKeys: ['protein', 'gene']
*** Entering protein_gene to database ***
df: #rows = 0, #cols: 2
df:
Empty DataFrame
Columns: [protein, gene]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0022535324096679688 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/phenotype_gene.tsv ---------
ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/phenotype_gene.tsv
Read from file: df: #rows = 0, #cols: 2

pKeys: ['phenotype', 'gene']
*** Entering phenotype_gene to database ***
df: #rows = 0, #cols: 2
df:
Empty DataFrame
Columns: [phenotype, gene]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0022788047790527344 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/phenotype.tsv ---------
ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/phenotype.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['id']
*** Entering phenotype to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0025894641876220703 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/subject_disease.tsv ---------
ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/subject_disease.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['subject_id_namespace', 'subject_local_id', 'association_type', 'disease']
*** Entering subject_disease to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [subject_id_namespace, subject_local_id, association_type, disease]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002598285675048828 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/collection_phenotype.tsv ---------
ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/collection_phenotype.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'phenotype']
*** Entering collection_phenotype to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, phenotype]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002401113510131836 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/protein.tsv ---------
ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/protein.tsv
Read from file: df: #rows = 0, #cols: 5

pKeys: ['id']
*** Entering protein to database ***
df: #rows = 0, #cols: 5
df:
Empty DataFrame
Columns: [id, name, description, synonyms, organism]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0028209686279296875 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/ncbi_taxonomy.tsv ---------
ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/ncbi_taxonomy.tsv
Read from file: df: #rows = 0, #cols: 5

pKeys: ['id']
*** Entering ncbi_taxonomy to database ***
df: #rows = 0, #cols: 5
df:
Empty DataFrame
Columns: [id, clade, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002743959426879883 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/collection_protein.tsv ---------
ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/collection_protein.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'protein']
*** Entering collection_protein to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, protein]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002397298812866211 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/analysis_type.tsv ---------
ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/analysis_type.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['id']
*** Entering analysis_type to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002578258514404297 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/file_describes_biosample.tsv ---------
ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/file_describes_biosample.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['file_id_namespace', 'file_local_id', 'biosample_id_namespace', 'biosample_local_id']
*** Entering file_describes_biosample to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [file_id_namespace, file_local_id, biosample_id_namespace, biosample_local_id]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0030066967010498047 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/file.tsv ---------
ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/file.tsv
Read from file: df: #rows = 18980, #cols: 20

pKeys: ['id_namespace', 'local_id']
*** Entering file to database ***
df: #rows = 18980, #cols: 20
df:
                     id_namespace  ... dbgap_study_id
0      tag:motrpac-data.org,2023:  ...            NaN
1      tag:motrpac-data.org,2023:  ...            NaN
2      tag:motrpac-data.org,2023:  ...            NaN
3      tag:motrpac-data.org,2023:  ...            NaN
4      tag:motrpac-data.org,2023:  ...            NaN
...                           ...  ...            ...
18975  tag:motrpac-data.org,2023:  ...            NaN
18976  tag:motrpac-data.org,2023:  ...            NaN
18977  tag:motrpac-data.org,2023:  ...            NaN
18978  tag:motrpac-data.org,2023:  ...            NaN
18979  tag:motrpac-data.org,2023:  ...            NaN

[18980 rows x 20 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.095754861831665 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/collection_gene.tsv ---------
ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/collection_gene.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'gene']
*** Entering collection_gene to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, gene]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0050776004791259766 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/biosample_from_subject.tsv ---------
ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/biosample_from_subject.tsv
Read from file: df: #rows = 0, #cols: 5

pKeys: ['biosample_id_namespace', 'biosample_local_id', 'subject_id_namespace', 'subject_local_id']
*** Entering biosample_from_subject to database ***
df: #rows = 0, #cols: 5
df:
Empty DataFrame
Columns: [biosample_id_namespace, biosample_local_id, subject_id_namespace, subject_local_id, age_at_sampling]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002717733383178711 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/file_describes_collection.tsv ---------
ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/file_describes_collection.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['file_id_namespace', 'file_local_id', 'collection_id_namespace', 'collection_local_id']
*** Entering file_describes_collection to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [file_id_namespace, file_local_id, collection_id_namespace, collection_local_id]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002530336380004883 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/subject_race.tsv ---------
ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/subject_race.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['subject_id_namespace', 'subject_local_id', 'race']
*** Entering subject_race to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [subject_id_namespace, subject_local_id, race]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0024077892303466797 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/collection_in_collection.tsv ---------
ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/collection_in_collection.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['superset_collection_id_namespace', 'superset_collection_local_id', 'subset_collection_id_namespace', 'subset_collection_local_id']
*** Entering collection_in_collection to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [superset_collection_id_namespace, superset_collection_local_id, subset_collection_id_namespace, subset_collection_local_id]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002534151077270508 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/collection_defined_by_project.tsv ---------
ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/collection_defined_by_project.tsv
Read from file: df: #rows = 7, #cols: 4

pKeys: ['collection_id_namespace', 'collection_local_id', 'project_id_namespace', 'project_local_id']
*** Entering collection_defined_by_project to database ***
df: #rows = 7, #cols: 4
df:
      collection_id_namespace  ... project_local_id
0  tag:motrpac-data.org,2023:  ...          motrpac
1  tag:motrpac-data.org,2023:  ...          motrpac
2  tag:motrpac-data.org,2023:  ...          motrpac
3  tag:motrpac-data.org,2023:  ...          motrpac
4  tag:motrpac-data.org,2023:  ...          motrpac
5  tag:motrpac-data.org,2023:  ...          motrpac
6  tag:motrpac-data.org,2023:  ...          motrpac

[7 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.00800013542175293 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/collection_substance.tsv ---------
ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/collection_substance.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'substance']
*** Entering collection_substance to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, substance]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0024738311767578125 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/biosample_substance.tsv ---------
ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/biosample_substance.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['biosample_id_namespace', 'biosample_local_id', 'substance']
*** Entering biosample_substance to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [biosample_id_namespace, biosample_local_id, substance]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0024590492248535156 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/project.tsv ---------
ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/project.tsv
Read from file: df: #rows = 1, #cols: 7

pKeys: ['id_namespace', 'local_id']
*** Entering project to database ***
df: #rows = 1, #cols: 7
df:
                 id_namespace  ...                                        description
0  tag:motrpac-data.org,2023:  ...  A national research consortium designed to dis...

[1 rows x 7 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.01005411148071289 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/anatomy.tsv ---------
ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/anatomy.tsv
Read from file: df: #rows = 19, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.anatomy;
qt_df:                  pk
0    UBERON:0001474
1    UBERON:0001013
2    UBERON:0000087
3    UBERON:0001199
4    UBERON:0016435
..              ...
324  UBERON:0001496
325  UBERON:0000473
326  UBERON:0000056
327  UBERON:0013069
328  UBERON:0008337

[329 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 329, #cols: 1

df_pk (at most first 10 elements): ['UBERON:0000178', 'UBERON:0000473', 'UBERON:0000948', 'UBERON:0000956', 'UBERON:0000992', 'UBERON:0001155', 'UBERON:0001347', 'UBERON:0001348', 'UBERON:0001379', 'UBERON:0001388']
qt_pk (at most first 10 elements): ['UBERON:0001474', 'UBERON:0001013', 'UBERON:0000087', 'UBERON:0001199', 'UBERON:0016435', 'UBERON:0007311', 'UBERON:0001728', 'UBERON:0001736', 'UBERON:0002037', 'UBERON:0009835']
---- Removed rows from df with matching pk
*** Entering anatomy to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0072863101959228516 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/sample_prep_method.tsv ---------
ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/sample_prep_method.tsv
Read from file: df: #rows = 4, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.sample_prep_method;
qt_df:             pk
0  OBI:0600005
1  OBI:0001902
2  OBI:0600024
---- Executed query, got data.frame: qt_df: #rows = 3, #cols: 1

df_pk (at most first 10 elements): ['OBI:0001271', 'OBI:0001862', 'OBI:0002039', 'OBI:0002773']
qt_pk (at most first 10 elements): ['OBI:0600005', 'OBI:0001902', 'OBI:0600024']
---- Removed rows from df with matching pk
*** Entering sample_prep_method to database ***
df: #rows = 4, #cols: 4
df:
            id  ...                                           synonyms
0  OBI:0001271  ...  ["transcription profiling by high throughput s...
1  OBI:0001862  ...  ["reduced representation bisulfite-seq","RRBS"...
2  OBI:0002039  ...                      ["ATAC-seq","ATAC-seq assay"]
3  OBI:0002773  ...                               ["IA","immunoassay"]

[4 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.009719371795654297 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/assay_type.tsv ---------
ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/assay_type.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['id']
*** Entering assay_type to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0026540756225585938 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/biosample_disease.tsv ---------
ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/biosample_disease.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['biosample_id_namespace', 'biosample_local_id', 'association_type', 'disease']
*** Entering biosample_disease to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [biosample_id_namespace, biosample_local_id, association_type, disease]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0025517940521240234 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/collection_anatomy.tsv ---------
ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/collection_anatomy.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'anatomy']
*** Entering collection_anatomy to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, anatomy]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0024204254150390625 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/gene.tsv ---------
ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/gene.tsv
Read from file: df: #rows = 0, #cols: 5

pKeys: ['id']
*** Entering gene to database ***
df: #rows = 0, #cols: 5
df:
Empty DataFrame
Columns: [id, name, description, synonyms, organism]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002653837203979492 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/biosample.tsv ---------
ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/biosample.tsv
Read from file: df: #rows = 6156, #cols: 8

pKeys: ['id_namespace', 'local_id']
*** Entering biosample to database ***
df: #rows = 6156, #cols: 8
df:
                    id_namespace  ...         anatomy
0     tag:motrpac-data.org,2023:  ...  UBERON:0002369
1     tag:motrpac-data.org,2023:  ...  UBERON:0002369
2     tag:motrpac-data.org,2023:  ...  UBERON:0002369
3     tag:motrpac-data.org,2023:  ...  UBERON:0002369
4     tag:motrpac-data.org,2023:  ...  UBERON:0002369
...                          ...  ...             ...
6151  tag:motrpac-data.org,2023:  ...  UBERON:0001347
6152  tag:motrpac-data.org,2023:  ...  UBERON:0001347
6153  tag:motrpac-data.org,2023:  ...  UBERON:0001347
6154  tag:motrpac-data.org,2023:  ...  UBERON:0001347
6155  tag:motrpac-data.org,2023:  ...  UBERON:0001347

[6156 rows x 8 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.14664006233215332 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/file_describes_subject.tsv ---------
ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/file_describes_subject.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['file_id_namespace', 'file_local_id', 'subject_id_namespace', 'subject_local_id']
*** Entering file_describes_subject to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [file_id_namespace, file_local_id, subject_id_namespace, subject_local_id]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.004076719284057617 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/subject.tsv ---------
ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/subject.tsv
Read from file: df: #rows = 60, #cols: 10

pKeys: ['id_namespace', 'local_id']
*** Entering subject to database ***
df: #rows = 60, #cols: 10
df:
                  id_namespace  local_id  ... ethnicity age_at_enrollment
0   tag:motrpac-data.org,2023:  10023259  ...       NaN               NaN
1   tag:motrpac-data.org,2023:  10024735  ...       NaN               NaN
2   tag:motrpac-data.org,2023:  10025626  ...       NaN               NaN
3   tag:motrpac-data.org,2023:  10025707  ...       NaN               NaN
4   tag:motrpac-data.org,2023:  10025979  ...       NaN               NaN
5   tag:motrpac-data.org,2023:  10026193  ...       NaN               NaN
6   tag:motrpac-data.org,2023:  10026355  ...       NaN               NaN
7   tag:motrpac-data.org,2023:  10026789  ...       NaN               NaN
8   tag:motrpac-data.org,2023:  10027327  ...       NaN               NaN
9   tag:motrpac-data.org,2023:  10027599  ...       NaN               NaN
10  tag:motrpac-data.org,2023:  10043527  ...       NaN               NaN
11  tag:motrpac-data.org,2023:  10043950  ...       NaN               NaN
12  tag:motrpac-data.org,2023:  10044256  ...       NaN               NaN
13  tag:motrpac-data.org,2023:  10044337  ...       NaN               NaN
14  tag:motrpac-data.org,2023:  10044760  ...       NaN               NaN
15  tag:motrpac-data.org,2023:  10045228  ...       NaN               NaN
16  tag:motrpac-data.org,2023:  10045309  ...       NaN               NaN
17  tag:motrpac-data.org,2023:  10046119  ...       NaN               NaN
18  tag:motrpac-data.org,2023:  10046380  ...       NaN               NaN
19  tag:motrpac-data.org,2023:  10046461  ...       NaN               NaN
20  tag:motrpac-data.org,2023:  10095241  ...       NaN               NaN
21  tag:motrpac-data.org,2023:  10106383  ...       NaN               NaN
22  tag:motrpac-data.org,2023:  10139044  ...       NaN               NaN
23  tag:motrpac-data.org,2023:  10185585  ...       NaN               NaN
24  tag:motrpac-data.org,2023:  10220917  ...       NaN               NaN
25  tag:motrpac-data.org,2023:  10306471  ...       NaN               NaN
26  tag:motrpac-data.org,2023:  10335064  ...       NaN               NaN
27  tag:motrpac-data.org,2023:  10337199  ...       NaN               NaN
28  tag:motrpac-data.org,2023:  10381414  ...       NaN               NaN
29  tag:motrpac-data.org,2023:  10411690  ...       NaN               NaN
30  tag:motrpac-data.org,2023:  10417702  ...       NaN               NaN
31  tag:motrpac-data.org,2023:  10422463  ...       NaN               NaN
32  tag:motrpac-data.org,2023:  10424911  ...       NaN               NaN
33  tag:motrpac-data.org,2023:  10486003  ...       NaN               NaN
34  tag:motrpac-data.org,2023:  10502300  ...       NaN               NaN
35  tag:motrpac-data.org,2023:  10503110  ...       NaN               NaN
36  tag:motrpac-data.org,2023:  10561072  ...       NaN               NaN
37  tag:motrpac-data.org,2023:  10587543  ...       NaN               NaN
38  tag:motrpac-data.org,2023:  10641858  ...       NaN               NaN
39  tag:motrpac-data.org,2023:  10672656  ...       NaN               NaN
40  tag:motrpac-data.org,2023:  10700102  ...       NaN               NaN
41  tag:motrpac-data.org,2023:  10729518  ...       NaN               NaN
42  tag:motrpac-data.org,2023:  10734945  ...       NaN               NaN
43  tag:motrpac-data.org,2023:  10761160  ...       NaN               NaN
44  tag:motrpac-data.org,2023:  10833331  ...       NaN               NaN
45  tag:motrpac-data.org,2023:  10871349  ...       NaN               NaN
46  tag:motrpac-data.org,2023:  10901434  ...       NaN               NaN
47  tag:motrpac-data.org,2023:  10950486  ...       NaN               NaN
48  tag:motrpac-data.org,2023:  10953744  ...       NaN               NaN
49  tag:motrpac-data.org,2023:  10971645  ...       NaN               NaN
50  tag:motrpac-data.org,2023:  10026517  ...       NaN               NaN
51  tag:motrpac-data.org,2023:  10027165  ...       NaN               NaN
52  tag:motrpac-data.org,2023:  10044841  ...       NaN               NaN
53  tag:motrpac-data.org,2023:  10044922  ...       NaN               NaN
54  tag:motrpac-data.org,2023:  10204989  ...       NaN               NaN
55  tag:motrpac-data.org,2023:  10314733  ...       NaN               NaN
56  tag:motrpac-data.org,2023:  10589325  ...       NaN               NaN
57  tag:motrpac-data.org,2023:  10619259  ...       NaN               NaN
58  tag:motrpac-data.org,2023:  10680837  ...       NaN               NaN
59  tag:motrpac-data.org,2023:  10934529  ...       NaN               NaN

[60 rows x 10 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.01568746566772461 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/file_format.tsv ---------
ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/file_format.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['id']
*** Entering file_format to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0026166439056396484 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/biosample_gene.tsv ---------
ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/biosample_gene.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['biosample_id_namespace', 'biosample_local_id', 'gene']
*** Entering biosample_gene to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [biosample_id_namespace, biosample_local_id, gene]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002415895462036133 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/subject_substance.tsv ---------
ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/subject_substance.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['subject_id_namespace', 'subject_local_id', 'substance']
*** Entering subject_substance to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [subject_id_namespace, subject_local_id, substance]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0023641586303710938 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/collection.tsv ---------
ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/collection.tsv
Processing C2M2 Files...:  92%|█████████▏| 11/12 [31:36<02:04, 124.74s/it]Read from file: df: #rows = 7, #cols: 8

pKeys: ['id_namespace', 'local_id']
*** Entering collection to database ***
df: #rows = 7, #cols: 8
df:
                 id_namespace  ... has_time_series_data
0  tag:motrpac-data.org,2023:  ...                 True
1  tag:motrpac-data.org,2023:  ...                 True
2  tag:motrpac-data.org,2023:  ...                 True
3  tag:motrpac-data.org,2023:  ...                 True
4  tag:motrpac-data.org,2023:  ...                 True
5  tag:motrpac-data.org,2023:  ...                 True
6  tag:motrpac-data.org,2023:  ...                 True

[7 rows x 8 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.010288476943969727 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/compound.tsv ---------
ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/compound.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['id']
*** Entering compound to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0027112960815429688 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/subject_in_collection.tsv ---------
ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/subject_in_collection.tsv
Read from file: df: #rows = 60, #cols: 4

pKeys: ['subject_id_namespace', 'subject_local_id', 'collection_id_namespace', 'collection_local_id']
*** Entering subject_in_collection to database ***
df: #rows = 60, #cols: 4
df:
          subject_id_namespace  ...                      collection_local_id
0   tag:motrpac-data.org,2023:  ...        motrpac-pass1b-06-transcriptomics
1   tag:motrpac-data.org,2023:  ...        motrpac-pass1b-06-transcriptomics
2   tag:motrpac-data.org,2023:  ...        motrpac-pass1b-06-transcriptomics
3   tag:motrpac-data.org,2023:  ...        motrpac-pass1b-06-transcriptomics
4   tag:motrpac-data.org,2023:  ...        motrpac-pass1b-06-transcriptomics
5   tag:motrpac-data.org,2023:  ...        motrpac-pass1b-06-transcriptomics
6   tag:motrpac-data.org,2023:  ...        motrpac-pass1b-06-transcriptomics
7   tag:motrpac-data.org,2023:  ...        motrpac-pass1b-06-transcriptomics
8   tag:motrpac-data.org,2023:  ...        motrpac-pass1b-06-transcriptomics
9   tag:motrpac-data.org,2023:  ...        motrpac-pass1b-06-transcriptomics
10  tag:motrpac-data.org,2023:  ...        motrpac-pass1b-06-transcriptomics
11  tag:motrpac-data.org,2023:  ...        motrpac-pass1b-06-transcriptomics
12  tag:motrpac-data.org,2023:  ...        motrpac-pass1b-06-transcriptomics
13  tag:motrpac-data.org,2023:  ...        motrpac-pass1b-06-transcriptomics
14  tag:motrpac-data.org,2023:  ...        motrpac-pass1b-06-transcriptomics
15  tag:motrpac-data.org,2023:  ...        motrpac-pass1b-06-transcriptomics
16  tag:motrpac-data.org,2023:  ...        motrpac-pass1b-06-transcriptomics
17  tag:motrpac-data.org,2023:  ...        motrpac-pass1b-06-transcriptomics
18  tag:motrpac-data.org,2023:  ...        motrpac-pass1b-06-transcriptomics
19  tag:motrpac-data.org,2023:  ...        motrpac-pass1b-06-transcriptomics
20  tag:motrpac-data.org,2023:  ...        motrpac-pass1b-06-transcriptomics
21  tag:motrpac-data.org,2023:  ...        motrpac-pass1b-06-transcriptomics
22  tag:motrpac-data.org,2023:  ...        motrpac-pass1b-06-transcriptomics
23  tag:motrpac-data.org,2023:  ...        motrpac-pass1b-06-transcriptomics
24  tag:motrpac-data.org,2023:  ...        motrpac-pass1b-06-transcriptomics
25  tag:motrpac-data.org,2023:  ...        motrpac-pass1b-06-transcriptomics
26  tag:motrpac-data.org,2023:  ...        motrpac-pass1b-06-transcriptomics
27  tag:motrpac-data.org,2023:  ...        motrpac-pass1b-06-transcriptomics
28  tag:motrpac-data.org,2023:  ...        motrpac-pass1b-06-transcriptomics
29  tag:motrpac-data.org,2023:  ...        motrpac-pass1b-06-transcriptomics
30  tag:motrpac-data.org,2023:  ...        motrpac-pass1b-06-transcriptomics
31  tag:motrpac-data.org,2023:  ...        motrpac-pass1b-06-transcriptomics
32  tag:motrpac-data.org,2023:  ...        motrpac-pass1b-06-transcriptomics
33  tag:motrpac-data.org,2023:  ...        motrpac-pass1b-06-transcriptomics
34  tag:motrpac-data.org,2023:  ...        motrpac-pass1b-06-transcriptomics
35  tag:motrpac-data.org,2023:  ...        motrpac-pass1b-06-transcriptomics
36  tag:motrpac-data.org,2023:  ...        motrpac-pass1b-06-transcriptomics
37  tag:motrpac-data.org,2023:  ...        motrpac-pass1b-06-transcriptomics
38  tag:motrpac-data.org,2023:  ...        motrpac-pass1b-06-transcriptomics
39  tag:motrpac-data.org,2023:  ...        motrpac-pass1b-06-transcriptomics
40  tag:motrpac-data.org,2023:  ...        motrpac-pass1b-06-transcriptomics
41  tag:motrpac-data.org,2023:  ...        motrpac-pass1b-06-transcriptomics
42  tag:motrpac-data.org,2023:  ...        motrpac-pass1b-06-transcriptomics
43  tag:motrpac-data.org,2023:  ...        motrpac-pass1b-06-transcriptomics
44  tag:motrpac-data.org,2023:  ...        motrpac-pass1b-06-transcriptomics
45  tag:motrpac-data.org,2023:  ...        motrpac-pass1b-06-transcriptomics
46  tag:motrpac-data.org,2023:  ...        motrpac-pass1b-06-transcriptomics
47  tag:motrpac-data.org,2023:  ...        motrpac-pass1b-06-transcriptomics
48  tag:motrpac-data.org,2023:  ...        motrpac-pass1b-06-transcriptomics
49  tag:motrpac-data.org,2023:  ...        motrpac-pass1b-06-transcriptomics
50  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-proteomics-untargeted
51  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-proteomics-untargeted
52  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-proteomics-untargeted
53  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-proteomics-untargeted
54  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-proteomics-untargeted
55  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-proteomics-untargeted
56  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-proteomics-untargeted
57  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-proteomics-untargeted
58  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-proteomics-untargeted
59  tag:motrpac-data.org,2023:  ...  motrpac-pass1b-06-proteomics-untargeted

[60 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.010718345642089844 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/project_in_project.tsv ---------
ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/project_in_project.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['parent_project_id_namespace', 'parent_project_local_id', 'child_project_id_namespace', 'child_project_local_id']
*** Entering project_in_project to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [parent_project_id_namespace, parent_project_local_id, child_project_id_namespace, child_project_local_id]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.003462076187133789 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/collection_taxonomy.tsv ---------
ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/collection_taxonomy.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'taxon']
*** Entering collection_taxonomy to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, taxon]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0025763511657714844 seconds.

--------- ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/substance.tsv ---------
ingest/c2m2s/MoTrPAC/datapackage/draft_C2M2_submission_TSVs/data/substance.tsv
Read from file: df: #rows = 0, #cols: 5

pKeys: ['id']
*** Entering substance to database ***
df: #rows = 0, #cols: 5
df:
Empty DataFrame
Columns: [id, name, description, synonyms, compound]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.003407001495361328 seconds.


================================== DCC short label: SPARC =============================================
Unpack zip file: c2m2_extract_path: ingest/c2m2s/SPARC/datapackage
--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/dcc.tsv ---------
ingest/c2m2s/SPARC/datapackage/submission_output/data/dcc.tsv
Read from file: df: #rows = 1, #cols: 9

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.dcc;
qt_df:                                 pk
0         cfde_registry_dcc:glygen
1          cfde_registry_dcc:exrna
2      cfde_registry_dcc:kidsfirst
3            cfde_registry_dcc:4dn
4            cfde_registry_dcc:hmp
5   cfde_registry_dcc:metabolomics
6        cfde_registry_dcc:motrpac
7         cfde_registry_dcc:hubmap
8           cfde_registry_dcc:gtex
9            cfde_registry_dcc:idg
10         cfde_registry_dcc:lincs
---- Executed query, got data.frame: qt_df: #rows = 11, #cols: 1

df_pk (at most first 10 elements): ['cfde_registry_dcc:sparc']
qt_pk (at most first 10 elements): ['cfde_registry_dcc:glygen', 'cfde_registry_dcc:exrna', 'cfde_registry_dcc:kidsfirst', 'cfde_registry_dcc:4dn', 'cfde_registry_dcc:hmp', 'cfde_registry_dcc:metabolomics', 'cfde_registry_dcc:motrpac', 'cfde_registry_dcc:hubmap', 'cfde_registry_dcc:gtex', 'cfde_registry_dcc:idg']
---- Removed rows from df with matching pk
*** Entering dcc to database ***
df: #rows = 1, #cols: 9
df:
                        id  ... project_local_id
0  cfde_registry_dcc:sparc  ...            SPARC

[1 rows x 9 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.015264749526977539 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/id_namespace.tsv ---------
ingest/c2m2s/SPARC/datapackage/submission_output/data/id_namespace.tsv
Read from file: df: #rows = 6, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.id_namespace;
qt_df:                                                    pk
0              https://www.metabolomicsworkbench.org/
1                          tag:motrpac-data.org,2023:
2   https://druggablegenome.net/cfde_idg_drugcentr...
3                                               egtex
4                       https://www.lincsproject.org/
5                    https://www.druggablegenome.net/
6                        https://www.data.glygen.org/
7                         https://data.4dnucleome.org
8   https://druggablegenome.net/cfde_idg_tcrd_dise...
9                                                gtex
10  https://druggablegenome.net/cfde_idg_tcrd_targets
11                                         ERCC-exRNA
12                        tag:hmpdacc.org,2022-04-04:
13                                         adult_gtex
14                                         kidsfirst:
15                     tag:hubmapconsortium.org,2023:
---- Executed query, got data.frame: qt_df: #rows = 16, #cols: 1

df_pk (at most first 10 elements): ['SPARC.collection:', 'SPARC.file:', 'SPARC.project:', 'SPARC.sample:', 'SPARC.subject:', 'SPARC:']
qt_pk (at most first 10 elements): ['https://www.metabolomicsworkbench.org/', 'tag:motrpac-data.org,2023:', 'https://druggablegenome.net/cfde_idg_drugcentral_drugs', 'egtex', 'https://www.lincsproject.org/', 'https://www.druggablegenome.net/', 'https://www.data.glygen.org/', 'https://data.4dnucleome.org', 'https://druggablegenome.net/cfde_idg_tcrd_diseases', 'gtex']
---- Removed rows from df with matching pk
*** Entering id_namespace to database ***
df: #rows = 6, #cols: 4
df:
                  id  ...                                        description
3  SPARC.collection:  ...  The identifier namespace for C2M2 collection r...
1        SPARC.file:  ...  The identifier namespace for C2M2 file records...
2     SPARC.project:  ...  The identifier namespace for C2M2 project reco...
5      SPARC.sample:  ...  The identifier namespace for C2M2 sample recor...
4     SPARC.subject:  ...  The identifier namespace for C2M2 subject reco...
0             SPARC:  ...  The default identifier namespace for C2M2 enti...

[6 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.009888172149658203 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/disease.tsv ---------
ingest/c2m2s/SPARC/datapackage/submission_output/data/disease.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['id']
*** Entering disease to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0026221275329589844 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/data_type.tsv ---------
ingest/c2m2s/SPARC/datapackage/submission_output/data/data_type.tsv
Read from file: df: #rows = 6, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.data_type;
qt_df:              pk
0     data:3112
1     data:0907
2     data:0006
3     data:1916
4     data:3210
5     data:3111
6     data:0945
7     data:1270
8     data:1714
9     data:2536
10    data:3495
11  ILX:0793824
12    data:1566
13    data:1383
14    data:3110
15    data:2603
16    data:2600
17    data:3494
18    data:2764
19    data:2048
20    data:0943
21    data:0928
22    data:3028
23    data:1255
24    data:2082
25    data:3002
26    data:3914
27    data:3498
28    data:3917
29    data:2887
30    data:2976
31    data:2968
32    data:0925
33  ILX:0793825
---- Executed query, got data.frame: qt_df: #rows = 34, #cols: 1

df_pk (at most first 10 elements): ['data:0006', 'data:0928', 'data:2044', 'data:2968', 'data:3108', 'data:3869']
qt_pk (at most first 10 elements): ['data:3112', 'data:0907', 'data:0006', 'data:1916', 'data:3210', 'data:3111', 'data:0945', 'data:1270', 'data:1714', 'data:2536']
---- Removed rows from df with matching pk
*** Entering data_type to database ***
df: #rows = 3, #cols: 4
df:
          id  ... synonyms
5  data:2044  ...       []
1  data:3108  ...       []
2  data:3869  ...       []

[3 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.009683847427368164 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/collection_disease.tsv ---------
ingest/c2m2s/SPARC/datapackage/submission_output/data/collection_disease.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'disease']
*** Entering collection_disease to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, disease]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002420186996459961 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/file_edited.tsv ---------
ingest/c2m2s/SPARC/datapackage/submission_output/data/file_edited.tsv
>>>>>>>> Time taken to ingest the metadata from this file: 1.2159347534179688e-05 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/file_in_collection.tsv ---------
ingest/c2m2s/SPARC/datapackage/submission_output/data/file_in_collection.tsv
Read from file: df: #rows = 82335, #cols: 4

pKeys: ['file_id_namespace', 'file_local_id', 'collection_id_namespace', 'collection_local_id']
*** Entering file_in_collection to database ***
df: #rows = 82335, #cols: 4
df:
      file_id_namespace  ...                             collection_local_id
0           SPARC.file:  ...  N:dataset:6f7e029d-684e-4603-9dea-ec82a53c5a75
1           SPARC.file:  ...  N:dataset:a59a7c4c-0978-4bbe-8d92-93218b5c7b31
2           SPARC.file:  ...  N:dataset:7067a6f5-8df2-4ef8-953a-4d0bfafe6555
3           SPARC.file:  ...  N:dataset:7067a6f5-8df2-4ef8-953a-4d0bfafe6555
4           SPARC.file:  ...  N:dataset:9472e802-7896-4adf-a34b-1e9af1bf2cbe
...                 ...  ...                                             ...
82330       SPARC.file:  ...  N:dataset:5e324ea9-5330-42f6-b144-ba00db2bd24d
82331       SPARC.file:  ...  N:dataset:5e324ea9-5330-42f6-b144-ba00db2bd24d
82332       SPARC.file:  ...  N:dataset:5e324ea9-5330-42f6-b144-ba00db2bd24d
82333       SPARC.file:  ...  N:dataset:5e324ea9-5330-42f6-b144-ba00db2bd24d
82334       SPARC.file:  ...  N:dataset:5e324ea9-5330-42f6-b144-ba00db2bd24d

[82335 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.493302822113037 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/subject_role_taxonomy.tsv ---------
ingest/c2m2s/SPARC/datapackage/submission_output/data/subject_role_taxonomy.tsv
Read from file: df: #rows = 3018, #cols: 4

pKeys: ['subject_id_namespace', 'subject_local_id', 'role_id', 'taxonomy_id']
*** Entering subject_role_taxonomy to database ***
df: #rows = 3018, #cols: 4
df:
     subject_id_namespace  ...     taxonomy_id
0          SPARC.subject:  ...   NCBI:txid9940
1          SPARC.subject:  ...   NCBI:txid9825
2          SPARC.subject:  ...   NCBI:txid9825
3          SPARC.subject:  ...   NCBI:txid9825
4          SPARC.subject:  ...   NCBI:txid9825
...                   ...  ...             ...
3013       SPARC.subject:  ...  NCBI:txid10116
3014       SPARC.subject:  ...  NCBI:txid10116
3015       SPARC.subject:  ...  NCBI:txid10116
3016       SPARC.subject:  ...  NCBI:txid10116
3017       SPARC.subject:  ...  NCBI:txid10116

[3018 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.06317520141601562 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/biosample_in_collection.tsv ---------
ingest/c2m2s/SPARC/datapackage/submission_output/data/biosample_in_collection.tsv
Read from file: df: #rows = 4714, #cols: 4

pKeys: ['biosample_id_namespace', 'biosample_local_id', 'collection_id_namespace', 'collection_local_id']
*** Entering biosample_in_collection to database ***
df: #rows = 4714, #cols: 4
df:
     biosample_id_namespace  ...                             collection_local_id
0             SPARC.sample:  ...  N:dataset:36b1a054-d05c-46ea-ade1-84cfe2a15a6c
1             SPARC.sample:  ...  N:dataset:36b1a054-d05c-46ea-ade1-84cfe2a15a6c
2             SPARC.sample:  ...  N:dataset:e70a0529-3f7d-41dd-beee-26d024540f2f
3             SPARC.sample:  ...  N:dataset:e70a0529-3f7d-41dd-beee-26d024540f2f
4             SPARC.sample:  ...  N:dataset:e70a0529-3f7d-41dd-beee-26d024540f2f
...                     ...  ...                                             ...
4709          SPARC.sample:  ...  N:dataset:5e324ea9-5330-42f6-b144-ba00db2bd24d
4710          SPARC.sample:  ...  N:dataset:5e324ea9-5330-42f6-b144-ba00db2bd24d
4711          SPARC.sample:  ...  N:dataset:5e324ea9-5330-42f6-b144-ba00db2bd24d
4712          SPARC.sample:  ...  N:dataset:5e324ea9-5330-42f6-b144-ba00db2bd24d
4713          SPARC.sample:  ...  N:dataset:5e324ea9-5330-42f6-b144-ba00db2bd24d

[4714 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.09557938575744629 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/subject_phenotype.tsv ---------
ingest/c2m2s/SPARC/datapackage/submission_output/data/subject_phenotype.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['subject_id_namespace', 'subject_local_id', 'association_type', 'phenotype']
*** Entering subject_phenotype to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [subject_id_namespace, subject_local_id, association_type, phenotype]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0038590431213378906 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/phenotype_disease.tsv ---------
ingest/c2m2s/SPARC/datapackage/submission_output/data/phenotype_disease.tsv
Read from file: df: #rows = 0, #cols: 2

pKeys: ['phenotype', 'disease']
*** Entering phenotype_disease to database ***
df: #rows = 0, #cols: 2
df:
Empty DataFrame
Columns: [phenotype, disease]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002292156219482422 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/collection_compound.tsv ---------
ingest/c2m2s/SPARC/datapackage/submission_output/data/collection_compound.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'compound']
*** Entering collection_compound to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, compound]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002452373504638672 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/protein_gene.tsv ---------
ingest/c2m2s/SPARC/datapackage/submission_output/data/protein_gene.tsv
Read from file: df: #rows = 0, #cols: 2

pKeys: ['protein', 'gene']
*** Entering protein_gene to database ***
df: #rows = 0, #cols: 2
df:
Empty DataFrame
Columns: [protein, gene]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0022051334381103516 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/phenotype_gene.tsv ---------
ingest/c2m2s/SPARC/datapackage/submission_output/data/phenotype_gene.tsv
Read from file: df: #rows = 0, #cols: 2

pKeys: ['phenotype', 'gene']
*** Entering phenotype_gene to database ***
df: #rows = 0, #cols: 2
df:
Empty DataFrame
Columns: [phenotype, gene]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0021753311157226562 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/phenotype.tsv ---------
ingest/c2m2s/SPARC/datapackage/submission_output/data/phenotype.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['id']
*** Entering phenotype to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002468585968017578 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/subject_disease.tsv ---------
ingest/c2m2s/SPARC/datapackage/submission_output/data/subject_disease.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['subject_id_namespace', 'subject_local_id', 'association_type', 'disease']
*** Entering subject_disease to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [subject_id_namespace, subject_local_id, association_type, disease]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002447843551635742 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/collection_phenotype.tsv ---------
ingest/c2m2s/SPARC/datapackage/submission_output/data/collection_phenotype.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'phenotype']
*** Entering collection_phenotype to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, phenotype]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002311229705810547 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/protein.tsv ---------
ingest/c2m2s/SPARC/datapackage/submission_output/data/protein.tsv
Read from file: df: #rows = 0, #cols: 5

pKeys: ['id']
*** Entering protein to database ***
df: #rows = 0, #cols: 5
df:
Empty DataFrame
Columns: [id, name, description, synonyms, organism]
Index: []
>>> All good.
/home/mano/DRC/DRC-Portals/database/populateC2M2FromS3_MRM.py:257: DtypeWarning: Columns (19) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv(table_str, delimiter='\t');
>>>>>>>> Time taken to ingest the metadata from this file: 0.002718210220336914 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/ncbi_taxonomy.tsv ---------
ingest/c2m2s/SPARC/datapackage/submission_output/data/ncbi_taxonomy.tsv
Read from file: df: #rows = 11, #cols: 5

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.ncbi_taxonomy;
qt_df:                     pk
0        NCBI:txid5823
1       NCBI:txid99755
2     NCBI:txid1095745
3     NCBI:txid1739397
4      NCBI:txid742723
...                ...
2454   NCBI:txid742726
2455  NCBI:txid1715207
2456  NCBI:txid1161416
2457   NCBI:txid765081
2458   NCBI:txid999422

[2459 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 2459, #cols: 1

df_pk (at most first 10 elements): ['NCBI:txid10090', 'NCBI:txid10114', 'NCBI:txid10116', 'NCBI:txid40674', 'NCBI:txid9606', 'NCBI:txid9615', 'NCBI:txid9669', 'NCBI:txid9685', 'NCBI:txid9823', 'NCBI:txid9825']
qt_pk (at most first 10 elements): ['NCBI:txid5823', 'NCBI:txid99755', 'NCBI:txid1095745', 'NCBI:txid1739397', 'NCBI:txid742723', 'NCBI:txid1715193', 'NCBI:txid469585', 'NCBI:txid1581186', 'NCBI:txid762963', 'NCBI:txid1542093']
---- Removed rows from df with matching pk
*** Entering ncbi_taxonomy to database ***
df: #rows = 4, #cols: 5
df:
               id  ... synonyms
9  NCBI:txid10114  ...       []
8  NCBI:txid40674  ...       []
7   NCBI:txid9669  ...       []
4   NCBI:txid9825  ...       []

[4 rows x 5 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.013780832290649414 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/collection_protein.tsv ---------
ingest/c2m2s/SPARC/datapackage/submission_output/data/collection_protein.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'protein']
*** Entering collection_protein to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, protein]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0032105445861816406 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/analysis_type.tsv ---------
ingest/c2m2s/SPARC/datapackage/submission_output/data/analysis_type.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['id']
*** Entering analysis_type to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0028901100158691406 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/file_combined.tsv ---------
ingest/c2m2s/SPARC/datapackage/submission_output/data/file_combined.tsv
>>>>>>>> Time taken to ingest the metadata from this file: 1.5497207641601562e-05 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/file_describes_biosample.tsv ---------
ingest/c2m2s/SPARC/datapackage/submission_output/data/file_describes_biosample.tsv
Read from file: df: #rows = 82335, #cols: 4

pKeys: ['file_id_namespace', 'file_local_id', 'biosample_id_namespace', 'biosample_local_id']
*** Entering file_describes_biosample to database ***
df: #rows = 82335, #cols: 4
df:
      file_id_namespace  ...                                 biosample_local_id
0           SPARC.file:  ...  N:dataset:6f7e029d-684e-4603-9dea-ec82a53c5a75...
1           SPARC.file:  ...  N:dataset:a59a7c4c-0978-4bbe-8d92-93218b5c7b31...
2           SPARC.file:  ...  N:dataset:7067a6f5-8df2-4ef8-953a-4d0bfafe6555...
3           SPARC.file:  ...  N:dataset:7067a6f5-8df2-4ef8-953a-4d0bfafe6555...
4           SPARC.file:  ...  N:dataset:9472e802-7896-4adf-a34b-1e9af1bf2cbe...
...                 ...  ...                                                ...
82330       SPARC.file:  ...  N:dataset:5e324ea9-5330-42f6-b144-ba00db2bd24d...
82331       SPARC.file:  ...  N:dataset:5e324ea9-5330-42f6-b144-ba00db2bd24d...
82332       SPARC.file:  ...  N:dataset:5e324ea9-5330-42f6-b144-ba00db2bd24d...
82333       SPARC.file:  ...  N:dataset:5e324ea9-5330-42f6-b144-ba00db2bd24d...
82334       SPARC.file:  ...  N:dataset:5e324ea9-5330-42f6-b144-ba00db2bd24d...

[82335 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.6775016784667969 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/file.tsv ---------
ingest/c2m2s/SPARC/datapackage/submission_output/data/file.tsv
Read from file: df: #rows = 82335, #cols: 20

pKeys: ['id_namespace', 'local_id']
*** Entering file to database ***
df: #rows = 82335, #cols: 20
df:
      id_namespace  ... dbgap_study_id
0      SPARC.file:  ...            NaN
1      SPARC.file:  ...            NaN
2      SPARC.file:  ...            NaN
3      SPARC.file:  ...            NaN
4      SPARC.file:  ...            NaN
...            ...  ...            ...
82330  SPARC.file:  ...            NaN
82331  SPARC.file:  ...            NaN
82332  SPARC.file:  ...            NaN
82333  SPARC.file:  ...            NaN
82334  SPARC.file:  ...            NaN

[82335 rows x 20 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 4.84318208694458 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/collection_gene.tsv ---------
ingest/c2m2s/SPARC/datapackage/submission_output/data/collection_gene.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'gene']
*** Entering collection_gene to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, gene]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.009542226791381836 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/biosample_from_subject.tsv ---------
ingest/c2m2s/SPARC/datapackage/submission_output/data/biosample_from_subject.tsv
Read from file: df: #rows = 4714, #cols: 5

pKeys: ['biosample_id_namespace', 'biosample_local_id', 'subject_id_namespace', 'subject_local_id']
*** Entering biosample_from_subject to database ***
df: #rows = 4714, #cols: 5
df:
     biosample_id_namespace  ... age_at_sampling
0             SPARC.sample:  ...             NaN
1             SPARC.sample:  ...             NaN
2             SPARC.sample:  ...             NaN
3             SPARC.sample:  ...             NaN
4             SPARC.sample:  ...             NaN
...                     ...  ...             ...
4709          SPARC.sample:  ...             NaN
4710          SPARC.sample:  ...             NaN
4711          SPARC.sample:  ...             NaN
4712          SPARC.sample:  ...             NaN
4713          SPARC.sample:  ...             NaN

[4714 rows x 5 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.10866785049438477 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/file_describes_collection.tsv ---------
ingest/c2m2s/SPARC/datapackage/submission_output/data/file_describes_collection.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['file_id_namespace', 'file_local_id', 'collection_id_namespace', 'collection_local_id']
*** Entering file_describes_collection to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [file_id_namespace, file_local_id, collection_id_namespace, collection_local_id]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0038385391235351562 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/file_error.tsv ---------
ingest/c2m2s/SPARC/datapackage/submission_output/data/file_error.tsv
>>>>>>>> Time taken to ingest the metadata from this file: 1.2874603271484375e-05 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/file_prior.tsv ---------
ingest/c2m2s/SPARC/datapackage/submission_output/data/file_prior.tsv
>>>>>>>> Time taken to ingest the metadata from this file: 5.9604644775390625e-06 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/subject_race.tsv ---------
ingest/c2m2s/SPARC/datapackage/submission_output/data/subject_race.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['subject_id_namespace', 'subject_local_id', 'race']
*** Entering subject_race to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [subject_id_namespace, subject_local_id, race]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0026955604553222656 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/collection_in_collection.tsv ---------
ingest/c2m2s/SPARC/datapackage/submission_output/data/collection_in_collection.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['superset_collection_id_namespace', 'superset_collection_local_id', 'subset_collection_id_namespace', 'subset_collection_local_id']
*** Entering collection_in_collection to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [superset_collection_id_namespace, superset_collection_local_id, subset_collection_id_namespace, subset_collection_local_id]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002607583999633789 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/collection_defined_by_project.tsv ---------
ingest/c2m2s/SPARC/datapackage/submission_output/data/collection_defined_by_project.tsv
Read from file: df: #rows = 239, #cols: 4

pKeys: ['collection_id_namespace', 'collection_local_id', 'project_id_namespace', 'project_local_id']
*** Entering collection_defined_by_project to database ***
df: #rows = 239, #cols: 4
df:
    collection_id_namespace  ... project_local_id
0         SPARC.collection:  ...      OT2OD025342
1         SPARC.collection:  ...      OT2OD023848
2         SPARC.collection:  ...      OT2OD023848
3         SPARC.collection:  ...      OT2OD023848
4         SPARC.collection:  ...      OT2OD023848
..                      ...  ...              ...
234       SPARC.collection:  ...      OT2OD025340
235       SPARC.collection:  ...      U01NS113867
236       SPARC.collection:  ...      U01NS113868
237       SPARC.collection:  ...      OT2OD023857
238       SPARC.collection:  ...      OT2OD030524

[239 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.013429403305053711 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/collection_substance.tsv ---------
ingest/c2m2s/SPARC/datapackage/submission_output/data/collection_substance.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'substance']
*** Entering collection_substance to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, substance]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0033681392669677734 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/biosample_substance.tsv ---------
ingest/c2m2s/SPARC/datapackage/submission_output/data/biosample_substance.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['biosample_id_namespace', 'biosample_local_id', 'substance']
*** Entering biosample_substance to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [biosample_id_namespace, biosample_local_id, substance]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0027577877044677734 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/project.tsv ---------
ingest/c2m2s/SPARC/datapackage/submission_output/data/project.tsv
Read from file: df: #rows = 44, #cols: 7

pKeys: ['id_namespace', 'local_id']
*** Entering project to database ***
df: #rows = 44, #cols: 7
df:
      id_namespace  ...                                        description
0           SPARC:  ...  The Common Fund’s Stimulating Peripheral Activ...
1   SPARC.project:  ...  The capability to manipulate pancreatic functi...
2   SPARC.project:  ...  Cardiovascular diseases such as heart failure,...
3   SPARC.project:  ...  Experiments to map physiological functions of ...
4   SPARC.project:  ...  The aim of this project is to provide tools fo...
5   SPARC.project:  ...  The colon is the site of a multitude of disord...
6   SPARC.project:  ...  Many pharmacotherapies capitalize on the power...
7   SPARC.project:  ...  Two series of complementary experiments, condu...
8   SPARC.project:  ...  A growing body of evidence supports the idea t...
9   SPARC.project:  ...  The peripheral and central elements of the res...
10  SPARC.project:  ...  This dataset examines the effect of optogeneti...
11  SPARC.project:  ...  Gastrointestinal (GI) function is regulated by...
12  SPARC.project:  ...  The lung is a richly innervated organ. Strong ...
13  SPARC.project:  ...  This foundational project will produce mesosco...
14  SPARC.project:  ...  Mechanisms underlying neural control of the lo...
15  SPARC.project:  ...  More than 50 million Americans suffer from chr...
16  SPARC.project:  ...  Electrical Impedance Tomography (EIT) is a new...
17  SPARC.project:  ...  In 1628 William Harvey wrote, “Every affection...
18  SPARC.project:  ...  The nervous system and neurotransmitters can s...
19  SPARC.project:  ...  Gastroparesis (GP) is a common chronic disorde...
20  SPARC.project:  ...  The specific goal of this research project is ...
21  SPARC.project:  ...  Although bladder dysfunction is a significant ...
22  SPARC.project:  ...  The colon and anorectum have complex compositi...
23  SPARC.project:  ...  Chronic visceral pain is the cardinal symptom ...
24  SPARC.project:  ...  Gastroparesis has a prevalence of nearly 80,00...
25  SPARC.project:  ...  Organ function may be modulated by stimulating...
26  SPARC.project:  ...  Our long-term goal is to understand the functi...
27  SPARC.project:  ...  The vagus nerve is regarded as the main parasy...
28  SPARC.project:  ...  The objective of the present proposal is to us...
29  SPARC.project:  ...  Understanding the influence of the neural effe...
30  SPARC.project:  ...  The overall objective of this functional bladd...
31  SPARC.project:  ...  Irritable Bowel Syndrome (IBS) and interstitia...
32  SPARC.project:  ...  A neural interface is needed that will allow f...
33  SPARC.project:  ...  Modulating the activity of peripheral nerves i...
34  SPARC.project:  ...  Recent converging evidence suggests that commu...
35  SPARC.project:  ...  Gastroparesis is a disorder commonly seen in d...
36  SPARC.project:  ...  Hypertension is a major risk factor for cardio...
37  SPARC.project:  ...  Project Summary/Abstract Our current understan...
38  SPARC.project:  ...  The specific goal of this research project is ...
39  SPARC.project:  ...  This dataset examines the effect of optogeneti...
40  SPARC.project:  ...  The goal of the project is to establish a comp...
41  SPARC.project:  ...  The colon is the site of a multitude of disord...
42  SPARC.project:  ...  Visceral pain is a common, often debilitating ...
43  SPARC.project:  ...  Many promising peripheral neuromodulation tech...

[44 rows x 7 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.015250682830810547 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/anatomy.tsv ---------
ingest/c2m2s/SPARC/datapackage/submission_output/data/anatomy.tsv
Read from file: df: #rows = 43, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.anatomy;
qt_df:                  pk
0    UBERON:0001474
1    UBERON:0001013
2    UBERON:0000087
3    UBERON:0001199
4    UBERON:0016435
..              ...
324  UBERON:0001496
325  UBERON:0000473
326  UBERON:0000056
327  UBERON:0013069
328  UBERON:0008337

[329 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 329, #cols: 1

df_pk (at most first 10 elements): ['UBERON:0000010', 'UBERON:0000044', 'UBERON:0000045', 'UBERON:0000057', 'UBERON:0000160', 'UBERON:0000178', 'UBERON:0000945', 'UBERON:0000948', 'UBERON:0001003', 'UBERON:0001013']
qt_pk (at most first 10 elements): ['UBERON:0001474', 'UBERON:0001013', 'UBERON:0000087', 'UBERON:0001199', 'UBERON:0016435', 'UBERON:0007311', 'UBERON:0001728', 'UBERON:0001736', 'UBERON:0002037', 'UBERON:0009835']
---- Removed rows from df with matching pk
*** Entering anatomy to database ***
df: #rows = 23, #cols: 4
df:
                id  ... synonyms
1   UBERON:0000010  ...       []
36  UBERON:0000045  ...       []
34  UBERON:0000057  ...       []
22  UBERON:0001018  ...       []
38  UBERON:0001103  ...       []
15  UBERON:0001649  ...       []
39  UBERON:0001737  ...       []
30  UBERON:0001759  ...       []
24  UBERON:0001884  ...       []
35  UBERON:0001989  ...       []
14  UBERON:0002005  ...       []
9   UBERON:0002008  ...       []
28  UBERON:0002059  ...       []
26  UBERON:0002063  ...       []
10  UBERON:0002262  ...       []
4   UBERON:0002410  ...       []
21  UBERON:0002439  ...       []
11  UBERON:0002441  ...       []
33  UBERON:0004907  ...       []
17  UBERON:0005363  ...       []
37  UBERON:0009050  ...       []
6   UBERON:0013702  ...       []
32  UBERON:0018675  ...       []

[23 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.011841297149658203 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/assay_type.tsv ---------
ingest/c2m2s/SPARC/datapackage/submission_output/data/assay_type.tsv
Read from file: df: #rows = 10, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.assay_type;
qt_df:              pk
0   OBI:0003094
1   OBI:0001501
2   OBI:0002760
3   OBI:0003306
4   OBI:0003097
..          ...
80  OBI:0001271
81  OBI:0003098
82  OBI:0003087
83  OBI:0002761
84  OBI:0003297

[85 rows x 1 columns]
---- Executed query, got data.frame: qt_df: #rows = 85, #cols: 1

df_pk (at most first 10 elements): ['OBI:0000185', 'OBI:0000424', 'OBI:0000454', 'OBI:0001271', 'OBI:0001980', 'OBI:0001986', 'OBI:0002119', 'OBI:0002174', 'OBI:0002176', 'OBI:0002985']
qt_pk (at most first 10 elements): ['OBI:0003094', 'OBI:0001501', 'OBI:0002760', 'OBI:0003306', 'OBI:0003097', 'OBI:0001920', 'OBI:0002963', 'OBI:0002145', 'OBI:0002112', 'OBI:0003034']
---- Removed rows from df with matching pk
*** Entering assay_type to database ***
df: #rows = 8, #cols: 4
df:
            id  ... synonyms
5  OBI:0000424  ...       []
6  OBI:0000454  ...       []
3  OBI:0001980  ...       []
9  OBI:0001986  ...       []
0  OBI:0002119  ...       []
8  OBI:0002174  ...       []
2  OBI:0002176  ...       []
4  OBI:0002985  ...       []

[8 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.010406732559204102 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/biosample_disease.tsv ---------
ingest/c2m2s/SPARC/datapackage/submission_output/data/biosample_disease.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['biosample_id_namespace', 'biosample_local_id', 'association_type', 'disease']
*** Entering biosample_disease to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [biosample_id_namespace, biosample_local_id, association_type, disease]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0025708675384521484 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/collection_anatomy.tsv ---------
ingest/c2m2s/SPARC/datapackage/submission_output/data/collection_anatomy.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'anatomy']
*** Entering collection_anatomy to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, anatomy]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002335786819458008 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/gene.tsv ---------
ingest/c2m2s/SPARC/datapackage/submission_output/data/gene.tsv
Read from file: df: #rows = 0, #cols: 5

pKeys: ['id']
*** Entering gene to database ***
df: #rows = 0, #cols: 5
df:
Empty DataFrame
Columns: [id, name, description, synonyms, organism]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.002778291702270508 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/biosample.tsv ---------
ingest/c2m2s/SPARC/datapackage/submission_output/data/biosample.tsv
Read from file: df: #rows = 4714, #cols: 8

pKeys: ['id_namespace', 'local_id']
*** Entering biosample to database ***
df: #rows = 4714, #cols: 8
df:
       id_namespace  ...         anatomy
0     SPARC.sample:  ...  UBERON:0000178
1     SPARC.sample:  ...  UBERON:0000178
2     SPARC.sample:  ...  UBERON:0000948
3     SPARC.sample:  ...  UBERON:0000948
4     SPARC.sample:  ...  UBERON:0000948
...             ...  ...             ...
4709  SPARC.sample:  ...  UBERON:0001556
4710  SPARC.sample:  ...  UBERON:0001556
4711  SPARC.sample:  ...  UBERON:0001556
4712  SPARC.sample:  ...  UBERON:0001556
4713  SPARC.sample:  ...  UBERON:0001556

[4714 rows x 8 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.1288132667541504 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/file_describes_subject.tsv ---------
ingest/c2m2s/SPARC/datapackage/submission_output/data/file_describes_subject.tsv
Read from file: df: #rows = 82335, #cols: 4

pKeys: ['file_id_namespace', 'file_local_id', 'subject_id_namespace', 'subject_local_id']
*** Entering file_describes_subject to database ***
df: #rows = 82335, #cols: 4
df:
      file_id_namespace  ...                                   subject_local_id
0           SPARC.file:  ...  N:dataset:6f7e029d-684e-4603-9dea-ec82a53c5a75...
1           SPARC.file:  ...  N:dataset:a59a7c4c-0978-4bbe-8d92-93218b5c7b31...
2           SPARC.file:  ...  N:dataset:7067a6f5-8df2-4ef8-953a-4d0bfafe6555...
3           SPARC.file:  ...  N:dataset:7067a6f5-8df2-4ef8-953a-4d0bfafe6555...
4           SPARC.file:  ...  N:dataset:9472e802-7896-4adf-a34b-1e9af1bf2cbe...
...                 ...  ...                                                ...
82330       SPARC.file:  ...  N:dataset:5e324ea9-5330-42f6-b144-ba00db2bd24d...
82331       SPARC.file:  ...  N:dataset:5e324ea9-5330-42f6-b144-ba00db2bd24d...
82332       SPARC.file:  ...  N:dataset:5e324ea9-5330-42f6-b144-ba00db2bd24d...
82333       SPARC.file:  ...  N:dataset:5e324ea9-5330-42f6-b144-ba00db2bd24d...
82334       SPARC.file:  ...  N:dataset:5e324ea9-5330-42f6-b144-ba00db2bd24d...

[82335 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 1.4706411361694336 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/subject.tsv ---------
ingest/c2m2s/SPARC/datapackage/submission_output/data/subject.tsv
Read from file: df: #rows = 3017, #cols: 10

pKeys: ['id_namespace', 'local_id']
*** Entering subject to database ***
df: #rows = 3017, #cols: 10
df:
        id_namespace  ... age_at_enrollment
0     SPARC.subject:  ...               NaN
1     SPARC.subject:  ...               NaN
2     SPARC.subject:  ...               NaN
3     SPARC.subject:  ...               NaN
4     SPARC.subject:  ...               NaN
...              ...  ...               ...
3012  SPARC.subject:  ...               NaN
3013  SPARC.subject:  ...               NaN
3014  SPARC.subject:  ...               NaN
3015  SPARC.subject:  ...               NaN
3016  SPARC.subject:  ...               NaN

[3017 rows x 10 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.09297561645507812 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/file_format.tsv ---------
ingest/c2m2s/SPARC/datapackage/submission_output/data/file_format.tsv
Read from file: df: #rows = 25, #cols: 4

pKeys: ['id']
---- Will check if a primary key in current df is already in the table in the DB
---- Going to query database to get the primary key columns
sql_qstr: SELECT distinct CONCAT_WS('___', id) as pk FROM c2m2.file_format;
qt_df:              pk
0   format:3654
1   format:3603
2   format:3004
3   format:3578
4   format:3506
5   format:3464
6   format:3579
7   format:3327
8   format:1936
9   format:3987
10  format:2332
11  format:1975
12  format:3712
13  format:2572
14  format:3591
15  format:3590
16  format:3873
17  format:3006
18  format:3462
19  format:1930
20  format:3468
21  format:3244
22  format:3727
23  format:3752
24  format:1919
25  format:3829
26  format:3583
27  format:1929
28  format:3981
29  format:3746
30  format:3989
31  format:2330
32  format:3508
33  format:2331
34  format:3003
35  format:3016
36  format:3839
37  format:3008
38  format:3620
39  format:2333
40  format:3475
---- Executed query, got data.frame: qt_df: #rows = 41, #cols: 1

df_pk (at most first 10 elements): ['format:1915', 'format:1930', 'format:1964', 'format:2330', 'format:2331', 'format:2332', 'format:2333', 'format:2572', 'format:3464', 'format:3507']
qt_pk (at most first 10 elements): ['format:3654', 'format:3603', 'format:3004', 'format:3578', 'format:3506', 'format:3464', 'format:3579', 'format:3327', 'format:1936', 'format:3987']
---- Removed rows from df with matching pk
*** Entering file_format to database ***
df: #rows = 14, #cols: 4
df:
             id  ... synonyms
22  format:1915  ...       []
11  format:1964  ...       []
8   format:3507  ...       []
5   format:3547  ...       []
20  format:3554  ...       []
24  format:3604  ...       []
16  format:3626  ...       []
7   format:3751  ...       []
1   format:3990  ...       []
13  format:3996  ...       []
17  format:3997  ...       []
21  format:4000  ...       []
18  format:4001  ...       []
15  format:4007  ...       []

[14 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.011953592300415039 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/file_headers.tsv ---------
ingest/c2m2s/SPARC/datapackage/submission_output/data/file_headers.tsv
>>>>>>>> Time taken to ingest the metadata from this file: 1.4543533325195312e-05 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/biosample_gene.tsv ---------
ingest/c2m2s/SPARC/datapackage/submission_output/data/biosample_gene.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['biosample_id_namespace', 'biosample_local_id', 'gene']
*** Entering biosample_gene to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [biosample_id_namespace, biosample_local_id, gene]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0026140213012695312 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/primary_dcc_contact.tsv ---------
ingest/c2m2s/SPARC/datapackage/submission_output/data/primary_dcc_contact.tsv
>>>>>>>> Time taken to ingest the metadata from this file: 1.1444091796875e-05 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/subject_substance.tsv ---------
ingest/c2m2s/SPARC/datapackage/submission_output/data/subject_substance.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['subject_id_namespace', 'subject_local_id', 'substance']
*** Entering subject_substance to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [subject_id_namespace, subject_local_id, substance]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0024187564849853516 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/collection.tsv ---------
ingest/c2m2s/SPARC/datapackage/submission_output/data/collection.tsv
Read from file: df: #rows = 239, #cols: 8

pKeys: ['id_namespace', 'local_id']
*** Entering collection to database ***
df: #rows = 239, #cols: 8
df:
          id_namespace  ... has_time_series_data
0    SPARC.collection:  ...                  NaN
1    SPARC.collection:  ...                  NaN
2    SPARC.collection:  ...                  NaN
3    SPARC.collection:  ...                  NaN
4    SPARC.collection:  ...                  NaN
..                 ...  ...                  ...
234  SPARC.collection:  ...                  NaN
235  SPARC.collection:  ...                  NaN
236  SPARC.collection:  ...                  NaN
237  SPARC.collection:  ...                  NaN
238  SPARC.collection:  ...                  NaN

[239 rows x 8 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.018749237060546875 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/compound.tsv ---------
ingest/c2m2s/SPARC/datapackage/submission_output/data/compound.tsv
Read from file: df: #rows = 0, #cols: 4

pKeys: ['id']
*** Entering compound to database ***
df: #rows = 0, #cols: 4
df:
Empty DataFrame
Columns: [id, name, description, synonyms]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0028982162475585938 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/subject_in_collection.tsv ---------
ingest/c2m2s/SPARC/datapackage/submission_output/data/subject_in_collection.tsv
Read from file: df: #rows = 3017, #cols: 4

pKeys: ['subject_id_namespace', 'subject_local_id', 'collection_id_namespace', 'collection_local_id']
*** Entering subject_in_collection to database ***
df: #rows = 3017, #cols: 4
df:
     subject_id_namespace  ...                             collection_local_id
0          SPARC.subject:  ...  N:dataset:36b1a054-d05c-46ea-ade1-84cfe2a15a6c
1          SPARC.subject:  ...  N:dataset:36b1a054-d05c-46ea-ade1-84cfe2a15a6c
2          SPARC.subject:  ...  N:dataset:e70a0529-3f7d-41dd-beee-26d024540f2f
3          SPARC.subject:  ...  N:dataset:e70a0529-3f7d-41dd-beee-26d024540f2f
4          SPARC.subject:  ...  N:dataset:e70a0529-3f7d-41dd-beee-26d024540f2f
...                   ...  ...                                             ...
3012       SPARC.subject:  ...  N:dataset:5e324ea9-5330-42f6-b144-ba00db2bd24d
3013       SPARC.subject:  ...  N:dataset:5e324ea9-5330-42f6-b144-ba00db2bd24d
3014       SPARC.subject:  ...  N:dataset:5e324ea9-5330-42f6-b144-ba00db2bd24d
3015       SPARC.subject:  ...  N:dataset:5e324ea9-5330-42f6-b144-ba00db2bd24d
3016       SPARC.subject:  ...  N:dataset:5e324ea9-5330-42f6-b144-ba00db2bd24d

[3017 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.06373476982116699 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/project_in_project.tsv ---------
ingest/c2m2s/SPARC/datapackage/submission_output/data/project_in_project.tsv
Read from file: df: #rows = 43, #cols: 4

pKeys: ['parent_project_id_namespace', 'parent_project_local_id', 'child_project_id_namespace', 'child_project_local_id']
*** Entering project_in_project to database ***
Processing C2M2 Files...: 100%|██████████| 12/12 [31:48<00:00, 90.70s/it] Processing C2M2 Files...: 100%|██████████| 12/12 [31:48<00:00, 159.07s/it]
df: #rows = 43, #cols: 4
df:
   parent_project_id_namespace  ...      child_project_local_id
0                       SPARC:  ...                 OT2OD025342
1                       SPARC:  ...                 OT2OD023848
2                       SPARC:  ...                 OT2OD025340
3                       SPARC:  ...                 OT3OD025349
4                       SPARC:  ...                 OT2OD024899
5                       SPARC:  ...                 OT2OD023864
6                       SPARC:  ...                 OT2OD023847
7                       SPARC:  ...                 OT2OD023853
8                       SPARC:  ...                 OT2OD023854
9                       SPARC:  ...                OT2OD0204899
10                      SPARC:  ...                 OT2OD023859
11                      SPARC:  ...                 OT2OD023857
12                      SPARC:  ...                 OT2OD023872
13                      SPARC:  ...                 OT2OD023873
14                      SPARC:  ...                 U01NS113867
15                      SPARC:  ...                 OT2OD026545
16                      SPARC:  ...                 OT2OD026580
17                      SPARC:  ...                 OT2OD023871
18                      SPARC:  ...                 OT2OD028183
19                      SPARC:  ...                    TR002208
20                      SPARC:  ...                 U18EB021760
21                      SPARC:  ...                 OT2OD025308
22                      SPARC:  ...                 U01NS113873
23                      SPARC:  ...                 U18TR002205
24                      SPARC:  ...                 OT2OD026585
25                      SPARC:  ...                 U01DK116317
26                      SPARC:  ...                 OT2OD023867
27                      SPARC:  ...                 OT2OD028203
28                      SPARC:  ...                 OT2OD023861
29                      SPARC:  ...                 OT2OD024898
30                      SPARC:  ...                 U01NS113871
31                      SPARC:  ...                 OT2OD024907
32                      SPARC:  ...                 OT2OD024912
33                      SPARC:  ...                 OT2OD024909
34                      SPARC:  ...                 U18TR001920
35                      SPARC:  ...                 U18EB021759
36                      SPARC:  ...                 U01NS113869
37                      SPARC:  ...                  U18TR00208
38                      SPARC:  ...  OT2OD0204899andOT2OD025340
39                      SPARC:  ...                 OT3OD025348
40                      SPARC:  ...                  OT2OD24899
41                      SPARC:  ...                 U01NS113868
42                      SPARC:  ...                 OT2OD030524

[43 rows x 4 columns]
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.009439706802368164 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/collection_taxonomy.tsv ---------
ingest/c2m2s/SPARC/datapackage/submission_output/data/collection_taxonomy.tsv
Read from file: df: #rows = 0, #cols: 3

pKeys: ['collection_id_namespace', 'collection_local_id', 'taxon']
*** Entering collection_taxonomy to database ***
df: #rows = 0, #cols: 3
df:
Empty DataFrame
Columns: [collection_id_namespace, collection_local_id, taxon]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.0023903846740722656 seconds.

--------- ingest/c2m2s/SPARC/datapackage/submission_output/data/substance.tsv ---------
ingest/c2m2s/SPARC/datapackage/submission_output/data/substance.tsv
Read from file: df: #rows = 0, #cols: 5

pKeys: ['id']
*** Entering substance to database ***
df: #rows = 0, #cols: 5
df:
Empty DataFrame
Columns: [id, name, description, synonyms, compound]
Index: []
>>> All good.
>>>>>>>> Time taken to ingest the metadata from this file: 0.003147602081298828 seconds.

inserting c2m2_datapackage...
inserting node...
inserting c2m2_file_node...
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Time taken to ingest the metadata from the files: 1908.9409482479095 seconds.

 ----------- Adding foreign key constraint for table file ----------
ALTER TABLE c2m2.file ADD CONSTRAINT  fk_file_id_namespace_1 FOREIGN KEY (id_namespace) REFERENCES c2m2.id_namespace (id);
ALTER TABLE c2m2.file ADD CONSTRAINT  fk_file_project_2 FOREIGN KEY (project_id_namespace, project_local_id) REFERENCES c2m2.project (id_namespace, local_id);
ALTER TABLE c2m2.file ADD CONSTRAINT  fk_file_file_format_3 FOREIGN KEY (file_format) REFERENCES c2m2.file_format (id);
ALTER TABLE c2m2.file ADD CONSTRAINT  fk_file_file_format_4 FOREIGN KEY (compression_format) REFERENCES c2m2.file_format (id);
ALTER TABLE c2m2.file ADD CONSTRAINT  fk_file_data_type_5 FOREIGN KEY (data_type) REFERENCES c2m2.data_type (id);
ALTER TABLE c2m2.file ADD CONSTRAINT  fk_file_assay_type_6 FOREIGN KEY (assay_type) REFERENCES c2m2.assay_type (id);
ALTER TABLE c2m2.file ADD CONSTRAINT  fk_file_analysis_type_7 FOREIGN KEY (analysis_type) REFERENCES c2m2.analysis_type (id);
ALTER TABLE c2m2.file ADD CONSTRAINT  fk_file_collection_8 FOREIGN KEY (bundle_collection_id_namespace, bundle_collection_local_id) REFERENCES c2m2.collection (id_namespace, local_id);
 ----------- Adding foreign key constraint for table biosample ----------
ALTER TABLE c2m2.biosample ADD CONSTRAINT  fk_biosample_id_namespace_1 FOREIGN KEY (id_namespace) REFERENCES c2m2.id_namespace (id);
ALTER TABLE c2m2.biosample ADD CONSTRAINT  fk_biosample_project_2 FOREIGN KEY (project_id_namespace, project_local_id) REFERENCES c2m2.project (id_namespace, local_id);
ALTER TABLE c2m2.biosample ADD CONSTRAINT  fk_biosample_sample_prep_method_3 FOREIGN KEY (sample_prep_method) REFERENCES c2m2.sample_prep_method (id);
ALTER TABLE c2m2.biosample ADD CONSTRAINT  fk_biosample_anatomy_4 FOREIGN KEY (anatomy) REFERENCES c2m2.anatomy (id);
 ----------- Adding foreign key constraint for table subject ----------
ALTER TABLE c2m2.subject ADD CONSTRAINT  fk_subject_id_namespace_1 FOREIGN KEY (id_namespace) REFERENCES c2m2.id_namespace (id);
ALTER TABLE c2m2.subject ADD CONSTRAINT  fk_subject_project_2 FOREIGN KEY (project_id_namespace, project_local_id) REFERENCES c2m2.project (id_namespace, local_id);
 ----------- Adding foreign key constraint for table dcc ----------
ALTER TABLE c2m2.dcc ADD CONSTRAINT  fk_dcc_project_1 FOREIGN KEY (project_id_namespace, project_local_id) REFERENCES c2m2.project (id_namespace, local_id);
 ----------- Adding foreign key constraint for table project ----------
ALTER TABLE c2m2.project ADD CONSTRAINT  fk_project_id_namespace_1 FOREIGN KEY (id_namespace) REFERENCES c2m2.id_namespace (id);
 ----------- Adding foreign key constraint for table project_in_project ----------
ALTER TABLE c2m2.project_in_project ADD CONSTRAINT  fk_project_in_project_project_1 FOREIGN KEY (parent_project_id_namespace, parent_project_local_id) REFERENCES c2m2.project (id_namespace, local_id);
ALTER TABLE c2m2.project_in_project ADD CONSTRAINT  fk_project_in_project_project_2 FOREIGN KEY (child_project_id_namespace, child_project_local_id) REFERENCES c2m2.project (id_namespace, local_id);
 ----------- Adding foreign key constraint for table collection ----------
ALTER TABLE c2m2.collection ADD CONSTRAINT  fk_collection_id_namespace_1 FOREIGN KEY (id_namespace) REFERENCES c2m2.id_namespace (id);
 ----------- Adding foreign key constraint for table collection_in_collection ----------
ALTER TABLE c2m2.collection_in_collection ADD CONSTRAINT  fk_collection_in_collection_collection_1 FOREIGN KEY (superset_collection_id_namespace, superset_collection_local_id) REFERENCES c2m2.collection (id_namespace, local_id);
ALTER TABLE c2m2.collection_in_collection ADD CONSTRAINT  fk_collection_in_collection_collection_2 FOREIGN KEY (subset_collection_id_namespace, subset_collection_local_id) REFERENCES c2m2.collection (id_namespace, local_id);
 ----------- Adding foreign key constraint for table file_describes_collection ----------
ALTER TABLE c2m2.file_describes_collection ADD CONSTRAINT  fk_file_describes_collection_file_1 FOREIGN KEY (file_id_namespace, file_local_id) REFERENCES c2m2.file (id_namespace, local_id);
ALTER TABLE c2m2.file_describes_collection ADD CONSTRAINT  fk_file_describes_collection_collection_2 FOREIGN KEY (collection_id_namespace, collection_local_id) REFERENCES c2m2.collection (id_namespace, local_id);
 ----------- Adding foreign key constraint for table collection_defined_by_project ----------
ALTER TABLE c2m2.collection_defined_by_project ADD CONSTRAINT  fk_collection_defined_by_project_collection_1 FOREIGN KEY (collection_id_namespace, collection_local_id) REFERENCES c2m2.collection (id_namespace, local_id);
ALTER TABLE c2m2.collection_defined_by_project ADD CONSTRAINT  fk_collection_defined_by_project_project_2 FOREIGN KEY (project_id_namespace, project_local_id) REFERENCES c2m2.project (id_namespace, local_id);
 ----------- Adding foreign key constraint for table file_in_collection ----------
ALTER TABLE c2m2.file_in_collection ADD CONSTRAINT  fk_file_in_collection_file_1 FOREIGN KEY (file_id_namespace, file_local_id) REFERENCES c2m2.file (id_namespace, local_id);
ALTER TABLE c2m2.file_in_collection ADD CONSTRAINT  fk_file_in_collection_collection_2 FOREIGN KEY (collection_id_namespace, collection_local_id) REFERENCES c2m2.collection (id_namespace, local_id);
 ----------- Adding foreign key constraint for table biosample_in_collection ----------
ALTER TABLE c2m2.biosample_in_collection ADD CONSTRAINT  fk_biosample_in_collection_biosample_1 FOREIGN KEY (biosample_id_namespace, biosample_local_id) REFERENCES c2m2.biosample (id_namespace, local_id);
ALTER TABLE c2m2.biosample_in_collection ADD CONSTRAINT  fk_biosample_in_collection_collection_2 FOREIGN KEY (collection_id_namespace, collection_local_id) REFERENCES c2m2.collection (id_namespace, local_id);
 ----------- Adding foreign key constraint for table subject_in_collection ----------
ALTER TABLE c2m2.subject_in_collection ADD CONSTRAINT  fk_subject_in_collection_subject_1 FOREIGN KEY (subject_id_namespace, subject_local_id) REFERENCES c2m2.subject (id_namespace, local_id);
ALTER TABLE c2m2.subject_in_collection ADD CONSTRAINT  fk_subject_in_collection_collection_2 FOREIGN KEY (collection_id_namespace, collection_local_id) REFERENCES c2m2.collection (id_namespace, local_id);
 ----------- Adding foreign key constraint for table file_describes_biosample ----------
ALTER TABLE c2m2.file_describes_biosample ADD CONSTRAINT  fk_file_describes_biosample_file_1 FOREIGN KEY (file_id_namespace, file_local_id) REFERENCES c2m2.file (id_namespace, local_id);
ALTER TABLE c2m2.file_describes_biosample ADD CONSTRAINT  fk_file_describes_biosample_biosample_2 FOREIGN KEY (biosample_id_namespace, biosample_local_id) REFERENCES c2m2.biosample (id_namespace, local_id);
 ----------- Adding foreign key constraint for table file_describes_subject ----------
ALTER TABLE c2m2.file_describes_subject ADD CONSTRAINT  fk_file_describes_subject_file_1 FOREIGN KEY (file_id_namespace, file_local_id) REFERENCES c2m2.file (id_namespace, local_id);
ALTER TABLE c2m2.file_describes_subject ADD CONSTRAINT  fk_file_describes_subject_subject_2 FOREIGN KEY (subject_id_namespace, subject_local_id) REFERENCES c2m2.subject (id_namespace, local_id);
 ----------- Adding foreign key constraint for table biosample_from_subject ----------
ALTER TABLE c2m2.biosample_from_subject ADD CONSTRAINT  fk_biosample_from_subject_biosample_1 FOREIGN KEY (biosample_id_namespace, biosample_local_id) REFERENCES c2m2.biosample (id_namespace, local_id);
ALTER TABLE c2m2.biosample_from_subject ADD CONSTRAINT  fk_biosample_from_subject_subject_2 FOREIGN KEY (subject_id_namespace, subject_local_id) REFERENCES c2m2.subject (id_namespace, local_id);
 ----------- Adding foreign key constraint for table biosample_disease ----------
ALTER TABLE c2m2.biosample_disease ADD CONSTRAINT  fk_biosample_disease_biosample_1 FOREIGN KEY (biosample_id_namespace, biosample_local_id) REFERENCES c2m2.biosample (id_namespace, local_id);
ALTER TABLE c2m2.biosample_disease ADD CONSTRAINT  fk_biosample_disease_disease_2 FOREIGN KEY (disease) REFERENCES c2m2.disease (id);
 ----------- Adding foreign key constraint for table subject_disease ----------
ALTER TABLE c2m2.subject_disease ADD CONSTRAINT  fk_subject_disease_subject_1 FOREIGN KEY (subject_id_namespace, subject_local_id) REFERENCES c2m2.subject (id_namespace, local_id);
ALTER TABLE c2m2.subject_disease ADD CONSTRAINT  fk_subject_disease_disease_2 FOREIGN KEY (disease) REFERENCES c2m2.disease (id);
 ----------- Adding foreign key constraint for table collection_disease ----------
ALTER TABLE c2m2.collection_disease ADD CONSTRAINT  fk_collection_disease_collection_1 FOREIGN KEY (collection_id_namespace, collection_local_id) REFERENCES c2m2.collection (id_namespace, local_id);
ALTER TABLE c2m2.collection_disease ADD CONSTRAINT  fk_collection_disease_disease_2 FOREIGN KEY (disease) REFERENCES c2m2.disease (id);
 ----------- Adding foreign key constraint for table collection_phenotype ----------
ALTER TABLE c2m2.collection_phenotype ADD CONSTRAINT  fk_collection_phenotype_collection_1 FOREIGN KEY (collection_id_namespace, collection_local_id) REFERENCES c2m2.collection (id_namespace, local_id);
ALTER TABLE c2m2.collection_phenotype ADD CONSTRAINT  fk_collection_phenotype_phenotype_2 FOREIGN KEY (phenotype) REFERENCES c2m2.phenotype (id);
 ----------- Adding foreign key constraint for table collection_gene ----------
ALTER TABLE c2m2.collection_gene ADD CONSTRAINT  fk_collection_gene_collection_1 FOREIGN KEY (collection_id_namespace, collection_local_id) REFERENCES c2m2.collection (id_namespace, local_id);
ALTER TABLE c2m2.collection_gene ADD CONSTRAINT  fk_collection_gene_gene_2 FOREIGN KEY (gene) REFERENCES c2m2.gene (id);
 ----------- Adding foreign key constraint for table collection_compound ----------
ALTER TABLE c2m2.collection_compound ADD CONSTRAINT  fk_collection_compound_collection_1 FOREIGN KEY (collection_id_namespace, collection_local_id) REFERENCES c2m2.collection (id_namespace, local_id);
ALTER TABLE c2m2.collection_compound ADD CONSTRAINT  fk_collection_compound_compound_2 FOREIGN KEY (compound) REFERENCES c2m2.compound (id);
 ----------- Adding foreign key constraint for table collection_substance ----------
ALTER TABLE c2m2.collection_substance ADD CONSTRAINT  fk_collection_substance_collection_1 FOREIGN KEY (collection_id_namespace, collection_local_id) REFERENCES c2m2.collection (id_namespace, local_id);
ALTER TABLE c2m2.collection_substance ADD CONSTRAINT  fk_collection_substance_substance_2 FOREIGN KEY (substance) REFERENCES c2m2.substance (id);
 ----------- Adding foreign key constraint for table collection_taxonomy ----------
ALTER TABLE c2m2.collection_taxonomy ADD CONSTRAINT  fk_collection_taxonomy_collection_1 FOREIGN KEY (collection_id_namespace, collection_local_id) REFERENCES c2m2.collection (id_namespace, local_id);
ALTER TABLE c2m2.collection_taxonomy ADD CONSTRAINT  fk_collection_taxonomy_ncbi_taxonomy_2 FOREIGN KEY (taxon) REFERENCES c2m2.ncbi_taxonomy (id);
 ----------- Adding foreign key constraint for table collection_anatomy ----------
ALTER TABLE c2m2.collection_anatomy ADD CONSTRAINT  fk_collection_anatomy_collection_1 FOREIGN KEY (collection_id_namespace, collection_local_id) REFERENCES c2m2.collection (id_namespace, local_id);
ALTER TABLE c2m2.collection_anatomy ADD CONSTRAINT  fk_collection_anatomy_anatomy_2 FOREIGN KEY (anatomy) REFERENCES c2m2.anatomy (id);
 ----------- Adding foreign key constraint for table collection_protein ----------
ALTER TABLE c2m2.collection_protein ADD CONSTRAINT  fk_collection_protein_collection_1 FOREIGN KEY (collection_id_namespace, collection_local_id) REFERENCES c2m2.collection (id_namespace, local_id);
ALTER TABLE c2m2.collection_protein ADD CONSTRAINT  fk_collection_protein_protein_2 FOREIGN KEY (protein) REFERENCES c2m2.protein (id);
 ----------- Adding foreign key constraint for table subject_phenotype ----------
ALTER TABLE c2m2.subject_phenotype ADD CONSTRAINT  fk_subject_phenotype_subject_1 FOREIGN KEY (subject_id_namespace, subject_local_id) REFERENCES c2m2.subject (id_namespace, local_id);
ALTER TABLE c2m2.subject_phenotype ADD CONSTRAINT  fk_subject_phenotype_phenotype_2 FOREIGN KEY (phenotype) REFERENCES c2m2.phenotype (id);
 ----------- Adding foreign key constraint for table biosample_substance ----------
ALTER TABLE c2m2.biosample_substance ADD CONSTRAINT  fk_biosample_substance_biosample_1 FOREIGN KEY (biosample_id_namespace, biosample_local_id) REFERENCES c2m2.biosample (id_namespace, local_id);
ALTER TABLE c2m2.biosample_substance ADD CONSTRAINT  fk_biosample_substance_substance_2 FOREIGN KEY (substance) REFERENCES c2m2.substance (id);
 ----------- Adding foreign key constraint for table subject_substance ----------
ALTER TABLE c2m2.subject_substance ADD CONSTRAINT  fk_subject_substance_subject_1 FOREIGN KEY (subject_id_namespace, subject_local_id) REFERENCES c2m2.subject (id_namespace, local_id);
ALTER TABLE c2m2.subject_substance ADD CONSTRAINT  fk_subject_substance_substance_2 FOREIGN KEY (substance) REFERENCES c2m2.substance (id);
 ----------- Adding foreign key constraint for table biosample_gene ----------
ALTER TABLE c2m2.biosample_gene ADD CONSTRAINT  fk_biosample_gene_biosample_1 FOREIGN KEY (biosample_id_namespace, biosample_local_id) REFERENCES c2m2.biosample (id_namespace, local_id);
ALTER TABLE c2m2.biosample_gene ADD CONSTRAINT  fk_biosample_gene_gene_2 FOREIGN KEY (gene) REFERENCES c2m2.gene (id);
 ----------- Adding foreign key constraint for table phenotype_gene ----------
ALTER TABLE c2m2.phenotype_gene ADD CONSTRAINT  fk_phenotype_gene_phenotype_1 FOREIGN KEY (phenotype) REFERENCES c2m2.phenotype (id);
ALTER TABLE c2m2.phenotype_gene ADD CONSTRAINT  fk_phenotype_gene_gene_2 FOREIGN KEY (gene) REFERENCES c2m2.gene (id);
 ----------- Adding foreign key constraint for table phenotype_disease ----------
ALTER TABLE c2m2.phenotype_disease ADD CONSTRAINT  fk_phenotype_disease_phenotype_1 FOREIGN KEY (phenotype) REFERENCES c2m2.phenotype (id);
ALTER TABLE c2m2.phenotype_disease ADD CONSTRAINT  fk_phenotype_disease_disease_2 FOREIGN KEY (disease) REFERENCES c2m2.disease (id);
 ----------- Adding foreign key constraint for table subject_race ----------
ALTER TABLE c2m2.subject_race ADD CONSTRAINT  fk_subject_race_subject_1 FOREIGN KEY (subject_id_namespace, subject_local_id) REFERENCES c2m2.subject (id_namespace, local_id);
 ----------- Adding foreign key constraint for table subject_role_taxonomy ----------
ALTER TABLE c2m2.subject_role_taxonomy ADD CONSTRAINT  fk_subject_role_taxonomy_subject_1 FOREIGN KEY (subject_id_namespace, subject_local_id) REFERENCES c2m2.subject (id_namespace, local_id);
ALTER TABLE c2m2.subject_role_taxonomy ADD CONSTRAINT  fk_subject_role_taxonomy_ncbi_taxonomy_2 FOREIGN KEY (taxonomy_id) REFERENCES c2m2.ncbi_taxonomy (id);
 ----------- Adding foreign key constraint for table assay_type ----------
 ----------- Adding foreign key constraint for table analysis_type ----------
 ----------- Adding foreign key constraint for table ncbi_taxonomy ----------
 ----------- Adding foreign key constraint for table anatomy ----------
 ----------- Adding foreign key constraint for table file_format ----------
 ----------- Adding foreign key constraint for table data_type ----------
 ----------- Adding foreign key constraint for table disease ----------
 ----------- Adding foreign key constraint for table phenotype ----------
 ----------- Adding foreign key constraint for table compound ----------
 ----------- Adding foreign key constraint for table substance ----------
ALTER TABLE c2m2.substance ADD CONSTRAINT  fk_substance_compound_1 FOREIGN KEY (compound) REFERENCES c2m2.compound (id);
 ----------- Adding foreign key constraint for table gene ----------
ALTER TABLE c2m2.gene ADD CONSTRAINT  fk_gene_ncbi_taxonomy_1 FOREIGN KEY (organism) REFERENCES c2m2.ncbi_taxonomy (id);
 ----------- Adding foreign key constraint for table protein ----------
ALTER TABLE c2m2.protein ADD CONSTRAINT  fk_protein_ncbi_taxonomy_1 FOREIGN KEY (organism) REFERENCES c2m2.ncbi_taxonomy (id);
 ----------- Adding foreign key constraint for table protein_gene ----------
ALTER TABLE c2m2.protein_gene ADD CONSTRAINT  fk_protein_gene_protein_1 FOREIGN KEY (protein) REFERENCES c2m2.protein (id);
ALTER TABLE c2m2.protein_gene ADD CONSTRAINT  fk_protein_gene_gene_2 FOREIGN KEY (gene) REFERENCES c2m2.gene (id);
 ----------- Adding foreign key constraint for table sample_prep_method ----------
 ----------- Adding foreign key constraint for table id_namespace ----------
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Time taken to add foreign constraints: 89.97292017936707 seconds.

>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Total time taken: 1999.659583568573 seconds.

********** C2M2 metadata ingestion completed: schema_name: c2m2.
